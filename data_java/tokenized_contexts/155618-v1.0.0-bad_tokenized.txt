# Tokenized code for 155618-v1.0.0-bad
CENTER_NODE: 30064771613  NODE_INDEX: 0
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771613
  NODE_INDEX[0]: 0
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.ZZ_BUFFERSIZE
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771612
  NODE_INDEX[1]: 54
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int LexerScheme.ZZ_BUFFERSIZE = 2048
  TOKENIZED[1]: int VAR1 . VAR2 = 2048
  NODE_ID[2]: 55834575004
  NODE_INDEX[2]: 55
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: ZZ_BUFFERSIZE
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476818  NODE_INDEX: 1
FRAGMENT_COUNT: 4
  NODE_ID[0]: 68719476818
  NODE_INDEX[0]: 1
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: offset
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771142
  NODE_INDEX[1]: 56
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: int offset = 0
  TOKENIZED[1]: int VAR1 = 0
  NODE_ID[2]: 30064771143
  NODE_INDEX[2]: 57
  EDGE_TYPE_INDEX[2]: 2
  TYPE[2]: CALL
  ORIGINAL[2]: offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result)
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR1 , VAR3 )
  NODE_ID[3]: 30064771144
  NODE_INDEX[3]: 58
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result)
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 , VAR3 )

CENTER_NODE: 30064771422  NODE_INDEX: 2
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771422
  NODE_INDEX[0]: 2
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: zzStartRead + pos
  TOKENIZED[0]: VAR1 + VAR2
  NODE_ID[1]: 30064771420
  NODE_INDEX[1]: 59
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: zzBuffer[zzStartRead + pos]
  TOKENIZED[1]: zzBuffer[zzStartRead + pos]
  NODE_ID[2]: 30064771423
  NODE_INDEX[2]: 60
  EDGE_TYPE_INDEX[2]: 2
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzStartRead
  TOKENIZED[2]: this . VAR1
  NODE_ID[3]: 68719477034
  NODE_INDEX[3]: 61
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: pos
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476758  NODE_INDEX: 3
FRAGMENT_COUNT: 3
  NODE_ID[0]: 68719476758
  NODE_INDEX[0]: 3
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771072
  NODE_INDEX[1]: 62
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: this(new java.io.InputStreamReader(in));
  TOKENIZED[1]: this ( new VAR1 . VAR2 . FUN1 ( VAR3 ) ) ;
  NODE_ID[2]: 68719476759
  NODE_INDEX[2]: 63
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: $obj8
  TOKENIZED[2]: $obj8

CENTER_NODE: 30064771151  NODE_INDEX: 4
FRAGMENT_COUNT: 5
  NODE_ID[0]: 30064771151
  NODE_INDEX[0]: 4
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int high = packed.charAt(i++) << 16
  TOKENIZED[0]: int VAR1 = VAR2 . FUN1 ( i++ ) << 16
  NODE_ID[1]: 30064771150
  NODE_INDEX[1]: 64
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: i < l
  TOKENIZED[1]: VAR1 < VAR2
  NODE_ID[2]: 30064771152
  NODE_INDEX[2]: 65
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: packed.charAt(i++) << 16
  TOKENIZED[2]: VAR1 . FUN1 ( i++ ) << 16
  NODE_ID[3]: 68719476829
  NODE_INDEX[3]: 66
  EDGE_TYPE_INDEX[3]: 2
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: high
  TOKENIZED[3]: VAR1
  NODE_ID[4]: 68719476832
  NODE_INDEX[4]: 67
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: result
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771655  NODE_INDEX: 5
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771655
  NODE_INDEX[0]: 5
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: String LexerScheme.ZZ_ATTRIBUTE_PACKED_0 = \
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  NODE_ID[1]: 30064771656
  NODE_INDEX[1]: 68
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_ATTRIBUTE_PACKED_0
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476803  NODE_INDEX: 6
FRAGMENT_COUNT: 8
  NODE_ID[0]: 68719476803
  NODE_INDEX[0]: 6
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: i
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771126
  NODE_INDEX[1]: 69
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: int l = packed.length()
  TOKENIZED[1]: int VAR1 = VAR2 . FUN1 ( )
  NODE_ID[2]: 30064771128
  NODE_INDEX[2]: 70
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: i < l
  TOKENIZED[2]: VAR1 < VAR2
  NODE_ID[3]: 30064771138
  NODE_INDEX[3]: 71
  EDGE_TYPE_INDEX[3]: 1
  TYPE[3]: CALL
  ORIGINAL[3]: --count > 0
  TOKENIZED[3]: --count > 0
  NODE_ID[4]: 68719476798
  NODE_INDEX[4]: 72
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: i
  TOKENIZED[4]: VAR1
  NODE_ID[5]: 68719476804
  NODE_INDEX[5]: 73
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: l
  TOKENIZED[5]: VAR1
  NODE_ID[6]: 68719476807
  NODE_INDEX[6]: 74
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: IDENTIFIER
  ORIGINAL[6]: i
  TOKENIZED[6]: VAR1
  NODE_ID[7]: 68719476810
  NODE_INDEX[7]: 75
  EDGE_TYPE_INDEX[7]: 0
  TYPE[7]: IDENTIFIER
  ORIGINAL[7]: i
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476863  NODE_INDEX: 7
FRAGMENT_COUNT: 4
  NODE_ID[0]: 68719476863
  NODE_INDEX[0]: 7
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: result
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771184
  NODE_INDEX[1]: 76
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int[] result = new int[9]
  TOKENIZED[1]: int[] VAR1 = new int[9]
  NODE_ID[2]: 30064771185
  NODE_INDEX[2]: 77
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: new int[9]
  TOKENIZED[2]: new int[9]
  NODE_ID[3]: 68719476867
  NODE_INDEX[3]: 78
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: result
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771653  NODE_INDEX: 8
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771653
  NODE_INDEX[0]: 8
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.ZZ_ATTRIBUTE
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771652
  NODE_INDEX[1]: 79
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int[] LexerScheme.ZZ_ATTRIBUTE = zzUnpackAttribute()
  TOKENIZED[1]: int[] VAR1 . VAR2 = FUN1 ( )
  NODE_ID[2]: 30064771654
  NODE_INDEX[2]: 80
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: zzUnpackAttribute()
  TOKENIZED[2]: FUN1 ( )
  NODE_ID[3]: 55834575020
  NODE_INDEX[3]: 81
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: FIELD_IDENTIFIER
  ORIGINAL[3]: ZZ_ATTRIBUTE
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476757  NODE_INDEX: 9
FRAGMENT_COUNT: 7
  NODE_ID[0]: 68719476757
  NODE_INDEX[0]: 9
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771291
  NODE_INDEX[1]: 82
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzLexicalState
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 30064771294
  NODE_INDEX[2]: 83
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzBuffer
  TOKENIZED[2]: this . VAR1
  NODE_ID[3]: 30064771297
  NODE_INDEX[3]: 84
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: boolean this.zzAtBOL = true
  TOKENIZED[3]: boolean this . VAR1 = true
  NODE_ID[4]: 30064771298
  NODE_INDEX[4]: 85
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: CALL
  ORIGINAL[4]: this.zzAtBOL
  TOKENIZED[4]: this . VAR1
  NODE_ID[5]: 30064771300
  NODE_INDEX[5]: 86
  EDGE_TYPE_INDEX[5]: 2
  TYPE[5]: CALL
  ORIGINAL[5]: this.zzReader
  TOKENIZED[5]: this . VAR1
  NODE_ID[6]: 55834574882
  NODE_INDEX[6]: 87
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: FIELD_IDENTIFIER
  ORIGINAL[6]: zzReader
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640306  NODE_INDEX: 10
FRAGMENT_COUNT: 1
  NODE_ID[0]: 47244640306
  NODE_INDEX[0]: 10
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: while (true)
  TOKENIZED[0]: while ( true )

CENTER_NODE: 30064771616  NODE_INDEX: 11
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771616
  NODE_INDEX[0]: 11
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int[] LexerScheme.ZZ_LEXSTATE = { 0, 1 }
  TOKENIZED[0]: int[] VAR1 . VAR2 = { 0 , 1 }
  NODE_ID[1]: 30064771617
  NODE_INDEX[1]: 88
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_LEXSTATE
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771618
  NODE_INDEX[2]: 89
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: { 0, 1 }
  TOKENIZED[2]: { 0 , 1 }

CENTER_NODE: 68719476958  NODE_INDEX: 12
FRAGMENT_COUNT: 6
  NODE_ID[0]: 68719476958
  NODE_INDEX[0]: 12
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: i
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771305
  NODE_INDEX[1]: 90
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: i < 30
  TOKENIZED[1]: VAR1 < 30
  NODE_ID[2]: 30064771311
  NODE_INDEX[2]: 91
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: i++
  TOKENIZED[2]: i++
  NODE_ID[3]: 68719476952
  NODE_INDEX[3]: 92
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: i
  TOKENIZED[3]: VAR1
  NODE_ID[4]: 68719476955
  NODE_INDEX[4]: 93
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: i
  TOKENIZED[4]: VAR1
  NODE_ID[5]: 68719476957
  NODE_INDEX[5]: 94
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: packed
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477045  NODE_INDEX: 13
FRAGMENT_COUNT: 7
  NODE_ID[0]: 68719477045
  NODE_INDEX[0]: 13
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771438
  NODE_INDEX[1]: 95
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: number > yylength()
  TOKENIZED[1]: VAR1 > FUN1 ( )
  NODE_ID[2]: 30064771440
  NODE_INDEX[2]: 96
  EDGE_TYPE_INDEX[2]: 1
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzScanError(ZZ_PUSHBACK_2BIG)
  TOKENIZED[2]: this . FUN1 ( VAR1 )
  NODE_ID[3]: 30064771443
  NODE_INDEX[3]: 97
  EDGE_TYPE_INDEX[3]: 2
  TYPE[3]: CALL
  ORIGINAL[3]: this.zzMarkedPos
  TOKENIZED[3]: this . VAR1
  NODE_ID[4]: 55834574946
  NODE_INDEX[4]: 98
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: FIELD_IDENTIFIER
  ORIGINAL[4]: zzMarkedPos
  TOKENIZED[4]: VAR1
  NODE_ID[5]: 68719476739
  NODE_INDEX[5]: 99
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: this
  TOKENIZED[5]: this
  NODE_ID[6]: 68719476740
  NODE_INDEX[6]: 100
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: IDENTIFIER
  ORIGINAL[6]: this
  TOKENIZED[6]: this

CENTER_NODE: 30064771646  NODE_INDEX: 14
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771646
  NODE_INDEX[0]: 14
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.ZZ_NO_MATCH
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771645
  NODE_INDEX[1]: 101
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int LexerScheme.ZZ_NO_MATCH = 1
  TOKENIZED[1]: int VAR1 . VAR2 = 1
  NODE_ID[2]: 55834575017
  NODE_INDEX[2]: 102
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: ZZ_NO_MATCH
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477165  NODE_INDEX: 15
FRAGMENT_COUNT: 4
  NODE_ID[0]: 68719477165
  NODE_INDEX[0]: 15
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: agricoliteInopportunity
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771597
  NODE_INDEX[1]: 103
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: agricoliteInopportunity == dongReword
  TOKENIZED[1]: VAR1 == VAR2
  NODE_ID[2]: 30064771599
  NODE_INDEX[2]: 104
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: stepnephewPhilamot[agricoliteInopportunity]
  TOKENIZED[2]: stepnephewPhilamot[agricoliteInopportunity]
  NODE_ID[3]: 68719477164
  NODE_INDEX[3]: 105
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: stepnephewPhilamot
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640276  NODE_INDEX: 16
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640276
  NODE_INDEX[0]: 16
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: finally
  TOKENIZED[0]: finally
  NODE_ID[1]: 47244640272
  NODE_INDEX[1]: 106
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: try
  TOKENIZED[1]: try

CENTER_NODE: 30064771169  NODE_INDEX: 17
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771169
  NODE_INDEX[0]: 17
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int l = packed.length()
  TOKENIZED[0]: int VAR1 = VAR2 . FUN1 ( )
  NODE_ID[1]: 30064771170
  NODE_INDEX[1]: 107
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: packed.length()
  TOKENIZED[1]: VAR1 . FUN1 ( )
  NODE_ID[2]: 68719476847
  NODE_INDEX[2]: 108
  EDGE_TYPE_INDEX[2]: 2
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: l
  TOKENIZED[2]: VAR1
  NODE_ID[3]: 68719476849
  NODE_INDEX[3]: 109
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: i
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771410  NODE_INDEX: 18
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771410
  NODE_INDEX[0]: 18
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: this.zzLexicalState = newState
  TOKENIZED[0]: this . VAR1 = VAR2
  NODE_ID[1]: 30064771411
  NODE_INDEX[1]: 110
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzLexicalState
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 68719477024
  NODE_INDEX[2]: 111
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: newState
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771629  NODE_INDEX: 19
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771629
  NODE_INDEX[0]: 19
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: String LexerScheme.ZZ_ACTION_PACKED_0 = \
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  NODE_ID[1]: 30064771630
  NODE_INDEX[1]: 112
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_ACTION_PACKED_0
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 47244640291  NODE_INDEX: 20
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640291
  NODE_INDEX[0]: 20
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: catch
  TOKENIZED[0]: catch
  NODE_ID[1]: 47244640290
  NODE_INDEX[1]: 113
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: try
  TOKENIZED[1]: try

CENTER_NODE: 30064771649  NODE_INDEX: 21
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771649
  NODE_INDEX[0]: 21
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: String[] LexerScheme.ZZ_ERROR_MSG = { \
  TOKENIZED[0]: String[] VAR1 . VAR2 = { \
  NODE_ID[1]: 30064771650
  NODE_INDEX[1]: 114
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_ERROR_MSG
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771651
  NODE_INDEX[2]: 115
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: { \
  TOKENIZED[2]: { \

CENTER_NODE: 47244640288  NODE_INDEX: 22
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640288
  NODE_INDEX[0]: 22
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: else
  TOKENIZED[0]: else
  NODE_ID[1]: 47244640287
  NODE_INDEX[1]: 116
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: if (c == -1)
  TOKENIZED[1]: if ( VAR1 == -1 )

CENTER_NODE: 30064771076  NODE_INDEX: 23
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771076
  NODE_INDEX[0]: 23
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: sisterize_joky--
  TOKENIZED[0]: sisterize_joky--
  NODE_ID[1]: 68719476763
  NODE_INDEX[1]: 117
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: IDENTIFIER
  ORIGINAL[1]: sisterize_joky
  TOKENIZED[1]: VAR1
  NODE_ID[2]: 68719476764
  NODE_INDEX[2]: 118
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: sisterize_joky
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771657  NODE_INDEX: 24
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771657
  NODE_INDEX[0]: 24
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: ArrayList LexerScheme.stonesoup_sources = null
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  NODE_ID[1]: 30064771658
  NODE_INDEX[1]: 119
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.stonesoup_sources
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771632  NODE_INDEX: 25
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771632
  NODE_INDEX[0]: 25
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.ZZ_ROWMAP
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771631
  NODE_INDEX[1]: 120
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int[] LexerScheme.ZZ_ROWMAP = zzUnpackRowMap()
  TOKENIZED[1]: int[] VAR1 . VAR2 = FUN1 ( )
  NODE_ID[2]: 30064771633
  NODE_INDEX[2]: 121
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: zzUnpackRowMap()
  TOKENIZED[2]: FUN1 ( )
  NODE_ID[3]: 55834575012
  NODE_INDEX[3]: 122
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: FIELD_IDENTIFIER
  ORIGINAL[3]: ZZ_ROWMAP
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771434  NODE_INDEX: 26
FRAGMENT_COUNT: 1
  NODE_ID[0]: 30064771434
  NODE_INDEX[0]: 26
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: throw new Error(message);
  TOKENIZED[0]: throw new FUN1 ( VAR1 ) ;

CENTER_NODE: 30064771644  NODE_INDEX: 27
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771644
  NODE_INDEX[0]: 27
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.ZZ_UNKNOWN_ERROR
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771643
  NODE_INDEX[1]: 123
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int LexerScheme.ZZ_UNKNOWN_ERROR = 0
  TOKENIZED[1]: int VAR1 . VAR2 = 0
  NODE_ID[2]: 55834575016
  NODE_INDEX[2]: 124
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: ZZ_UNKNOWN_ERROR
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477022  NODE_INDEX: 28
FRAGMENT_COUNT: 3
  NODE_ID[0]: 68719477022
  NODE_INDEX[0]: 28
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771409
  NODE_INDEX[1]: 125
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzLexicalState
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 55834574932
  NODE_INDEX[2]: 126
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: zzLexicalState
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771602  NODE_INDEX: 29
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771602
  NODE_INDEX[0]: 29
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: PrintStream LexerScheme.outcrossingPenologic = null
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  NODE_ID[1]: 30064771603
  NODE_INDEX[1]: 127
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.outcrossingPenologic
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 47244640275  NODE_INDEX: 30
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640275
  NODE_INDEX[0]: 30
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: catch
  TOKENIZED[0]: catch
  NODE_ID[1]: 47244640274
  NODE_INDEX[1]: 128
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: try
  TOKENIZED[1]: try

CENTER_NODE: 68719477031  NODE_INDEX: 31
FRAGMENT_COUNT: 2
  NODE_ID[0]: 68719477031
  NODE_INDEX[0]: 31
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: $obj6
  TOKENIZED[0]: $obj6
  NODE_ID[1]: 30064771414
  NODE_INDEX[1]: 129
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: new String(zzBuffer, zzStartRead, zzMarkedPos - zzStartRead)
  TOKENIZED[1]: new FUN1 ( VAR1 , VAR2 , VAR3 - VAR2 )

CENTER_NODE: 30064771642  NODE_INDEX: 32
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771642
  NODE_INDEX[0]: 32
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: \
  TOKENIZED[0]: \
  NODE_ID[1]: 30064771640
  NODE_INDEX[1]: 130
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: String LexerScheme.ZZ_TRANS_PACKED_0 = \
  TOKENIZED[1]: VAR1 VAR2 . VAR3 = \
  NODE_ID[2]: 30064771641
  NODE_INDEX[2]: 131
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.ZZ_TRANS_PACKED_0
  TOKENIZED[2]: VAR1 . VAR2

CENTER_NODE: 30064771619  NODE_INDEX: 33
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771619
  NODE_INDEX[0]: 33
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: String LexerScheme.ZZ_CMAP_PACKED = \
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  NODE_ID[1]: 30064771620
  NODE_INDEX[1]: 132
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_CMAP_PACKED
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771621
  NODE_INDEX[2]: 133
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: \
  TOKENIZED[2]: \

CENTER_NODE: 30064771638  NODE_INDEX: 34
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771638
  NODE_INDEX[0]: 34
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.ZZ_TRANS
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771637
  NODE_INDEX[1]: 134
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int[] LexerScheme.ZZ_TRANS = zzUnpackTrans()
  TOKENIZED[1]: int[] VAR1 . VAR2 = FUN1 ( )
  NODE_ID[2]: 30064771639
  NODE_INDEX[2]: 135
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: zzUnpackTrans()
  TOKENIZED[2]: FUN1 ( )
  NODE_ID[3]: 55834575014
  NODE_INDEX[3]: 136
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: FIELD_IDENTIFIER
  ORIGINAL[3]: ZZ_TRANS
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640293  NODE_INDEX: 35
FRAGMENT_COUNT: 1
  NODE_ID[0]: 47244640293
  NODE_INDEX[0]: 35
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: while (true)
  TOKENIZED[0]: while ( true )

CENTER_NODE: 68719476941  NODE_INDEX: 36
FRAGMENT_COUNT: 8
  NODE_ID[0]: 68719476941
  NODE_INDEX[0]: 36
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771271
  NODE_INDEX[1]: 137
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzAtEOF
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 30064771277
  NODE_INDEX[2]: 138
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzEndRead
  TOKENIZED[2]: this . VAR1
  NODE_ID[3]: 30064771278
  NODE_INDEX[3]: 139
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: length > zzBuffer.length
  TOKENIZED[3]: VAR1 > VAR2 . VAR1
  NODE_ID[4]: 30064771282
  NODE_INDEX[4]: 140
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: CALL
  ORIGINAL[4]: this.zzBuffer
  TOKENIZED[4]: this . VAR1
  NODE_ID[5]: 30064771286
  NODE_INDEX[5]: 141
  EDGE_TYPE_INDEX[5]: 2
  TYPE[5]: CALL
  ORIGINAL[5]: this.zzBuffer
  TOKENIZED[5]: this . VAR1
  NODE_ID[6]: 55834574874
  NODE_INDEX[6]: 142
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: FIELD_IDENTIFIER
  ORIGINAL[6]: zzBuffer
  TOKENIZED[6]: VAR1
  NODE_ID[7]: 68719476736
  NODE_INDEX[7]: 143
  EDGE_TYPE_INDEX[7]: 0
  TYPE[7]: IDENTIFIER
  ORIGINAL[7]: this
  TOKENIZED[7]: this

CENTER_NODE: 30064771615  NODE_INDEX: 37
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771615
  NODE_INDEX[0]: 37
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.YYINITIAL
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771614
  NODE_INDEX[1]: 144
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int LexerScheme.YYINITIAL = 0
  TOKENIZED[1]: int VAR1 . VAR2 = 0
  NODE_ID[2]: 55834575005
  NODE_INDEX[2]: 145
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: YYINITIAL
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640259  NODE_INDEX: 38
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640259
  NODE_INDEX[0]: 38
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: catch
  TOKENIZED[0]: catch
  NODE_ID[1]: 47244640258
  NODE_INDEX[1]: 146
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: try
  TOKENIZED[1]: try

CENTER_NODE: 30064771120  NODE_INDEX: 39
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771120
  NODE_INDEX[0]: 39
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int offset = 0
  TOKENIZED[0]: int VAR1 = 0
  NODE_ID[1]: 68719476793
  NODE_INDEX[1]: 147
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: IDENTIFIER
  ORIGINAL[1]: offset
  TOKENIZED[1]: VAR1
  NODE_ID[2]: 68719476794
  NODE_INDEX[2]: 148
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: offset
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640268  NODE_INDEX: 40
FRAGMENT_COUNT: 3
  NODE_ID[0]: 47244640268
  NODE_INDEX[0]: 40
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: try
  TOKENIZED[0]: try
  NODE_ID[1]: 47244640269
  NODE_INDEX[1]: 149
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: catch
  TOKENIZED[1]: catch
  NODE_ID[2]: 47244640270
  NODE_INDEX[2]: 150
  EDGE_TYPE_INDEX[2]: 2
  TYPE[2]: CONTROL_STRUCTURE
  ORIGINAL[2]: catch
  TOKENIZED[2]: catch

CENTER_NODE: 30064771225  NODE_INDEX: 41
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771225
  NODE_INDEX[0]: 41
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: new RuntimeException(\
  TOKENIZED[0]: new FUN1 ( \
  NODE_ID[1]: 30064771212
  NODE_INDEX[1]: 151
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: new PrintStream(new FileOutputStream(coagulatorSpicewood, false), true, \
  TOKENIZED[1]: new FUN1 ( new FUN2 ( VAR1 , false ) , true , \
  NODE_ID[2]: 30064771224
  NODE_INDEX[2]: 152
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: $obj3 = new RuntimeException(\
  TOKENIZED[2]: $obj3 = new FUN1 ( \
  NODE_ID[3]: 68719476887
  NODE_INDEX[3]: 153
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: $obj3
  TOKENIZED[3]: $obj3

CENTER_NODE: 30064771162  NODE_INDEX: 42
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771162
  NODE_INDEX[0]: 42
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: new int[15]
  TOKENIZED[0]: new int[15]
  NODE_ID[1]: 30064771161
  NODE_INDEX[1]: 154
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: int[] result = new int[15]
  TOKENIZED[1]: int[] VAR1 = new int[15]
  NODE_ID[2]: 68719476838
  NODE_INDEX[2]: 155
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: result
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771508  NODE_INDEX: 43
FRAGMENT_COUNT: 7
  NODE_ID[0]: 30064771508
  NODE_INDEX[0]: 43
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: ZZ_LEXSTATE[zzLexicalState]
  TOKENIZED[0]: ZZ_LEXSTATE[zzLexicalState]
  NODE_ID[1]: 30064771499
  NODE_INDEX[1]: 156
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzAtBOL
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 30064771503
  NODE_INDEX[2]: 157
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.ZZ_LEXSTATE
  TOKENIZED[2]: VAR1 . VAR2
  NODE_ID[3]: 30064771506
  NODE_INDEX[3]: 158
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: this.zzState = ZZ_LEXSTATE[zzLexicalState]
  TOKENIZED[3]: this . VAR1 = ZZ_LEXSTATE[zzLexicalState]
  NODE_ID[4]: 30064771507
  NODE_INDEX[4]: 159
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: CALL
  ORIGINAL[4]: this.zzState
  TOKENIZED[4]: this . VAR1
  NODE_ID[5]: 30064771509
  NODE_INDEX[5]: 160
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: CALL
  ORIGINAL[5]: LexerScheme.ZZ_LEXSTATE
  TOKENIZED[5]: VAR1 . VAR2
  NODE_ID[6]: 30064771510
  NODE_INDEX[6]: 161
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: CALL
  ORIGINAL[6]: this.zzLexicalState
  TOKENIZED[6]: this . VAR1

CENTER_NODE: 30064771647  NODE_INDEX: 44
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771647
  NODE_INDEX[0]: 44
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int LexerScheme.ZZ_PUSHBACK_2BIG = 2
  TOKENIZED[0]: int VAR1 . VAR2 = 2
  NODE_ID[1]: 30064771648
  NODE_INDEX[1]: 162
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_PUSHBACK_2BIG
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771628  NODE_INDEX: 45
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771628
  NODE_INDEX[0]: 45
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: zzUnpackAction()
  TOKENIZED[0]: FUN1 ( )
  NODE_ID[1]: 30064771626
  NODE_INDEX[1]: 163
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: int[] LexerScheme.ZZ_ACTION = zzUnpackAction()
  TOKENIZED[1]: int[] VAR1 . VAR2 = FUN1 ( )
  NODE_ID[2]: 30064771627
  NODE_INDEX[2]: 164
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.ZZ_ACTION
  TOKENIZED[2]: VAR1 . VAR2

CENTER_NODE: 30064771384  NODE_INDEX: 46
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771384
  NODE_INDEX[0]: 46
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: this.zzReader = reader
  TOKENIZED[0]: this . VAR1 = VAR2
  NODE_ID[1]: 30064771385
  NODE_INDEX[1]: 165
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzReader
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 68719477010
  NODE_INDEX[2]: 166
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: reader
  TOKENIZED[2]: VAR1
  NODE_ID[3]: 68719477011
  NODE_INDEX[3]: 167
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: this
  TOKENIZED[3]: this

CENTER_NODE: 68719477036  NODE_INDEX: 47
FRAGMENT_COUNT: 4
  NODE_ID[0]: 68719477036
  NODE_INDEX[0]: 47
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771425
  NODE_INDEX[1]: 168
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzMarkedPos
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 30064771426
  NODE_INDEX[2]: 169
  EDGE_TYPE_INDEX[2]: 2
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzStartRead
  TOKENIZED[2]: this . VAR1
  NODE_ID[3]: 55834574941
  NODE_INDEX[3]: 170
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: FIELD_IDENTIFIER
  ORIGINAL[3]: zzStartRead
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476778  NODE_INDEX: 48
FRAGMENT_COUNT: 7
  NODE_ID[0]: 68719476778
  NODE_INDEX[0]: 48
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: $obj0
  TOKENIZED[0]: $obj0
  NODE_ID[1]: 30064771092
  NODE_INDEX[1]: 171
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: stonesoup_counter < ((Integer) peristrumousShabbed)
  TOKENIZED[1]: VAR1 < ( ( VAR2 ) VAR3 )
  NODE_ID[2]: 30064771097
  NODE_INDEX[2]: 172
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: $obj0 = new FileOutputStream(String.format(\
  TOKENIZED[2]: $obj0 = new FUN1 ( VAR1 . FUN2 ( \
  NODE_ID[3]: 30064771099
  NODE_INDEX[3]: 173
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: new FileOutputStream(String.format(\
  TOKENIZED[3]: new FUN1 ( VAR1 . FUN2 ( \
  NODE_ID[4]: 30064771100
  NODE_INDEX[4]: 174
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: CALL
  ORIGINAL[4]: String.format(\
  TOKENIZED[4]: VAR1 . FUN1 ( \
  NODE_ID[5]: 68719476777
  NODE_INDEX[5]: 175
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: $obj0
  TOKENIZED[5]: $obj0
  NODE_ID[6]: 68719476779
  NODE_INDEX[6]: 176
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: IDENTIFIER
  ORIGINAL[6]: String
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771611  NODE_INDEX: 49
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771611
  NODE_INDEX[0]: 49
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: -1
  TOKENIZED[0]: -1
  NODE_ID[1]: 30064771609
  NODE_INDEX[1]: 177
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: int LexerScheme.YYEOF = -1
  TOKENIZED[1]: int VAR1 . VAR2 = -1
  NODE_ID[2]: 30064771610
  NODE_INDEX[2]: 178
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.YYEOF
  TOKENIZED[2]: VAR1 . VAR2

CENTER_NODE: 30064771381  NODE_INDEX: 50
FRAGMENT_COUNT: 6
  NODE_ID[0]: 30064771381
  NODE_INDEX[0]: 50
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: this.zzReader
  TOKENIZED[0]: this . VAR1
  NODE_ID[1]: 30064771380
  NODE_INDEX[1]: 179
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: zzReader != null
  TOKENIZED[1]: VAR1 != null
  NODE_ID[2]: 30064771383
  NODE_INDEX[2]: 180
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzReader
  TOKENIZED[2]: this . VAR1
  NODE_ID[3]: 55834574917
  NODE_INDEX[3]: 181
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: FIELD_IDENTIFIER
  ORIGINAL[3]: zzReader
  TOKENIZED[3]: VAR1
  NODE_ID[4]: 68719477007
  NODE_INDEX[4]: 182
  EDGE_TYPE_INDEX[4]: 2
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: this
  TOKENIZED[4]: this
  NODE_ID[5]: 68719477008
  NODE_INDEX[5]: 183
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: this
  TOKENIZED[5]: this

CENTER_NODE: 68719477040  NODE_INDEX: 51
FRAGMENT_COUNT: 6
  NODE_ID[0]: 68719477040
  NODE_INDEX[0]: 51
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: $obj7
  TOKENIZED[0]: $obj7
  NODE_ID[1]: 30064771427
  NODE_INDEX[1]: 184
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: message = ZZ_ERROR_MSG[errorCode]
  TOKENIZED[1]: VAR1 = ZZ_ERROR_MSG[errorCode]
  NODE_ID[2]: 30064771430
  NODE_INDEX[2]: 185
  EDGE_TYPE_INDEX[2]: 1
  TYPE[2]: CALL
  ORIGINAL[2]: message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR]
  TOKENIZED[2]: VAR1 = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR]
  NODE_ID[3]: 30064771435
  NODE_INDEX[3]: 186
  EDGE_TYPE_INDEX[3]: 2
  TYPE[3]: CALL
  ORIGINAL[3]: $obj7 = new Error(message)
  TOKENIZED[3]: $obj7 = new FUN1 ( VAR1 )
  NODE_ID[4]: 30064771436
  NODE_INDEX[4]: 187
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: CALL
  ORIGINAL[4]: new Error(message)
  TOKENIZED[4]: new FUN1 ( VAR1 )
  NODE_ID[5]: 68719477041
  NODE_INDEX[5]: 188
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: $obj7
  TOKENIZED[5]: $obj7

CENTER_NODE: 30064771604  NODE_INDEX: 52
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771604
  NODE_INDEX[0]: 52
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean LexerScheme.kitamatTheatricals = new java.util.concurrent.atomic.AtomicBoolean(false)
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  NODE_ID[1]: 30064771605
  NODE_INDEX[1]: 189
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.kitamatTheatricals
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771606
  NODE_INDEX[2]: 190
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 30064771634  NODE_INDEX: 53
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771634
  NODE_INDEX[0]: 53
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: String LexerScheme.ZZ_ROWMAP_PACKED_0 = \
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  NODE_ID[1]: 30064771635
  NODE_INDEX[1]: 191
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_ROWMAP_PACKED_0
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771636
  NODE_INDEX[2]: 192
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: \
  TOKENIZED[2]: \

