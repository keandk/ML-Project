# Tokenized code fragments for 156536-v1.0.0-bad
# Total center nodes processed: 73
# Total code fragments found: 259

CENTER_NODE: 30064771551
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data[offset + 2] = (byte) ((value >>> 16) & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset + 2] = ( byte ) ( ( VAR1 >>> 16 ) & 0xFF )
  ORIGINAL[1]: data[offset + 2]
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset + 2]
  ORIGINAL[2]: (byte) ((value >>> 16) & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( ( VAR1 >>> 16 ) & 0xFF )
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771475
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getUShort(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 7
  ORIGINAL[0]: readPath.isFile()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( )
  ORIGINAL[1]: reader = new java.io.BufferedReader(new java.io.InputStreamReader(fis))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = new VAR2 . VAR3 . FUN1 ( new VAR2 . VAR3 . FUN2 ( VAR4 ) )
  ORIGINAL[2]: new java.io.BufferedReader(new java.io.InputStreamReader(fis))
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . FUN1 ( new VAR1 . VAR2 . FUN2 ( VAR3 ) )
  ORIGINAL[3]: reader
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: reader
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: $obj0
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: $obj0
  ORIGINAL[6]: reader
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771467
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (short) (data[offset] & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: ( short ) ( data[offset] & 0xFF )
  ORIGINAL[1]: data[offset] & 0xFF
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset] & 0xFF
  ORIGINAL[2]: data[offset]
  TYPE[2]: CALL
  TOKENIZED[2]: data[offset]

CENTER_NODE: 30064771676
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data[i++] = (byte) ((value >>> 24) & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: data[i++] = ( byte ) ( ( VAR1 >>> 24 ) & 0xFF )
  ORIGINAL[1]: data[i++]
  TYPE[1]: CALL
  TOKENIZED[1]: data[i++]
  ORIGINAL[2]: (byte) ((value >>> 24) & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( ( VAR1 >>> 24 ) & 0xFF )
  ORIGINAL[3]: (value >>> 24) & 0xFF
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 >>> 24 ) & 0xFF

CENTER_NODE: 30064771473
FRAGMENT_COUNT: 2
  ORIGINAL[0]: data[offset] & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset] & 0xFF
  ORIGINAL[1]: data[offset]
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset]

CENTER_NODE: 30064771740
FRAGMENT_COUNT: 4
  ORIGINAL[0]: long retNum = readInt(stream)
  TYPE[0]: CALL
  TOKENIZED[0]: long VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: readInt(stream)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: retNum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771450
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (b1 << 8) + (b0 << 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 << 8 ) + ( VAR2 << 0 )
  ORIGINAL[1]: b0 << 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 << 0
  ORIGINAL[2]: b0
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476977
FRAGMENT_COUNT: 4
  ORIGINAL[0]: Double.longBitsToDouble(getLong(data, 0))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( FUN2 ( VAR2 , 0 ) )
  ORIGINAL[1]: getLong(data, 0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 0 )
  ORIGINAL[2]: Double
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771653
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (byte) (value & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: ( byte ) ( VAR1 & 0xFF )
  ORIGINAL[1]: value & 0xFF
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0xFF
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477140
FRAGMENT_COUNT: 4
  ORIGINAL[0]: outputStream.write((byte) ((value >>> 0) & 0xFF))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 0 ) & 0xFF ) )
  ORIGINAL[1]: (byte) ((value >>> 0) & 0xFF)
  TYPE[1]: CALL
  TOKENIZED[1]: ( byte ) ( ( VAR1 >>> 0 ) & 0xFF )
  ORIGINAL[2]: outputStream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: outputStream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771488
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data[offset] = (byte) value
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset] = ( byte ) VAR1
  ORIGINAL[1]: data[offset]
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset]
  ORIGINAL[2]: (byte) value
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) VAR1
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477005
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getLong(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477110
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putLong(data, offset, Double.doubleToLongBits(value))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 . FUN2 ( VAR4 ) )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 5
  ORIGINAL[0]: matchCheckHeader == null || !matchCheckHeader.equalsIgnoreCase(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == null || !matchCheckHeader . FUN1 ( \
  ORIGINAL[1]: handleTaintRequest(session)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this
  ORIGINAL[3]: session
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: session
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771691
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (value >>> 16) & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 >>> 16 ) & 0xFF
  ORIGINAL[1]: value >>> 16
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >>> 16
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771080
FRAGMENT_COUNT: 5
  ORIGINAL[0]: this.orihyperbola_handfasting = orihyperbola_handfasting
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.orihyperbola_handfasting
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: orihyperbola_handfasting
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: orihyperbola_handfasting
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476878
FRAGMENT_COUNT: 9
  ORIGINAL[0]: NanoHTTPD.Response response = new NanoHTTPD.Response(NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR1 . VAR2 . VAR4 . VAR5 , VAR1 . VAR6 , VAR7 )
  ORIGINAL[1]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , VAR5 )
  ORIGINAL[2]: NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[3]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: NanoHTTPD
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: body
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: response
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477064
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getShort(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476997
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i++
  TYPE[0]: CALL
  TOKENIZED[0]: i++
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771497
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putInt(data, 0, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771806
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean LittleEndian.attritenessMadurese = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: LittleEndian.attritenessMadurese
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771339
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getFloat(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477101
FRAGMENT_COUNT: 3
  ORIGINAL[0]: data[offset]
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset]
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 6
  ORIGINAL[0]: $idx0 < value.length
  TYPE[0]: CALL
  TOKENIZED[0]: $idx0 < VAR1 . VAR2
  ORIGINAL[1]: value.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: <empty>
  TYPE[2]: CALL
  TOKENIZED[2]: <empty>
  ORIGINAL[3]: length
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: $idx0
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $idx0
  ORIGINAL[5]: value
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477121
FRAGMENT_COUNT: 3
  ORIGINAL[0]: Float.floatToIntBits(value)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[1]: Float
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476767
FRAGMENT_COUNT: 2
  ORIGINAL[0]: super(\
  TYPE[0]: CALL
  TOKENIZED[0]: super ( \
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this

CENTER_NODE: 30064771713
FRAGMENT_COUNT: 3
  ORIGINAL[0]: outputStream.write((byte) ((value >>> 8) & 0xFF))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 8 ) & 0xFF ) )
  ORIGINAL[1]: (byte) ((value >>> 8) & 0xFF)
  TYPE[1]: CALL
  TOKENIZED[1]: ( byte ) ( ( VAR1 >>> 8 ) & 0xFF )
  ORIGINAL[2]: outputStream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 4
  ORIGINAL[0]: new BufferUnderrunException()
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( )
  ORIGINAL[1]: (ch1 | ch2 | ch3 | ch4) < 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 | VAR2 | VAR3 | VAR4 ) < 0
  ORIGINAL[2]: $obj6
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj6
  ORIGINAL[3]: $obj6
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj6

CENTER_NODE: 30064771458
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < result.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 . VAR3
  ORIGINAL[1]: result[i] = getShort(data, offset + i * SHORT_SIZE)
  TYPE[1]: CALL
  TOKENIZED[1]: result[i] = FUN1 ( VAR1 , VAR2 + VAR3 * VAR4 )
  ORIGINAL[2]: result[i]
  TYPE[2]: CALL
  TOKENIZED[2]: result[i]
  ORIGINAL[3]: getShort(data, offset + i * SHORT_SIZE)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 + VAR3 * VAR4 )
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771632
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putShort(data, 0, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719477095
FRAGMENT_COUNT: 4
  ORIGINAL[0]: long retNum = getInt(data, offset)
  TYPE[0]: CALL
  TOKENIZED[0]: long VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: retNum & 0x00FFFFFFFFl
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x00FFFFFFFFl
  ORIGINAL[2]: retNum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: retNum
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771803
FRAGMENT_COUNT: 2
  ORIGINAL[0]: b & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0xFF
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719477176
FRAGMENT_COUNT: 6
  ORIGINAL[0]: outputStream.write((byte) ((value >>> 8) & 0xFF))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 8 ) & 0xFF ) )
  ORIGINAL[1]: outputStream.write((byte) ((value >>> 16) & 0xFF))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 16 ) & 0xFF ) )
  ORIGINAL[2]: (byte) ((value >>> 16) & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( ( VAR1 >>> 16 ) & 0xFF )
  ORIGINAL[3]: outputStream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: outputStream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: outputStream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476765
FRAGMENT_COUNT: 5
  ORIGINAL[0]: super(port);
  TYPE[0]: CALL
  TOKENIZED[0]: super ( VAR1 ) ;
  ORIGINAL[1]: this.responseWriter
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: responseWriter
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this

CENTER_NODE: 30064771679
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putUInt(data, 0, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476971
FRAGMENT_COUNT: 7
  ORIGINAL[0]: byte[] copy = new byte[size]
  TYPE[0]: CALL
  TOKENIZED[0]: byte[] VAR1 = new byte[size]
  ORIGINAL[1]: System.arraycopy(data, offset, copy, 0, size)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 , VAR3 , VAR4 , 0 , VAR5 )
  ORIGINAL[2]: System
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: copy
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640261
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771510
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (value >>> 8) & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 >>> 8 ) & 0xFF
  ORIGINAL[1]: value >>> 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >>> 8
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477116
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putLong(Double.doubleToLongBits(value), outputStream)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . FUN2 ( VAR2 ) , VAR3 )
  ORIGINAL[1]: Double.doubleToLongBits(value)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: outputStream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476980
FRAGMENT_COUNT: 4
  ORIGINAL[0]: getLong(data, offset)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: Double
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476986
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getInt(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771782
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ((long) ch8 << 56) + ((long) ch7 << 48) + ((long) ch6 << 40) + ((long) ch5 << 32)
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( long ) VAR1 << 56 ) + ( ( long ) VAR2 << 48 ) + ( ( long ) VAR3 << 40 ) + ( ( long ) VAR4 << 32 )
  ORIGINAL[1]: (long) ch5 << 32
  TYPE[1]: CALL
  TOKENIZED[1]: ( long ) VAR1 << 32
  ORIGINAL[2]: (long) ch5
  TYPE[2]: CALL
  TOKENIZED[2]: ( long ) VAR1

CENTER_NODE: 30064771322
FRAGMENT_COUNT: 5
  ORIGINAL[0]: this.receivedBarrier.await()
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( )
  ORIGINAL[1]: $obj1 = new IOException(\
  TYPE[1]: CALL
  TOKENIZED[1]: $obj1 = new FUN1 ( \
  ORIGINAL[2]: new IOException(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: $obj1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj1
  ORIGINAL[4]: $obj1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj1

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 3
  ORIGINAL[0]: long LittleEndian$BufferUnderrunException.serialVersionUID = 8736973884877006145L
  TYPE[0]: CALL
  TOKENIZED[0]: long LittleEndian$BufferUnderrunException . VAR1 = 8736973884877006145L
  ORIGINAL[1]: LittleEndian$BufferUnderrunException.serialVersionUID
  TYPE[1]: CALL
  TOKENIZED[1]: LittleEndian$BufferUnderrunException . VAR1
  ORIGINAL[2]: serialVersionUID
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771638
FRAGMENT_COUNT: 4
  ORIGINAL[0]: outputStream.write((byte) ((value >>> 8) & 0xFF))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 8 ) & 0xFF ) )
  ORIGINAL[1]: (byte) ((value >>> 8) & 0xFF)
  TYPE[1]: CALL
  TOKENIZED[1]: ( byte ) ( ( VAR1 >>> 8 ) & 0xFF )
  ORIGINAL[2]: (value >>> 8) & 0xFF
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 >>> 8 ) & 0xFF
  ORIGINAL[3]: outputStream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771797
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (ch1 | ch2) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 | VAR2 ) < 0
  ORIGINAL[1]: throw new BufferUnderrunException();
  TYPE[1]: CALL
  TOKENIZED[1]: throw new FUN1 ( ) ;
  ORIGINAL[2]: ch2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771295
FRAGMENT_COUNT: 3
  ORIGINAL[0]: NanoHTTPD.Response response = new NanoHTTPD.Response(status, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR4 , VAR1 . VAR5 , VAR6 )
  ORIGINAL[1]: new NanoHTTPD.Response(status, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . FUN1 ( VAR2 , VAR1 . VAR3 , VAR4 )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771469
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getUInt(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476902
FRAGMENT_COUNT: 6
  ORIGINAL[0]: parseBody(bodyFiles)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: writeErrorResponse(session, Response.Status.INTERNAL_ERROR, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 . VAR3 . VAR4 , \
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this
  ORIGINAL[3]: session
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: session
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: Response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.orihyperbola_handfasting
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: orihyperbola_handfasting
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 47244640299
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771696
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int i = offset
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771225
FRAGMENT_COUNT: 4
  ORIGINAL[0]: NanoHTTPD.Response response = new NanoHTTPD.Response(NanoHTTPD.Response.Status.CREATED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR1 . VAR2 . VAR4 . VAR5 , VAR1 . VAR6 , VAR7 )
  ORIGINAL[1]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.CREATED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , VAR5 )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476939
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getMethod()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: response
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: session
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476860
FRAGMENT_COUNT: 4
  ORIGINAL[0]: NanoHTTPD.Response.Status.OK
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[1]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: MIME_PLAINTEXT
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NanoHTTPD
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771628
FRAGMENT_COUNT: 3
  ORIGINAL[0]: data[i++]
  TYPE[0]: CALL
  TOKENIZED[0]: data[i++]
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771790
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (short) readUShort(stream)
  TYPE[0]: CALL
  TOKENIZED[0]: ( short ) FUN1 ( VAR1 )
  ORIGINAL[1]: readUShort(stream)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476778
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sipunculoid_belord > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: independenceDelhi(sipunculoid_belord, fosse_statuesqueness)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: sipunculoid_belord
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sipunculoid_belord
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fosse_statuesqueness
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771493
FRAGMENT_COUNT: 4
  ORIGINAL[0]: putInt(data, offset, Float.floatToIntBits(value))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 . FUN2 ( VAR4 ) )
  ORIGINAL[1]: Float.floatToIntBits(value)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476983
FRAGMENT_COUNT: 4
  ORIGINAL[0]: Float.intBitsToFloat(getInt(data, offset))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( FUN2 ( VAR2 , VAR3 ) )
  ORIGINAL[1]: getInt(data, offset)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: Float
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 7
  ORIGINAL[0]: new NanoHTTPD.Response(null)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . FUN1 ( null )
  ORIGINAL[1]: setStatus(NanoHTTPD.Response.Status.OK)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . VAR2 . VAR3 . VAR4 )
  ORIGINAL[2]: NanoHTTPD.Response.Status.OK
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NanoHTTPD
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: response
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771805
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream LittleEndian.kerchiefEric = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: LittleEndian.kerchiefEric
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: kerchiefEric
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477056
FRAGMENT_COUNT: 7
  ORIGINAL[0]: int j = offset + LONG_SIZE - 1
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2 + VAR3 - 1
  ORIGINAL[1]: j >= offset
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= VAR2
  ORIGINAL[2]: j--
  TYPE[2]: CALL
  TOKENIZED[2]: j--
  ORIGINAL[3]: j
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: j
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: j
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477088
FRAGMENT_COUNT: 2
  ORIGINAL[0]: data[0]
  TYPE[0]: CALL
  TOKENIZED[0]: data[0]
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

