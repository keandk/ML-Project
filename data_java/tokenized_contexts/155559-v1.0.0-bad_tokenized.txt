# Tokenized code fragments for 155559-v1.0.0-bad
# Total center nodes processed: 25
# Total code fragments found: 148

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 30064771345
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream Schema.oysterageSultanin = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: Schema.oysterageSultanin
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: oysterageSultanin
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771245
FRAGMENT_COUNT: 7
  ORIGINAL[0]: new NanoHTTPD.Response(status, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . FUN1 ( VAR2 , VAR1 . VAR3 , VAR4 )
  ORIGINAL[1]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: MIME_PLAINTEXT
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: status
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NanoHTTPD
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: body
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 4
  ORIGINAL[0]: NanoHTTPD.Response response = new NanoHTTPD.Response(null)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( null )
  ORIGINAL[1]: new NanoHTTPD.Response(null)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . FUN1 ( null )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771346
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean Schema.wydeCapercaillie = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: Schema.wydeCapercaillie
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 7
  ORIGINAL[0]: this.data
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.receivedBarrier
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: PipedInputStream this.responseStream = null
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 this . VAR2 = null
  ORIGINAL[3]: this.responseStream
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: this.responseWriter
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: responseWriter
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: this
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: this

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 5
  ORIGINAL[0]: null != rewrap_floodwater
  TYPE[0]: CALL
  TOKENIZED[0]: null != VAR1
  ORIGINAL[1]: Integer.parseInt(rewrap_floodwater)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: rewrap_floodwater
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: Integer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rewrap_floodwater
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476809
FRAGMENT_COUNT: 5
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: getUri()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: sendBody
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: session
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: session
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771169
FRAGMENT_COUNT: 4
  ORIGINAL[0]: String body = String.format(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = VAR1 . FUN1 ( \
  ORIGINAL[1]: String.format(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( \
  ORIGINAL[2]: body
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476766
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.uri
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: uri
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 61
  ORIGINAL[0]: ((Integer) synaptical_outjetting) > 0 && ((Integer) synaptical_outjetting) <= Integer.MAX_VALUE
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 ) VAR2 ) > 0 && ( ( VAR1 ) VAR2 ) <= VAR1 . VAR3
  ORIGINAL[1]: ((Integer) synaptical_outjetting) > 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 ) VAR2 ) > 0
  ORIGINAL[2]: ((Integer) synaptical_outjetting) <= Integer.MAX_VALUE
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 ) VAR2 ) <= VAR1 . VAR3
  ORIGINAL[3]: tracepointMessage(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: Schema$AcetoaceticEntanglement.stonesoup_array = new char[((Integer) synaptical_outjetting)]
  TYPE[4]: CALL
  TOKENIZED[4]: Schema$AcetoaceticEntanglement . VAR1 = new char[ ( ( VAR2 ) VAR3 ) ]
  ORIGINAL[5]: Schema$AcetoaceticEntanglement.stonesoup_array
  TYPE[5]: CALL
  TOKENIZED[5]: Schema$AcetoaceticEntanglement . VAR1
  ORIGINAL[6]: new char[((Integer) synaptical_outjetting)]
  TYPE[6]: CALL
  TOKENIZED[6]: new char[ ( ( VAR1 ) VAR2 ) ]
  ORIGINAL[7]: (Integer) synaptical_outjetting
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 ) VAR2
  ORIGINAL[8]: tracepointBufferInfo(\
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( \
  ORIGINAL[9]: stonesoup_array.length
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 . VAR2
  ORIGINAL[10]: Schema$AcetoaceticEntanglement.stonesoup_array
  TYPE[10]: CALL
  TOKENIZED[10]: Schema$AcetoaceticEntanglement . VAR1
  ORIGINAL[11]: tracepointMessage(\
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( \
  ORIGINAL[12]: tracepointMessage(\
  TYPE[12]: CALL
  TOKENIZED[12]: FUN1 ( \
  ORIGINAL[13]: Arrays.fill(stonesoup_array, 'x')
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 . FUN1 ( VAR2 , 'x' )
  ORIGINAL[14]: Schema$AcetoaceticEntanglement.stonesoup_array
  TYPE[14]: CALL
  TOKENIZED[14]: Schema$AcetoaceticEntanglement . VAR1
  ORIGINAL[15]: int i = 0
  TYPE[15]: CALL
  TOKENIZED[15]: int VAR1 = 0
  ORIGINAL[16]: i < stonesoup_array.length
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 < VAR2 . VAR3
  ORIGINAL[17]: stonesoup_array.length
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 . VAR2
  ORIGINAL[18]: Schema$AcetoaceticEntanglement.stonesoup_array
  TYPE[18]: CALL
  TOKENIZED[18]: Schema$AcetoaceticEntanglement . VAR1
  ORIGINAL[19]: tracepointMessage(\
  TYPE[19]: CALL
  TOKENIZED[19]: FUN1 ( \
  ORIGINAL[20]: Schema.oysterageSultanin.println(\
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[21]: Schema.oysterageSultanin
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 . VAR2
  ORIGINAL[22]: Schema.oysterageSultanin.println(\
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[23]: Schema.oysterageSultanin
  TYPE[23]: CALL
  TOKENIZED[23]: VAR1 . VAR2
  ORIGINAL[24]: tracepointError(e.getClass().getName() + \
  TYPE[24]: CALL
  TOKENIZED[24]: FUN1 ( VAR1 . FUN2 ( ) . FUN3 ( ) + \
  ORIGINAL[25]: e.getClass().getName() + \
  TYPE[25]: CALL
  TOKENIZED[25]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[26]: e.getClass().getName() + \
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[27]: e.getClass().getName()
  TYPE[27]: CALL
  TOKENIZED[27]: VAR1 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[28]: e.getClass()
  TYPE[28]: CALL
  TOKENIZED[28]: VAR1 . FUN1 ( )
  ORIGINAL[29]: e.getMessage()
  TYPE[29]: CALL
  TOKENIZED[29]: VAR1 . FUN1 ( )
  ORIGINAL[30]: e.printStackTrace(Schema.oysterageSultanin)
  TYPE[30]: CALL
  TOKENIZED[30]: VAR1 . FUN1 ( VAR2 . VAR3 )
  ORIGINAL[31]: Schema.oysterageSultanin
  TYPE[31]: CALL
  TOKENIZED[31]: VAR1 . VAR2
  ORIGINAL[32]: throw e;
  TYPE[32]: CALL
  TOKENIZED[32]: throw VAR1 ;
  ORIGINAL[33]: if (((Integer) synaptical_outjetting) > 0 && ((Integer) synaptical_outjetting) <= Integer.MAX_VALUE)
  TYPE[33]: CONTROL_STRUCTURE
  TOKENIZED[33]: if ( ( ( VAR1 ) VAR2 ) > 0 && ( ( VAR1 ) VAR2 ) <= VAR1 . VAR3 )
  ORIGINAL[34]: stonesoup_array
  TYPE[34]: FIELD_IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: stonesoup_array
  TYPE[35]: FIELD_IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: length
  TYPE[36]: FIELD_IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: stonesoup_array
  TYPE[37]: FIELD_IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: stonesoup_array
  TYPE[38]: FIELD_IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: length
  TYPE[39]: FIELD_IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: oysterageSultanin
  TYPE[40]: FIELD_IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: oysterageSultanin
  TYPE[41]: FIELD_IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: oysterageSultanin
  TYPE[42]: FIELD_IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: Tracer
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: synaptical_outjetting
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: Tracer
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: Tracer
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: Tracer
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: VAR1
  ORIGINAL[48]: Arrays
  TYPE[48]: IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: i
  TYPE[49]: IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: i
  TYPE[50]: IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: Tracer
  TYPE[51]: IDENTIFIER
  TOKENIZED[51]: VAR1
  ORIGINAL[52]: Schema
  TYPE[52]: IDENTIFIER
  TOKENIZED[52]: VAR1
  ORIGINAL[53]: Schema
  TYPE[53]: IDENTIFIER
  TOKENIZED[53]: VAR1
  ORIGINAL[54]: Tracer
  TYPE[54]: IDENTIFIER
  TOKENIZED[54]: VAR1
  ORIGINAL[55]: e
  TYPE[55]: IDENTIFIER
  TOKENIZED[55]: VAR1
  ORIGINAL[56]: e
  TYPE[56]: IDENTIFIER
  TOKENIZED[56]: VAR1
  ORIGINAL[57]: e
  TYPE[57]: IDENTIFIER
  TOKENIZED[57]: VAR1
  ORIGINAL[58]: Schema
  TYPE[58]: IDENTIFIER
  TOKENIZED[58]: VAR1
  ORIGINAL[59]: e
  TYPE[59]: IDENTIFIER
  TOKENIZED[59]: VAR1
  ORIGINAL[60]: Tracer
  TYPE[60]: IDENTIFIER
  TOKENIZED[60]: VAR1

CENTER_NODE: 30064771161
FRAGMENT_COUNT: 4
  ORIGINAL[0]: NanoHTTPD.Response response = new NanoHTTPD.Response(NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR1 . VAR2 . VAR4 . VAR5 , VAR1 . VAR6 , VAR7 )
  ORIGINAL[1]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , VAR5 )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771247
FRAGMENT_COUNT: 3
  ORIGINAL[0]: setRequestMethod(session.getMethod())
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . FUN2 ( ) )
  ORIGINAL[1]: getMethod()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476920
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.receivedBarrier.await()
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( )
  ORIGINAL[1]: new IOException(\
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( \
  ORIGINAL[2]: $obj1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj1
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476902
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: this
  ORIGINAL[1]: method
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: OPTIONS
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771342
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.language
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: language
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 47244640287
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 10
  ORIGINAL[0]: new PipedInputStream(this.responseWriter)
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( this . VAR1 )
  ORIGINAL[1]: NanoHTTPD.Response response = new NanoHTTPD.Response(NanoHTTPD.Response.Status.CREATED, NanoHTTPD.MIME_PLAINTEXT, this.responseStream)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR1 . VAR2 . VAR4 . VAR5 , VAR1 . VAR6 , this . VAR7 )
  ORIGINAL[2]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.CREATED, NanoHTTPD.MIME_PLAINTEXT, this.responseStream)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , this . VAR5 )
  ORIGINAL[3]: NanoHTTPD.Response.Status.CREATED
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[4]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: this.responseStream
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1
  ORIGINAL[6]: response
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: response
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: NanoHTTPD
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: response
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

