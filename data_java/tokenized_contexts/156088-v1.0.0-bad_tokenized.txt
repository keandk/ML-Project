# Tokenized code fragments for 156088-v1.0.0-bad
# Total center nodes processed: 54
# Total code fragments found: 188

CENTER_NODE: 30064771404
FRAGMENT_COUNT: 4
  ORIGINAL[0]: outputStream.write((byte) ((value >>> 0) & 0xFF))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 0 ) & 0xFF ) )
  ORIGINAL[1]: (byte) ((value >>> 0) & 0xFF)
  TYPE[1]: CALL
  TOKENIZED[1]: ( byte ) ( ( VAR1 >>> 0 ) & 0xFF )
  ORIGINAL[2]: outputStream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: outputStream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771113
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getLong(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476879
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getInt(data, offset)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771084
FRAGMENT_COUNT: 5
  ORIGINAL[0]: Double.longBitsToDouble(getLong(data, offset))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( FUN2 ( VAR2 , VAR3 ) )
  ORIGINAL[1]: getLong(data, offset)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: Double
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771299
FRAGMENT_COUNT: 4
  ORIGINAL[0]: outputStream.write((byte) ((value >>> 8) & 0xFF))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 8 ) & 0xFF ) )
  ORIGINAL[1]: (byte) ((value >>> 8) & 0xFF)
  TYPE[1]: CALL
  TOKENIZED[1]: ( byte ) ( ( VAR1 >>> 8 ) & 0xFF )
  ORIGINAL[2]: (value >>> 8) & 0xFF
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 >>> 8 ) & 0xFF
  ORIGINAL[3]: outputStream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477019
FRAGMENT_COUNT: 2
  ORIGINAL[0]: putUInt(data, 0, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476906
FRAGMENT_COUNT: 3
  ORIGINAL[0]: Float.floatToIntBits(value)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[1]: Float
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 5
  ORIGINAL[0]: blatjang_semitessular.exists()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( )
  ORIGINAL[1]: blatjang_semitessular.isDirectory()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: blatjang_semitessular
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: blatjang_semitessular
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: blatjang_semitessular
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771422
FRAGMENT_COUNT: 5
  ORIGINAL[0]: data[offset] = (byte) (value & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset] = ( byte ) ( VAR1 & 0xFF )
  ORIGINAL[1]: data[offset]
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset]
  ORIGINAL[2]: (byte) (value & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( VAR1 & 0xFF )
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (ch1 | ch2 | ch3 | ch4) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 | VAR2 | VAR3 | VAR4 ) < 0
  ORIGINAL[1]: $obj6 = new BufferUnderrunException()
  TYPE[1]: CALL
  TOKENIZED[1]: $obj6 = new FUN1 ( )
  ORIGINAL[2]: new BufferUnderrunException()
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( )
  ORIGINAL[3]: $obj6
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj6

CENTER_NODE: 30064771566
FRAGMENT_COUNT: 11
  ORIGINAL[0]: new BufferUnderrunException()
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( )
  ORIGINAL[1]: (ch1 | ch2) < 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 | VAR2 ) < 0
  ORIGINAL[2]: ch1 | ch2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 | VAR2
  ORIGINAL[3]: throw new BufferUnderrunException();
  TYPE[3]: CALL
  TOKENIZED[3]: throw new FUN1 ( ) ;
  ORIGINAL[4]: $obj8 = new BufferUnderrunException()
  TYPE[4]: CALL
  TOKENIZED[4]: $obj8 = new FUN1 ( )
  ORIGINAL[5]: new BufferUnderrunException()
  TYPE[5]: CALL
  TOKENIZED[5]: new FUN1 ( )
  ORIGINAL[6]: if ((ch1 | ch2) < 0)
  TYPE[6]: CONTROL_STRUCTURE
  TOKENIZED[6]: if ( ( VAR1 | VAR2 ) < 0 )
  ORIGINAL[7]: $obj8
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: $obj8
  ORIGINAL[8]: $obj8
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: $obj8
  ORIGINAL[9]: $obj8
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: $obj8
  ORIGINAL[10]: ch2
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771719
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream LittleEndian.chassisHoughton = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: LittleEndian.chassisHoughton
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: chassisHoughton
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771396
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (value >>> 0) & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 >>> 0 ) & 0xFF
  ORIGINAL[1]: value >>> 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >>> 0
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771561
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (short) readUShort(stream)
  TYPE[0]: CALL
  TOKENIZED[0]: ( short ) FUN1 ( VAR1 )
  ORIGINAL[1]: readUShort(stream)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771085
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getFloat(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476757
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getInt(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771574
FRAGMENT_COUNT: 2
  ORIGINAL[0]: b & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0xFF
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771238
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (short) (data[offset] & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: ( short ) ( data[offset] & 0xFF )
  ORIGINAL[1]: data[offset] & 0xFF
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset] & 0xFF
  ORIGINAL[2]: data[offset]
  TYPE[2]: CALL
  TOKENIZED[2]: data[offset]

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 3
  ORIGINAL[0]: value >>> 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >>> 0
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771080
FRAGMENT_COUNT: 7
  ORIGINAL[0]: System.arraycopy(data, offset, copy, 0, size)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 , VAR3 , VAR4 , 0 , VAR5 )
  ORIGINAL[1]: System
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: copy
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: copy
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476997
FRAGMENT_COUNT: 7
  ORIGINAL[0]: $idx0 < value.length
  TYPE[0]: CALL
  TOKENIZED[0]: $idx0 < VAR1 . VAR2
  ORIGINAL[1]: putShort(data, offset, s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: offset
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477069
FRAGMENT_COUNT: 6
  ORIGINAL[0]: int ch4 = stream.read()
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2 . FUN1 ( )
  ORIGINAL[1]: int ch5 = stream.read()
  TYPE[1]: CALL
  TOKENIZED[1]: int VAR1 = VAR2 . FUN1 ( )
  ORIGINAL[2]: stream.read()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: ch5
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ch5
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476909
FRAGMENT_COUNT: 2
  ORIGINAL[0]: putInt(data, 0, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476754
FRAGMENT_COUNT: 4
  ORIGINAL[0]: Float.intBitsToFloat(getInt(data, offset))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( FUN2 ( VAR2 , VAR3 ) )
  ORIGINAL[1]: getInt(data, offset)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: Float
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (byte) value
  TYPE[0]: CALL
  TOKENIZED[0]: ( byte ) VAR1
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771444
FRAGMENT_COUNT: 3
  ORIGINAL[0]: data[i++] = (byte) ((value >>> 24) & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: data[i++] = ( byte ) ( ( VAR1 >>> 24 ) & 0xFF )
  ORIGINAL[1]: data[i++]
  TYPE[1]: CALL
  TOKENIZED[1]: data[i++]
  ORIGINAL[2]: (byte) ((value >>> 24) & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( ( VAR1 >>> 24 ) & 0xFF )

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 6
  ORIGINAL[0]: counter < columnCount + 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 + 1
  ORIGINAL[1]: returnData = resultSet.getString(counter)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( VAR3 )
  ORIGINAL[2]: resultSet.getString(counter)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[3]: returnData
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: resultSet
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: returnData
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771723
FRAGMENT_COUNT: 2
  ORIGINAL[0]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: LittleEndian.kookeryHulu
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771458
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (value >>> 8) & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 >>> 8 ) & 0xFF
  ORIGINAL[1]: value >>> 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >>> 8
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 2
  ORIGINAL[0]: long LittleEndian$BufferUnderrunException.serialVersionUID = 8736973884877006145L
  TYPE[0]: CALL
  TOKENIZED[0]: long LittleEndian$BufferUnderrunException . VAR1 = 8736973884877006145L
  ORIGINAL[1]: LittleEndian$BufferUnderrunException.serialVersionUID
  TYPE[1]: CALL
  TOKENIZED[1]: LittleEndian$BufferUnderrunException . VAR1

CENTER_NODE: 68719476849
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getShort(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putLong(data, offset, Double.doubleToLongBits(value))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 . FUN2 ( VAR4 ) )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771216
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data[offset + 1] & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset + 1] & 0xFF
  ORIGINAL[1]: data[offset + 1]
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset + 1]
  ORIGINAL[2]: offset + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771246
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getUShort(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477031
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i++
  TYPE[0]: CALL
  TOKENIZED[0]: i++
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771510
FRAGMENT_COUNT: 4
  ORIGINAL[0]: long retNum = readInt(stream)
  TYPE[0]: CALL
  TOKENIZED[0]: long VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: readInt(stream)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: retNum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: retNum
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771322
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data[offset + 2] = (byte) ((value >>> 16) & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset + 2] = ( byte ) ( ( VAR1 >>> 16 ) & 0xFF )
  ORIGINAL[1]: data[offset + 2]
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset + 2]
  ORIGINAL[2]: (byte) ((value >>> 16) & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( ( VAR1 >>> 16 ) & 0xFF )
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476920
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i++
  TYPE[0]: CALL
  TOKENIZED[0]: i++
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476903
FRAGMENT_COUNT: 4
  ORIGINAL[0]: putInt(data, offset, Float.floatToIntBits(value))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 . FUN2 ( VAR4 ) )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: Float
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476749
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getLong(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: Double
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771236
FRAGMENT_COUNT: 3
  ORIGINAL[0]: data[0] & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: data[0] & 0xFF
  ORIGINAL[1]: data[0]
  TYPE[1]: CALL
  TOKENIZED[1]: data[0]
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771097
FRAGMENT_COUNT: 3
  ORIGINAL[0]: data[i++]
  TYPE[0]: CALL
  TOKENIZED[0]: data[i++]
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476981
FRAGMENT_COUNT: 2
  ORIGINAL[0]: putShort(data, 0, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771244
FRAGMENT_COUNT: 2
  ORIGINAL[0]: data[offset] & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset] & 0xFF
  ORIGINAL[1]: data[offset]
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset]

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 2
  ORIGINAL[0]: super(\
  TYPE[0]: CALL
  TOKENIZED[0]: super ( \
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719477036
FRAGMENT_COUNT: 4
  ORIGINAL[0]: outputStream.write((byte) ((value >>> 0) & 0xFF))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 0 ) & 0xFF ) )
  ORIGINAL[1]: (byte) ((value >>> 0) & 0xFF)
  TYPE[1]: CALL
  TOKENIZED[1]: ( byte ) ( ( VAR1 >>> 0 ) & 0xFF )
  ORIGINAL[2]: outputStream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: outputStream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771255
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (b1 << 8) + (b0 << 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 << 8 ) + ( VAR2 << 0 )
  ORIGINAL[1]: b1 << 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 << 8
  ORIGINAL[2]: b1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b0
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476901
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putLong(Double.doubleToLongBits(value), outputStream)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . FUN2 ( VAR2 ) , VAR3 )
  ORIGINAL[1]: Double.doubleToLongBits(value)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: outputStream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < result.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 . VAR3
  ORIGINAL[1]: result[i]
  TYPE[1]: CALL
  TOKENIZED[1]: result[i]
  ORIGINAL[2]: getShort(data, offset + i * SHORT_SIZE)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 + VAR3 * VAR4 )
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476876
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getUInt(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

