# Tokenized code fragments for 156547-v1.0.0-bad
# Total center nodes processed: 22
# Total code fragments found: 82

CENTER_NODE: 30064771212
FRAGMENT_COUNT: 3
  ORIGINAL[0]: filename.endsWith(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771335
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String IndexFileNames.SEGMENTS = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: IndexFileNames.SEGMENTS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: SEGMENTS
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771214
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int idx = filename.indexOf('_', 1)
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2 . FUN1 ( '_' , 1 )
  ORIGINAL[1]: filename.indexOf('_', 1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( '_' , 1 )
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: idx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 5
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: filename = filename.substring(0, idx)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[2]: filename.substring(0, idx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771075
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.fornaxid_unharden
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: fornaxid_unharden
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771238
FRAGMENT_COUNT: 2
  ORIGINAL[0]: swankySolvement(despotically_parchingly)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: despotically_parchingly
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 4
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch
  ORIGINAL[3]: finally
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: finally

CENTER_NODE: 30064771341
FRAGMENT_COUNT: 5
  ORIGINAL[0]: IndexFileNames.GEN_EXTENSION
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: IndexFileNames.GEN_EXTENSION
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: IndexFileNames.GEN_EXTENSION
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: GEN_EXTENSION
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !checkedPath.isFile()
  TYPE[0]: CALL
  TOKENIZED[0]: !checkedPath . FUN1 ( )
  ORIGINAL[1]: while (!checkedPath.isFile())
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( !checkedPath . FUN1 ( ) )

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 16
  ORIGINAL[0]: IndexFileNames.yarrNaiades.compareAndSet(false, true)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . FUN1 ( false , true )
  ORIGINAL[1]: IndexFileNames.yarrNaiades
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: tracepointLocation(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: File heroidMisname = new File(\
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 VAR2 = new FUN1 ( \
  ORIGINAL[4]: new File(\
  TYPE[4]: CALL
  TOKENIZED[4]: new FUN1 ( \
  ORIGINAL[5]: new File(\
  TYPE[5]: CALL
  TOKENIZED[5]: new FUN1 ( \
  ORIGINAL[6]: !heroidMisname.getParentFile().exists() && !heroidMisname.getParentFile().mkdirs()
  TYPE[6]: CALL
  TOKENIZED[6]: !heroidMisname . FUN1 ( ) . FUN2 ( ) && !heroidMisname . FUN1 ( ) . FUN3 ( )
  ORIGINAL[7]: !heroidMisname.getParentFile().exists()
  TYPE[7]: CALL
  TOKENIZED[7]: !heroidMisname . FUN1 ( ) . FUN2 ( )
  ORIGINAL[8]: heroidMisname.getParentFile().exists()
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[9]: heroidMisname.getParentFile()
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 . FUN1 ( )
  ORIGINAL[10]: if (IndexFileNames.yarrNaiades.compareAndSet(false, true))
  TYPE[10]: CONTROL_STRUCTURE
  TOKENIZED[10]: if ( VAR1 . VAR2 . FUN1 ( false , true ) )
  ORIGINAL[11]: Tracer
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: heroidMisname
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: heroidMisname
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: heroidMisname
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: gen
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 30064771327
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrintStream IndexFileNames.postrubeolarProteosome = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: IndexFileNames.postrubeolarProteosome
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean IndexFileNames.yarrNaiades = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: IndexFileNames.yarrNaiades
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 30064771201
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ext.length() > 0 || segmentSuffix.length() > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) > 0 || VAR2 . FUN1 ( ) > 0
  ORIGINAL[1]: segmentName.length() + 2 + segmentSuffix.length() + ext.length()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) + 2 + VAR2 . FUN1 ( ) + VAR3 . FUN1 ( )
  ORIGINAL[2]: ext.length()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: ext
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 2
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: if (idx != -1)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 != -1 )

CENTER_NODE: 30064771353
FRAGMENT_COUNT: 5
  ORIGINAL[0]: Pattern IndexFileNames.CODEC_FILE_PATTERN = Pattern.compile(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = VAR1 . FUN1 ( \
  ORIGINAL[1]: IndexFileNames.CODEC_FILE_PATTERN
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: Pattern.compile(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \
  ORIGINAL[3]: CODEC_FILE_PATTERN
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: Pattern
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640289
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.fornaxid_unharden
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: fornaxid_unharden
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 68719476862
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filename.indexOf('.')
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ' . ' )
  ORIGINAL[1]: idx
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

