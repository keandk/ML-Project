# Tokenized code fragments for 155367-v1.0.0-bad
# Total center nodes processed: 77
# Total code fragments found: 334

CENTER_NODE: 47244640324
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719477487
FRAGMENT_COUNT: 5
  ORIGINAL[0]: toIndex - fromIndex <= 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2 <= 1
  ORIGINAL[1]: sort(fromIndex, toIndex)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: toIndex
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fromIndex
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: toIndex
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771740
FRAGMENT_COUNT: 3
  ORIGINAL[0]: o1.compareTo(o2)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[1]: o1
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: o2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477248
FRAGMENT_COUNT: 7
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: System.arraycopy(array, 0, newArray, 0, array.length)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( VAR2 , 0 , VAR3 , 0 , VAR2 . VAR4 )
  ORIGINAL[3]: array.length
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: System
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: array
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: newArray
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771399
FRAGMENT_COUNT: 5
  ORIGINAL[0]: 1 + array.length
  TYPE[0]: CALL
  TOKENIZED[0]: 1 + VAR1 . VAR2
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: array
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477469
FRAGMENT_COUNT: 3
  ORIGINAL[0]: introSort(a, 0, a.length, comp)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR1 . VAR2 , VAR3 )
  ORIGINAL[1]: a.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: comp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771788
FRAGMENT_COUNT: 5
  ORIGINAL[0]: Comparator ArrayUtil.NATURAL_COMPARATOR = new NaturalComparator()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = new FUN1 ( )
  ORIGINAL[1]: ArrayUtil.NATURAL_COMPARATOR
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new NaturalComparator()
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( )
  ORIGINAL[3]: ArrayUtil.NATURAL_COMPARATOR
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: NATURAL_COMPARATOR
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477491
FRAGMENT_COUNT: 4
  ORIGINAL[0]: toIndex - fromIndex
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2
  ORIGINAL[1]: toIndex
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fromIndex
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: toIndex
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771742
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (Comparator<T>) NATURAL_COMPARATOR
  TYPE[0]: CALL
  TOKENIZED[0]: ( Comparator<T> ) VAR1
  ORIGINAL[1]: ArrayUtil.NATURAL_COMPARATOR
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: NATURAL_COMPARATOR
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477367
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i >= start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= VAR2
  ORIGINAL[1]: i--
  TYPE[1]: CALL
  TOKENIZED[1]: i--
  ORIGINAL[2]: code = code * 31 + array[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR1 * 31 + array[i]
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771646
FRAGMENT_COUNT: 7
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: System.arraycopy(array, 0, newArray, 0, array.length)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 , 0 , VAR3 , 0 , VAR2 . VAR4 )
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: System
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: newArray
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: newArray
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771780
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrintStream ArrayUtil.quinaldiniumSpathiflorae = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: ArrayUtil.quinaldiniumSpathiflorae
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771284
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parseInt(chars, offset, len, 10)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , 10 )
  ORIGINAL[1]: chars
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771557
FRAGMENT_COUNT: 5
  ORIGINAL[0]: 1 + array.length
  TYPE[0]: CALL
  TOKENIZED[0]: 1 + VAR1 . VAR2
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: array
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477176
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ArrayUtil.unempoisonedUnsubject
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: starvedly_torporize == null || !starvedly_torporize.equals(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == null || !starvedly_torporize . FUN1 ( \
  ORIGINAL[2]: new PipedOutputStream()
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( )
  ORIGINAL[3]: ArrayUtil.quinaldiniumSpathiflorae
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: quinaldiniumSpathiflorae
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ArrayUtil
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477031
FRAGMENT_COUNT: 4
  ORIGINAL[0]: newSize + 3
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + 3
  ORIGINAL[1]: newSize
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: bytesPerElement
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: newSize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771618
FRAGMENT_COUNT: 5
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: int[][] newArray = new int[oversize(minSize, RamUsageEstimator.NUM_BYTES_OBJECT_REF)][]
  TYPE[1]: CALL
  TOKENIZED[1]: int[][] VAR1 = new int[oversize ( VAR2 , VAR3 . VAR4 ) ][]
  ORIGINAL[2]: new int[oversize(minSize, RamUsageEstimator.NUM_BYTES_OBJECT_REF)][]
  TYPE[2]: CALL
  TOKENIZED[2]: new int[oversize ( VAR1 , VAR2 . VAR3 ) ][]
  ORIGINAL[3]: newArray
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: System
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771696
FRAGMENT_COUNT: 11
  ORIGINAL[0]: (offsetLeft + length <= left.length) && (offsetRight + length <= right.length)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 + VAR2 <= VAR3 . VAR2 ) && ( VAR4 + VAR2 <= VAR5 . VAR2 )
  ORIGINAL[1]: offsetLeft + length <= left.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2 <= VAR3 . VAR2
  ORIGINAL[2]: offsetLeft + length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2
  ORIGINAL[3]: left.length
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: offsetRight + length <= right.length
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 + VAR2 <= VAR3 . VAR2
  ORIGINAL[5]: offsetRight + length
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 + VAR2
  ORIGINAL[6]: right.length
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . VAR2
  ORIGINAL[7]: length
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: offsetRight
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: length
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: right
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771733
FRAGMENT_COUNT: 3
  ORIGINAL[0]: <empty>
  TYPE[0]: CALL
  TOKENIZED[0]: <empty>
  ORIGINAL[1]: v
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: $iterLocal0
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $iterLocal0

CENTER_NODE: 68719477074
FRAGMENT_COUNT: 3
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: length
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477063
FRAGMENT_COUNT: 6
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: float[] newArray = new float[oversize(minSize, RamUsageEstimator.NUM_BYTES_FLOAT)]
  TYPE[1]: CALL
  TOKENIZED[1]: float[] VAR1 = new float[oversize ( VAR2 , VAR3 . VAR4 ) ]
  ORIGINAL[2]: new float[oversize(minSize, RamUsageEstimator.NUM_BYTES_FLOAT)]
  TYPE[2]: CALL
  TOKENIZED[2]: new float[oversize ( VAR1 , VAR2 . VAR3 ) ]
  ORIGINAL[3]: newArray
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this
  ORIGINAL[5]: newArray
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640321
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771151
FRAGMENT_COUNT: 3
  ORIGINAL[0]: new NanoHTTPD.Response(null)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . FUN1 ( null )
  ORIGINAL[1]: response
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477151
FRAGMENT_COUNT: 3
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: length
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476929
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.receivedBarrier.await()
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( )
  ORIGINAL[1]: new IOException(\
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( \
  ORIGINAL[2]: $obj0
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj0
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477110
FRAGMENT_COUNT: 5
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: oversize(minSize, RamUsageEstimator.NUM_BYTES_INT)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 . VAR3 )
  ORIGINAL[2]: newArray
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: minSize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719477455
FRAGMENT_COUNT: 6
  ORIGINAL[0]: arr[i] = arr[j]
  TYPE[0]: CALL
  TOKENIZED[0]: arr[i] = arr[j]
  ORIGINAL[1]: arr[i]
  TYPE[1]: CALL
  TOKENIZED[1]: arr[i]
  ORIGINAL[2]: arr[j]
  TYPE[2]: CALL
  TOKENIZED[2]: arr[j]
  ORIGINAL[3]: arr[j]
  TYPE[3]: CALL
  TOKENIZED[3]: arr[j]
  ORIGINAL[4]: arr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: j
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771169
FRAGMENT_COUNT: 5
  ORIGINAL[0]: NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[1]: NanoHTTPD.Response.Status
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . VAR3
  ORIGINAL[2]: NanoHTTPD.Response
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: Status
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: METHOD_NOT_ALLOWED
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771447
FRAGMENT_COUNT: 3
  ORIGINAL[0]: grow(array, 1 + array.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1 + VAR1 . VAR2 )
  ORIGINAL[1]: 1 + array.length
  TYPE[1]: CALL
  TOKENIZED[1]: 1 + VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tracepointWeaknessStart(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: Tracer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: Tracer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771602
FRAGMENT_COUNT: 5
  ORIGINAL[0]: 1 + array.length
  TYPE[0]: CALL
  TOKENIZED[0]: 1 + VAR1 . VAR2
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: array
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 68719477075
FRAGMENT_COUNT: 3
  ORIGINAL[0]: minSize >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 0
  ORIGINAL[1]: minSize
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: minSize
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476860
FRAGMENT_COUNT: 3
  ORIGINAL[0]: setResponseOptions(session, response)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: response
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771430
FRAGMENT_COUNT: 7
  ORIGINAL[0]: getShrinkSize(array.length, targetSize, RamUsageEstimator.NUM_BYTES_SHORT)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . VAR2 , VAR3 , VAR4 . VAR5 )
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: length
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: targetSize
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: array
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640295
FRAGMENT_COUNT: 3
  ORIGINAL[0]: newSize < currentSize / 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 / 2
  ORIGINAL[1]: if (newSize < currentSize / 2)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 < VAR2 / 2 )
  ORIGINAL[2]: else
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: else

CENTER_NODE: 68719477284
FRAGMENT_COUNT: 3
  ORIGINAL[0]: targetSize >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 0
  ORIGINAL[1]: targetSize
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: targetSize
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477267
FRAGMENT_COUNT: 4
  ORIGINAL[0]: newSize != array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2 . VAR3
  ORIGINAL[1]: System.arraycopy(array, 0, newArray, 0, newSize)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 , 0 , VAR3 , 0 , VAR4 )
  ORIGINAL[2]: newArray
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: newArray
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771676
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i >= start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= VAR2
  ORIGINAL[1]: code = code * 31 + array[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 * 31 + array[i]
  ORIGINAL[2]: code * 31 + array[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 * 31 + array[i]
  ORIGINAL[3]: for (int i = end - 1; Some(i >= start); i--)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( int VAR1 = VAR2 - 1 ; FUN1 ( VAR1 >= VAR3 ) ; i-- )
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: code
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771579
FRAGMENT_COUNT: 5
  ORIGINAL[0]: 1 + array.length
  TYPE[0]: CALL
  TOKENIZED[0]: 1 + VAR1 . VAR2
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: array
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771396
FRAGMENT_COUNT: 9
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: System.arraycopy(array, 0, newArray, 0, array.length)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( VAR2 , 0 , VAR3 , 0 , VAR2 . VAR4 )
  ORIGINAL[3]: array.length
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: length
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: System
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: array
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: newArray
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: array
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771119
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.preshare_cerebralism = preshare_cerebralism
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.preshare_cerebralism
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: preshare_cerebralism
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 5
  ORIGINAL[0]: size == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: result.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++i
  TYPE[0]: CALL
  TOKENIZED[0]: ++i
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: negative
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771691
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: left[offsetLeft + i] != right[offsetRight + i]
  TYPE[1]: CALL
  TOKENIZED[1]: left[offsetLeft + i] != right[offsetRight + i]
  ORIGINAL[2]: left[offsetLeft + i]
  TYPE[2]: CALL
  TOKENIZED[2]: left[offsetLeft + i]
  ORIGINAL[3]: offsetLeft + i
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 + VAR2
  ORIGINAL[4]: right[offsetRight + i]
  TYPE[4]: CALL
  TOKENIZED[4]: right[offsetRight + i]
  ORIGINAL[5]: left
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: right
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477128
FRAGMENT_COUNT: 5
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: newSize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476905
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getMethod()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: response
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: session
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477314
FRAGMENT_COUNT: 3
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: length
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476920
FRAGMENT_COUNT: 7
  ORIGINAL[0]: getHeaders()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: session
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: method
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: matchCheckHeader
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: session
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: session
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: session
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771121
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.preshare_cerebralism
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: preshare_cerebralism
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 68719477473
FRAGMENT_COUNT: 6
  ORIGINAL[0]: toIndex - fromIndex <= 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2 <= 1
  ORIGINAL[1]: introSort(a, fromIndex, toIndex, ArrayUtil.<T>naturalComparator())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 . <T>naturalComparator ( ) )
  ORIGINAL[2]: fromIndex
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fromIndex
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: toIndex
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476902
FRAGMENT_COUNT: 5
  ORIGINAL[0]: setResponseOptions(session, response)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: response
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: session
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640256
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476935
FRAGMENT_COUNT: 2
  ORIGINAL[0]: parseInt(chars, 0, chars.length, 10)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR1 . VAR2 , 10 )
  ORIGINAL[1]: chars
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771476
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int newSize = getShrinkSize(array.length, targetSize, RamUsageEstimator.NUM_BYTES_LONG)
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = FUN1 ( VAR2 . VAR3 , VAR4 , VAR5 . VAR6 )
  ORIGINAL[1]: getShrinkSize(array.length, targetSize, RamUsageEstimator.NUM_BYTES_LONG)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . VAR2 , VAR3 , VAR4 . VAR5 )
  ORIGINAL[2]: newSize
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: newSize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771779
FRAGMENT_COUNT: 4
  ORIGINAL[0]: timSort(a, 0, a.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR1 . VAR2 )
  ORIGINAL[1]: a.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 5
  ORIGINAL[0]: String this.data = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 this . VAR2 = null
  ORIGINAL[1]: this.data
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.receivedBarrier
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: receivedBarrier
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String body = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = null
  ORIGINAL[1]: body
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: body
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771566
FRAGMENT_COUNT: 5
  ORIGINAL[0]: newSize != array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2 . VAR3
  ORIGINAL[1]: byte[] newArray = new byte[newSize]
  TYPE[1]: CALL
  TOKENIZED[1]: byte[] VAR1 = new byte[newSize]
  ORIGINAL[2]: new byte[newSize]
  TYPE[2]: CALL
  TOKENIZED[2]: new byte[newSize]
  ORIGINAL[3]: newArray
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: newSize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640336
FRAGMENT_COUNT: 2
  ORIGINAL[0]: if (array.length < minSize)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: if ( VAR1 . VAR2 < VAR3 )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477459
FRAGMENT_COUNT: 4
  ORIGINAL[0]: toIndex - fromIndex
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2
  ORIGINAL[1]: toIndex
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fromIndex
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fromIndex
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771762
FRAGMENT_COUNT: 3
  ORIGINAL[0]: introSort(a, 0, a.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR1 . VAR2 )
  ORIGINAL[1]: a.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771785
FRAGMENT_COUNT: 2
  ORIGINAL[0]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: ArrayUtil.unempoisonedUnsubject
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771330
FRAGMENT_COUNT: 3
  ORIGINAL[0]: digit == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1
  ORIGINAL[1]: throw new NumberFormatException(\
  TYPE[1]: CALL
  TOKENIZED[1]: throw new FUN1 ( \
  ORIGINAL[2]: max
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771650
FRAGMENT_COUNT: 5
  ORIGINAL[0]: 1 + array.length
  TYPE[0]: CALL
  TOKENIZED[0]: 1 + VAR1 . VAR2
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: array
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771713
FRAGMENT_COUNT: 6
  ORIGINAL[0]: offsetLeft + length <= left.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + VAR2 <= VAR3 . VAR2
  ORIGINAL[1]: offsetLeft + length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2
  ORIGINAL[2]: left.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: length
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: left
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: left
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771463
FRAGMENT_COUNT: 22
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: long[] newArray = new long[oversize(minSize, RamUsageEstimator.NUM_BYTES_LONG)]
  TYPE[2]: CALL
  TOKENIZED[2]: long[] VAR1 = new long[oversize ( VAR2 , VAR3 . VAR4 ) ]
  ORIGINAL[3]: new long[oversize(minSize, RamUsageEstimator.NUM_BYTES_LONG)]
  TYPE[3]: CALL
  TOKENIZED[3]: new long[oversize ( VAR1 , VAR2 . VAR3 ) ]
  ORIGINAL[4]: oversize(minSize, RamUsageEstimator.NUM_BYTES_LONG)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 . VAR3 )
  ORIGINAL[5]: RamUsageEstimator.NUM_BYTES_LONG
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: System.arraycopy(array, 0, newArray, 0, array.length)
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . FUN1 ( VAR2 , 0 , VAR3 , 0 , VAR2 . VAR4 )
  ORIGINAL[7]: array.length
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 . VAR2
  ORIGINAL[8]: if (array.length < minSize)
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: if ( VAR1 . VAR2 < VAR3 )
  ORIGINAL[9]: NUM_BYTES_LONG
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: length
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: minSize
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: newArray
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: this
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: this
  ORIGINAL[14]: minSize
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: RamUsageEstimator
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: System
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: array
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: newArray
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: array
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: newArray
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: array
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771425
FRAGMENT_COUNT: 5
  ORIGINAL[0]: 1 + array.length
  TYPE[0]: CALL
  TOKENIZED[0]: 1 + VAR1 . VAR2
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: array
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771628
FRAGMENT_COUNT: 3
  ORIGINAL[0]: assert targetSize >= 0 : \
  TYPE[0]: CALL
  TOKENIZED[0]: assert VAR1 >= 0 : \
  ORIGINAL[1]: targetSize >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 0
  ORIGINAL[2]: targetSize
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477490
FRAGMENT_COUNT: 3
  ORIGINAL[0]: timSort(a, 0, a.length, comp)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR1 . VAR2 , VAR3 )
  ORIGINAL[1]: a.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: comp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477360
FRAGMENT_COUNT: 4
  ORIGINAL[0]: newSize != array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2 . VAR3
  ORIGINAL[1]: System.arraycopy(array, 0, newArray, 0, newSize)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 , 0 , VAR3 , 0 , VAR4 )
  ORIGINAL[2]: newArray
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: newArray
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 3
  ORIGINAL[0]: parseBody(bodyFiles)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: e.getMessage()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: e
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

