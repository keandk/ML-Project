# Tokenized code fragments for 156052-v1.0.0-bad
# Total center nodes processed: 25
# Total code fragments found: 109

CENTER_NODE: 30064771404
FRAGMENT_COUNT: 5
  ORIGINAL[0]: new HttpInfo(boundAddress(), maxContentLength.bytes())
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( FUN2 ( ) , VAR1 . FUN3 ( ) )
  ORIGINAL[1]: this.boundAddress()
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( )
  ORIGINAL[2]: this.maxContentLength.bytes()
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1 . FUN1 ( )
  ORIGINAL[3]: $obj10
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj10
  ORIGINAL[4]: $obj10
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj10

CENTER_NODE: 47244640280
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !NetworkExceptionHelper.isCloseConnectionException(e.getCause())
  TYPE[0]: CALL
  TOKENIZED[0]: !NetworkExceptionHelper . FUN1 ( VAR1 . FUN2 ( ) )
  ORIGINAL[1]: getChannel().close()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ) . FUN2 ( )
  ORIGINAL[2]: getChannel()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 5
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch
  ORIGINAL[3]: catch
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: catch
  ORIGINAL[4]: catch
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: catch

CENTER_NODE: 68719477253
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.outerClass
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: outerClass
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771241
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.settings
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: settings
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 68719477110
FRAGMENT_COUNT: 6
  ORIGINAL[0]: addLast(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: addLast(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: pipeline
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pipeline
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pipeline
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pipeline
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 4
  ORIGINAL[0]: InetAddress hostAddress = hostAddressX
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = VAR3
  ORIGINAL[1]: hostAddressX
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: hostAddress
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hostAddressX
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640301
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771646
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stonesoup_mysql_host == null || stonesoup_mysql_user == null || stonesoup_mysql_pass == null || stonesoup_mysql_port == null || stonesoup_mysql_dbname == null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == null || VAR2 == null || VAR3 == null || VAR4 == null || VAR5 == null
  ORIGINAL[1]: Class.forName(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( \
  ORIGINAL[2]: Class.forName(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \
  ORIGINAL[3]: Tracer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771734
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream NettyHttpServerTransport.overbalmTonguer = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: NettyHttpServerTransport.overbalmTonguer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: overbalmTonguer
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 27
  ORIGINAL[0]: this.networkService
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.maxChunkSize
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.maxHeaderSize
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this.maxInitialLineLength
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: this.resetCookies
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: this.maxCumulationBufferCapacity
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1
  ORIGINAL[6]: this.maxCompositeBufferComponents
  TYPE[6]: CALL
  TOKENIZED[6]: this . VAR1
  ORIGINAL[7]: this.workerCount
  TYPE[7]: CALL
  TOKENIZED[7]: this . VAR1
  ORIGINAL[8]: this.blockingServer
  TYPE[8]: CALL
  TOKENIZED[8]: this . VAR1
  ORIGINAL[9]: this.port
  TYPE[9]: CALL
  TOKENIZED[9]: this . VAR1
  ORIGINAL[10]: this.bindHost
  TYPE[10]: CALL
  TOKENIZED[10]: this . VAR1
  ORIGINAL[11]: this.publishHost
  TYPE[11]: CALL
  TOKENIZED[11]: this . VAR1
  ORIGINAL[12]: this.tcpNoDelay
  TYPE[12]: CALL
  TOKENIZED[12]: this . VAR1
  ORIGINAL[13]: this.tcpKeepAlive
  TYPE[13]: CALL
  TOKENIZED[13]: this . VAR1
  ORIGINAL[14]: this.reuseAddress
  TYPE[14]: CALL
  TOKENIZED[14]: this . VAR1
  ORIGINAL[15]: this.tcpSendBufferSize
  TYPE[15]: CALL
  TOKENIZED[15]: this . VAR1
  ORIGINAL[16]: this.tcpReceiveBufferSize
  TYPE[16]: CALL
  TOKENIZED[16]: this . VAR1
  ORIGINAL[17]: this.workerCount
  TYPE[17]: CALL
  TOKENIZED[17]: this . VAR1
  ORIGINAL[18]: this.receiveBufferSizePredictorFactory
  TYPE[18]: CALL
  TOKENIZED[18]: this . VAR1
  ORIGINAL[19]: this.receiveBufferSizePredictorFactory
  TYPE[19]: CALL
  TOKENIZED[19]: this . VAR1
  ORIGINAL[20]: this.compression
  TYPE[20]: CALL
  TOKENIZED[20]: this . VAR1
  ORIGINAL[21]: this.compressionLevel
  TYPE[21]: CALL
  TOKENIZED[21]: this . VAR1
  ORIGINAL[22]: this.maxContentLength
  TYPE[22]: CALL
  TOKENIZED[22]: this . VAR1
  ORIGINAL[23]: this.maxChunkSize
  TYPE[23]: CALL
  TOKENIZED[23]: this . VAR1
  ORIGINAL[24]: maxChunkSize
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: this
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: this
  ORIGINAL[26]: this
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: this

CENTER_NODE: 68719477113
FRAGMENT_COUNT: 2
  ORIGINAL[0]: new HttpResponseEncoder()
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( )
  ORIGINAL[1]: $obj17
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: $obj17

CENTER_NODE: 68719477014
FRAGMENT_COUNT: 4
  ORIGINAL[0]: channels == null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == null
  ORIGINAL[1]: totalChannels()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: channels
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: channels
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771510
FRAGMENT_COUNT: 6
  ORIGINAL[0]: this.requestHandler
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: new HttpRequestHandler(transport)
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( VAR1 )
  ORIGINAL[2]: this.requestHandler
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: requestHandler
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this
  ORIGINAL[5]: transport
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771736
FRAGMENT_COUNT: 5
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean NettyHttpServerTransport.flirterPooli = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: NettyHttpServerTransport.flirterPooli
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[3]: NettyHttpServerTransport.flirterPooli
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: flirterPooli
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476749
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.lastException = lastException
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.lastException
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: lastException
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771401
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.boundAddress
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: boundAddress
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771384
FRAGMENT_COUNT: 4
  ORIGINAL[0]: serverChannel != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: this.serverChannel.close().awaitUninterruptibly()
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[2]: this.serverChannel.close()
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1 . FUN1 ( )
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771476
FRAGMENT_COUNT: 4
  ORIGINAL[0]: null != inglorious_gymnasia
  TYPE[0]: CALL
  TOKENIZED[0]: null != VAR1
  ORIGINAL[1]: this.ahemOvertrader(3, null, null, null, petaly_dainty, null, null)
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( 3 , null , null , null , VAR1 , null , null )
  ORIGINAL[2]: <operator>.arrayInitializer
  TYPE[2]: CALL
  TOKENIZED[2]: <operator> . VAR1
  ORIGINAL[3]: petaly_dainty
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771242
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.httpServerAdapter = httpServerAdapter
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.httpServerAdapter
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: httpServerAdapter
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

