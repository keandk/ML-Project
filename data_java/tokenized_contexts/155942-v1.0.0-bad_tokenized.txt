# Tokenized code fragments for 155942-v1.0.0-bad
# Total center nodes processed: 62
# Total code fragments found: 245

CENTER_NODE: 68719477284
FRAGMENT_COUNT: 5
  ORIGINAL[0]: arr[i]
  TYPE[0]: CALL
  TOKENIZED[0]: arr[i]
  ORIGINAL[1]: arr[i]
  TYPE[1]: CALL
  TOKENIZED[1]: arr[i]
  ORIGINAL[2]: arr[j]
  TYPE[2]: CALL
  TOKENIZED[2]: arr[j]
  ORIGINAL[3]: arr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: j
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771114
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ArrayList ArrayUtil$FugitivismBoulder.stonesoup_sources = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 ArrayUtil$FugitivismBoulder . VAR2 = null
  ORIGINAL[1]: ArrayUtil$FugitivismBoulder.stonesoup_sources
  TYPE[1]: CALL
  TOKENIZED[1]: ArrayUtil$FugitivismBoulder . VAR1
  ORIGINAL[2]: stonesoup_sources
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477063
FRAGMENT_COUNT: 7
  ORIGINAL[0]: int newSize = getShrinkSize(array.length, targetSize, 1)
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = FUN1 ( VAR2 . VAR3 , VAR4 , 1 )
  ORIGINAL[1]: newSize != array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2 . VAR3
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: newSize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: newSize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: array
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: newSize
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476917
FRAGMENT_COUNT: 3
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771551
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: left[offsetLeft + i]
  TYPE[1]: CALL
  TOKENIZED[1]: left[offsetLeft + i]
  ORIGINAL[2]: offsetLeft + i
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2
  ORIGINAL[3]: offsetLeft
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477267
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ints
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: ints
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: $iterLocal0
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $iterLocal0
  ORIGINAL[3]: ints
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477299
FRAGMENT_COUNT: 3
  ORIGINAL[0]: a.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: length
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 3
  ORIGINAL[0]: digit == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1
  ORIGINAL[1]: new NumberFormatException(\
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( \
  ORIGINAL[2]: $obj4
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj4

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771422
FRAGMENT_COUNT: 3
  ORIGINAL[0]: grow(array, 1 + array.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1 + VAR1 . VAR2 )
  ORIGINAL[1]: 1 + array.length
  TYPE[1]: CALL
  TOKENIZED[1]: 1 + VAR1 . VAR2
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 8
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: newSize != array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2 . VAR3
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: length
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: newSize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: array
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: array
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: array
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477277
FRAGMENT_COUNT: 3
  ORIGINAL[0]: o1.compareTo(o2)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[1]: o1
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: o2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477145
FRAGMENT_COUNT: 3
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: length
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476769
FRAGMENT_COUNT: 3
  ORIGINAL[0]: parseInt(chars, offset, len, 10)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , 10 )
  ORIGINAL[1]: offset
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477248
FRAGMENT_COUNT: 5
  ORIGINAL[0]: offsetLeft + length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + VAR2
  ORIGINAL[1]: offsetLeft
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771537
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i < length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: left[offsetLeft + i] != right[offsetRight + i]
  TYPE[1]: CALL
  TOKENIZED[1]: left[offsetLeft + i] != right[offsetRight + i]
  ORIGINAL[2]: left[offsetLeft + i]
  TYPE[2]: CALL
  TOKENIZED[2]: left[offsetLeft + i]
  ORIGINAL[3]: right[offsetRight + i]
  TYPE[3]: CALL
  TOKENIZED[3]: right[offsetRight + i]
  ORIGINAL[4]: offsetRight + i
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 + VAR2
  ORIGINAL[5]: right
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476977
FRAGMENT_COUNT: 5
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: length
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771119
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parseInt(chars, 0, chars.length, 10)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR1 . VAR2 , 10 )
  ORIGINAL[1]: chars.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: chars
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771607
FRAGMENT_COUNT: 4
  ORIGINAL[0]: introSort(a, 0, a.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR1 . VAR2 )
  ORIGINAL[1]: a.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771616
FRAGMENT_COUNT: 4
  ORIGINAL[0]: timSort(a, 0, a.length, comp)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR1 . VAR2 , VAR3 )
  ORIGINAL[1]: a.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: comp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771598
FRAGMENT_COUNT: 4
  ORIGINAL[0]: toIndex - fromIndex <= 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2 <= 1
  ORIGINAL[1]: $obj14 = new ArrayIntroSorter<T>(a, comp)
  TYPE[1]: CALL
  TOKENIZED[1]: $obj14 = new ArrayIntroSorter<T> ( VAR1 , VAR2 )
  ORIGINAL[2]: new ArrayIntroSorter<T>(a, comp)
  TYPE[2]: CALL
  TOKENIZED[2]: new ArrayIntroSorter<T> ( VAR1 , VAR2 )
  ORIGINAL[3]: $obj14
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj14

CENTER_NODE: 68719477110
FRAGMENT_COUNT: 5
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: length
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 5
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: newSize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476878
FRAGMENT_COUNT: 6
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: short[] newArray = new short[oversize(minSize, RamUsageEstimator.NUM_BYTES_SHORT)]
  TYPE[1]: CALL
  TOKENIZED[1]: short[] VAR1 = new short[oversize ( VAR2 , VAR3 . VAR4 ) ]
  ORIGINAL[2]: new short[oversize(minSize, RamUsageEstimator.NUM_BYTES_SHORT)]
  TYPE[2]: CALL
  TOKENIZED[2]: new short[oversize ( VAR1 , VAR2 . VAR3 ) ]
  ORIGINAL[3]: newArray
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this
  ORIGINAL[5]: newArray
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477165
FRAGMENT_COUNT: 6
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: float[][] newArray = new float[oversize(minSize, RamUsageEstimator.NUM_BYTES_OBJECT_REF)][]
  TYPE[1]: CALL
  TOKENIZED[1]: float[][] VAR1 = new float[oversize ( VAR2 , VAR3 . VAR4 ) ][]
  ORIGINAL[2]: new float[oversize(minSize, RamUsageEstimator.NUM_BYTES_OBJECT_REF)][]
  TYPE[2]: CALL
  TOKENIZED[2]: new float[oversize ( VAR1 , VAR2 . VAR3 ) ][]
  ORIGINAL[3]: newArray
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this
  ORIGINAL[5]: newArray
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476997
FRAGMENT_COUNT: 3
  ORIGINAL[0]: newSize != array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2 . VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477128
FRAGMENT_COUNT: 7
  ORIGINAL[0]: newSize != array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2 . VAR3
  ORIGINAL[1]: System.arraycopy(array, 0, newArray, 0, newSize)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 , 0 , VAR3 , 0 , VAR4 )
  ORIGINAL[2]: newSize
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: System
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: array
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: newArray
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: newSize
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640257
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 3
  ORIGINAL[0]: end - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - 1
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: end
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771458
FRAGMENT_COUNT: 3
  ORIGINAL[0]: assert minSize >= 0 : \
  TYPE[0]: CALL
  TOKENIZED[0]: assert VAR1 >= 0 : \
  ORIGINAL[1]: minSize >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 0
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 2
  ORIGINAL[0]: if (array.length < minSize)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: if ( VAR1 . VAR2 < VAR3 )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064771622
FRAGMENT_COUNT: 3
  ORIGINAL[0]: timSort(a, 0, a.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR1 . VAR2 )
  ORIGINAL[1]: a.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477113
FRAGMENT_COUNT: 3
  ORIGINAL[0]: grow(array, 1 + array.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1 + VAR1 . VAR2 )
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476764
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.plication_antimelancholic = plication_antimelancholic
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.plication_antimelancholic
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: plication_antimelancholic
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771284
FRAGMENT_COUNT: 3
  ORIGINAL[0]: grow(array, 1 + array.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1 + VAR1 . VAR2 )
  ORIGINAL[1]: 1 + array.length
  TYPE[1]: CALL
  TOKENIZED[1]: 1 + VAR1 . VAR2
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2

CENTER_NODE: 68719476919
FRAGMENT_COUNT: 3
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: length
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477176
FRAGMENT_COUNT: 3
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: length
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771400
FRAGMENT_COUNT: 3
  ORIGINAL[0]: grow(array, 1 + array.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1 + VAR1 . VAR2 )
  ORIGINAL[1]: 1 + array.length
  TYPE[1]: CALL
  TOKENIZED[1]: 1 + VAR1 . VAR2
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2

CENTER_NODE: 30064771233
FRAGMENT_COUNT: 3
  ORIGINAL[0]: grow(array, 1 + array.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1 + VAR1 . VAR2 )
  ORIGINAL[1]: 1 + array.length
  TYPE[1]: CALL
  TOKENIZED[1]: 1 + VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771510
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i >= start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= VAR2
  ORIGINAL[1]: i--
  TYPE[1]: CALL
  TOKENIZED[1]: i--
  ORIGINAL[2]: for (int i = end - 1; Some(i >= start); i--)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( int VAR1 = VAR2 - 1 ; FUN1 ( VAR1 >= VAR3 ) ; i-- )
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771619
FRAGMENT_COUNT: 4
  ORIGINAL[0]: toIndex - fromIndex <= 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2 <= 1
  ORIGINAL[1]: toIndex - fromIndex
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2
  ORIGINAL[2]: toIndex
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fromIndex
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476920
FRAGMENT_COUNT: 3
  ORIGINAL[0]: targetSize >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 0
  ORIGINAL[1]: targetSize
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: targetSize
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476903
FRAGMENT_COUNT: 3
  ORIGINAL[0]: grow(array, 1 + array.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1 + VAR1 . VAR2 )
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476749
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_counter < merel_thumbpiece.getplication_antimelancholic()[7]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 . FUN1 ( ) [7]
  ORIGINAL[1]: ArrayUtil$FugitivismBoulder.stonesoup_sources
  TYPE[1]: CALL
  TOKENIZED[1]: ArrayUtil$FugitivismBoulder . VAR1
  ORIGINAL[2]: $obj0 = new FileOutputStream(String.format(\
  TYPE[2]: CALL
  TOKENIZED[2]: $obj0 = new FUN1 ( VAR1 . FUN2 ( \
  ORIGINAL[3]: new FileOutputStream(String.format(\
  TYPE[3]: CALL
  TOKENIZED[3]: new FUN1 ( VAR1 . FUN2 ( \
  ORIGINAL[4]: $obj0
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj0
  ORIGINAL[5]: $obj0
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: $obj0

CENTER_NODE: 68719477303
FRAGMENT_COUNT: 4
  ORIGINAL[0]: toIndex - fromIndex <= 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2 <= 1
  ORIGINAL[1]: introSort(a, fromIndex, toIndex, ArrayUtil.<T>naturalComparator())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 . <T>naturalComparator ( ) )
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fromIndex
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771615
FRAGMENT_COUNT: 6
  ORIGINAL[0]: toIndex - fromIndex <= 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2 <= 1
  ORIGINAL[1]: a.length / 64
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 / 64
  ORIGINAL[2]: a.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: length
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: a
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: a
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476902
FRAGMENT_COUNT: 3
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771625
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream ArrayUtil.friendlilyParakinesia = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: ArrayUtil.friendlilyParakinesia
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: friendlilyParakinesia
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771585
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (Comparator<T>) NATURAL_COMPARATOR
  TYPE[0]: CALL
  TOKENIZED[0]: ( Comparator<T> ) VAR1
  ORIGINAL[1]: ArrayUtil.NATURAL_COMPARATOR
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.plication_antimelancholic
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: plication_antimelancholic
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 68719477075
FRAGMENT_COUNT: 5
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: minSize
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: minSize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: minSize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640304
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771201
FRAGMENT_COUNT: 7
  ORIGINAL[0]: minTargetSize == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: extra < 3
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 3
  ORIGINAL[2]: extra = 3
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = 3
  ORIGINAL[3]: if (extra < 3)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: if ( VAR1 < 3 )
  ORIGINAL[4]: extra
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: extra
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: newSize
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771628
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean ArrayUtil.contretempsSpartanlike = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: ArrayUtil.contretempsSpartanlike
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 68719476778
FRAGMENT_COUNT: 5
  ORIGINAL[0]: chars == null || radix < Character.MIN_RADIX || radix > Character.MAX_RADIX
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == null || VAR2 < VAR3 . VAR4 || VAR2 > VAR3 . VAR5
  ORIGINAL[1]: throw new NumberFormatException();
  TYPE[1]: CALL
  TOKENIZED[1]: throw new FUN1 ( ) ;
  ORIGINAL[2]: int i = 0
  TYPE[2]: CALL
  TOKENIZED[2]: int VAR1 = 0
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771476
FRAGMENT_COUNT: 4
  ORIGINAL[0]: getShrinkSize(array.length, targetSize, RamUsageEstimator.NUM_BYTES_OBJECT_REF)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . VAR2 , VAR3 , VAR4 . VAR5 )
  ORIGINAL[1]: RamUsageEstimator.NUM_BYTES_OBJECT_REF
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: NUM_BYTES_OBJECT_REF
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: RamUsageEstimator
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771430
FRAGMENT_COUNT: 8
  ORIGINAL[0]: array.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: newSize != array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2 . VAR3
  ORIGINAL[2]: array.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: length
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: newSize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: array
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: array
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: array
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771307
FRAGMENT_COUNT: 3
  ORIGINAL[0]: grow(array, 1 + array.length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1 + VAR1 . VAR2 )
  ORIGINAL[1]: 1 + array.length
  TYPE[1]: CALL
  TOKENIZED[1]: 1 + VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771221
FRAGMENT_COUNT: 6
  ORIGINAL[0]: newSize < currentSize / 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 / 2
  ORIGINAL[1]: currentSize / 2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 / 2
  ORIGINAL[2]: if (newSize < currentSize / 2)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: if ( VAR1 < VAR2 / 2 )
  ORIGINAL[3]: newSize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: newSize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: currentSize
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477056
FRAGMENT_COUNT: 3
  ORIGINAL[0]: array.length < minSize
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < VAR3
  ORIGINAL[1]: array.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771634
FRAGMENT_COUNT: 2
  ORIGINAL[0]: new NaturalComparator()
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( )
  ORIGINAL[1]: ArrayUtil.NATURAL_COMPARATOR
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

