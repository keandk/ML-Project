# Tokenized code for 2160-v1.0.0-good
CENTER_NODE: 30064771119  NODE_INDEX: 0
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771119
  NODE_INDEX[0]: 0
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: CrossSiteScripting_good_Loop_080.serialVersionUID
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771118
  NODE_INDEX[1]: 4
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: long CrossSiteScripting_good_Loop_080.serialVersionUID = 1L
  TOKENIZED[1]: long VAR1 . VAR2 = 1L
  NODE_ID[2]: 55834574848
  NODE_INDEX[2]: 5
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: serialVersionUID
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771097  NODE_INDEX: 1
FRAGMENT_COUNT: 17
  NODE_ID[0]: 30064771097
  NODE_INDEX[0]: 1
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: i < len
  TOKENIZED[0]: VAR1 < VAR2
  NODE_ID[1]: 30064771098
  NODE_INDEX[1]: 6
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: i++
  TOKENIZED[1]: i++
  NODE_ID[2]: 30064771099
  NODE_INDEX[2]: 7
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: char c = s.charAt(i)
  TOKENIZED[2]: char VAR1 = VAR2 . FUN1 ( VAR3 )
  NODE_ID[3]: 30064771100
  NODE_INDEX[3]: 8
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: s.charAt(i)
  TOKENIZED[3]: VAR1 . FUN1 ( VAR2 )
  NODE_ID[4]: 30064771101
  NODE_INDEX[4]: 9
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: CALL
  ORIGINAL[4]: c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c >= '0' && c <= '9'
  TOKENIZED[4]: VAR1 >= 'a' && VAR1 <= 'z' || VAR1 >= 'A' && VAR1 <= 'Z' || VAR1 >= '0' && VAR1 <= '9'
  NODE_ID[5]: 30064771102
  NODE_INDEX[5]: 10
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: CALL
  ORIGINAL[5]: c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z'
  TOKENIZED[5]: VAR1 >= 'a' && VAR1 <= 'z' || VAR1 >= 'A' && VAR1 <= 'Z'
  NODE_ID[6]: 30064771103
  NODE_INDEX[6]: 11
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: CALL
  ORIGINAL[6]: c >= 'a' && c <= 'z'
  TOKENIZED[6]: VAR1 >= 'a' && VAR1 <= 'z'
  NODE_ID[7]: 30064771104
  NODE_INDEX[7]: 12
  EDGE_TYPE_INDEX[7]: 0
  TYPE[7]: CALL
  ORIGINAL[7]: c >= 'a'
  TOKENIZED[7]: VAR1 >= 'a'
  NODE_ID[8]: 47244640259
  NODE_INDEX[8]: 13
  EDGE_TYPE_INDEX[8]: 0
  TYPE[8]: CONTROL_STRUCTURE
  ORIGINAL[8]: for (int i = 0; Some(i < len); i++)
  TOKENIZED[8]: for ( int VAR1 = 0 ; FUN1 ( VAR1 < VAR2 ) ; i++ )
  NODE_ID[9]: 68719476760
  NODE_INDEX[9]: 14
  EDGE_TYPE_INDEX[9]: 0
  TYPE[9]: IDENTIFIER
  ORIGINAL[9]: i
  TOKENIZED[9]: VAR1
  NODE_ID[10]: 68719476761
  NODE_INDEX[10]: 15
  EDGE_TYPE_INDEX[10]: 0
  TYPE[10]: IDENTIFIER
  ORIGINAL[10]: len
  TOKENIZED[10]: VAR1
  NODE_ID[11]: 68719476762
  NODE_INDEX[11]: 16
  EDGE_TYPE_INDEX[11]: 0
  TYPE[11]: IDENTIFIER
  ORIGINAL[11]: i
  TOKENIZED[11]: VAR1
  NODE_ID[12]: 68719476763
  NODE_INDEX[12]: 17
  EDGE_TYPE_INDEX[12]: 0
  TYPE[12]: IDENTIFIER
  ORIGINAL[12]: c
  TOKENIZED[12]: VAR1
  NODE_ID[13]: 68719476764
  NODE_INDEX[13]: 18
  EDGE_TYPE_INDEX[13]: 0
  TYPE[13]: IDENTIFIER
  ORIGINAL[13]: s
  TOKENIZED[13]: VAR1
  NODE_ID[14]: 68719476765
  NODE_INDEX[14]: 19
  EDGE_TYPE_INDEX[14]: 0
  TYPE[14]: IDENTIFIER
  ORIGINAL[14]: i
  TOKENIZED[14]: VAR1
  NODE_ID[15]: 68719476766
  NODE_INDEX[15]: 20
  EDGE_TYPE_INDEX[15]: 0
  TYPE[15]: IDENTIFIER
  ORIGINAL[15]: c
  TOKENIZED[15]: VAR1
  NODE_ID[16]: 68719476776
  NODE_INDEX[16]: 21
  EDGE_TYPE_INDEX[16]: 0
  TYPE[16]: IDENTIFIER
  ORIGINAL[16]: buf
  TOKENIZED[16]: VAR1

CENTER_NODE: 30064771076  NODE_INDEX: 2
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771076
  NODE_INDEX[0]: 2
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: println(\
  TOKENIZED[0]: FUN1 ( \
  NODE_ID[1]: 68719476740
  NODE_INDEX[1]: 22
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: IDENTIFIER
  ORIGINAL[1]: out
  TOKENIZED[1]: VAR1
  NODE_ID[2]: 68719476741
  NODE_INDEX[2]: 23
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: i
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476736  NODE_INDEX: 3
FRAGMENT_COUNT: 2
  NODE_ID[0]: 68719476736
  NODE_INDEX[0]: 3
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771072
  NODE_INDEX[1]: 24
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: super();
  TOKENIZED[1]: super ( ) ;

