# Tokenized code fragments for 155460-v1.0.0-bad
# Total center nodes processed: 20
# Total code fragments found: 65

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476906
FRAGMENT_COUNT: 5
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: filename = filename.substring(idx)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 4
  ORIGINAL[0]: new PrintStream(new FileOutputStream(kerattoNonfrustration, false), true, \
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( new FUN2 ( VAR1 , false ) , true , \
  ORIGINAL[1]: System.err
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: err
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: System
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771075
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.lien_scarabee
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: lien_scarabee
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771119
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gen == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: gen
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476893
FRAGMENT_COUNT: 2
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: ext
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771291
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream IndexFileNames.subraDragonhead = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: IndexFileNames.subraDragonhead
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: subraDragonhead
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771279
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int idx = indexOfSegmentName(filename)
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: indexOfSegmentName(filename)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 2
  ORIGINAL[0]: idx == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1
  ORIGINAL[1]: if (idx == -1)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 == -1 )

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 8
  ORIGINAL[0]: consentiently_trichophytosis > 10
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 10
  ORIGINAL[1]: steamerloadGalloway(consentiently_trichophytosis++, ichneumon_apprehender)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( consentiently_trichophytosis++ , VAR1 )
  ORIGINAL[2]: consentiently_trichophytosis++
  TYPE[2]: CALL
  TOKENIZED[2]: consentiently_trichophytosis++
  ORIGINAL[3]: if (consentiently_trichophytosis > 10)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: if ( VAR1 > 10 )
  ORIGINAL[4]: consentiently_trichophytosis
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: consentiently_trichophytosis
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ichneumon_apprehender
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: Tracer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771284
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int idx = filename.indexOf('.')
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2 . FUN1 ( ' . ' )
  ORIGINAL[1]: filename.indexOf('.')
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ' . ' )
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: idx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771297
FRAGMENT_COUNT: 2
  ORIGINAL[0]: String IndexFileNames.SEGMENTS = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: IndexFileNames.SEGMENTS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771295
FRAGMENT_COUNT: 2
  ORIGINAL[0]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: IndexFileNames.hemiparaplegiaGumfield
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771311
FRAGMENT_COUNT: 6
  ORIGINAL[0]: String[] IndexFileNames.INDEX_EXTENSIONS = new String[] { COMPOUND_FILE_EXTENSION, COMPOUND_FILE_ENTRIES_EXTENSION, GEN_EXTENSION }
  TYPE[0]: CALL
  TOKENIZED[0]: String[] VAR1 . VAR2 = new String[] { VAR3 , VAR4 , VAR5 }
  ORIGINAL[1]: IndexFileNames.INDEX_EXTENSIONS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new String[] { COMPOUND_FILE_EXTENSION, COMPOUND_FILE_ENTRIES_EXTENSION, GEN_EXTENSION }
  TYPE[2]: CALL
  TOKENIZED[2]: new String[] { VAR1 , VAR2 , VAR3 }
  ORIGINAL[3]: IndexFileNames.COMPOUND_FILE_EXTENSION
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: IndexFileNames.GEN_EXTENSION
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.lien_scarabee
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: lien_scarabee
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771317
FRAGMENT_COUNT: 4
  ORIGINAL[0]: Pattern IndexFileNames.CODEC_FILE_PATTERN = Pattern.compile(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = VAR1 . FUN1 ( \
  ORIGINAL[1]: IndexFileNames.CODEC_FILE_PATTERN
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: Pattern.compile(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \
  ORIGINAL[3]: Pattern
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

