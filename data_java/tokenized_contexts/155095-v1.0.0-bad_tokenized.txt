# Tokenized code fragments for 155095-v1.0.0-bad
# Total center nodes processed: 32
# Total code fragments found: 153

CENTER_NODE: 30064771367
FRAGMENT_COUNT: 5
  ORIGINAL[0]: this._entries.get(index)
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( VAR2 )
  ORIGINAL[1]: this._entries
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: _entries
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: index
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 5
  ORIGINAL[0]: String.format(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: <operator>.arrayInitializer
  TYPE[2]: CALL
  TOKENIZED[2]: <operator> . VAR1
  ORIGINAL[3]: body
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: String
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771151
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parseBody(bodyFiles)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: writeErrorResponse(session, Response.Status.INTERNAL_ERROR, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 . VAR3 . VAR4 , \
  ORIGINAL[2]: \
  TYPE[2]: CALL
  TOKENIZED[2]: \
  ORIGINAL[3]: getMessage()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 5
  ORIGINAL[0]: setMimeType(NanoHTTPD.MIME_PLAINTEXT)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . VAR2 )
  ORIGINAL[1]: addHeader(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640313
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771206
FRAGMENT_COUNT: 4
  ORIGINAL[0]: setRequestMethod(session.getMethod())
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . FUN2 ( ) )
  ORIGINAL[1]: getMethod()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: session
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477110
FRAGMENT_COUNT: 9
  ORIGINAL[0]: unwatchfullyDilemi = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: unwatchfullyDilemi < dottyLiliaceae.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2 . VAR3
  ORIGINAL[2]: dottyLiliaceae.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: unwatchfullyDilemi++
  TYPE[3]: CALL
  TOKENIZED[3]: unwatchfullyDilemi++
  ORIGINAL[4]: unwatchfullyDilemi
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: unwatchfullyDilemi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dottyLiliaceae
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: unwatchfullyDilemi
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: unwatchfullyDilemi
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 7
  ORIGINAL[0]: k < limit
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: remove(LittleEndian.getInt(data, offset))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . FUN2 ( VAR2 , VAR3 ) )
  ORIGINAL[2]: getInt(data, offset)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: raw_block_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: raw_block_list
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: LittleEndian
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: raw_block_list
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 68719476878
FRAGMENT_COUNT: 5
  ORIGINAL[0]: handleGetRequest(session, false)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , false )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: session
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: method
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: session
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476809
FRAGMENT_COUNT: 5
  ORIGINAL[0]: String body = String.format(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = VAR1 . FUN1 ( \
  ORIGINAL[1]: NanoHTTPD.Response response = new NanoHTTPD.Response(NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR1 . VAR2 . VAR4 . VAR5 , VAR1 . VAR6 , VAR7 )
  ORIGINAL[2]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , VAR5 )
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640257
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String this.data = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 this . VAR2 = null
  ORIGINAL[1]: this.data
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 68719477027
FRAGMENT_COUNT: 5
  ORIGINAL[0]: this.isUsed(index)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: $obj4 = new IOException(\
  TYPE[1]: CALL
  TOKENIZED[1]: $obj4 = new FUN1 ( \
  ORIGINAL[2]: new IOException(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: $obj4
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj4
  ORIGINAL[4]: $obj4
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj4

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 3
  ORIGINAL[0]: currentBlock == 0 && firstPass
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 && VAR2
  ORIGINAL[1]: if (currentBlock == 0 && firstPass)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 == 0 && VAR2 )
  ORIGINAL[2]: else
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: else

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771510
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean BlockAllocationTableReader.undubitableProctoparalysis = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: BlockAllocationTableReader.undubitableProctoparalysis
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 30064771322
FRAGMENT_COUNT: 18
  ORIGINAL[0]: block_count > MAX_BLOCK_COUNT
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2
  ORIGINAL[1]: BlockAllocationTableReader.MAX_BLOCK_COUNT
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: throw new IOException(\
  TYPE[2]: CALL
  TOKENIZED[2]: throw new FUN1 ( \
  ORIGINAL[3]: $obj3 = new IOException(\
  TYPE[3]: CALL
  TOKENIZED[3]: $obj3 = new FUN1 ( \
  ORIGINAL[4]: new IOException(\
  TYPE[4]: CALL
  TOKENIZED[4]: new FUN1 ( \
  ORIGINAL[5]: new IOException(\
  TYPE[5]: CALL
  TOKENIZED[5]: new FUN1 ( \
  ORIGINAL[6]: \
  TYPE[6]: CALL
  TOKENIZED[6]: \
  ORIGINAL[7]: \
  TYPE[7]: CALL
  TOKENIZED[7]: \
  ORIGINAL[8]: \
  TYPE[8]: CALL
  TOKENIZED[8]: \
  ORIGINAL[9]: \
  TYPE[9]: CALL
  TOKENIZED[9]: \
  ORIGINAL[10]: BlockAllocationTableReader.MAX_BLOCK_COUNT
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 . VAR2
  ORIGINAL[11]: if (block_count > MAX_BLOCK_COUNT)
  TYPE[11]: CONTROL_STRUCTURE
  TOKENIZED[11]: if ( VAR1 > VAR2 )
  ORIGINAL[12]: MAX_BLOCK_COUNT
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: block_count
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: $obj3
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: $obj3
  ORIGINAL[15]: $obj3
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: $obj3
  ORIGINAL[16]: block_count
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: $obj3
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: $obj3

CENTER_NODE: 30064771518
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int BlockAllocationTableReader.MAX_BLOCK_COUNT = 65535
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 65535
  ORIGINAL[1]: BlockAllocationTableReader.MAX_BLOCK_COUNT
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: MAX_BLOCK_COUNT
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771097
FRAGMENT_COUNT: 6
  ORIGINAL[0]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.OK, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , VAR5 )
  ORIGINAL[1]: NanoHTTPD.Response.Status.OK
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[2]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: body
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771225
FRAGMENT_COUNT: 19
  ORIGINAL[0]: this.receivedBarrier.await()
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( )
  ORIGINAL[1]: this.receivedBarrier
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: throw new IOException(\
  TYPE[2]: CALL
  TOKENIZED[2]: throw new FUN1 ( \
  ORIGINAL[3]: $obj0 = new IOException(\
  TYPE[3]: CALL
  TOKENIZED[3]: $obj0 = new FUN1 ( \
  ORIGINAL[4]: new IOException(\
  TYPE[4]: CALL
  TOKENIZED[4]: new FUN1 ( \
  ORIGINAL[5]: new IOException(\
  TYPE[5]: CALL
  TOKENIZED[5]: new FUN1 ( \
  ORIGINAL[6]: throw new IOException(\
  TYPE[6]: CALL
  TOKENIZED[6]: throw new FUN1 ( \
  ORIGINAL[7]: $obj1 = new IOException(\
  TYPE[7]: CALL
  TOKENIZED[7]: $obj1 = new FUN1 ( \
  ORIGINAL[8]: new IOException(\
  TYPE[8]: CALL
  TOKENIZED[8]: new FUN1 ( \
  ORIGINAL[9]: new IOException(\
  TYPE[9]: CALL
  TOKENIZED[9]: new FUN1 ( \
  ORIGINAL[10]: this
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: this
  ORIGINAL[11]: $obj0
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: $obj0
  ORIGINAL[12]: $obj0
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: $obj0
  ORIGINAL[13]: e
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: $obj0
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: $obj0
  ORIGINAL[15]: $obj1
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: $obj1
  ORIGINAL[16]: $obj1
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: $obj1
  ORIGINAL[17]: e
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: $obj1
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: $obj1

CENTER_NODE: 30064771311
FRAGMENT_COUNT: 7
  ORIGINAL[0]: this._entries = new IntList()
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = new FUN1 ( )
  ORIGINAL[1]: this._entries
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: new IntList()
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( )
  ORIGINAL[3]: this._entries
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: _entries
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: this
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: this
  ORIGINAL[6]: this
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: this

CENTER_NODE: 30064771201
FRAGMENT_COUNT: 3
  ORIGINAL[0]: NanoHTTPD.Response response = new NanoHTTPD.Response(status, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR4 , VAR1 . VAR5 , VAR6 )
  ORIGINAL[1]: new NanoHTTPD.Response(status, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . FUN1 ( VAR2 , VAR1 . VAR3 , VAR4 )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771307
FRAGMENT_COUNT: 4
  ORIGINAL[0]: setEntries(blocks, raw_block_list)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: blocks
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: raw_block_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477056
FRAGMENT_COUNT: 6
  ORIGINAL[0]: kamchatkan_stromeyerite = untrig_vetoistic.getData()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( )
  ORIGINAL[1]: $obj6 = new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: $obj6 = new FUN1 ( \
  ORIGINAL[2]: new RuntimeException(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: $obj6
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj6
  ORIGINAL[4]: $obj6
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj6
  ORIGINAL[5]: glossanthrax_agrauleum
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

