# Tokenized code fragments for 155694-v1.0.0-bad
# Total center nodes processed: 20
# Total code fragments found: 81

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 6
  ORIGINAL[0]: Character.toCodePoint(txt.charAt(0), txt.charAt(1))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 . FUN2 ( 0 ) , VAR2 . FUN2 ( 1 ) )
  ORIGINAL[1]: txt.charAt(0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( 0 )
  ORIGINAL[2]: txt.charAt(1)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( 1 )
  ORIGINAL[3]: Character
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: txt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: txt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771334
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean AbsLexer.chichimecanUnderfalconer = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: AbsLexer.chichimecanUnderfalconer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !pepsinogenousPawnshop.getParentFile().exists() && !pepsinogenousPawnshop.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !pepsinogenousPawnshop . FUN1 ( ) . FUN2 ( ) && !pepsinogenousPawnshop . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: AbsLexer.intercommissionNot
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: $obj1 = new FileOutputStream(pepsinogenousPawnshop, false)
  TYPE[2]: CALL
  TOKENIZED[2]: $obj1 = new FUN1 ( VAR1 , false )
  ORIGINAL[3]: new FileOutputStream(pepsinogenousPawnshop, false)
  TYPE[3]: CALL
  TOKENIZED[3]: new FUN1 ( VAR1 , false )
  ORIGINAL[4]: $obj1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj1
  ORIGINAL[5]: $obj1
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: $obj1

CENTER_NODE: 30064771133
FRAGMENT_COUNT: 6
  ORIGINAL[0]: this.parser.recordError(range, e)
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: this.parser
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.range
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: range
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this
  ORIGINAL[5]: e
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771333
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream AbsLexer.intercommissionNot = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: AbsLexer.intercommissionNot
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: intercommissionNot
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640280
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771129
FRAGMENT_COUNT: 6
  ORIGINAL[0]: str.getChars(strt, finish, zzBuffer(), 0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 , VAR3 , FUN2 ( ) , 0 )
  ORIGINAL[1]: this.zzBuffer()
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( )
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: strt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: finish
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771119
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !parser.has(range)
  TYPE[0]: CALL
  TOKENIZED[0]: !parser . FUN1 ( VAR1 )
  ORIGINAL[1]: parser.uri.getChars(parser.start(range), parser.end(range), zzBuffer(), 0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . FUN1 ( VAR1 . FUN2 ( VAR3 ) , VAR1 . FUN3 ( VAR3 ) , FUN4 ( ) , 0 )
  ORIGINAL[2]: parser.uri
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: this.parser.start(range)
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1 . FUN1 ( VAR2 )
  ORIGINAL[4]: this.parser.end(range)
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1 . FUN1 ( VAR2 )
  ORIGINAL[5]: this.parser
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1
  ORIGINAL[6]: this.range
  TYPE[6]: CALL
  TOKENIZED[6]: this . VAR1
  ORIGINAL[7]: this.zzBuffer()
  TYPE[7]: CALL
  TOKENIZED[7]: this . FUN1 ( )
  ORIGINAL[8]: this
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: this

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_str.length() > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) > 0
  ORIGINAL[1]: stonesoup_str.charAt(0) == stonesoup_c
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( 0 ) == VAR2
  ORIGINAL[2]: search(stonesoup_str.substring(stonesoup_nextIndex, stonesoup_str.length()), stonesoup_c)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 . FUN2 ( VAR2 , VAR1 . FUN3 ( ) ) , VAR3 )
  ORIGINAL[3]: stonesoup_str.substring(stonesoup_nextIndex, stonesoup_str.length())
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( VAR2 , VAR1 . FUN2 ( ) )
  ORIGINAL[4]: stonesoup_c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476767
FRAGMENT_COUNT: 4
  ORIGINAL[0]: antihydropic_anacrotism > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: this.taeniadaStrongylon(antihydropic_anacrotism, supertax_burled)
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: antihydropic_anacrotism
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: supertax_burled
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 2
  ORIGINAL[0]: Character.getType(codePoint)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[1]: switch(Character.getType(codePoint))
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: switch ( VAR1 . FUN1 ( VAR2 ) )

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tracepointWeaknessStart(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: Tracer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: Tracer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640261
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int AbsLexer.compulsative_inoffensive = 10
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 10
  ORIGINAL[1]: AbsLexer.compulsative_inoffensive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: compulsative_inoffensive
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771313
FRAGMENT_COUNT: 6
  ORIGINAL[0]: codePoint < 0x0149
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0x0149
  ORIGINAL[1]: codePoint >= 0xE0020 && codePoint <= 0xE007F
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 0xE0020 && VAR1 <= 0xE007F
  ORIGINAL[2]: codePoint >= 0xE0020
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >= 0xE0020
  ORIGINAL[3]: codePoint <= 0xE007F
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 <= 0xE007F
  ORIGINAL[4]: if (codePoint >= 0xE0020 && codePoint <= 0xE007F)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: if ( VAR1 >= 0xE0020 && VAR1 <= 0xE007F )
  ORIGINAL[5]: codePoint
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476920
FRAGMENT_COUNT: 5
  ORIGINAL[0]: UnicodeBlock block = UnicodeBlock.of(codePoint)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = VAR1 . FUN1 ( VAR3 )
  ORIGINAL[1]: UnicodeBlock.of(codePoint)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: block
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: UnicodeBlock
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: block
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771311
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.difficultCodePoint(yytext().charAt(0), yytext())
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( FUN2 ( ) . FUN3 ( 0 ) , FUN2 ( ) )
  ORIGINAL[1]: this.yytext()
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( )
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

