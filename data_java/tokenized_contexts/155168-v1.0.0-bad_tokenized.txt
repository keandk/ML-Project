# Tokenized code fragments for 155168-v1.0.0-bad
# Total center nodes processed: 20
# Total code fragments found: 64

CENTER_NODE: 30064771212
FRAGMENT_COUNT: 3
  ORIGINAL[0]: filename.endsWith(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 5
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: filename = filename.substring(0, idx)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[2]: filename.substring(0, idx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771301
FRAGMENT_COUNT: 4
  ORIGINAL[0]: String[] IndexFileNames.INDEX_EXTENSIONS = new String[] { COMPOUND_FILE_EXTENSION, COMPOUND_FILE_ENTRIES_EXTENSION, GEN_EXTENSION }
  TYPE[0]: CALL
  TOKENIZED[0]: String[] VAR1 . VAR2 = new String[] { VAR3 , VAR4 , VAR5 }
  ORIGINAL[1]: IndexFileNames.INDEX_EXTENSIONS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new String[] { COMPOUND_FILE_EXTENSION, COMPOUND_FILE_ENTRIES_EXTENSION, GEN_EXTENSION }
  TYPE[2]: CALL
  TOKENIZED[2]: new String[] { VAR1 , VAR2 , VAR3 }
  ORIGINAL[3]: INDEX_EXTENSIONS
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771280
FRAGMENT_COUNT: 1
  ORIGINAL[0]: williePsychomantic(null)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( null )

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ((Long) organotherapyAdamantean) > 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 ) VAR2 ) > 0
  ORIGINAL[1]: if (((Long) organotherapyAdamantean) > 0)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( ( ( VAR1 ) VAR2 ) > 0 )

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 4
  ORIGINAL[0]: IndexFileNames.aplysiaAbolition.compareAndSet(false, true)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . FUN1 ( false , true )
  ORIGINAL[1]: File whitewoodHeptamerous = new File(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = new FUN1 ( \
  ORIGINAL[2]: new File(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: whitewoodHeptamerous
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771218
FRAGMENT_COUNT: 5
  ORIGINAL[0]: idx == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1
  ORIGINAL[1]: idx = filename.indexOf('.')
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( ' . ' )
  ORIGINAL[2]: filename.indexOf('.')
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( ' . ' )
  ORIGINAL[3]: idx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: idx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771284
FRAGMENT_COUNT: 5
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean IndexFileNames.aplysiaAbolition = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: IndexFileNames.aplysiaAbolition
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[3]: IndexFileNames.aplysiaAbolition
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: aplysiaAbolition
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771288
FRAGMENT_COUNT: 2
  ORIGINAL[0]: String IndexFileNames.SEGMENTS = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: IndexFileNames.SEGMENTS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrintStream IndexFileNames.megatherianInflater = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: IndexFileNames.megatherianInflater
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476862
FRAGMENT_COUNT: 5
  ORIGINAL[0]: int idx = filename.indexOf('.')
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2 . FUN1 ( ' . ' )
  ORIGINAL[1]: filename.indexOf('.')
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ' . ' )
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: idx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 30064771201
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ext.length() > 0 || segmentSuffix.length() > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) > 0 || VAR2 . FUN1 ( ) > 0
  ORIGINAL[1]: segmentName.length() + 2 + segmentSuffix.length() + ext.length()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) + 2 + VAR2 . FUN1 ( ) + VAR3 . FUN1 ( )
  ORIGINAL[2]: ext.length()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: ext
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640289
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771307
FRAGMENT_COUNT: 5
  ORIGINAL[0]: Pattern IndexFileNames.CODEC_FILE_PATTERN = Pattern.compile(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = VAR1 . FUN1 ( \
  ORIGINAL[1]: IndexFileNames.CODEC_FILE_PATTERN
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: Pattern.compile(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \
  ORIGINAL[3]: CODEC_FILE_PATTERN
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: Pattern
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771221
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int idx = indexOfSegmentName(filename)
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: indexOfSegmentName(filename)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

