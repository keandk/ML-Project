# Tokenized code fragments for 157018-v1.0.0-bad
# Total center nodes: 177

CENTER_NODE: 68719476853
FRAGMENT_COUNT: 6
  ORIGINAL[0]: customHeaders != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: customHeaders.entrySet()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: customHeaders.entrySet()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: $iterLocal0
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $iterLocal0
  ORIGINAL[4]: customHeaders
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: $iterLocal0
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: $iterLocal0

CENTER_NODE: 68719476830
FRAGMENT_COUNT: 6
  ORIGINAL[0]: new DefaultHttpResponse(HttpVersion.HTTP_1_1, status)
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( VAR1 . VAR2 , VAR3 )
  ORIGINAL[1]: HttpVersion.HTTP_1_1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: status
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: http10
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: resp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: status
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 55834574851
FRAGMENT_COUNT: 2
  ORIGINAL[0]: NettyHttpChannel.wakefullyWhirken
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: wakefullyWhirken
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771401
FRAGMENT_COUNT: 4
  ORIGINAL[0]: char[] stonesoup_random_charset = \
  TYPE[0]: CALL
  TOKENIZED[0]: char[] VAR1 = \
  ORIGINAL[1]: this.toCharArray()
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( )
  ORIGINAL[2]: stonesoup_random_charset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: random
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771320
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cookieString != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: CookieDecoder cookieDecoder = new CookieDecoder()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = new FUN1 ( )
  ORIGINAL[2]: new CookieDecoder()
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( )
  ORIGINAL[3]: cookieDecoder
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cookieDecoder
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476897
FRAGMENT_COUNT: 6
  ORIGINAL[0]: response.prefixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null
  ORIGINAL[1]: prefixContent()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: prefixContentOffset()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476947
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ChannelFuture future = channel.write(resp)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = VAR3 . FUN1 ( VAR4 )
  ORIGINAL[1]: addListener(ChannelFutureListener.CLOSE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . VAR2 )
  ORIGINAL[2]: ChannelFutureListener.CLOSE
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: if (close)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: if ( VAR1 )
  ORIGINAL[4]: CLOSE
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: close
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: future
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ChannelFutureListener
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477046
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.syzygialPaulinistically(silicicolous_dareful)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: silicicolous_dareful
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771120
FRAGMENT_COUNT: 7
  ORIGINAL[0]: new PrintStream(new FileOutputStream(continuativeAceacenaphthene, false), true, \
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( new FUN2 ( VAR1 , false ) , true , \
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac = null
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = null
  ORIGINAL[2]: NettyHttpChannel.climaxEndocardiac
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: NettyHttpChannel.climaxEndocardiac
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: climaxEndocardiac
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NettyHttpChannel
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: NettyHttpChannel
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640276
FRAGMENT_COUNT: 1
  ORIGINAL[0]: FOR
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719476942
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !cookies.isEmpty()
  TYPE[0]: CALL
  TOKENIZED[0]: !cookies . FUN1 ( )
  ORIGINAL[1]: headers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: HttpHeaders.Names
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: Names
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: HttpHeaders
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !close
  TYPE[0]: CALL
  TOKENIZED[0]: !close
  ORIGINAL[1]: headers().add(HttpHeaders.Names.CONNECTION, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ) . FUN2 ( VAR1 . VAR2 . VAR3 , \
  ORIGINAL[2]: headers()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: HttpHeaders.Names.CONNECTION
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2 . VAR3
  ORIGINAL[4]: RestUtils
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476920
FRAGMENT_COUNT: 4
  ORIGINAL[0]: readableBytes()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: buf
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: String
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476772
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: new FileOutputStream(continuativeAceacenaphthene, false)
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( VAR1 , false )
  ORIGINAL[2]: $obj3
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj3

CENTER_NODE: 30064771483
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrintStream NettyHttpChannel.climaxEndocardiac = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476856
FRAGMENT_COUNT: 4
  ORIGINAL[0]: <empty>
  TYPE[0]: CALL
  TOKENIZED[0]: <empty>
  ORIGINAL[1]: headerEntry
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: $iterLocal0
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $iterLocal0
  ORIGINAL[3]: headerEntry
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771099
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac = new PrintStream(new FileOutputStream(continuativeAceacenaphthene, false), true, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = new FUN1 ( new FUN2 ( VAR3 , false ) , true , \
  ORIGINAL[2]: NettyHttpChannel.climaxEndocardiac
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: new PrintStream(new FileOutputStream(continuativeAceacenaphthene, false), true, \
  TYPE[3]: CALL
  TOKENIZED[3]: new FUN1 ( new FUN2 ( VAR1 , false ) , true , \

CENTER_NODE: 68719476905
FRAGMENT_COUNT: 6
  ORIGINAL[0]: response.suffixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null
  ORIGINAL[1]: suffixContent()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: suffixContentOffset()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 55834574899
FRAGMENT_COUNT: 4
  ORIGINAL[0]: transport.resetCookies
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: this.request
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: request
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 2
  ORIGINAL[0]: if (contentThreadSafe())
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: if ( FUN1 ( ) )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 55834574885
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.transport.settings().getAsBoolean(\
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( ) . FUN2 ( \
  ORIGINAL[1]: this.request
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: request
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 30064771270
FRAGMENT_COUNT: 6
  ORIGINAL[0]: buf = builder.bytes().toChannelBuffer()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[1]: buf = builder.bytes().copyBytesArray().toChannelBuffer()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( ) . FUN2 ( ) . FUN3 ( )
  ORIGINAL[2]: buf = ChannelBuffers.wrappedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[3]: buf = ChannelBuffers.copiedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[4]: throw new HttpException(\
  TYPE[4]: CALL
  TOKENIZED[4]: throw new FUN1 ( \
  ORIGINAL[5]: response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477049
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepointWeaknessStart(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: Tracer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: Tracer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: Tracer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771324
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cookieString != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: Set cookies = cookieDecoder.decode(cookieString)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = VAR3 . FUN1 ( VAR4 )
  ORIGINAL[2]: decode(cookieString)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: cookies
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cookieDecoder
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cookieString
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476743
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.gymnodontTupinamba(seater_cisleithan)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: seater_cisleithan
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771434
FRAGMENT_COUNT: 5
  ORIGINAL[0]: random != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: tracepointVariableString(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: stonesoup_filename.toString()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: Tracer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771391
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.hexabromideRemontant(antifouling_patronless)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: antifouling_patronless
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640301
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771296
FRAGMENT_COUNT: 7
  ORIGINAL[0]: response.suffixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null
  ORIGINAL[1]: copiedBuffer(response.suffixContent(), response.suffixContentOffset(), response.suffixContentLength())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . FUN2 ( ) , VAR1 . FUN3 ( ) , VAR1 . FUN4 ( ) )
  ORIGINAL[2]: suffixContent()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: suffixContentOffset()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: suffixContentLength()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )
  ORIGINAL[5]: ChannelBuffers
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: response
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771240
FRAGMENT_COUNT: 3
  ORIGINAL[0]: headerEntry.getValue()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( )
  ORIGINAL[1]: headerEntry.getValue()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: headerEntry
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640260
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 55834574896
FRAGMENT_COUNT: 3
  ORIGINAL[0]: HttpHeaders.Names.CONTENT_LENGTH
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3
  ORIGINAL[1]: HttpHeaders.Names
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: CONTENT_LENGTH
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771276
FRAGMENT_COUNT: 3
  ORIGINAL[0]: response.prefixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null
  ORIGINAL[1]: prefixContent()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 1
  ORIGINAL[0]: FOR
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: VAR1

CENTER_NODE: 55834574881
FRAGMENT_COUNT: 3
  ORIGINAL[0]: HttpHeaders.Names
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: Names
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: HttpHeaders
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477058
FRAGMENT_COUNT: 9
  ORIGINAL[0]: random = SecureRandom.getInstance(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( \
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac.println(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[2]: tracepointVariableInt(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: (Integer) lankish_shelta.getegalitarian_sperling()
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) VAR2 . FUN1 ( )
  ORIGINAL[4]: Tracer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: Tracer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: Tracer
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: Tracer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: Tracer
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 55834574877
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !close
  TYPE[0]: CALL
  TOKENIZED[0]: !close
  ORIGINAL[1]: HttpHeaders.Names
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: Names
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: HttpHeaders
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771342
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ChannelFuture future = channel.write(resp)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = VAR3 . FUN1 ( VAR4 )
  ORIGINAL[1]: this.channel.write(resp)
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: this.channel
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: future
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: resp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640267
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 2
  ORIGINAL[0]: if (contentThreadSafe())
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: if ( FUN1 ( ) )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477085
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: e.getClass().getName() + \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[2]: e.getMessage()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: e
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: e
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 2
  ORIGINAL[0]: NettyHttpChannel.climaxEndocardiac != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != null
  ORIGINAL[1]: if (NettyHttpChannel.climaxEndocardiac != null)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 . VAR2 != null )

CENTER_NODE: 68719476871
FRAGMENT_COUNT: 5
  ORIGINAL[0]: contentThreadSafe()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: bytes()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: builder
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: builder
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640285
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476812
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.request.headers()
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( )
  ORIGINAL[1]: HttpHeaders.Names
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: Names
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: HttpHeaders
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 55834574884
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.transport.settings().getAsBoolean(\
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( ) . FUN2 ( \
  ORIGINAL[1]: this.transport
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: transport
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 55834574954
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: climaxEndocardiac
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NettyHttpChannel
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771459
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: $obj1 = new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: $obj1 = new FUN1 ( \
  ORIGINAL[2]: new RuntimeException(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: $obj1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj1

CENTER_NODE: 30064771102
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: $obj3 = new FileOutputStream(continuativeAceacenaphthene, false)
  TYPE[1]: CALL
  TOKENIZED[1]: $obj3 = new FUN1 ( VAR1 , false )
  ORIGINAL[2]: new FileOutputStream(continuativeAceacenaphthene, false)
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( VAR1 , false )
  ORIGINAL[3]: $obj3
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj3
  ORIGINAL[4]: $obj3
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj3

CENTER_NODE: 68719476888
FRAGMENT_COUNT: 6
  ORIGINAL[0]: buf = builder.bytes().toChannelBuffer()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[1]: buf = builder.bytes().copyBytesArray().toChannelBuffer()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( ) . FUN2 ( ) . FUN3 ( )
  ORIGINAL[2]: buf = ChannelBuffers.wrappedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[3]: buf = ChannelBuffers.copiedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[4]: new HttpException(\
  TYPE[4]: CALL
  TOKENIZED[4]: new FUN1 ( \
  ORIGINAL[5]: $obj0
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: $obj0

CENTER_NODE: 30064771478
FRAGMENT_COUNT: 5
  ORIGINAL[0]: writer.println(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: e.printStackTrace(NettyHttpChannel.climaxEndocardiac)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 . VAR3 )
  ORIGINAL[2]: NettyHttpChannel.climaxEndocardiac
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: writer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 55834574897
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.transport
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: transport
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771479
FRAGMENT_COUNT: 7
  ORIGINAL[0]: writer.println(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: e.printStackTrace(NettyHttpChannel.climaxEndocardiac)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( VAR2 . VAR3 )
  ORIGINAL[3]: NettyHttpChannel.climaxEndocardiac
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: climaxEndocardiac
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: e
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: NettyHttpChannel
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476851
FRAGMENT_COUNT: 5
  ORIGINAL[0]: getHeaders()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: response
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: customHeaders
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476885
FRAGMENT_COUNT: 9
  ORIGINAL[0]: response instanceof XContentRestResponse
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 instanceof VAR2
  ORIGINAL[1]: buf = builder.bytes().toChannelBuffer()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[2]: buf = builder.bytes().copyBytesArray().toChannelBuffer()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 . FUN1 ( ) . FUN2 ( ) . FUN3 ( )
  ORIGINAL[3]: buf = ChannelBuffers.wrappedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[4]: buf = ChannelBuffers.copiedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[5]: $obj0 = new HttpException(\
  TYPE[5]: CALL
  TOKENIZED[5]: $obj0 = new FUN1 ( \
  ORIGINAL[6]: new HttpException(\
  TYPE[6]: CALL
  TOKENIZED[6]: new FUN1 ( \
  ORIGINAL[7]: $obj0
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: $obj0
  ORIGINAL[8]: $obj0
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: $obj0

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 2
  ORIGINAL[0]: null != verify_veneration
  TYPE[0]: CALL
  TOKENIZED[0]: null != VAR1
  ORIGINAL[1]: if (null != verify_veneration)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( null != VAR1 )

CENTER_NODE: 55834574865
FRAGMENT_COUNT: 3
  ORIGINAL[0]: HttpVersion.HTTP_1_0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: HTTP_1_0
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: HttpVersion
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771074
FRAGMENT_COUNT: 6
  ORIGINAL[0]: this.outerClass = outerClass
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.outerClass
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: outerClass
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this
  ORIGINAL[5]: outerClass
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771482
FRAGMENT_COUNT: 2
  ORIGINAL[0]: tracepointWeaknessEnd()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: Tracer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 55834574878
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !close
  TYPE[0]: CALL
  TOKENIZED[0]: !close
  ORIGINAL[1]: HttpHeaders.Names.CONNECTION
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . VAR3
  ORIGINAL[2]: HttpHeaders.Names
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: CONNECTION
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771416
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (Integer) lankish_shelta.getegalitarian_sperling()
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) VAR2 . FUN1 ( )
  ORIGINAL[1]: lankish_shelta.getegalitarian_sperling()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: lankish_shelta
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 55834574850
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.egalitarian_sperling
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: egalitarian_sperling
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 68719477083
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: tracepointError(e.getClass().getName() + \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . FUN2 ( ) . FUN3 ( ) + \
  ORIGINAL[2]: e.getClass().getName() + \
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[3]: Tracer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: Tracer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: e
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: Tracer
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: Tracer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771146
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.request = request
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.request
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: request
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 1
  ORIGINAL[0]: FOR
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: VAR1

CENTER_NODE: 47244640278
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771093
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: throw new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: throw new FUN1 ( \
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771403
FRAGMENT_COUNT: 3
  ORIGINAL[0]: SecureRandom random = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = null
  ORIGINAL[1]: random
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: random
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477062
FRAGMENT_COUNT: 7
  ORIGINAL[0]: random != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: StringBuilder stonesoup_filename = new StringBuilder()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = new FUN1 ( )
  ORIGINAL[2]: new StringBuilder()
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( )
  ORIGINAL[3]: stonesoup_filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_filename
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_filename
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640304
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 68719477093
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( \
  ORIGINAL[2]: $obj1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj1

CENTER_NODE: 68719477047
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.packclothAntiphonon(declaration_ebionism)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: declaration_ebionism
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771141
FRAGMENT_COUNT: 6
  ORIGINAL[0]: NettyHttpChannel.climaxEndocardiac != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != null
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: NettyHttpChannel.climaxEndocardiac.close()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . FUN1 ( )
  ORIGINAL[3]: NettyHttpChannel.climaxEndocardiac
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: climaxEndocardiac
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NettyHttpChannel
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 55834574880
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.request
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: request
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771224
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.request.headers().get(\
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( ) . FUN2 ( \
  ORIGINAL[1]: this.request.headers()
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1 . FUN1 ( )
  ORIGINAL[2]: this.request
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 2
  ORIGINAL[0]: this.transport.settings().getAsBoolean(\
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( ) . FUN2 ( \
  ORIGINAL[1]: if (this.transport.settings().getAsBoolean(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( this . VAR1 . FUN1 ( ) . FUN2 ( \

CENTER_NODE: 30064771473
FRAGMENT_COUNT: 4
  ORIGINAL[0]: writer.println(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: e.getClass().getName() + \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[2]: e.getClass().getName()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[3]: e.getClass()
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( )

CENTER_NODE: 55834574854
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: climaxEndocardiac
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NettyHttpChannel
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771096
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( \
  ORIGINAL[2]: $obj2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj2
  ORIGINAL[3]: $obj2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj2

CENTER_NODE: 30064771424
FRAGMENT_COUNT: 5
  ORIGINAL[0]: random != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: int stonesoup_counter = 0
  TYPE[1]: CALL
  TOKENIZED[1]: int VAR1 = 0
  ORIGINAL[2]: for (int stonesoup_counter = 0; Some(stonesoup_counter < ((Integer) lankish_shelta.getegalitarian_sperling())); stonesoup_counter++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( int VAR1 = 0 ; FUN1 ( VAR1 < ( ( VAR2 ) VAR3 . FUN2 ( ) ) ) ; stonesoup_counter++ )
  ORIGINAL[3]: stonesoup_counter
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_counter
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771265
FRAGMENT_COUNT: 13
  ORIGINAL[0]: contentThreadSafe()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: buf = ChannelBuffers.copiedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[2]: copiedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 . FUN2 ( ) , VAR1 . FUN3 ( ) , VAR1 . FUN4 ( ) )
  ORIGINAL[3]: throw new HttpException(\
  TYPE[3]: CALL
  TOKENIZED[3]: throw new FUN1 ( \
  ORIGINAL[4]: $obj0 = new HttpException(\
  TYPE[4]: CALL
  TOKENIZED[4]: $obj0 = new FUN1 ( \
  ORIGINAL[5]: new HttpException(\
  TYPE[5]: CALL
  TOKENIZED[5]: new FUN1 ( \
  ORIGINAL[6]: new HttpException(\
  TYPE[6]: CALL
  TOKENIZED[6]: new FUN1 ( \
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: $obj0
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: $obj0
  ORIGINAL[9]: $obj0
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: $obj0
  ORIGINAL[10]: e
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: $obj0
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: $obj0
  ORIGINAL[12]: response
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771091
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: System.err.println(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[2]: System.err
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: $obj2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj2

CENTER_NODE: 47244640287
FRAGMENT_COUNT: 2
  ORIGINAL[0]: response.prefixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null
  ORIGINAL[1]: if (response.prefixContent() != null)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 . FUN1 ( ) != null )

CENTER_NODE: 30064771419
FRAGMENT_COUNT: 4
  ORIGINAL[0]: random != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: StringBuilder stonesoup_filename = new StringBuilder()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = new FUN1 ( )
  ORIGINAL[2]: new StringBuilder()
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( )
  ORIGINAL[3]: stonesoup_filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 55834574859
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: climaxEndocardiac
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NettyHttpChannel
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771395
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.polygamyStasimorphy(puckishly_undelectable)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: puckishly_undelectable
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 55834574883
FRAGMENT_COUNT: 4
  ORIGINAL[0]: isBrowser(request.headers().get(HttpHeaders.Names.USER_AGENT))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . FUN2 ( ) . FUN3 ( VAR2 . VAR3 . VAR4 ) )
  ORIGINAL[1]: this.transport
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: transport
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 30064771092
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: System.err.println(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[2]: System.err
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: err
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: System
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476890
FRAGMENT_COUNT: 6
  ORIGINAL[0]: response.prefixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null
  ORIGINAL[1]: suffixContent()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771481
FRAGMENT_COUNT: 4
  ORIGINAL[0]: writer != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: writer.close()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: writer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: Tracer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 55834574888
FRAGMENT_COUNT: 4
  ORIGINAL[0]: request.getMethod() == HttpMethod.OPTIONS
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) == VAR2 . VAR3
  ORIGINAL[1]: this.transport
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: transport
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 2
  ORIGINAL[0]: if (!continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs())
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: if ( !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( ) )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064771175
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getStatus(response.status())
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . FUN2 ( ) )
  ORIGINAL[1]: status()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476809
FRAGMENT_COUNT: 6
  ORIGINAL[0]: boolean http10 = request.getProtocolVersion().equals(HttpVersion.HTTP_1_0)
  TYPE[0]: CALL
  TOKENIZED[0]: boolean VAR1 = VAR2 . FUN1 ( ) . FUN2 ( VAR3 . VAR4 )
  ORIGINAL[1]: boolean close = HttpHeaders.Values.CLOSE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)) || (http10 && !HttpHeaders.Values.KEEP_ALIVE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)))
  TYPE[1]: CALL
  TOKENIZED[1]: boolean VAR1 = VAR2 . VAR3 . VAR4 . FUN1 ( VAR5 . FUN2 ( ) . FUN3 ( VAR2 . VAR6 . VAR7 ) ) || ( VAR8 && !HttpHeaders . VAR3 . VAR9 . FUN1 ( VAR5 . FUN2 ( ) . FUN3 ( VAR2 . VAR6 . VAR7 ) ) )
  ORIGINAL[2]: HttpHeaders.Values.CLOSE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)) || (http10 && !HttpHeaders.Values.KEEP_ALIVE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . VAR3 . FUN1 ( VAR4 . FUN2 ( ) . FUN3 ( VAR1 . VAR5 . VAR6 ) ) || ( VAR7 && !HttpHeaders . VAR2 . VAR8 . FUN1 ( VAR4 . FUN2 ( ) . FUN3 ( VAR1 . VAR5 . VAR6 ) ) )
  ORIGINAL[3]: close
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: HttpHeaders
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: close
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771158
FRAGMENT_COUNT: 5
  ORIGINAL[0]: HttpHeaders.Values.CLOSE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . FUN1 ( VAR4 . FUN2 ( ) . FUN3 ( VAR1 . VAR5 . VAR6 ) )
  ORIGINAL[1]: HttpHeaders.Values.CLOSE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . VAR3
  ORIGINAL[2]: this.request.headers().get(HttpHeaders.Names.CONNECTION)
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1 . FUN1 ( ) . FUN2 ( VAR2 . VAR3 . VAR4 )
  ORIGINAL[3]: this.request.headers()
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1 . FUN1 ( )
  ORIGINAL[4]: HttpHeaders.Names.CONNECTION
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2 . VAR3

CENTER_NODE: 55834574868
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.request
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: request
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 68719477064
FRAGMENT_COUNT: 6
  ORIGINAL[0]: random != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac.println(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[2]: tracepointMessage(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: Tracer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: Tracer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: Tracer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771200
FRAGMENT_COUNT: 5
  ORIGINAL[0]: this.transport.settings().getAsBoolean(\
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( ) . FUN2 ( \
  ORIGINAL[1]: headers().add(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ) . FUN2 ( \
  ORIGINAL[2]: headers()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: this.transport.settings().get(\
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1 . FUN1 ( ) . FUN2 ( \
  ORIGINAL[4]: this.transport.settings()
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1 . FUN1 ( )

CENTER_NODE: 30064771382
FRAGMENT_COUNT: 4
  ORIGINAL[0]: HttpResponseStatus.BAD_REQUEST
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: BAD_REQUEST
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: status
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: HttpResponseStatus
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771457
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: throw new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: throw new FUN1 ( \
  ORIGINAL[2]: writeStream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640261
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476917
FRAGMENT_COUNT: 6
  ORIGINAL[0]: headers().add(HttpHeaders.Names.CONTENT_TYPE, response.contentType())
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ) . FUN2 ( VAR1 . VAR2 . VAR3 , VAR4 . FUN3 ( ) )
  ORIGINAL[1]: headers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: resp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: resp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: resp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: resp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476868
FRAGMENT_COUNT: 5
  ORIGINAL[0]: response instanceof XContentRestResponse
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 instanceof VAR2
  ORIGINAL[1]: (XContentRestResponse) response
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771089
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( )
  ORIGINAL[1]: !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[1]: CALL
  TOKENIZED[1]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( )
  ORIGINAL[2]: continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[3]: continuativeAceacenaphthene.getParentFile()
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( )

CENTER_NODE: 30064771127
FRAGMENT_COUNT: 4
  ORIGINAL[0]: NettyHttpChannel.climaxEndocardiac != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != null
  ORIGINAL[1]: String verify_veneration = System.getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = VAR3 . FUN1 ( \
  ORIGINAL[2]: System.getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \
  ORIGINAL[3]: verify_veneration
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771447
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: e.getClass().getName() + \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[2]: e.getClass().getName() + \
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[3]: e.getClass().getName()
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[4]: e
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 55834574882
FRAGMENT_COUNT: 3
  ORIGINAL[0]: HttpHeaders.Names.USER_AGENT
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3
  ORIGINAL[1]: HttpHeaders.Names
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: USER_AGENT
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477063
FRAGMENT_COUNT: 6
  ORIGINAL[0]: NettyHttpChannel.climaxEndocardiac
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: random != null
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != null
  ORIGINAL[2]: new StringBuilder()
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( )
  ORIGINAL[3]: NettyHttpChannel.climaxEndocardiac
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: climaxEndocardiac
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NettyHttpChannel
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640295
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719477053
FRAGMENT_COUNT: 3
  ORIGINAL[0]: SecureRandom.getInstance(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: random
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SecureRandom
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 6
  ORIGINAL[0]: response instanceof XContentRestResponse
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 instanceof VAR2
  ORIGINAL[1]: XContentBuilder builder = ((XContentRestResponse) response).builder()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = ( ( VAR3 ) VAR4 ) . FUN1 ( )
  ORIGINAL[2]: (XContentRestResponse) response.builder()
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2 . FUN1 ( )
  ORIGINAL[3]: builder
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: builder
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: builder
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771193
FRAGMENT_COUNT: 9
  ORIGINAL[0]: this.request.headers().get(HttpHeaders.Names.USER_AGENT)
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( ) . FUN2 ( VAR2 . VAR3 . VAR4 )
  ORIGINAL[1]: this.request.headers()
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1 . FUN1 ( )
  ORIGINAL[2]: HttpHeaders.Names.USER_AGENT
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . VAR3
  ORIGINAL[3]: HttpHeaders.Names
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: HttpHeaders.Names
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: HttpHeaders.Names
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: HttpHeaders.Names
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . VAR2
  ORIGINAL[7]: HttpHeaders.Names
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 . VAR2
  ORIGINAL[8]: USER_AGENT
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 3
  ORIGINAL[0]: response instanceof XContentRestResponse
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 instanceof VAR2
  ORIGINAL[1]: if (response instanceof XContentRestResponse)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 instanceof VAR2 )
  ORIGINAL[2]: else
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: else

CENTER_NODE: 30064771435
FRAGMENT_COUNT: 4
  ORIGINAL[0]: random != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: tracepointMessage(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: Tracer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771150
FRAGMENT_COUNT: 5
  ORIGINAL[0]: this.request.getProtocolVersion().equals(HttpVersion.HTTP_1_0)
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( ) . FUN2 ( VAR2 . VAR3 )
  ORIGINAL[1]: this.request.getProtocolVersion()
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1 . FUN1 ( )
  ORIGINAL[2]: this.request
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: HttpVersion.HTTP_1_0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: HttpVersion
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477076
FRAGMENT_COUNT: 6
  ORIGINAL[0]: random != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: tracepointMessage(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: stonesoup_filename.length()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: stonesoup_filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_filename
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 55834574955
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: climaxEndocardiac
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NettyHttpChannel
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477091
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: $obj1 = new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: $obj1 = new FUN1 ( \
  ORIGINAL[2]: new RuntimeException(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: $obj1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj1
  ORIGINAL[4]: $obj1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj1
  ORIGINAL[5]: e
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771399
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.duarchyPotterer(supergoddess_chirotype)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: supergoddess_chirotype
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771392
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.erraticnessUngiving(spivery_swordlike)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: spivery_swordlike
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 2
  ORIGINAL[0]: writer != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: if (writer != null)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 != null )

CENTER_NODE: 55834574904
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.channel
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: channel
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771155
FRAGMENT_COUNT: 6
  ORIGINAL[0]: HttpHeaders.Values.CLOSE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)) || (http10 && !HttpHeaders.Values.KEEP_ALIVE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . FUN1 ( VAR4 . FUN2 ( ) . FUN3 ( VAR1 . VAR5 . VAR6 ) ) || ( VAR7 && !HttpHeaders . VAR2 . VAR8 . FUN1 ( VAR4 . FUN2 ( ) . FUN3 ( VAR1 . VAR5 . VAR6 ) ) )
  ORIGINAL[1]: HttpHeaders.Values.CLOSE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . VAR3 . FUN1 ( VAR4 . FUN2 ( ) . FUN3 ( VAR1 . VAR5 . VAR6 ) )
  ORIGINAL[2]: HttpHeaders.Values.CLOSE
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . VAR3
  ORIGINAL[3]: this.request.headers().get(HttpHeaders.Names.CONNECTION)
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1 . FUN1 ( ) . FUN2 ( VAR2 . VAR3 . VAR4 )
  ORIGINAL[4]: http10 && !HttpHeaders.Values.KEEP_ALIVE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION))
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 && !HttpHeaders . VAR2 . VAR3 . FUN1 ( VAR4 . FUN2 ( ) . FUN3 ( VAR5 . VAR6 . VAR7 ) )
  ORIGINAL[5]: http10
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771472
FRAGMENT_COUNT: 5
  ORIGINAL[0]: writer.println(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: e.getClass().getName() + \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[2]: e.getClass().getName() + \
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[3]: e.getClass().getName()
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[4]: e
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476930
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cookieString != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: decode(cookieString)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: cookieString
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cookieDecoder
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cookieString
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 2
  ORIGINAL[0]: response.suffixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null
  ORIGINAL[1]: if (response.suffixContent() != null)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 . FUN1 ( ) != null )

CENTER_NODE: 30064771335
FRAGMENT_COUNT: 4
  ORIGINAL[0]: addCookie(cookie)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: $iterLocal2
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: $iterLocal2
  ORIGINAL[2]: cookieEncoder
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cookie
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771225
FRAGMENT_COUNT: 11
  ORIGINAL[0]: this.request
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.request
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.request.headers()
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1 . FUN1 ( )
  ORIGINAL[3]: this.request
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: this.request
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: request
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: this
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: this
  ORIGINAL[7]: this
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: this
  ORIGINAL[8]: this
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: this
  ORIGINAL[9]: this
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: this
  ORIGINAL[10]: this
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: this

CENTER_NODE: 30064771132
FRAGMENT_COUNT: 3
  ORIGINAL[0]: merodach_disbursement = Integer.parseInt(verify_veneration)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( VAR3 )
  ORIGINAL[1]: throw new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: throw new FUN1 ( \
  ORIGINAL[2]: unilobular_pythagoreanism
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640297
FRAGMENT_COUNT: 2
  ORIGINAL[0]: random != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: if (random != null)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 != null )

CENTER_NODE: 30064771135
FRAGMENT_COUNT: 5
  ORIGINAL[0]: merodach_disbursement = Integer.parseInt(verify_veneration)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( VAR3 )
  ORIGINAL[1]: new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( \
  ORIGINAL[2]: $obj6
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj6
  ORIGINAL[3]: fabella_shawwal
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: $obj6
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj6

CENTER_NODE: 30064771488
FRAGMENT_COUNT: 2
  ORIGINAL[0]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: NettyHttpChannel.wakefullyWhirken
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476835
FRAGMENT_COUNT: 10
  ORIGINAL[0]: this.transport.settings().getAsBoolean(\
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( ) . FUN2 ( \
  ORIGINAL[1]: headers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: resp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: resp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: resp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: resp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: resp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: resp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: resp
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: resp
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771288
FRAGMENT_COUNT: 5
  ORIGINAL[0]: response.prefixContent() != null || response.suffixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null || VAR1 . FUN2 ( ) != null
  ORIGINAL[1]: ChannelBuffer suffixBuf = ChannelBuffers.EMPTY_BUFFER
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = VAR3 . VAR4
  ORIGINAL[2]: ChannelBuffers.EMPTY_BUFFER
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: suffixBuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771471
FRAGMENT_COUNT: 6
  ORIGINAL[0]: writer.println(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: tracepointError(e.getClass().getName() + \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . FUN2 ( ) . FUN3 ( ) + \
  ORIGINAL[2]: e.getClass().getName() + \
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[3]: e.getClass().getName() + \
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[4]: e.getMessage()
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . FUN1 ( )
  ORIGINAL[5]: Tracer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476758
FRAGMENT_COUNT: 3
  ORIGINAL[0]: NettyHttpChannel.wakefullyWhirken.compareAndSet(false, true)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . FUN1 ( false , true )
  ORIGINAL[1]: tracepointLocation(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: Tracer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771415
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepointVariableInt(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: (Integer) lankish_shelta.getegalitarian_sperling()
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2 . FUN1 ( )
  ORIGINAL[2]: lankish_shelta.getegalitarian_sperling()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: Tracer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476797
FRAGMENT_COUNT: 3
  ORIGINAL[0]: merodach_disbursement = Integer.parseInt(verify_veneration)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( VAR3 )
  ORIGINAL[1]: new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( \
  ORIGINAL[2]: $obj6
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj6

CENTER_NODE: 30064771236
FRAGMENT_COUNT: 3
  ORIGINAL[0]: <empty>
  TYPE[0]: CALL
  TOKENIZED[0]: <empty>
  ORIGINAL[1]: headerEntry
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: $iterLocal1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $iterLocal1

CENTER_NODE: 30064771103
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists() && !continuativeAceacenaphthene.getParentFile().mkdirs()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( ) && !continuativeAceacenaphthene . FUN1 ( ) . FUN3 ( )
  ORIGINAL[1]: $obj3 = new FileOutputStream(continuativeAceacenaphthene, false)
  TYPE[1]: CALL
  TOKENIZED[1]: $obj3 = new FUN1 ( VAR1 , false )
  ORIGINAL[2]: new FileOutputStream(continuativeAceacenaphthene, false)
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( VAR1 , false )
  ORIGINAL[3]: $obj3
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj3

CENTER_NODE: 68719477100
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stonesoup_filename.length() > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) > 0
  ORIGINAL[1]: writer = new PrintStream(writeStream)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = new FUN1 ( VAR2 )
  ORIGINAL[2]: new PrintStream(writeStream)
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( VAR1 )
  ORIGINAL[3]: writer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: writer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: writeStream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: writer
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476762
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !continuativeAceacenaphthene.getParentFile().exists()
  TYPE[0]: CALL
  TOKENIZED[0]: !continuativeAceacenaphthene . FUN1 ( ) . FUN2 ( )
  ORIGINAL[1]: continuativeAceacenaphthene.getParentFile()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: continuativeAceacenaphthene
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: continuativeAceacenaphthene
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: continuativeAceacenaphthene
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477045
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.cambarusProclaim(planuloid_rubbly)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: planuloid_rubbly
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 55834574886
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.transport.settings().getAsBoolean(\
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( ) . FUN2 ( \
  ORIGINAL[1]: HttpMethod.OPTIONS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: OPTIONS
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: HttpMethod
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476810
FRAGMENT_COUNT: 4
  ORIGINAL[0]: HttpHeaders.Values
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: Values
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: close
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: HttpHeaders
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 55834574961
FRAGMENT_COUNT: 2
  ORIGINAL[0]: NettyHttpChannel.wakefullyWhirken
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: wakefullyWhirken
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771283
FRAGMENT_COUNT: 5
  ORIGINAL[0]: response.prefixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null
  ORIGINAL[1]: prefixBuf = ChannelBuffers.copiedBuffer(response.prefixContent(), response.prefixContentOffset(), response.prefixContentLength())
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[2]: copiedBuffer(response.prefixContent(), response.prefixContentOffset(), response.prefixContentLength())
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 . FUN2 ( ) , VAR1 . FUN3 ( ) , VAR1 . FUN4 ( ) )
  ORIGINAL[3]: prefixBuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: suffixBuf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771429
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_counter < ((Integer) lankish_shelta.getegalitarian_sperling())
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < ( ( VAR2 ) VAR3 . FUN1 ( ) )
  ORIGINAL[1]: stonesoup_filename.append(stonesoup_random_charset[random.nextInt(stonesoup_random_charset.length)])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( stonesoup_random_charset[random . FUN2 ( VAR2 . VAR3 ) ] )
  ORIGINAL[2]: stonesoup_random_charset[random.nextInt(stonesoup_random_charset.length)]
  TYPE[2]: CALL
  TOKENIZED[2]: stonesoup_random_charset[random . FUN1 ( VAR1 . VAR2 ) ]
  ORIGINAL[3]: stonesoup_counter
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771272
FRAGMENT_COUNT: 7
  ORIGINAL[0]: buf = builder.bytes().toChannelBuffer()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[1]: buf = builder.bytes().copyBytesArray().toChannelBuffer()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( ) . FUN2 ( ) . FUN3 ( )
  ORIGINAL[2]: buf = ChannelBuffers.wrappedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[3]: buf = ChannelBuffers.copiedBuffer(response.content(), response.contentOffset(), response.contentLength())
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2 . FUN1 ( VAR3 . FUN2 ( ) , VAR3 . FUN3 ( ) , VAR3 . FUN4 ( ) )
  ORIGINAL[4]: $obj0 = new HttpException(\
  TYPE[4]: CALL
  TOKENIZED[4]: $obj0 = new FUN1 ( \
  ORIGINAL[5]: new HttpException(\
  TYPE[5]: CALL
  TOKENIZED[5]: new FUN1 ( \
  ORIGINAL[6]: $obj0
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: $obj0

CENTER_NODE: 30064771286
FRAGMENT_COUNT: 8
  ORIGINAL[0]: response.prefixContent() != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) != null
  ORIGINAL[1]: copiedBuffer(response.prefixContent(), response.prefixContentOffset(), response.prefixContentLength())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . FUN2 ( ) , VAR1 . FUN3 ( ) , VAR1 . FUN4 ( ) )
  ORIGINAL[2]: prefixContent()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: prefixContentOffset()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: prefixContentLength()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )
  ORIGINAL[5]: ChannelBuffers
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: response
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: response
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476919
FRAGMENT_COUNT: 5
  ORIGINAL[0]: HttpHeaders.Names.CONTENT_LENGTH
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3
  ORIGINAL[1]: valueOf(buf.readableBytes())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . FUN2 ( ) )
  ORIGINAL[2]: readableBytes()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: String
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476937
FRAGMENT_COUNT: 4
  ORIGINAL[0]: <empty>
  TYPE[0]: CALL
  TOKENIZED[0]: <empty>
  ORIGINAL[1]: cookie
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: $iterLocal2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $iterLocal2
  ORIGINAL[3]: cookie
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 55834574958
FRAGMENT_COUNT: 4
  ORIGINAL[0]: writer.println(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: climaxEndocardiac
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NettyHttpChannel
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476916
FRAGMENT_COUNT: 7
  ORIGINAL[0]: HttpHeaders.Names.CONTENT_TYPE
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3
  ORIGINAL[1]: contentType()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: response
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476918
FRAGMENT_COUNT: 4
  ORIGINAL[0]: headers()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: HttpHeaders.Names
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: Names
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: HttpHeaders
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 55834574890
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.request
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: request
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 55834574893
FRAGMENT_COUNT: 3
  ORIGINAL[0]: HttpHeaders.Names
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: Names
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: HttpHeaders
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476744
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.giblehTunica(grisgris_brachyurus)
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( VAR1 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: grisgris_brachyurus
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476864
FRAGMENT_COUNT: 4
  ORIGINAL[0]: headers()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: headerEntry.getKey()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: headerEntry
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: headerEntry
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !close
  TYPE[0]: CALL
  TOKENIZED[0]: !close
  ORIGINAL[1]: if (!close)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( !close )

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 2
  ORIGINAL[0]: cookieString != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: if (cookieString != null)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 != null )

CENTER_NODE: 68719476861
FRAGMENT_COUNT: 4
  ORIGINAL[0]: <empty>
  TYPE[0]: CALL
  TOKENIZED[0]: <empty>
  ORIGINAL[1]: headerValue
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: $iterLocal1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $iterLocal1
  ORIGINAL[3]: headerValue
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 55834574956
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: NettyHttpChannel.climaxEndocardiac
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: climaxEndocardiac
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NettyHttpChannel
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771142
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.transport = transport
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.transport
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this
  ORIGINAL[3]: transport
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771144
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.channel = channel
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.channel
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this
  ORIGINAL[3]: channel
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771134
FRAGMENT_COUNT: 4
  ORIGINAL[0]: merodach_disbursement = Integer.parseInt(verify_veneration)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( VAR3 )
  ORIGINAL[1]: $obj6 = new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: $obj6 = new FUN1 ( \
  ORIGINAL[2]: new RuntimeException(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: $obj6
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj6

CENTER_NODE: 30064771487
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean NettyHttpChannel.wakefullyWhirken = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: NettyHttpChannel.wakefullyWhirken
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 30064771450
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepointMessage(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: e.getClass().getName() + \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[2]: e.getMessage()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476848
FRAGMENT_COUNT: 10
  ORIGINAL[0]: opaque != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: headers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: resp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: resp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: resp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: resp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: resp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: resp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: resp
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: resp
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 5
  ORIGINAL[0]: this.egalitarian_sperling = egalitarian_sperling
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR1
  ORIGINAL[1]: this.egalitarian_sperling
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: egalitarian_sperling
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: egalitarian_sperling
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 2
  ORIGINAL[0]: if (http10)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: if ( VAR1 )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

