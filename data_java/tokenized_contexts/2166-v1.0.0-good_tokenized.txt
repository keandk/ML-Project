# Tokenized code fragments for 2166-v1.0.0-good
# Total center nodes processed: 8
# Total code fragments found: 24

CENTER_NODE: 68719476749
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PreparedStatement p = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = null
  ORIGINAL[1]: p
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 3
  ORIGINAL[0]: boolean bool = false
  TYPE[0]: CALL
  TOKENIZED[0]: boolean VAR1 = false
  ORIGINAL[1]: bool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771123
FRAGMENT_COUNT: 2
  ORIGINAL[0]: long SQLInjection_good_scope_089.serialVersionUID = 1L
  TYPE[0]: CALL
  TOKENIZED[0]: long VAR1 . VAR2 = 1L
  ORIGINAL[1]: SQLInjection_good_scope_089.serialVersionUID
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771073
FRAGMENT_COUNT: 4
  ORIGINAL[0]: String[] this.allowed_names = { \
  TYPE[0]: CALL
  TOKENIZED[0]: String[] this . VAR1 = { \
  ORIGINAL[1]: this.allowed_names
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: { \
  TYPE[2]: CALL
  TOKENIZED[2]: { \
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 68719476778
FRAGMENT_COUNT: 7
  ORIGINAL[0]: (name != null) && (allowed(name) == true)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 != null ) && ( FUN1 ( VAR1 ) == true )
  ORIGINAL[1]: conn = dataSrc.getConnection()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( )
  ORIGINAL[2]: PreparedStatement ps = function(conn, name)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 VAR2 = FUN1 ( VAR3 , VAR4 )
  ORIGINAL[3]: this.function(conn, name)
  TYPE[3]: CALL
  TOKENIZED[3]: this . FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this
  ORIGINAL[5]: ps
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ps
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

