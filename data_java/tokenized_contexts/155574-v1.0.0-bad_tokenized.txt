# Tokenized code fragments for 155574-v1.0.0-bad
# Total center nodes processed: 30
# Total code fragments found: 167

CENTER_NODE: 30064771535
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean ComponentPatternParser.frostlikeNosetiology = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: ComponentPatternParser.frostlikeNosetiology
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 30064771559
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int ComponentPatternParser.OTHER = -1
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = -1
  ORIGINAL[1]: ComponentPatternParser.OTHER
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1
  ORIGINAL[3]: OTHER
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771551
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int ComponentPatternParser.CLOSE_SQ = 5
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 5
  ORIGINAL[1]: ComponentPatternParser.CLOSE_SQ
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: CLOSE_SQ
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 11
  ORIGINAL[0]: this.rslt
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.split
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.field
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this.classify
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: field < split.length
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 < VAR2 . VAR3
  ORIGINAL[5]: this.field
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1
  ORIGINAL[6]: this.split
  TYPE[6]: CALL
  TOKENIZED[6]: this . VAR1
  ORIGINAL[7]: split
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: this
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: this
  ORIGINAL[9]: this
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: this
  ORIGINAL[10]: this
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: this

CENTER_NODE: 30064771553
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int ComponentPatternParser.OPEN_VAR = 6
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 6
  ORIGINAL[1]: ComponentPatternParser.OPEN_VAR
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: OPEN_VAR
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771541
FRAGMENT_COUNT: 4
  ORIGINAL[0]: String ComponentPatternParser.separators = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: ComponentPatternParser.separators
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: ComponentPatternParser.separators
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: separators
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771548
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int ComponentPatternParser.OPEN_SQ = 4
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 4
  ORIGINAL[1]: ComponentPatternParser.OPEN_SQ
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719477043
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.pattern
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: pattern
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771529
FRAGMENT_COUNT: 2
  ORIGINAL[0]: field++
  TYPE[0]: CALL
  TOKENIZED[0]: field++
  ORIGINAL[1]: this.field
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 7
  ORIGINAL[0]: this.rslt
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: classify[field - 1] != CLOSE_PAREN || sqCount > 0
  TYPE[1]: CALL
  TOKENIZED[1]: classify[field - 1] != VAR1 || VAR2 > 0
  ORIGINAL[2]: this.field
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this.classify
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: classify
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: this
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: this
  ORIGINAL[6]: this
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: this

CENTER_NODE: 68719476878
FRAGMENT_COUNT: 5
  ORIGINAL[0]: field >= split.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= VAR2 . VAR3
  ORIGINAL[1]: $obj4 = new IllegalArgumentException(\
  TYPE[1]: CALL
  TOKENIZED[1]: $obj4 = new FUN1 ( \
  ORIGINAL[2]: new IllegalArgumentException(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: $obj4
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj4
  ORIGINAL[4]: $obj4
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj4

CENTER_NODE: 30064771567
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String[] ComponentPatternParser.emptyStringArray = new String[0]
  TYPE[0]: CALL
  TOKENIZED[0]: String[] VAR1 . VAR2 = new String[0]
  ORIGINAL[1]: ComponentPatternParser.emptyStringArray
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new String[0]
  TYPE[2]: CALL
  TOKENIZED[2]: new String[0]

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640257
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771178
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.pattern
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: pattern
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 60
  ORIGINAL[0]: ascites_exciseman > 0 && ascites_exciseman <= Integer.MAX_VALUE
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0 && VAR1 <= VAR2 . VAR3
  ORIGINAL[1]: ascites_exciseman > 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 0
  ORIGINAL[2]: ascites_exciseman <= Integer.MAX_VALUE
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= VAR2 . VAR3
  ORIGINAL[3]: tracepointMessage(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: ComponentPatternParser.stonesoup_array = new char[ascites_exciseman]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2 = new char[ascites_exciseman]
  ORIGINAL[5]: ComponentPatternParser.stonesoup_array
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: new char[ascites_exciseman]
  TYPE[6]: CALL
  TOKENIZED[6]: new char[ascites_exciseman]
  ORIGINAL[7]: tracepointBufferInfo(\
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( \
  ORIGINAL[8]: stonesoup_array.length
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 . VAR2
  ORIGINAL[9]: ComponentPatternParser.stonesoup_array
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 . VAR2
  ORIGINAL[10]: tracepointMessage(\
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( \
  ORIGINAL[11]: tracepointMessage(\
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( \
  ORIGINAL[12]: Arrays.fill(stonesoup_array, 'x')
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 . FUN1 ( VAR2 , 'x' )
  ORIGINAL[13]: ComponentPatternParser.stonesoup_array
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 . VAR2
  ORIGINAL[14]: int i = 0
  TYPE[14]: CALL
  TOKENIZED[14]: int VAR1 = 0
  ORIGINAL[15]: i < stonesoup_array.length
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 < VAR2 . VAR3
  ORIGINAL[16]: stonesoup_array.length
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 . VAR2
  ORIGINAL[17]: ComponentPatternParser.stonesoup_array
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 . VAR2
  ORIGINAL[18]: tracepointMessage(\
  TYPE[18]: CALL
  TOKENIZED[18]: FUN1 ( \
  ORIGINAL[19]: ComponentPatternParser.nervationBlanch.println(\
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[20]: ComponentPatternParser.nervationBlanch
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 . VAR2
  ORIGINAL[21]: ComponentPatternParser.nervationBlanch.println(\
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[22]: ComponentPatternParser.nervationBlanch
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 . VAR2
  ORIGINAL[23]: tracepointError(e.getClass().getName() + \
  TYPE[23]: CALL
  TOKENIZED[23]: FUN1 ( VAR1 . FUN2 ( ) . FUN3 ( ) + \
  ORIGINAL[24]: e.getClass().getName() + \
  TYPE[24]: CALL
  TOKENIZED[24]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[25]: e.getClass().getName() + \
  TYPE[25]: CALL
  TOKENIZED[25]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[26]: e.getClass().getName()
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[27]: e.getClass()
  TYPE[27]: CALL
  TOKENIZED[27]: VAR1 . FUN1 ( )
  ORIGINAL[28]: e.getMessage()
  TYPE[28]: CALL
  TOKENIZED[28]: VAR1 . FUN1 ( )
  ORIGINAL[29]: e.printStackTrace(ComponentPatternParser.nervationBlanch)
  TYPE[29]: CALL
  TOKENIZED[29]: VAR1 . FUN1 ( VAR2 . VAR3 )
  ORIGINAL[30]: ComponentPatternParser.nervationBlanch
  TYPE[30]: CALL
  TOKENIZED[30]: VAR1 . VAR2
  ORIGINAL[31]: throw e;
  TYPE[31]: CALL
  TOKENIZED[31]: throw VAR1 ;
  ORIGINAL[32]: if (ascites_exciseman > 0 && ascites_exciseman <= Integer.MAX_VALUE)
  TYPE[32]: CONTROL_STRUCTURE
  TOKENIZED[32]: if ( VAR1 > 0 && VAR1 <= VAR2 . VAR3 )
  ORIGINAL[33]: stonesoup_array
  TYPE[33]: FIELD_IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: stonesoup_array
  TYPE[34]: FIELD_IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: length
  TYPE[35]: FIELD_IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: stonesoup_array
  TYPE[36]: FIELD_IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: stonesoup_array
  TYPE[37]: FIELD_IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: length
  TYPE[38]: FIELD_IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: nervationBlanch
  TYPE[39]: FIELD_IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: nervationBlanch
  TYPE[40]: FIELD_IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: nervationBlanch
  TYPE[41]: FIELD_IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: Tracer
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: ascites_exciseman
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: Tracer
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: Tracer
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: Tracer
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: Arrays
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: VAR1
  ORIGINAL[48]: i
  TYPE[48]: IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: i
  TYPE[49]: IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: Tracer
  TYPE[50]: IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: ComponentPatternParser
  TYPE[51]: IDENTIFIER
  TOKENIZED[51]: VAR1
  ORIGINAL[52]: ComponentPatternParser
  TYPE[52]: IDENTIFIER
  TOKENIZED[52]: VAR1
  ORIGINAL[53]: Tracer
  TYPE[53]: IDENTIFIER
  TOKENIZED[53]: VAR1
  ORIGINAL[54]: e
  TYPE[54]: IDENTIFIER
  TOKENIZED[54]: VAR1
  ORIGINAL[55]: e
  TYPE[55]: IDENTIFIER
  TOKENIZED[55]: VAR1
  ORIGINAL[56]: e
  TYPE[56]: IDENTIFIER
  TOKENIZED[56]: VAR1
  ORIGINAL[57]: ComponentPatternParser
  TYPE[57]: IDENTIFIER
  TOKENIZED[57]: VAR1
  ORIGINAL[58]: e
  TYPE[58]: IDENTIFIER
  TOKENIZED[58]: VAR1
  ORIGINAL[59]: Tracer
  TYPE[59]: IDENTIFIER
  TOKENIZED[59]: VAR1

CENTER_NODE: 30064771557
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int ComponentPatternParser.LOWER_CASE_RANGE = 8
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 8
  ORIGINAL[1]: ComponentPatternParser.LOWER_CASE_RANGE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: LOWER_CASE_RANGE
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771533
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrintStream ComponentPatternParser.nervationBlanch = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: ComponentPatternParser.nervationBlanch
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771554
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int ComponentPatternParser.CLOSE_BRACE = 7
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 7
  ORIGINAL[1]: ComponentPatternParser.CLOSE_BRACE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719477031
FRAGMENT_COUNT: 6
  ORIGINAL[0]: this.hostNames |= (1 << groupCount)
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 |= ( 1 << VAR2 )
  ORIGINAL[1]: this.hostNames
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.groupCount
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this.field
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: field
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: this
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: this

CENTER_NODE: 30064771544
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int ComponentPatternParser.OPEN_NON_CAPTURING_PAREN = 2
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 2
  ORIGINAL[1]: ComponentPatternParser.OPEN_NON_CAPTURING_PAREN
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771546
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int ComponentPatternParser.CLOSE_PAREN = 3
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 3
  ORIGINAL[1]: ComponentPatternParser.CLOSE_PAREN
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476902
FRAGMENT_COUNT: 8
  ORIGINAL[0]: this.field
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.rslt
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.groupCount
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: split[field].equals(\
  TYPE[3]: CALL
  TOKENIZED[3]: split[field] . FUN1 ( \
  ORIGINAL[4]: this.split
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: this.field
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1
  ORIGINAL[6]: field
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: this
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: this

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 2
  ORIGINAL[0]: if ((mustLowerCase & g) != 0)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: if ( ( VAR1 & VAR2 ) != 0 )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 68719476778
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ComponentPatternParser.keyword.matcher(p)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . FUN1 ( VAR3 )
  ORIGINAL[1]: ComponentPatternParser.keyword
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: p
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771476
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dongolese_odontornithes = Integer.parseInt(bathoflore_vocabulation)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( VAR3 )
  ORIGINAL[1]: $obj17 = new RuntimeException(\
  TYPE[1]: CALL
  TOKENIZED[1]: $obj17 = new FUN1 ( \
  ORIGINAL[2]: new RuntimeException(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: $obj17
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj17
  ORIGINAL[4]: $obj17
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj17

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i++
  TYPE[0]: CALL
  TOKENIZED[0]: i++
  ORIGINAL[1]: m.start(i) != -1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 ) != -1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771542
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int ComponentPatternParser.OPEN_PAREN = 1
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 1
  ORIGINAL[1]: ComponentPatternParser.OPEN_PAREN
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

