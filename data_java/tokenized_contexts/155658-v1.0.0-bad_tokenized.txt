# Tokenized code fragments for 155658-v1.0.0-bad
# Total center nodes processed: 21
# Total code fragments found: 101

CENTER_NODE: 30064771347
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream AbsLexer.peltiferousOvermelodied = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: AbsLexer.peltiferousOvermelodied
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: peltiferousOvermelodied
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771345
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int AbsLexer.suffusion_orthoplasy = 12
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 12
  ORIGINAL[1]: AbsLexer.suffusion_orthoplasy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: suffusion_orthoplasy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 5
  ORIGINAL[0]: akin_premonitory == null || !akin_premonitory.equals(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == null || !akin_premonitory . FUN1 ( \
  ORIGINAL[1]: null != amula_swishing
  TYPE[1]: CALL
  TOKENIZED[1]: null != VAR1
  ORIGINAL[2]: amula_swishing
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: amula_swishing
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: amula_swishing
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771206
FRAGMENT_COUNT: 6
  ORIGINAL[0]: Character.toCodePoint(txt.charAt(0), txt.charAt(1))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 . FUN2 ( 0 ) , VAR2 . FUN2 ( 1 ) )
  ORIGINAL[1]: txt.charAt(0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( 0 )
  ORIGINAL[2]: txt.charAt(1)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( 1 )
  ORIGINAL[3]: Character
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: txt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: txt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476781
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.parser.recordError(range, e)
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: this.parser
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.range
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771291
FRAGMENT_COUNT: 4
  ORIGINAL[0]: codePoint >= 0xE0020 && codePoint <= 0xE007F
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 0xE0020 && VAR1 <= 0xE007F
  ORIGINAL[1]: codePoint >= 0xE0020
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 0xE0020
  ORIGINAL[2]: codePoint <= 0xE007F
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 0xE007F
  ORIGINAL[3]: codePoint
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i++
  TYPE[0]: CALL
  TOKENIZED[0]: i++
  ORIGINAL[1]: lttng_frequency == 199
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 199
  ORIGINAL[2]: lttng_frequency
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: lttng_frequency
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: lttng_frequency
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: lttng_frequency
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640257
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 27
  ORIGINAL[0]: !parser.has(range)
  TYPE[0]: CALL
  TOKENIZED[0]: !parser . FUN1 ( VAR1 )
  ORIGINAL[1]: this.parser.has(range)
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: parser.uri.getChars(parser.start(range), parser.end(range), zzBuffer(), 0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . FUN1 ( VAR1 . FUN2 ( VAR3 ) , VAR1 . FUN3 ( VAR3 ) , FUN4 ( ) , 0 )
  ORIGINAL[3]: parser.uri
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: this.parser
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: this.parser.start(range)
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1 . FUN1 ( VAR2 )
  ORIGINAL[6]: this.parser
  TYPE[6]: CALL
  TOKENIZED[6]: this . VAR1
  ORIGINAL[7]: this.range
  TYPE[7]: CALL
  TOKENIZED[7]: this . VAR1
  ORIGINAL[8]: this.parser.end(range)
  TYPE[8]: CALL
  TOKENIZED[8]: this . VAR1 . FUN1 ( VAR2 )
  ORIGINAL[9]: this.parser
  TYPE[9]: CALL
  TOKENIZED[9]: this . VAR1
  ORIGINAL[10]: this.range
  TYPE[10]: CALL
  TOKENIZED[10]: this . VAR1
  ORIGINAL[11]: this.zzBuffer()
  TYPE[11]: CALL
  TOKENIZED[11]: this . FUN1 ( )
  ORIGINAL[12]: this.yylex()
  TYPE[12]: CALL
  TOKENIZED[12]: this . FUN1 ( )
  ORIGINAL[13]: if (!parser.has(range))
  TYPE[13]: CONTROL_STRUCTURE
  TOKENIZED[13]: if ( !parser . FUN1 ( VAR1 ) )
  ORIGINAL[14]: parser
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: uri
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: parser
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: range
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: parser
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: range
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: this
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: this
  ORIGINAL[21]: this
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: this
  ORIGINAL[22]: this
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: this
  ORIGINAL[23]: this
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: this
  ORIGINAL[24]: this
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: this
  ORIGINAL[25]: this
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: this
  ORIGINAL[26]: this
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: this

CENTER_NODE: 30064771284
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.difficultCodePoint(yytext().charAt(0), yytext())
  TYPE[0]: CALL
  TOKENIZED[0]: this . FUN1 ( FUN2 ( ) . FUN3 ( 0 ) , FUN2 ( ) )
  ORIGINAL[1]: this.yytext().charAt(0)
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( ) . FUN2 ( 0 )
  ORIGINAL[2]: this.yytext()
  TYPE[2]: CALL
  TOKENIZED[2]: this . FUN1 ( )
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 30064771349
FRAGMENT_COUNT: 5
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean AbsLexer.aciculatedReimburse = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: AbsLexer.aciculatedReimburse
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[3]: AbsLexer.aciculatedReimburse
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: aciculatedReimburse
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771343
FRAGMENT_COUNT: 1
  ORIGINAL[0]: feereEthnology(null)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( null )

CENTER_NODE: 68719476920
FRAGMENT_COUNT: 8
  ORIGINAL[0]: block == UnicodeBlock.CJK_COMPATIBILITY_FORMS || block == UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT || block == UnicodeBlock.CJK_RADICALS_SUPPLEMENT || block == UnicodeBlock.KANGXI_RADICALS || block == UnicodeBlock.HANGUL_COMPATIBILITY_JAMO
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 . VAR3 || VAR1 == VAR2 . VAR4 || VAR1 == VAR2 . VAR5 || VAR1 == VAR2 . VAR6 || VAR1 == VAR2 . VAR7
  ORIGINAL[1]: String cp = new String(new int[] { codePoint }, 0, 1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = new FUN1 ( new int[] { VAR3 } , 0 , 1 )
  ORIGINAL[2]: new String(new int[] { codePoint }, 0, 1)
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( new int[] { VAR1 } , 0 , 1 )
  ORIGINAL[3]: new int[] { codePoint }
  TYPE[3]: CALL
  TOKENIZED[3]: new int[] { VAR1 }
  ORIGINAL[4]: cp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: codePoint
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771095
FRAGMENT_COUNT: 6
  ORIGINAL[0]: str.getChars(strt, finish, zzBuffer(), 0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 , VAR3 , FUN2 ( ) , 0 )
  ORIGINAL[1]: this.zzBuffer()
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( )
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: strt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: finish
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 47244640304
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 5
  ORIGINAL[0]: codePoint > 0xFFFD && codePoint < 0x10000
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0xFFFD && VAR1 < 0x10000
  ORIGINAL[1]: error(NON_XML_CHARACTER)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this
  ORIGINAL[3]: NON_XML_CHARACTER
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NON_XML_CHARACTER
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

