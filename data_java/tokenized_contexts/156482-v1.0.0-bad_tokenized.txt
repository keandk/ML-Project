# Tokenized code fragments for 156482-v1.0.0-bad
# Total center nodes processed: 16
# Total code fragments found: 77

CENTER_NODE: 68719476749
FRAGMENT_COUNT: 7
  ORIGINAL[0]: gen == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: Long.toString(gen, Character.MAX_RADIX)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 , VAR3 . VAR4 )
  ORIGINAL[2]: Character.MAX_RADIX
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: gen
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: Long
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: gen
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: Character
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771338
FRAGMENT_COUNT: 2
  ORIGINAL[0]: String IndexFileNames.SEGMENTS = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: IndexFileNames.SEGMENTS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771313
FRAGMENT_COUNT: 10
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: filename = filename.substring(idx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR1 . FUN1 ( VAR2 )
  ORIGINAL[3]: filename.substring(idx)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[4]: if (idx != -1)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: if ( VAR1 != -1 )
  ORIGINAL[5]: idx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: filename
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: filename
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: idx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: filename
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771329
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int IndexFileNames.galliambus_subtribual = 10
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 10
  ORIGINAL[1]: IndexFileNames.galliambus_subtribual
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771334
FRAGMENT_COUNT: 5
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean IndexFileNames.exequaturSlipcoat = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: IndexFileNames.exequaturSlipcoat
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[3]: IndexFileNames.exequaturSlipcoat
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: exequaturSlipcoat
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771318
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int idx = indexOfSegmentName(filename)
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: indexOfSegmentName(filename)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771357
FRAGMENT_COUNT: 5
  ORIGINAL[0]: Pattern IndexFileNames.CODEC_FILE_PATTERN = Pattern.compile(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = VAR1 . FUN1 ( \
  ORIGINAL[1]: IndexFileNames.CODEC_FILE_PATTERN
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: Pattern.compile(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \
  ORIGINAL[3]: CODEC_FILE_PATTERN
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: Pattern
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771303
FRAGMENT_COUNT: 3
  ORIGINAL[0]: filename.endsWith(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771324
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int idx = filename.indexOf('.')
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2 . FUN1 ( ' . ' )
  ORIGINAL[1]: filename.indexOf('.')
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ' . ' )
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrintStream IndexFileNames.overjudgeUnsinged = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: IndexFileNames.overjudgeUnsinged
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 14
  ORIGINAL[0]: null != homalosternal_defectoscope
  TYPE[0]: CALL
  TOKENIZED[0]: null != VAR1
  ORIGINAL[1]: stonesoup_psql_host == null || stonesoup_psql_user == null || stonesoup_psql_pass == null || stonesoup_psql_port == null || stonesoup_psql_dbname == null
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == null || VAR2 == null || VAR3 == null || VAR4 == null || VAR5 == null
  ORIGINAL[2]: IndexFileNames.overjudgeUnsinged.println(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[3]: conn.close()
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( )
  ORIGINAL[4]: nse.printStackTrace(IndexFileNames.overjudgeUnsinged)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . FUN1 ( VAR2 . VAR3 )
  ORIGINAL[5]: se.printStackTrace(IndexFileNames.overjudgeUnsinged)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . FUN1 ( VAR2 . VAR3 )
  ORIGINAL[6]: cnfe.printStackTrace(IndexFileNames.overjudgeUnsinged)
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . FUN1 ( VAR2 . VAR3 )
  ORIGINAL[7]: tracepointWeaknessEnd()
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( )
  ORIGINAL[8]: Tracer
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: Tracer
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: Tracer
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: Tracer
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: Tracer
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: Tracer
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064771307
FRAGMENT_COUNT: 9
  ORIGINAL[0]: idx == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: idx = filename.indexOf('.')
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 . FUN1 ( ' . ' )
  ORIGINAL[3]: filename.indexOf('.')
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( ' . ' )
  ORIGINAL[4]: if (idx == -1)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: if ( VAR1 == -1 )
  ORIGINAL[5]: idx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: idx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: filename
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: idx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771355
FRAGMENT_COUNT: 4
  ORIGINAL[0]: IndexFileNames.GEN_EXTENSION
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: new String[] { COMPOUND_FILE_EXTENSION, COMPOUND_FILE_ENTRIES_EXTENSION, GEN_EXTENSION }
  TYPE[1]: CALL
  TOKENIZED[1]: new String[] { VAR1 , VAR2 , VAR3 }
  ORIGINAL[2]: IndexFileNames.GEN_EXTENSION
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: GEN_EXTENSION
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

