# Tokenized code fragments for 155573-v1.0.0-bad
# Total center nodes processed: 21
# Total code fragments found: 77

CENTER_NODE: 30064771213
FRAGMENT_COUNT: 4
  ORIGINAL[0]: CecidologyFloriated dolph_photodramatist = new CecidologyFloriated()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = new FUN1 ( )
  ORIGINAL[1]: new CecidologyFloriated()
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( )
  ORIGINAL[2]: dolph_photodramatist
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dolph_photodramatist
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ext.length() > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ) > 0
  ORIGINAL[1]: sb.append('.').append(ext)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ' . ' ) . FUN1 ( VAR2 )
  ORIGINAL[2]: sb.append('.')
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( ' . ' )
  ORIGINAL[3]: ext
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ext
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771301
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String[] IndexFileNames.INDEX_EXTENSIONS = new String[] { COMPOUND_FILE_EXTENSION, COMPOUND_FILE_ENTRIES_EXTENSION, GEN_EXTENSION }
  TYPE[0]: CALL
  TOKENIZED[0]: String[] VAR1 . VAR2 = new String[] { VAR3 , VAR4 , VAR5 }
  ORIGINAL[1]: IndexFileNames.INDEX_EXTENSIONS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new String[] { COMPOUND_FILE_EXTENSION, COMPOUND_FILE_ENTRIES_EXTENSION, GEN_EXTENSION }
  TYPE[2]: CALL
  TOKENIZED[2]: new String[] { VAR1 , VAR2 , VAR3 }

CENTER_NODE: 30064771197
FRAGMENT_COUNT: 10
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: filename = filename.substring(idx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR1 . FUN1 ( VAR2 )
  ORIGINAL[3]: filename.substring(idx)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[4]: if (idx != -1)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: if ( VAR1 != -1 )
  ORIGINAL[5]: idx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: filename
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: filename
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: idx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: filename
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 4
  ORIGINAL[0]: IndexFileNames.boilerworksBolag.compareAndSet(false, true)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . FUN1 ( false , true )
  ORIGINAL[1]: File obsignationHeliopora = new File(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = new FUN1 ( \
  ORIGINAL[2]: new File(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: obsignationHeliopora
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771187
FRAGMENT_COUNT: 3
  ORIGINAL[0]: filename.endsWith(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771284
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean IndexFileNames.boilerworksBolag = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: IndexFileNames.boilerworksBolag
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 30064771211
FRAGMENT_COUNT: 5
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: filename = filename.substring(0, idx)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[2]: filename.substring(0, idx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771290
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String IndexFileNames.SEGMENTS = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: IndexFileNames.SEGMENTS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: SEGMENTS
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476902
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_counter > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: BigInteger.valueOf(stonesoup_counter)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: stonesoup_factorial
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BigInteger
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_counter
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tracepointLocation(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: this.calculateFactorial()
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( )
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 2
  ORIGINAL[0]: idx == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1
  ORIGINAL[1]: if (idx == -1)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 == -1 )

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 30064771201
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int idx = indexOfSegmentName(filename)
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: indexOfSegmentName(filename)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: idx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476889
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.stonesoup_output = output
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR2
  ORIGINAL[1]: this.stonesoup_output
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: output
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_i < 20
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 20
  ORIGINAL[1]: stonesoup_i++
  TYPE[1]: CALL
  TOKENIZED[1]: stonesoup_i++
  ORIGINAL[2]: pool.execute(new Factorial(fornicated_terribly, IndexFileNames.naiadaceaeGrievedly))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( new FUN2 ( VAR2 , VAR3 . VAR4 ) )
  ORIGINAL[3]: stonesoup_i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771307
FRAGMENT_COUNT: 3
  ORIGINAL[0]: Pattern IndexFileNames.CODEC_FILE_PATTERN = Pattern.compile(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = VAR1 . FUN1 ( \
  ORIGINAL[1]: IndexFileNames.CODEC_FILE_PATTERN
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: Pattern.compile(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \

CENTER_NODE: 30064771283
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream IndexFileNames.naiadaceaeGrievedly = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: IndexFileNames.naiadaceaeGrievedly
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: naiadaceaeGrievedly
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

