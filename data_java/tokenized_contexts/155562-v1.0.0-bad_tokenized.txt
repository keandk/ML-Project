# Tokenized code for 155562-v1.0.0-bad
CENTER_NODE: 68719476871  NODE_INDEX: 0
FRAGMENT_COUNT: 4
  NODE_ID[0]: 68719476871
  NODE_INDEX[0]: 0
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: result
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771188
  NODE_INDEX[1]: 52
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int[] result = new int[9]
  TOKENIZED[1]: int[] VAR1 = new int[9]
  NODE_ID[2]: 30064771189
  NODE_INDEX[2]: 53
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: new int[9]
  TOKENIZED[2]: new int[9]
  NODE_ID[3]: 68719476875
  NODE_INDEX[3]: 54
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: result
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476818  NODE_INDEX: 1
FRAGMENT_COUNT: 6
  NODE_ID[0]: 68719476818
  NODE_INDEX[0]: 1
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: i
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771132
  NODE_INDEX[1]: 55
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: i < l
  TOKENIZED[1]: VAR1 < VAR2
  NODE_ID[2]: 30064771138
  NODE_INDEX[2]: 56
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: i++
  TOKENIZED[2]: i++
  NODE_ID[3]: 68719476811
  NODE_INDEX[3]: 57
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: i
  TOKENIZED[3]: VAR1
  NODE_ID[4]: 68719476815
  NODE_INDEX[4]: 58
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: i
  TOKENIZED[4]: VAR1
  NODE_ID[5]: 68719476817
  NODE_INDEX[5]: 59
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: packed
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476758  NODE_INDEX: 2
FRAGMENT_COUNT: 3
  NODE_ID[0]: 68719476758
  NODE_INDEX[0]: 2
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771072
  NODE_INDEX[1]: 60
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: this(new java.io.InputStreamReader(in));
  TOKENIZED[1]: this ( new VAR1 . VAR2 . FUN1 ( VAR3 ) ) ;
  NODE_ID[2]: 68719476759
  NODE_INDEX[2]: 61
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: $obj7
  TOKENIZED[2]: $obj7

CENTER_NODE: 30064771151  NODE_INDEX: 3
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771151
  NODE_INDEX[0]: 3
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int j = offset
  TOKENIZED[0]: int VAR1 = VAR2
  NODE_ID[1]: 68719476831
  NODE_INDEX[1]: 62
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: IDENTIFIER
  ORIGINAL[1]: j
  TOKENIZED[1]: VAR1
  NODE_ID[2]: 68719476832
  NODE_INDEX[2]: 63
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: offset
  TOKENIZED[2]: VAR1
  NODE_ID[3]: 68719476833
  NODE_INDEX[3]: 64
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: l
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476867  NODE_INDEX: 4
FRAGMENT_COUNT: 7
  NODE_ID[0]: 68719476867
  NODE_INDEX[0]: 4
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: j
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771175
  NODE_INDEX[1]: 65
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: i < l
  TOKENIZED[1]: VAR1 < VAR2
  NODE_ID[2]: 30064771185
  NODE_INDEX[2]: 66
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: j++
  TOKENIZED[2]: j++
  NODE_ID[3]: 30064771186
  NODE_INDEX[3]: 67
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: --count > 0
  TOKENIZED[3]: --count > 0
  NODE_ID[4]: 68719476853
  NODE_INDEX[4]: 68
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: j
  TOKENIZED[4]: VAR1
  NODE_ID[5]: 68719476866
  NODE_INDEX[5]: 69
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: result
  TOKENIZED[5]: VAR1
  NODE_ID[6]: 68719476870
  NODE_INDEX[6]: 70
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: IDENTIFIER
  ORIGINAL[6]: j
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771396  NODE_INDEX: 5
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771396
  NODE_INDEX[0]: 5
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: this.zzEndRead = zzStartRead = 0
  TOKENIZED[0]: this . VAR1 = VAR2 = 0
  NODE_ID[1]: 30064771397
  NODE_INDEX[1]: 71
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzEndRead
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 30064771398
  NODE_INDEX[2]: 72
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzStartRead = 0
  TOKENIZED[2]: this . VAR1 = 0
  NODE_ID[3]: 68719477024
  NODE_INDEX[3]: 73
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: this
  TOKENIZED[3]: this

CENTER_NODE: 68719476803  NODE_INDEX: 6
FRAGMENT_COUNT: 5
  NODE_ID[0]: 68719476803
  NODE_INDEX[0]: 6
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: offset
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771126
  NODE_INDEX[1]: 74
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result)
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  NODE_ID[2]: 30064771127
  NODE_INDEX[2]: 75
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.ZZ_ACTION_PACKED_0
  TOKENIZED[2]: VAR1 . VAR2
  NODE_ID[3]: 68719476801
  NODE_INDEX[3]: 76
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: offset
  TOKENIZED[3]: VAR1
  NODE_ID[4]: 68719476804
  NODE_INDEX[4]: 77
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: result
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771607  NODE_INDEX: 7
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771607
  NODE_INDEX[0]: 7
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.applauseEfflorescence
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771606
  NODE_INDEX[1]: 78
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: PrintStream LexerScheme.applauseEfflorescence = null
  TOKENIZED[1]: VAR1 VAR2 . VAR3 = null
  NODE_ID[2]: 55834574995
  NODE_INDEX[2]: 79
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: applauseEfflorescence
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771653  NODE_INDEX: 8
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771653
  NODE_INDEX[0]: 8
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: String[] LexerScheme.ZZ_ERROR_MSG = { \
  TOKENIZED[0]: String[] VAR1 . VAR2 = { \
  NODE_ID[1]: 30064771654
  NODE_INDEX[1]: 80
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_ERROR_MSG
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771655
  NODE_INDEX[2]: 81
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: { \
  TOKENIZED[2]: { \

CENTER_NODE: 30064771651  NODE_INDEX: 9
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771651
  NODE_INDEX[0]: 9
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int LexerScheme.ZZ_PUSHBACK_2BIG = 2
  TOKENIZED[0]: int VAR1 . VAR2 = 2
  NODE_ID[1]: 30064771652
  NODE_INDEX[1]: 82
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_PUSHBACK_2BIG
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476757  NODE_INDEX: 10
FRAGMENT_COUNT: 7
  NODE_ID[0]: 68719476757
  NODE_INDEX[0]: 10
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771295
  NODE_INDEX[1]: 83
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzLexicalState
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 30064771298
  NODE_INDEX[2]: 84
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzBuffer
  TOKENIZED[2]: this . VAR1
  NODE_ID[3]: 30064771301
  NODE_INDEX[3]: 85
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: boolean this.zzAtBOL = true
  TOKENIZED[3]: boolean this . VAR1 = true
  NODE_ID[4]: 30064771302
  NODE_INDEX[4]: 86
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: CALL
  ORIGINAL[4]: this.zzAtBOL
  TOKENIZED[4]: this . VAR1
  NODE_ID[5]: 30064771304
  NODE_INDEX[5]: 87
  EDGE_TYPE_INDEX[5]: 2
  TYPE[5]: CALL
  ORIGINAL[5]: this.zzReader
  TOKENIZED[5]: this . VAR1
  NODE_ID[6]: 55834574877
  NODE_INDEX[6]: 88
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: FIELD_IDENTIFIER
  ORIGINAL[6]: zzReader
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477053  NODE_INDEX: 11
FRAGMENT_COUNT: 7
  NODE_ID[0]: 68719477053
  NODE_INDEX[0]: 11
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771442
  NODE_INDEX[1]: 89
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: number > yylength()
  TOKENIZED[1]: VAR1 > FUN1 ( )
  NODE_ID[2]: 30064771444
  NODE_INDEX[2]: 90
  EDGE_TYPE_INDEX[2]: 1
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzScanError(ZZ_PUSHBACK_2BIG)
  TOKENIZED[2]: this . FUN1 ( VAR1 )
  NODE_ID[3]: 30064771447
  NODE_INDEX[3]: 91
  EDGE_TYPE_INDEX[3]: 2
  TYPE[3]: CALL
  ORIGINAL[3]: this.zzMarkedPos
  TOKENIZED[3]: this . VAR1
  NODE_ID[4]: 55834574941
  NODE_INDEX[4]: 92
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: FIELD_IDENTIFIER
  ORIGINAL[4]: zzMarkedPos
  TOKENIZED[4]: VAR1
  NODE_ID[5]: 68719476739
  NODE_INDEX[5]: 93
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: this
  TOKENIZED[5]: this
  NODE_ID[6]: 68719476740
  NODE_INDEX[6]: 94
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: IDENTIFIER
  ORIGINAL[6]: this
  TOKENIZED[6]: this

CENTER_NODE: 30064771616  NODE_INDEX: 12
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771616
  NODE_INDEX[0]: 12
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int LexerScheme.ZZ_BUFFERSIZE = 2048
  TOKENIZED[0]: int VAR1 . VAR2 = 2048
  NODE_ID[1]: 30064771617
  NODE_INDEX[1]: 95
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_BUFFERSIZE
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476958  NODE_INDEX: 13
FRAGMENT_COUNT: 4
  NODE_ID[0]: 68719476958
  NODE_INDEX[0]: 13
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: i
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771305
  NODE_INDEX[1]: 96
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: char[] map = new char[0x10000]
  TOKENIZED[1]: char[] VAR1 = new char[0x10000]
  NODE_ID[2]: 30064771307
  NODE_INDEX[2]: 97
  EDGE_TYPE_INDEX[2]: 2
  TYPE[2]: CALL
  ORIGINAL[2]: int i = 0
  TOKENIZED[2]: int VAR1 = 0
  NODE_ID[3]: 68719476960
  NODE_INDEX[3]: 98
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: i
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477045  NODE_INDEX: 14
FRAGMENT_COUNT: 4
  NODE_ID[0]: 68719477045
  NODE_INDEX[0]: 14
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: message
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771431
  NODE_INDEX[1]: 99
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: message = ZZ_ERROR_MSG[errorCode]
  TOKENIZED[1]: VAR1 = ZZ_ERROR_MSG[errorCode]
  NODE_ID[2]: 30064771432
  NODE_INDEX[2]: 100
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: ZZ_ERROR_MSG[errorCode]
  TOKENIZED[2]: ZZ_ERROR_MSG[errorCode]
  NODE_ID[3]: 68719477050
  NODE_INDEX[3]: 101
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: message
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771167  NODE_INDEX: 15
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771167
  NODE_INDEX[0]: 15
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int offset = 0
  TOKENIZED[0]: int VAR1 = 0
  NODE_ID[1]: 68719476847
  NODE_INDEX[1]: 102
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: IDENTIFIER
  ORIGINAL[1]: offset
  TOKENIZED[1]: VAR1
  NODE_ID[2]: 68719476848
  NODE_INDEX[2]: 103
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: offset
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640278  NODE_INDEX: 16
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640278
  NODE_INDEX[0]: 16
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: finally
  TOKENIZED[0]: finally
  NODE_ID[1]: 47244640274
  NODE_INDEX[1]: 104
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: try
  TOKENIZED[1]: try

CENTER_NODE: 30064771636  NODE_INDEX: 17
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771636
  NODE_INDEX[0]: 17
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.ZZ_ROWMAP
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771635
  NODE_INDEX[1]: 105
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int[] LexerScheme.ZZ_ROWMAP = zzUnpackRowMap()
  TOKENIZED[1]: int[] VAR1 . VAR2 = FUN1 ( )
  NODE_ID[2]: 30064771637
  NODE_INDEX[2]: 106
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: zzUnpackRowMap()
  TOKENIZED[2]: FUN1 ( )
  NODE_ID[3]: 55834575007
  NODE_INDEX[3]: 107
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: FIELD_IDENTIFIER
  ORIGINAL[3]: ZZ_ROWMAP
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771649  NODE_INDEX: 18
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771649
  NODE_INDEX[0]: 18
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int LexerScheme.ZZ_NO_MATCH = 1
  TOKENIZED[0]: int VAR1 . VAR2 = 1
  NODE_ID[1]: 30064771650
  NODE_INDEX[1]: 108
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_NO_MATCH
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 47244640288  NODE_INDEX: 19
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640288
  NODE_INDEX[0]: 19
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: if (numRead == 0)
  TOKENIZED[0]: if ( VAR1 == 0 )
  NODE_ID[1]: 30064771367
  NODE_INDEX[1]: 109
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: numRead == 0
  TOKENIZED[1]: VAR1 == 0

CENTER_NODE: 30064771076  NODE_INDEX: 20
FRAGMENT_COUNT: 8
  NODE_ID[0]: 30064771076
  NODE_INDEX[0]: 20
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: preroutine_coercively > 10
  TOKENIZED[0]: VAR1 > 10
  NODE_ID[1]: 30064771077
  NODE_INDEX[1]: 110
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: hobbianMawkish(preroutine_coercively++, unlimp_recirculate)
  TOKENIZED[1]: FUN1 ( preroutine_coercively++ , VAR1 )
  NODE_ID[2]: 30064771078
  NODE_INDEX[2]: 111
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: preroutine_coercively++
  TOKENIZED[2]: preroutine_coercively++
  NODE_ID[3]: 47244640256
  NODE_INDEX[3]: 112
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CONTROL_STRUCTURE
  ORIGINAL[3]: if (preroutine_coercively > 10)
  TOKENIZED[3]: if ( VAR1 > 10 )
  NODE_ID[4]: 68719476763
  NODE_INDEX[4]: 113
  EDGE_TYPE_INDEX[4]: 2
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: preroutine_coercively
  TOKENIZED[4]: VAR1
  NODE_ID[5]: 68719476764
  NODE_INDEX[5]: 114
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: preroutine_coercively
  TOKENIZED[5]: VAR1
  NODE_ID[6]: 68719476765
  NODE_INDEX[6]: 115
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: IDENTIFIER
  ORIGINAL[6]: unlimp_recirculate
  TOKENIZED[6]: VAR1
  NODE_ID[7]: 68719476766
  NODE_INDEX[7]: 116
  EDGE_TYPE_INDEX[7]: 0
  TYPE[7]: IDENTIFIER
  ORIGINAL[7]: Tracer
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477030  NODE_INDEX: 21
FRAGMENT_COUNT: 3
  NODE_ID[0]: 68719477030
  NODE_INDEX[0]: 21
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771413
  NODE_INDEX[1]: 117
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzLexicalState
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 55834574927
  NODE_INDEX[2]: 118
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: zzLexicalState
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771622  NODE_INDEX: 22
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771622
  NODE_INDEX[0]: 22
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: { 0, 1 }
  TOKENIZED[0]: { 0 , 1 }
  NODE_ID[1]: 30064771620
  NODE_INDEX[1]: 119
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: int[] LexerScheme.ZZ_LEXSTATE = { 0, 1 }
  TOKENIZED[1]: int[] VAR1 . VAR2 = { 0 , 1 }
  NODE_ID[2]: 30064771621
  NODE_INDEX[2]: 120
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.ZZ_LEXSTATE
  TOKENIZED[2]: VAR1 . VAR2

CENTER_NODE: 30064771148  NODE_INDEX: 23
FRAGMENT_COUNT: 6
  NODE_ID[0]: 30064771148
  NODE_INDEX[0]: 23
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result)
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  NODE_ID[1]: 30064771147
  NODE_INDEX[1]: 121
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result)
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR1 , VAR3 )
  NODE_ID[2]: 30064771149
  NODE_INDEX[2]: 122
  EDGE_TYPE_INDEX[2]: 2
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.ZZ_ROWMAP_PACKED_0
  TOKENIZED[2]: VAR1 . VAR2
  NODE_ID[3]: 68719476826
  NODE_INDEX[3]: 123
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: offset
  TOKENIZED[3]: VAR1
  NODE_ID[4]: 68719476827
  NODE_INDEX[4]: 124
  EDGE_TYPE_INDEX[4]: 2
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: offset
  TOKENIZED[4]: VAR1
  NODE_ID[5]: 68719476828
  NODE_INDEX[5]: 125
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: IDENTIFIER
  ORIGINAL[5]: result
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771632  NODE_INDEX: 24
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771632
  NODE_INDEX[0]: 24
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: zzUnpackAction()
  TOKENIZED[0]: FUN1 ( )
  NODE_ID[1]: 30064771630
  NODE_INDEX[1]: 126
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: int[] LexerScheme.ZZ_ACTION = zzUnpackAction()
  TOKENIZED[1]: int[] VAR1 . VAR2 = FUN1 ( )
  NODE_ID[2]: 30064771631
  NODE_INDEX[2]: 127
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.ZZ_ACTION
  TOKENIZED[2]: VAR1 . VAR2

CENTER_NODE: 30064771656  NODE_INDEX: 25
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771656
  NODE_INDEX[0]: 25
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int[] LexerScheme.ZZ_ATTRIBUTE = zzUnpackAttribute()
  TOKENIZED[0]: int[] VAR1 . VAR2 = FUN1 ( )
  NODE_ID[1]: 30064771657
  NODE_INDEX[1]: 128
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_ATTRIBUTE
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771658
  NODE_INDEX[2]: 129
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: zzUnpackAttribute()
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 30064771644  NODE_INDEX: 26
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771644
  NODE_INDEX[0]: 26
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: String LexerScheme.ZZ_TRANS_PACKED_0 = \
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  NODE_ID[1]: 30064771645
  NODE_INDEX[1]: 130
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_TRANS_PACKED_0
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771646
  NODE_INDEX[2]: 131
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: \
  TOKENIZED[2]: \

CENTER_NODE: 68719477176  NODE_INDEX: 27
FRAGMENT_COUNT: 5
  NODE_ID[0]: 68719477176
  NODE_INDEX[0]: 27
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: smearcaseUnrhetorically
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771605
  NODE_INDEX[1]: 132
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: hobbianMawkish(steadfastness_conicality, smearcaseUnrhetorically)
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  NODE_ID[2]: 68719477163
  NODE_INDEX[2]: 133
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: smearcaseUnrhetorically
  TOKENIZED[2]: VAR1
  NODE_ID[3]: 68719477171
  NODE_INDEX[3]: 134
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: smearcaseUnrhetorically
  TOKENIZED[3]: VAR1
  NODE_ID[4]: 68719477175
  NODE_INDEX[4]: 135
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: steadfastness_conicality
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640292  NODE_INDEX: 28
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640292
  NODE_INDEX[0]: 28
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: try
  TOKENIZED[0]: try
  NODE_ID[1]: 47244640293
  NODE_INDEX[1]: 136
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: catch
  TOKENIZED[1]: catch

CENTER_NODE: 68719477031  NODE_INDEX: 29
FRAGMENT_COUNT: 3
  NODE_ID[0]: 68719477031
  NODE_INDEX[0]: 29
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771415
  NODE_INDEX[1]: 137
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzLexicalState
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 55834574928
  NODE_INDEX[2]: 138
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: zzLexicalState
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771642  NODE_INDEX: 30
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771642
  NODE_INDEX[0]: 30
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.ZZ_TRANS
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771641
  NODE_INDEX[1]: 139
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int[] LexerScheme.ZZ_TRANS = zzUnpackTrans()
  TOKENIZED[1]: int[] VAR1 . VAR2 = FUN1 ( )
  NODE_ID[2]: 30064771643
  NODE_INDEX[2]: 140
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: zzUnpackTrans()
  TOKENIZED[2]: FUN1 ( )
  NODE_ID[3]: 55834575009
  NODE_INDEX[3]: 141
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: FIELD_IDENTIFIER
  ORIGINAL[3]: ZZ_TRANS
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771619  NODE_INDEX: 31
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771619
  NODE_INDEX[0]: 31
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.YYINITIAL
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771618
  NODE_INDEX[1]: 142
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: int LexerScheme.YYINITIAL = 0
  TOKENIZED[1]: int VAR1 . VAR2 = 0
  NODE_ID[2]: 55834575000
  NODE_INDEX[2]: 143
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: YYINITIAL
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771608  NODE_INDEX: 32
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771608
  NODE_INDEX[0]: 32
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean LexerScheme.protonemaPronounceable = new java.util.concurrent.atomic.AtomicBoolean(false)
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  NODE_ID[1]: 30064771609
  NODE_INDEX[1]: 144
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.protonemaPronounceable
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771610
  NODE_INDEX[2]: 145
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 30064771638  NODE_INDEX: 33
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771638
  NODE_INDEX[0]: 33
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: String LexerScheme.ZZ_ROWMAP_PACKED_0 = \
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  NODE_ID[1]: 30064771639
  NODE_INDEX[1]: 146
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_ROWMAP_PACKED_0
  TOKENIZED[1]: VAR1 . VAR2
  NODE_ID[2]: 30064771640
  NODE_INDEX[2]: 147
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: \
  TOKENIZED[2]: \

CENTER_NODE: 68719476941  NODE_INDEX: 34
FRAGMENT_COUNT: 4
  NODE_ID[0]: 68719476941
  NODE_INDEX[0]: 34
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: range
  TOKENIZED[0]: VAR1
  NODE_ID[1]: 30064771278
  NODE_INDEX[1]: 148
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: end(range)
  TOKENIZED[1]: FUN1 ( VAR1 )
  NODE_ID[2]: 68719476940
  NODE_INDEX[2]: 149
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: IDENTIFIER
  ORIGINAL[2]: parser
  TOKENIZED[2]: VAR1
  NODE_ID[3]: 68719476943
  NODE_INDEX[3]: 150
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: range
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771615  NODE_INDEX: 35
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771615
  NODE_INDEX[0]: 35
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: -1
  TOKENIZED[0]: -1
  NODE_ID[1]: 30064771613
  NODE_INDEX[1]: 151
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: int LexerScheme.YYEOF = -1
  TOKENIZED[1]: int VAR1 . VAR2 = -1
  NODE_ID[2]: 30064771614
  NODE_INDEX[2]: 152
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.YYEOF
  TOKENIZED[2]: VAR1 . VAR2

CENTER_NODE: 47244640308  NODE_INDEX: 36
FRAGMENT_COUNT: 1
  NODE_ID[0]: 47244640308
  NODE_INDEX[0]: 36
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: while (true)
  TOKENIZED[0]: while ( true )

CENTER_NODE: 47244640277  NODE_INDEX: 37
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640277
  NODE_INDEX[0]: 37
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: catch
  TOKENIZED[0]: catch
  NODE_ID[1]: 47244640276
  NODE_INDEX[1]: 153
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: try
  TOKENIZED[1]: try

CENTER_NODE: 47244640259  NODE_INDEX: 38
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640259
  NODE_INDEX[0]: 38
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: try
  TOKENIZED[0]: try
  NODE_ID[1]: 47244640260
  NODE_INDEX[1]: 154
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: catch
  TOKENIZED[1]: catch

CENTER_NODE: 30064771225  NODE_INDEX: 39
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771225
  NODE_INDEX[0]: 39
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.applauseEfflorescence = null
  TOKENIZED[0]: VAR1 . VAR2 = null
  NODE_ID[1]: 30064771216
  NODE_INDEX[1]: 155
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: new PrintStream(new FileOutputStream(tokologySpan, false), true, \
  TOKENIZED[1]: new FUN1 ( new FUN2 ( VAR1 , false ) , true , \
  NODE_ID[2]: 30064771226
  NODE_INDEX[2]: 156
  EDGE_TYPE_INDEX[2]: 2
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.applauseEfflorescence
  TOKENIZED[2]: VAR1 . VAR2
  NODE_ID[3]: 68719476895
  NODE_INDEX[3]: 157
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: IDENTIFIER
  ORIGINAL[3]: $obj2
  TOKENIZED[3]: $obj2

CENTER_NODE: 30064771659  NODE_INDEX: 40
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771659
  NODE_INDEX[0]: 40
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: String LexerScheme.ZZ_ATTRIBUTE_PACKED_0 = \
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  NODE_ID[1]: 30064771660
  NODE_INDEX[1]: 158
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_ATTRIBUTE_PACKED_0
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771508  NODE_INDEX: 41
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771508
  NODE_INDEX[0]: 41
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: zzLexicalState + 1
  TOKENIZED[0]: VAR1 + 1
  NODE_ID[1]: 30064771503
  NODE_INDEX[1]: 159
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzAtBOL
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 30064771506
  NODE_INDEX[2]: 160
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: ZZ_LEXSTATE[zzLexicalState + 1]
  TOKENIZED[2]: ZZ_LEXSTATE[zzLexicalState + 1]
  NODE_ID[3]: 30064771509
  NODE_INDEX[3]: 161
  EDGE_TYPE_INDEX[3]: 2
  TYPE[3]: CALL
  ORIGINAL[3]: this.zzLexicalState
  TOKENIZED[3]: this . VAR1

CENTER_NODE: 30064771647  NODE_INDEX: 42
FRAGMENT_COUNT: 2
  NODE_ID[0]: 30064771647
  NODE_INDEX[0]: 42
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: int LexerScheme.ZZ_UNKNOWN_ERROR = 0
  TOKENIZED[0]: int VAR1 . VAR2 = 0
  NODE_ID[1]: 30064771648
  NODE_INDEX[1]: 162
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: LexerScheme.ZZ_UNKNOWN_ERROR
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771628  NODE_INDEX: 43
FRAGMENT_COUNT: 4
  NODE_ID[0]: 30064771628
  NODE_INDEX[0]: 43
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: zzUnpackCMap(ZZ_CMAP_PACKED)
  TOKENIZED[0]: FUN1 ( VAR1 )
  NODE_ID[1]: 30064771626
  NODE_INDEX[1]: 163
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: char[] LexerScheme.ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED)
  TOKENIZED[1]: char[] VAR1 . VAR2 = FUN1 ( VAR3 )
  NODE_ID[2]: 30064771627
  NODE_INDEX[2]: 164
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: LexerScheme.ZZ_CMAP
  TOKENIZED[2]: VAR1 . VAR2
  NODE_ID[3]: 30064771629
  NODE_INDEX[3]: 165
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: LexerScheme.ZZ_CMAP_PACKED
  TOKENIZED[3]: VAR1 . VAR2

CENTER_NODE: 30064771384  NODE_INDEX: 44
FRAGMENT_COUNT: 7
  NODE_ID[0]: 30064771384
  NODE_INDEX[0]: 44
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: zzReader != null
  TOKENIZED[0]: VAR1 != null
  NODE_ID[1]: 30064771385
  NODE_INDEX[1]: 166
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzReader
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 30064771386
  NODE_INDEX[2]: 167
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzReader.close()
  TOKENIZED[2]: this . VAR1 . FUN1 ( )
  NODE_ID[3]: 30064771387
  NODE_INDEX[3]: 168
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: CALL
  ORIGINAL[3]: this.zzReader
  TOKENIZED[3]: this . VAR1
  NODE_ID[4]: 47244640291
  NODE_INDEX[4]: 169
  EDGE_TYPE_INDEX[4]: 0
  TYPE[4]: CONTROL_STRUCTURE
  ORIGINAL[4]: if (zzReader != null)
  TOKENIZED[4]: if ( VAR1 != null )
  NODE_ID[5]: 55834574913
  NODE_INDEX[5]: 170
  EDGE_TYPE_INDEX[5]: 0
  TYPE[5]: FIELD_IDENTIFIER
  ORIGINAL[5]: zzReader
  TOKENIZED[5]: VAR1
  NODE_ID[6]: 68719477016
  NODE_INDEX[6]: 171
  EDGE_TYPE_INDEX[6]: 0
  TYPE[6]: IDENTIFIER
  ORIGINAL[6]: this
  TOKENIZED[6]: this

CENTER_NODE: 47244640271  NODE_INDEX: 45
FRAGMENT_COUNT: 2
  NODE_ID[0]: 47244640271
  NODE_INDEX[0]: 45
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: catch
  TOKENIZED[0]: catch
  NODE_ID[1]: 47244640270
  NODE_INDEX[1]: 172
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CONTROL_STRUCTURE
  ORIGINAL[1]: try
  TOKENIZED[1]: try

CENTER_NODE: 68719477036  NODE_INDEX: 46
FRAGMENT_COUNT: 4
  NODE_ID[0]: 68719477036
  NODE_INDEX[0]: 46
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771419
  NODE_INDEX[1]: 173
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzBuffer
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 30064771420
  NODE_INDEX[2]: 174
  EDGE_TYPE_INDEX[2]: 2
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzStartRead
  TOKENIZED[2]: this . VAR1
  NODE_ID[3]: 55834574930
  NODE_INDEX[3]: 175
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: FIELD_IDENTIFIER
  ORIGINAL[3]: zzStartRead
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771438  NODE_INDEX: 47
FRAGMENT_COUNT: 1
  NODE_ID[0]: 30064771438
  NODE_INDEX[0]: 47
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: throw new Error(message);
  TOKENIZED[0]: throw new FUN1 ( VAR1 ) ;

CENTER_NODE: 30064771430  NODE_INDEX: 48
FRAGMENT_COUNT: 5
  NODE_ID[0]: 30064771430
  NODE_INDEX[0]: 48
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: this.zzStartRead
  TOKENIZED[0]: this . VAR1
  NODE_ID[1]: 30064771428
  NODE_INDEX[1]: 176
  EDGE_TYPE_INDEX[1]: 0
  TYPE[1]: CALL
  ORIGINAL[1]: zzMarkedPos - zzStartRead
  TOKENIZED[1]: VAR1 - VAR2
  NODE_ID[2]: 30064771429
  NODE_INDEX[2]: 177
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: CALL
  ORIGINAL[2]: this.zzMarkedPos
  TOKENIZED[2]: this . VAR1
  NODE_ID[3]: 55834574936
  NODE_INDEX[3]: 178
  EDGE_TYPE_INDEX[3]: 0
  TYPE[3]: FIELD_IDENTIFIER
  ORIGINAL[3]: zzStartRead
  TOKENIZED[3]: VAR1
  NODE_ID[4]: 68719477044
  NODE_INDEX[4]: 179
  EDGE_TYPE_INDEX[4]: 2
  TYPE[4]: IDENTIFIER
  ORIGINAL[4]: this
  TOKENIZED[4]: this

CENTER_NODE: 68719477040  NODE_INDEX: 49
FRAGMENT_COUNT: 3
  NODE_ID[0]: 68719477040
  NODE_INDEX[0]: 49
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: IDENTIFIER
  ORIGINAL[0]: this
  TOKENIZED[0]: this
  NODE_ID[1]: 30064771425
  NODE_INDEX[1]: 180
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: this.zzBuffer
  TOKENIZED[1]: this . VAR1
  NODE_ID[2]: 55834574933
  NODE_INDEX[2]: 181
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: zzBuffer
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640295  NODE_INDEX: 50
FRAGMENT_COUNT: 1
  NODE_ID[0]: 47244640295
  NODE_INDEX[0]: 50
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CONTROL_STRUCTURE
  ORIGINAL[0]: while (true)
  TOKENIZED[0]: while ( true )

CENTER_NODE: 30064771634  NODE_INDEX: 51
FRAGMENT_COUNT: 3
  NODE_ID[0]: 30064771634
  NODE_INDEX[0]: 51
  EDGE_TYPE_INDEX[0]: 0
  TYPE[0]: CALL
  ORIGINAL[0]: LexerScheme.ZZ_ACTION_PACKED_0
  TOKENIZED[0]: VAR1 . VAR2
  NODE_ID[1]: 30064771633
  NODE_INDEX[1]: 182
  EDGE_TYPE_INDEX[1]: 2
  TYPE[1]: CALL
  ORIGINAL[1]: String LexerScheme.ZZ_ACTION_PACKED_0 = \
  TOKENIZED[1]: VAR1 VAR2 . VAR3 = \
  NODE_ID[2]: 55834575006
  NODE_INDEX[2]: 183
  EDGE_TYPE_INDEX[2]: 0
  TYPE[2]: FIELD_IDENTIFIER
  ORIGINAL[2]: ZZ_ACTION_PACKED_0
  TOKENIZED[2]: VAR1

