# Tokenized code fragments for 156338-v1.0.0-bad
# Total center nodes processed: 51
# Total code fragments found: 247

CENTER_NODE: 30064771404
FRAGMENT_COUNT: 6
  ORIGINAL[0]: zzReader != null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != null
  ORIGINAL[1]: this.zzReader
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.zzReader.close()
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1 . FUN1 ( )
  ORIGINAL[3]: this.zzReader
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: zzReader
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: this
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: this

CENTER_NODE: 30064771430
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.zzLexicalState
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: zzLexicalState
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 6
  ORIGINAL[0]: String stonesoup_mysql_port = System.getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = VAR3 . FUN1 ( \
  ORIGINAL[1]: String stonesoup_mysql_dbname = System.getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = VAR3 . FUN1 ( \
  ORIGINAL[2]: System.getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \
  ORIGINAL[3]: stonesoup_mysql_dbname
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: System
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_mysql_dbname
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771749
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String LexerPath.ZZ_CMAP_PACKED = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: LexerPath.ZZ_CMAP_PACKED
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: \
  TYPE[2]: CALL
  TOKENIZED[2]: \

CENTER_NODE: 30064771740
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int LexerPath.YYEOF = -1
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = -1
  ORIGINAL[1]: LexerPath.YYEOF
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1
  ORIGINAL[3]: YYEOF
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (true)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( true )

CENTER_NODE: 30064771747
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int[] LexerPath.ZZ_LEXSTATE = { 0, 1 }
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = { 0 , 1 }
  ORIGINAL[1]: LexerPath.ZZ_LEXSTATE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: { 0, 1 }
  TYPE[2]: CALL
  TOKENIZED[2]: { 0 , 1 }
  ORIGINAL[3]: ZZ_LEXSTATE
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476977
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < l
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: j++
  TYPE[1]: CALL
  TOKENIZED[1]: j++
  ORIGINAL[2]: --count > 0
  TYPE[2]: CALL
  TOKENIZED[2]: --count > 0
  ORIGINAL[3]: j
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: j
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: j
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771742
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int LexerPath.ZZ_BUFFERSIZE = 2048
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 2048
  ORIGINAL[1]: LexerPath.ZZ_BUFFERSIZE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719477110
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.zzMarkedPos
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.zzStartRead
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: zzStartRead
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int offset = 0
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = 0
  ORIGINAL[1]: offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR1 , VAR3 )
  ORIGINAL[2]: zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476997
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < l
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: int count = packed.charAt(i++)
  TYPE[1]: CALL
  TOKENIZED[1]: int VAR1 = VAR2 . FUN1 ( i++ )
  ORIGINAL[2]: int value = packed.charAt(i++)
  TYPE[2]: CALL
  TOKENIZED[2]: int VAR1 = VAR2 . FUN1 ( i++ )
  ORIGINAL[3]: packed.charAt(i++)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( i++ )
  ORIGINAL[4]: value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: packed
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: value
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771073
FRAGMENT_COUNT: 4
  ORIGINAL[0]: $obj6 = new java.io.InputStreamReader(in)
  TYPE[0]: CALL
  TOKENIZED[0]: $obj6 = new VAR1 . VAR2 . FUN1 ( VAR3 )
  ORIGINAL[1]: new java.io.InputStreamReader(in)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . VAR2 . FUN1 ( VAR3 )
  ORIGINAL[2]: $obj6
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj6
  ORIGINAL[3]: $obj6
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: $obj6

CENTER_NODE: 30064771405
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.zzReader = reader
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR2
  ORIGINAL[1]: this.zzReader
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: reader
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 30064771732
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrintStream LexerPath.nonjurableCleruchial = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: LexerPath.nonjurableCleruchial
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476934
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int[] result = new int[35]
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 = new int[35]
  ORIGINAL[1]: new int[35]
  TYPE[1]: CALL
  TOKENIZED[1]: new int[35]
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 68719477101
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this.zzBuffer
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: zzBuffer
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: $obj0
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj0
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 30064771776
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int[] LexerPath.ZZ_TRANS = zzUnpackTrans()
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: LexerPath.ZZ_TRANS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: zzUnpackTrans()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 30064771455
FRAGMENT_COUNT: 1
  ORIGINAL[0]: throw new Error(message);
  TYPE[0]: CALL
  TOKENIZED[0]: throw new FUN1 ( VAR1 ) ;

CENTER_NODE: 30064771444
FRAGMENT_COUNT: 5
  ORIGINAL[0]: zzStartRead + pos
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + VAR2
  ORIGINAL[1]: this.zzStartRead
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: zzStartRead
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: pos
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 59
  ORIGINAL[0]: this.zzEndRead
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.zzBuffer
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.zzMarkedPos
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this.yychar
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: this.zzAtBOL
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: this.zzAtBOL
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1
  ORIGINAL[6]: this.zzAtBOL
  TYPE[6]: CALL
  TOKENIZED[6]: this . VAR1
  ORIGINAL[7]: this.zzMarkedPos
  TYPE[7]: CALL
  TOKENIZED[7]: this . VAR1
  ORIGINAL[8]: this.zzEndRead
  TYPE[8]: CALL
  TOKENIZED[8]: this . VAR1
  ORIGINAL[9]: this.zzBuffer
  TYPE[9]: CALL
  TOKENIZED[9]: this . VAR1
  ORIGINAL[10]: this.zzAtBOL
  TYPE[10]: CALL
  TOKENIZED[10]: this . VAR1
  ORIGINAL[11]: this.zzAtBOL
  TYPE[11]: CALL
  TOKENIZED[11]: this . VAR1
  ORIGINAL[12]: this.zzAtBOL
  TYPE[12]: CALL
  TOKENIZED[12]: this . VAR1
  ORIGINAL[13]: this.zzCurrentPos
  TYPE[13]: CALL
  TOKENIZED[13]: this . VAR1
  ORIGINAL[14]: this.zzStartRead
  TYPE[14]: CALL
  TOKENIZED[14]: this . VAR1
  ORIGINAL[15]: this.zzAtBOL
  TYPE[15]: CALL
  TOKENIZED[15]: this . VAR1
  ORIGINAL[16]: this.zzState
  TYPE[16]: CALL
  TOKENIZED[16]: this . VAR1
  ORIGINAL[17]: this.zzLexicalState
  TYPE[17]: CALL
  TOKENIZED[17]: this . VAR1
  ORIGINAL[18]: this.zzState
  TYPE[18]: CALL
  TOKENIZED[18]: this . VAR1
  ORIGINAL[19]: this.zzBuffer
  TYPE[19]: CALL
  TOKENIZED[19]: this . VAR1
  ORIGINAL[20]: this.zzEndRead
  TYPE[20]: CALL
  TOKENIZED[20]: this . VAR1
  ORIGINAL[21]: this.zzState
  TYPE[21]: CALL
  TOKENIZED[21]: this . VAR1
  ORIGINAL[22]: this.zzState
  TYPE[22]: CALL
  TOKENIZED[22]: this . VAR1
  ORIGINAL[23]: this.lastChar
  TYPE[23]: CALL
  TOKENIZED[23]: this . VAR1
  ORIGINAL[24]: this.lastChar
  TYPE[24]: CALL
  TOKENIZED[24]: this . VAR1
  ORIGINAL[25]: zzState
  TYPE[25]: FIELD_IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: this
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: this
  ORIGINAL[27]: this
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: this
  ORIGINAL[28]: this
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: this
  ORIGINAL[29]: this
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: this
  ORIGINAL[30]: this
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: this
  ORIGINAL[31]: this
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: this
  ORIGINAL[32]: this
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: this
  ORIGINAL[33]: this
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: this
  ORIGINAL[34]: this
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: this
  ORIGINAL[35]: this
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: this
  ORIGINAL[36]: this
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: this
  ORIGINAL[37]: this
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: this
  ORIGINAL[38]: this
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: this
  ORIGINAL[39]: this
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: this
  ORIGINAL[40]: this
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: this
  ORIGINAL[41]: this
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: this
  ORIGINAL[42]: this
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: this
  ORIGINAL[43]: this
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: this
  ORIGINAL[44]: this
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: this
  ORIGINAL[45]: this
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: this
  ORIGINAL[46]: this
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: this
  ORIGINAL[47]: this
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: this
  ORIGINAL[48]: this
  TYPE[48]: IDENTIFIER
  TOKENIZED[48]: this
  ORIGINAL[49]: this
  TYPE[49]: IDENTIFIER
  TOKENIZED[49]: this
  ORIGINAL[50]: this
  TYPE[50]: IDENTIFIER
  TOKENIZED[50]: this
  ORIGINAL[51]: this
  TYPE[51]: IDENTIFIER
  TOKENIZED[51]: this
  ORIGINAL[52]: this
  TYPE[52]: IDENTIFIER
  TOKENIZED[52]: this
  ORIGINAL[53]: this
  TYPE[53]: IDENTIFIER
  TOKENIZED[53]: this
  ORIGINAL[54]: this
  TYPE[54]: IDENTIFIER
  TOKENIZED[54]: this
  ORIGINAL[55]: this
  TYPE[55]: IDENTIFIER
  TOKENIZED[55]: this
  ORIGINAL[56]: this
  TYPE[56]: IDENTIFIER
  TOKENIZED[56]: this
  ORIGINAL[57]: this
  TYPE[57]: IDENTIFIER
  TOKENIZED[57]: this
  ORIGINAL[58]: this
  TYPE[58]: IDENTIFIER
  TOKENIZED[58]: this

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stupidhead_chlorophane--
  TYPE[0]: CALL
  TOKENIZED[0]: stupidhead_chlorophane--
  ORIGINAL[1]: stupidhead_chlorophane
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stupidhead_chlorophane
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477113
FRAGMENT_COUNT: 5
  ORIGINAL[0]: message = ZZ_ERROR_MSG[errorCode]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ZZ_ERROR_MSG[errorCode]
  ORIGINAL[1]: message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR]
  ORIGINAL[2]: ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR]
  TYPE[2]: CALL
  TOKENIZED[2]: ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR]
  ORIGINAL[3]: message
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: message
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477014
FRAGMENT_COUNT: 7
  ORIGINAL[0]: this.zzEndRead = length
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR2
  ORIGINAL[1]: length > zzBuffer.length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > VAR2 . VAR1
  ORIGINAL[2]: zzBuffer.length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: this.zzBuffer = new char[zzBuffer.length * 2]
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1 = new char[zzBuffer . VAR2 * 2]
  ORIGINAL[4]: length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: this
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: this

CENTER_NODE: 30064771765
FRAGMENT_COUNT: 3
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: \
  TYPE[2]: CALL
  TOKENIZED[2]: \

CENTER_NODE: 30064771768
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int[] LexerPath.ZZ_ROWMAP = zzUnpackRowMap()
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: LexerPath.ZZ_ROWMAP
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: zzUnpackRowMap()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: ZZ_ROWMAP
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771803
FRAGMENT_COUNT: 4
  ORIGINAL[0]: String LexerPath.ZZ_ATTRIBUTE_PACKED_0 = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: LexerPath.ZZ_ATTRIBUTE_PACKED_0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: \
  TYPE[2]: CALL
  TOKENIZED[2]: \
  ORIGINAL[3]: \
  TYPE[3]: CALL
  TOKENIZED[3]: \

CENTER_NODE: 68719477031
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < 94
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 94
  ORIGINAL[1]: packed.charAt(i++)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( i++ )
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: packed
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: packed
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771736
FRAGMENT_COUNT: 3
  ORIGINAL[0]: java.util.concurrent.atomic.AtomicBoolean LexerPath.unturretedAutrefois = new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . VAR3 . VAR4 . VAR5 VAR6 . VAR7 = new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: LexerPath.unturretedAutrefois
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (true)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( true )

CENTER_NODE: 30064771782
FRAGMENT_COUNT: 3
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: \
  TYPE[2]: CALL
  TOKENIZED[2]: \

CENTER_NODE: 68719476920
FRAGMENT_COUNT: 4
  ORIGINAL[0]: packed.length()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( )
  ORIGINAL[1]: l
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: packed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: packed
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771313
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int this.zzLexicalState = YYINITIAL
  TYPE[0]: CALL
  TOKENIZED[0]: int this . VAR1 = VAR2
  ORIGINAL[1]: this.zzLexicalState
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: LexerPath.YYINITIAL
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: YYINITIAL
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771797
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String[] LexerPath.ZZ_ERROR_MSG = { \
  TYPE[0]: CALL
  TOKENIZED[0]: String[] VAR1 . VAR2 = { \
  ORIGINAL[1]: LexerPath.ZZ_ERROR_MSG
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: { \
  TYPE[2]: CALL
  TOKENIZED[2]: { \

CENTER_NODE: 30064771761
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int[] LexerPath.ZZ_ACTION = zzUnpackAction()
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: LexerPath.ZZ_ACTION
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: zzUnpackAction()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 68719476941
FRAGMENT_COUNT: 6
  ORIGINAL[0]: int i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = 0
  ORIGINAL[1]: int j = offset
  TYPE[1]: CALL
  TOKENIZED[1]: int VAR1 = VAR2
  ORIGINAL[2]: j
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: j
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: j
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771775
FRAGMENT_COUNT: 2
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \

CENTER_NODE: 68719477097
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.zzLexicalState
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: zzLexicalState
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 30064771794
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int LexerPath.ZZ_PUSHBACK_2BIG = 2
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 2
  ORIGINAL[1]: LexerPath.ZZ_PUSHBACK_2BIG
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: ZZ_PUSHBACK_2BIG
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 5
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch
  ORIGINAL[3]: catch
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: catch
  ORIGINAL[4]: catch
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: catch

CENTER_NODE: 30064771745
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int LexerPath.YYINITIAL = 0
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 0
  ORIGINAL[1]: LexerPath.YYINITIAL
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: YYINITIAL
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771201
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int[] result = new int[35]
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 = new int[35]
  ORIGINAL[1]: new int[35]
  TYPE[1]: CALL
  TOKENIZED[1]: new int[35]
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771790
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int LexerPath.ZZ_UNKNOWN_ERROR = 0
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 0
  ORIGINAL[1]: LexerPath.ZZ_UNKNOWN_ERROR
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: ZZ_UNKNOWN_ERROR
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 2
  ORIGINAL[0]: number > yylength()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > FUN1 ( )
  ORIGINAL[1]: if (number > yylength())
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 > FUN1 ( ) )

CENTER_NODE: 30064771800
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int[] LexerPath.ZZ_ATTRIBUTE = zzUnpackAttribute()
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: LexerPath.ZZ_ATTRIBUTE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: zzUnpackAttribute()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 47244640289
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476983
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int offset = 0
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = 0
  ORIGINAL[1]: offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR1 , VAR3 )
  ORIGINAL[2]: zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771792
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int LexerPath.ZZ_NO_MATCH = 1
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 1
  ORIGINAL[1]: LexerPath.ZZ_NO_MATCH
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: ZZ_NO_MATCH
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477056
FRAGMENT_COUNT: 9
  ORIGINAL[0]: zzCurrentPos >= zzBuffer.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= VAR2 . VAR3
  ORIGINAL[1]: char[] newBuffer = new char[zzCurrentPos * 2]
  TYPE[1]: CALL
  TOKENIZED[1]: char[] VAR1 = new char[zzCurrentPos * 2]
  ORIGINAL[2]: System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( VAR2 , 0 , VAR3 , 0 , VAR2 . VAR4 )
  ORIGINAL[3]: this.zzBuffer
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: zzBuffer.length
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: System
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: System
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: this
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: this
  ORIGINAL[8]: newBuffer
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

