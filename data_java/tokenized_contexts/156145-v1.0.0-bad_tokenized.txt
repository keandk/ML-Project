# Tokenized code fragments for 156145-v1.0.0-bad
# Total center nodes processed: 66
# Total code fragments found: 303

CENTER_NODE: 30064771926
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int[] LexerPath.ZZ_ACTION = zzUnpackAction()
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: LexerPath.ZZ_ACTION
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: zzUnpackAction()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 30064771934
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int[] LexerPath.ZZ_ROWMAP = zzUnpackRowMap()
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: LexerPath.ZZ_ROWMAP
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: zzUnpackRowMap()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 68719476970
FRAGMENT_COUNT: 9
  ORIGINAL[0]: NanoHTTPD.Response response = new NanoHTTPD.Response(NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR1 . VAR2 . VAR4 . VAR5 , VAR1 . VAR6 , VAR7 )
  ORIGINAL[1]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , VAR5 )
  ORIGINAL[2]: NanoHTTPD.Response.Status.METHOD_NOT_ALLOWED
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[3]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: NanoHTTPD
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: body
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: response
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771956
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int LexerPath.ZZ_NO_MATCH = 1
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 1
  ORIGINAL[1]: LexerPath.ZZ_NO_MATCH
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771475
FRAGMENT_COUNT: 8
  ORIGINAL[0]: int this.zzLexicalState = YYINITIAL
  TYPE[0]: CALL
  TOKENIZED[0]: int this . VAR1 = VAR2
  ORIGINAL[1]: this.zzLexicalState
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: LexerPath.YYINITIAL
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: zzLexicalState
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this
  ORIGINAL[5]: this
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: this
  ORIGINAL[6]: this
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: this
  ORIGINAL[7]: this
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: this

CENTER_NODE: 68719476769
FRAGMENT_COUNT: 6
  ORIGINAL[0]: number > yylength()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > FUN1 ( )
  ORIGINAL[1]: this.zzScanError(ZZ_PUSHBACK_2BIG)
  TYPE[1]: CALL
  TOKENIZED[1]: this . FUN1 ( VAR1 )
  ORIGINAL[2]: this.zzMarkedPos
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this
  ORIGINAL[5]: this
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: this

CENTER_NODE: 30064771450
FRAGMENT_COUNT: 12
  ORIGINAL[0]: i < l
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: result[j++] = value
  TYPE[1]: CALL
  TOKENIZED[1]: result[j++] = VAR1
  ORIGINAL[2]: result[j++]
  TYPE[2]: CALL
  TOKENIZED[2]: result[j++]
  ORIGINAL[3]: j++
  TYPE[3]: CALL
  TOKENIZED[3]: j++
  ORIGINAL[4]: --count > 0
  TYPE[4]: CALL
  TOKENIZED[4]: --count > 0
  ORIGINAL[5]: --count
  TYPE[5]: CALL
  TOKENIZED[5]: --count
  ORIGINAL[6]: do {...} while (--count > 0)
  TYPE[6]: CONTROL_STRUCTURE
  TOKENIZED[6]: do { . . . } while ( --count > 0 )
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: result
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: j
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: value
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: count
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476977
FRAGMENT_COUNT: 5
  ORIGINAL[0]: String body = String.format(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 = VAR1 . FUN1 ( \
  ORIGINAL[1]: String.format(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( \
  ORIGINAL[2]: body
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: String
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: body
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771967
FRAGMENT_COUNT: 4
  ORIGINAL[0]: String LexerPath.ZZ_ATTRIBUTE_PACKED_0 = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: LexerPath.ZZ_ATTRIBUTE_PACKED_0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: \
  TYPE[2]: CALL
  TOKENIZED[2]: \
  ORIGINAL[3]: ZZ_ATTRIBUTE_PACKED_0
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771396
FRAGMENT_COUNT: 23
  ORIGINAL[0]: i < l
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: int high = packed.charAt(i++) << 16
  TYPE[1]: CALL
  TOKENIZED[1]: int VAR1 = VAR2 . FUN1 ( i++ ) << 16
  ORIGINAL[2]: packed.charAt(i++) << 16
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( i++ ) << 16
  ORIGINAL[3]: packed.charAt(i++)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( i++ )
  ORIGINAL[4]: i++
  TYPE[4]: CALL
  TOKENIZED[4]: i++
  ORIGINAL[5]: result[j++] = high | packed.charAt(i++)
  TYPE[5]: CALL
  TOKENIZED[5]: result[j++] = VAR1 | VAR2 . FUN1 ( i++ )
  ORIGINAL[6]: result[j++]
  TYPE[6]: CALL
  TOKENIZED[6]: result[j++]
  ORIGINAL[7]: j++
  TYPE[7]: CALL
  TOKENIZED[7]: j++
  ORIGINAL[8]: high | packed.charAt(i++)
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 | VAR2 . FUN1 ( i++ )
  ORIGINAL[9]: packed.charAt(i++)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 . FUN1 ( i++ )
  ORIGINAL[10]: i++
  TYPE[10]: CALL
  TOKENIZED[10]: i++
  ORIGINAL[11]: while (i < l)
  TYPE[11]: CONTROL_STRUCTURE
  TOKENIZED[11]: while ( VAR1 < VAR2 )
  ORIGINAL[12]: i
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: l
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: high
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: packed
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: i
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: result
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: j
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: high
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: packed
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: i
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: j
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1

CENTER_NODE: 47244640297
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771389
FRAGMENT_COUNT: 4
  ORIGINAL[0]: offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR1 , VAR3 )
  ORIGINAL[1]: zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771917
FRAGMENT_COUNT: 3
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: \
  TYPE[2]: CALL
  TOKENIZED[2]: \

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (true)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( true )

CENTER_NODE: 30064771598
FRAGMENT_COUNT: 6
  ORIGINAL[0]: new String(zzBuffer, zzStartRead, zzMarkedPos - zzStartRead)
  TYPE[0]: CALL
  TOKENIZED[0]: new FUN1 ( VAR1 , VAR2 , VAR3 - VAR2 )
  ORIGINAL[1]: this.zzBuffer
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.zzStartRead
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: zzMarkedPos - zzStartRead
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - VAR2
  ORIGINAL[4]: $obj2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj2
  ORIGINAL[5]: $obj2
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: $obj2

CENTER_NODE: 68719477110
FRAGMENT_COUNT: 5
  ORIGINAL[0]: zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: LexerPath.ZZ_TRANS_PACKED_0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 5
  ORIGINAL[0]: NanoHTTPD.Response response = new NanoHTTPD.Response(null)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( null )
  ORIGINAL[1]: new NanoHTTPD.Response(null)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . FUN1 ( null )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477128
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < l
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: j++
  TYPE[1]: CALL
  TOKENIZED[1]: j++
  ORIGINAL[2]: --count > 0
  TYPE[2]: CALL
  TOKENIZED[2]: --count > 0
  ORIGINAL[3]: j
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: j
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: j
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771908
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int LexerPath.ZZ_BUFFERSIZE = 2048
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 2048
  ORIGINAL[1]: LexerPath.ZZ_BUFFERSIZE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: ZZ_BUFFERSIZE
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771958
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int LexerPath.ZZ_PUSHBACK_2BIG = 2
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 2
  ORIGINAL[1]: LexerPath.ZZ_PUSHBACK_2BIG
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771330
FRAGMENT_COUNT: 6
  ORIGINAL[0]: new NanoHTTPD.Response(status, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . FUN1 ( VAR2 , VAR1 . VAR3 , VAR4 )
  ORIGINAL[1]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: status
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: body
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477247
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.zzLexicalState
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: zzLexicalState
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 12
  ORIGINAL[0]: this.zzStartRead
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.zzBuffer
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.zzBuffer
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this.zzEndRead
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: this.zzMarkedPos
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: this.zzStartRead
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1
  ORIGINAL[6]: zzCurrentPos >= zzBuffer.length
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 >= VAR2 . VAR3
  ORIGINAL[7]: this.zzCurrentPos
  TYPE[7]: CALL
  TOKENIZED[7]: this . VAR1
  ORIGINAL[8]: this.zzCurrentPos
  TYPE[8]: CALL
  TOKENIZED[8]: this . VAR1
  ORIGINAL[9]: zzCurrentPos
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: newBuffer
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: this
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: this

CENTER_NODE: 30064771930
FRAGMENT_COUNT: 3
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: \
  TYPE[2]: CALL
  TOKENIZED[2]: \

CENTER_NODE: 68719477232
FRAGMENT_COUNT: 7
  ORIGINAL[0]: this.zzAtEOF
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.zzEndRead = zzStartRead
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1 = VAR2
  ORIGINAL[2]: this.zzEndRead
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this.zzStartRead
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: this.zzReader
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: zzReader
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: this
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: this

CENTER_NODE: 68719477244
FRAGMENT_COUNT: 12
  ORIGINAL[0]: this.zzReader
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: this.zzAtBOL
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.zzAtEOF
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this.zzEOFDone
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: this.zzEndRead
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: this.zzStartRead
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1
  ORIGINAL[6]: this.zzCurrentPos
  TYPE[6]: CALL
  TOKENIZED[6]: this . VAR1
  ORIGINAL[7]: this.zzMarkedPos
  TYPE[7]: CALL
  TOKENIZED[7]: this . VAR1
  ORIGINAL[8]: this.yyline
  TYPE[8]: CALL
  TOKENIZED[8]: this . VAR1
  ORIGINAL[9]: this.yychar
  TYPE[9]: CALL
  TOKENIZED[9]: this . VAR1
  ORIGINAL[10]: yychar
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: this
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: this

CENTER_NODE: 30064771963
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int[] LexerPath.ZZ_ATTRIBUTE = zzUnpackAttribute()
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: LexerPath.ZZ_ATTRIBUTE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: zzUnpackAttribute()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 30064771458
FRAGMENT_COUNT: 5
  ORIGINAL[0]: parser.end(range) - parser.start(range)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 ) - VAR1 . FUN2 ( VAR2 )
  ORIGINAL[1]: end(range)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: start(range)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: parser
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: range
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 3
  ORIGINAL[0]: $obj7 = new java.io.InputStreamReader(in)
  TYPE[0]: CALL
  TOKENIZED[0]: $obj7 = new VAR1 . VAR2 . FUN1 ( VAR3 )
  ORIGINAL[1]: new java.io.InputStreamReader(in)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . VAR2 . FUN1 ( VAR3 )
  ORIGINAL[2]: $obj7
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj7

CENTER_NODE: 30064771897
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrintStream LexerPath.ureametryRunnet = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: LexerPath.ureametryRunnet
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771434
FRAGMENT_COUNT: 6
  ORIGINAL[0]: offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR1 , VAR3 )
  ORIGINAL[1]: zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: LexerPath.ZZ_ATTRIBUTE_PACKED_0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: result
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477265
FRAGMENT_COUNT: 6
  ORIGINAL[0]: message = ZZ_ERROR_MSG[errorCode]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ZZ_ERROR_MSG[errorCode]
  ORIGINAL[1]: message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR]
  ORIGINAL[2]: $obj3 = new Error(message)
  TYPE[2]: CALL
  TOKENIZED[2]: $obj3 = new FUN1 ( VAR1 )
  ORIGINAL[3]: new Error(message)
  TYPE[3]: CALL
  TOKENIZED[3]: new FUN1 ( VAR1 )
  ORIGINAL[4]: $obj3
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: $obj3
  ORIGINAL[5]: $obj3
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: $obj3

CENTER_NODE: 68719477176
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = 0
  ORIGINAL[1]: int j = 0
  TYPE[1]: CALL
  TOKENIZED[1]: int VAR1 = 0
  ORIGINAL[2]: j
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: j
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771902
FRAGMENT_COUNT: 2
  ORIGINAL[0]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: LexerPath.surmisedTowhee
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719477031
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getMethod()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: response
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: session
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771954
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int LexerPath.ZZ_UNKNOWN_ERROR = 0
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 0
  ORIGINAL[1]: LexerPath.ZZ_UNKNOWN_ERROR
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771962
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String[] LexerPath.ZZ_ERROR_MSG = { \
  TYPE[0]: CALL
  TOKENIZED[0]: String[] VAR1 . VAR2 = { \
  ORIGINAL[1]: LexerPath.ZZ_ERROR_MSG
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: { \
  TYPE[2]: CALL
  TOKENIZED[2]: { \

CENTER_NODE: 68719477249
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.zzLexicalState = newState
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 = VAR2
  ORIGINAL[1]: this.zzLexicalState
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: newState
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771895
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int LexerPath.deconcentrator_braccio = 14
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 14
  ORIGINAL[1]: LexerPath.deconcentrator_braccio
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771782
FRAGMENT_COUNT: 6
  ORIGINAL[0]: zzCurrentPosL < zzEndReadL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: zzRowMapL[zzState]
  TYPE[1]: CALL
  TOKENIZED[1]: zzRowMapL[zzState]
  ORIGINAL[2]: this.zzState
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: zzState
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: eof
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: this
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: this

CENTER_NODE: 30064771608
FRAGMENT_COUNT: 3
  ORIGINAL[0]: zzMarkedPos - zzStartRead
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2
  ORIGINAL[1]: this.zzMarkedPos
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: this.zzStartRead
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1

CENTER_NODE: 30064771618
FRAGMENT_COUNT: 1
  ORIGINAL[0]: throw new Error(message);
  TYPE[0]: CALL
  TOKENIZED[0]: throw new FUN1 ( VAR1 ) ;

CENTER_NODE: 30064771295
FRAGMENT_COUNT: 11
  ORIGINAL[0]: !session.getParms().containsKey(\
  TYPE[0]: CALL
  TOKENIZED[0]: !session . FUN1 ( ) . FUN2 ( \
  ORIGINAL[1]: this.responseStream
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: new PipedInputStream(this.responseWriter)
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( this . VAR1 )
  ORIGINAL[3]: this.responseStream
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: this.responseWriter
  TYPE[4]: CALL
  TOKENIZED[4]: this . VAR1
  ORIGINAL[5]: this.responseStream
  TYPE[5]: CALL
  TOKENIZED[5]: this . VAR1
  ORIGINAL[6]: responseStream
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: this
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: this
  ORIGINAL[8]: this
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: this
  ORIGINAL[9]: this
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: this
  ORIGINAL[10]: this
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: this

CENTER_NODE: 30064771941
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int[] LexerPath.ZZ_TRANS = zzUnpackTrans()
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: LexerPath.ZZ_TRANS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: zzUnpackTrans()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 68719476941
FRAGMENT_COUNT: 6
  ORIGINAL[0]: this.data
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1
  ORIGINAL[1]: new CyclicBarrier(2)
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( 2 )
  ORIGINAL[2]: this.receivedBarrier
  TYPE[2]: CALL
  TOKENIZED[2]: this . VAR1
  ORIGINAL[3]: this.responseStream
  TYPE[3]: CALL
  TOKENIZED[3]: this . VAR1
  ORIGINAL[4]: responseStream
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: this
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: this

CENTER_NODE: 30064771951
FRAGMENT_COUNT: 3
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: \
  TYPE[2]: CALL
  TOKENIZED[2]: \

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771909
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int LexerPath.YYINITIAL = 0
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 0
  ORIGINAL[1]: LexerPath.YYINITIAL
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 5
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch
  ORIGINAL[3]: catch
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: catch
  ORIGINAL[4]: catch
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: catch

CENTER_NODE: 30064771225
FRAGMENT_COUNT: 6
  ORIGINAL[0]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.OK, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , VAR5 )
  ORIGINAL[1]: NanoHTTPD.Response.Status.OK
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[2]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: body
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771913
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int[] LexerPath.ZZ_LEXSTATE = { 0, 1 }
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 . VAR2 = { 0 , 1 }
  ORIGINAL[1]: LexerPath.ZZ_LEXSTATE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: { 0, 1 }
  TYPE[2]: CALL
  TOKENIZED[2]: { 0 , 1 }

CENTER_NODE: 30064771384
FRAGMENT_COUNT: 12
  ORIGINAL[0]: i < l
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: result[j++] = value
  TYPE[1]: CALL
  TOKENIZED[1]: result[j++] = VAR1
  ORIGINAL[2]: result[j++]
  TYPE[2]: CALL
  TOKENIZED[2]: result[j++]
  ORIGINAL[3]: j++
  TYPE[3]: CALL
  TOKENIZED[3]: j++
  ORIGINAL[4]: --count > 0
  TYPE[4]: CALL
  TOKENIZED[4]: --count > 0
  ORIGINAL[5]: --count
  TYPE[5]: CALL
  TOKENIZED[5]: --count
  ORIGINAL[6]: do {...} while (--count > 0)
  TYPE[6]: CONTROL_STRUCTURE
  TOKENIZED[6]: do { . . . } while ( --count > 0 )
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: result
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: j
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: value
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: count
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771940
FRAGMENT_COUNT: 2
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \

CENTER_NODE: 68719477036
FRAGMENT_COUNT: 5
  ORIGINAL[0]: handleGetRequest(session, true)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , true )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: session
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: method
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: session
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771904
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int LexerPath.YYEOF = -1
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = -1
  ORIGINAL[1]: LexerPath.YYEOF
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 68719477062
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int[] result = new int[35]
  TYPE[0]: CALL
  TOKENIZED[0]: int[] VAR1 = new int[35]
  ORIGINAL[1]: int offset = 0
  TYPE[1]: CALL
  TOKENIZED[1]: int VAR1 = 0
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_mysql_host == null || stonesoup_mysql_user == null || stonesoup_mysql_pass == null || stonesoup_mysql_port == null || stonesoup_mysql_dbname == null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == null || VAR2 == null || VAR3 == null || VAR4 == null || VAR5 == null
  ORIGINAL[1]: StringBuffer jdbc = new StringBuffer(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 VAR2 = new FUN1 ( \
  ORIGINAL[2]: new StringBuffer(\
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( \
  ORIGINAL[3]: jdbc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: jdbc
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771604
FRAGMENT_COUNT: 3
  ORIGINAL[0]: zzBuffer[zzStartRead + pos]
  TYPE[0]: CALL
  TOKENIZED[0]: zzBuffer[zzStartRead + pos]
  ORIGINAL[1]: this.zzBuffer
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: zzStartRead + pos
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (true)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( true )

CENTER_NODE: 68719477056
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.receivedBarrier.await()
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( )
  ORIGINAL[1]: new IOException(\
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( \
  ORIGINAL[2]: $obj0
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: $obj0

