# Tokenized code fragments for 156676-v1.0.0-bad
# Total center nodes processed: 34
# Total code fragments found: 151

CENTER_NODE: 68719477074
FRAGMENT_COUNT: 6
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: filename = filename.substring(0, idx)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[2]: filename.substring(0, idx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filename
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771475
FRAGMENT_COUNT: 2
  ORIGINAL[0]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[1]: IndexFileNames.tomefulBukat
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 7
  ORIGINAL[0]: new HashMap<String, String>()
  TYPE[0]: CALL
  TOKENIZED[0]: new HashMap<String , String> ( )
  ORIGINAL[1]: parseBody(bodyFiles)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: session
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bodyFiles
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: session
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: session
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: session
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: finally
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: finally

CENTER_NODE: 47244640280
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 5
  ORIGINAL[0]: handleGetRequest(session, false)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , false )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: session
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: method
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: session
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 4
  ORIGINAL[0]: setResponseOptions(session, response)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this
  ORIGINAL[2]: session
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771488
FRAGMENT_COUNT: 4
  ORIGINAL[0]: String IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: COMPOUND_FILE_ENTRIES_EXTENSION
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771204
FRAGMENT_COUNT: 4
  ORIGINAL[0]: setRequestMethod(session.getMethod())
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . FUN2 ( ) )
  ORIGINAL[1]: getMethod()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: response
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: session
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 68719476809
FRAGMENT_COUNT: 9
  ORIGINAL[0]: NanoHTTPD.Response response = new NanoHTTPD.Response(NanoHTTPD.Response.Status.CREATED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR1 . VAR2 . VAR4 . VAR5 , VAR1 . VAR6 , VAR7 )
  ORIGINAL[1]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.CREATED, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , VAR5 )
  ORIGINAL[2]: NanoHTTPD.Response.Status.CREATED
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[3]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: NanoHTTPD
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: body
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: response
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476790
FRAGMENT_COUNT: 7
  ORIGINAL[0]: setStatus(NanoHTTPD.Response.Status.OK)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . VAR2 . VAR3 . VAR4 )
  ORIGINAL[1]: setMimeType(NanoHTTPD.MIME_PLAINTEXT)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 . VAR2 )
  ORIGINAL[2]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NanoHTTPD
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: response
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 2
  ORIGINAL[0]: idx == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1
  ORIGINAL[1]: if (idx == -1)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 == -1 )

CENTER_NODE: 47244640257
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 30064771330
FRAGMENT_COUNT: 18
  ORIGINAL[0]: null != maithili_constantness
  TYPE[0]: CALL
  TOKENIZED[0]: null != VAR1
  ORIGINAL[1]: random = SecureRandom.getInstance(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 . FUN1 ( \
  ORIGINAL[2]: SecureRandom.getInstance(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \
  ORIGINAL[3]: tracepointError(e.getClass().getName() + \
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 . FUN2 ( ) . FUN3 ( ) + \
  ORIGINAL[4]: e.getClass().getName() + \
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[5]: e.getClass().getName() + \
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . FUN1 ( ) . FUN2 ( ) + \
  ORIGINAL[6]: e.getClass().getName()
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . FUN1 ( ) . FUN2 ( )
  ORIGINAL[7]: e.getClass()
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 . FUN1 ( )
  ORIGINAL[8]: e.getMessage()
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 . FUN1 ( )
  ORIGINAL[9]: IndexFileNames.pseudoleucocyteInharmoniously.println(\
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 . VAR2 . FUN1 ( \
  ORIGINAL[10]: IndexFileNames.pseudoleucocyteInharmoniously
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 . VAR2
  ORIGINAL[11]: pseudoleucocyteInharmoniously
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: random
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: Tracer
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: e
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: e
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: IndexFileNames
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: Tracer
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 4
  ORIGINAL[0]: CyclicBarrier this.receivedBarrier = new CyclicBarrier(2)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 this . VAR2 = new FUN1 ( 2 )
  ORIGINAL[1]: this.receivedBarrier
  TYPE[1]: CALL
  TOKENIZED[1]: this . VAR1
  ORIGINAL[2]: new CyclicBarrier(2)
  TYPE[2]: CALL
  TOKENIZED[2]: new FUN1 ( 2 )
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 30064771458
FRAGMENT_COUNT: 10
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: filename = filename.substring(0, idx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[3]: filename.substring(0, idx)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . FUN1 ( 0 , VAR2 )
  ORIGINAL[4]: if (idx != -1)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: if ( VAR1 != -1 )
  ORIGINAL[5]: idx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: filename
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: filename
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: idx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: filename
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 30064771469
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int IndexFileNames.eruptivity_teakwood = 4
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 4
  ORIGINAL[1]: IndexFileNames.eruptivity_teakwood
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: eruptivity_teakwood
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719477049
FRAGMENT_COUNT: 3
  ORIGINAL[0]: filename.endsWith(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476902
FRAGMENT_COUNT: 6
  ORIGINAL[0]: gen == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: new StringBuilder(base.length() + 6 + ext.length()).append(base).append('_')
  TYPE[1]: CALL
  TOKENIZED[1]: new FUN1 ( VAR1 . FUN2 ( ) + 6 + VAR2 . FUN2 ( ) ) . FUN3 ( VAR1 ) . FUN3 ( '_' )
  ORIGINAL[2]: Long.toString(gen, Character.MAX_RADIX)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( VAR2 , VAR3 . VAR4 )
  ORIGINAL[3]: Character.MAX_RADIX
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: Long
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: gen
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771471
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrintStream IndexFileNames.pseudoleucocyteInharmoniously = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: IndexFileNames.pseudoleucocyteInharmoniously
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: pseudoleucocyteInharmoniously
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771225
FRAGMENT_COUNT: 3
  ORIGINAL[0]: this.receivedBarrier.await()
  TYPE[0]: CALL
  TOKENIZED[0]: this . VAR1 . FUN1 ( )
  ORIGINAL[1]: throw new IOException(\
  TYPE[1]: CALL
  TOKENIZED[1]: throw new FUN1 ( \
  ORIGINAL[2]: this
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: this

CENTER_NODE: 47244640282
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771201
FRAGMENT_COUNT: 7
  ORIGINAL[0]: new NanoHTTPD.Response(status, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[0]: CALL
  TOKENIZED[0]: new VAR1 . FUN1 ( VAR2 , VAR1 . VAR3 , VAR4 )
  ORIGINAL[1]: NanoHTTPD.MIME_PLAINTEXT
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: MIME_PLAINTEXT
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: response
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: status
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NanoHTTPD
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: body
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771478
FRAGMENT_COUNT: 3
  ORIGINAL[0]: String IndexFileNames.SEGMENTS = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = \
  ORIGINAL[1]: IndexFileNames.SEGMENTS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: SEGMENTS
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 3
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719476778
FRAGMENT_COUNT: 6
  ORIGINAL[0]: body = String.format(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . FUN1 ( \
  ORIGINAL[1]: NanoHTTPD.Response response = new NanoHTTPD.Response(NanoHTTPD.Response.Status.OK, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 VAR3 = new VAR1 . FUN1 ( VAR1 . VAR2 . VAR4 . VAR5 , VAR1 . VAR6 , VAR7 )
  ORIGINAL[2]: new NanoHTTPD.Response(NanoHTTPD.Response.Status.OK, NanoHTTPD.MIME_PLAINTEXT, body)
  TYPE[2]: CALL
  TOKENIZED[2]: new VAR1 . FUN1 ( VAR1 . Response . VAR2 . VAR3 , VAR1 . VAR4 , VAR5 )
  ORIGINAL[3]: sendBody
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: response
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: response
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477062
FRAGMENT_COUNT: 5
  ORIGINAL[0]: idx != -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != -1
  ORIGINAL[1]: filename.substring(idx)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: idx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771497
FRAGMENT_COUNT: 4
  ORIGINAL[0]: Pattern IndexFileNames.CODEC_FILE_PATTERN = Pattern.compile(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = VAR1 . FUN1 ( \
  ORIGINAL[1]: IndexFileNames.CODEC_FILE_PATTERN
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: Pattern.compile(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( \
  ORIGINAL[3]: Pattern
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

