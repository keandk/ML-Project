# Tokenized code fragments for 156210-v1.0.0-bad
# Total center nodes processed: 54
# Total code fragments found: 190

CENTER_NODE: 30064771213
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getFloat(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477074
FRAGMENT_COUNT: 3
  ORIGINAL[0]: value >>> 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >>> 8
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: finally
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: finally

CENTER_NODE: 30064771345
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (short) (data[offset] & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: ( short ) ( data[offset] & 0xFF )
  ORIGINAL[1]: data[offset] & 0xFF
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset] & 0xFF
  ORIGINAL[2]: data[offset]
  TYPE[2]: CALL
  TOKENIZED[2]: data[offset]

CENTER_NODE: 30064771551
FRAGMENT_COUNT: 3
  ORIGINAL[0]: data[i++] = (byte) ((value >>> 24) & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: data[i++] = ( byte ) ( ( VAR1 >>> 24 ) & 0xFF )
  ORIGINAL[1]: data[i++]
  TYPE[1]: CALL
  TOKENIZED[1]: data[i++]
  ORIGINAL[2]: (byte) ((value >>> 24) & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( ( VAR1 >>> 24 ) & 0xFF )

CENTER_NODE: 68719476991
FRAGMENT_COUNT: 4
  ORIGINAL[0]: putInt(data, offset, Float.floatToIntBits(value))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 . FUN2 ( VAR4 ) )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: Float
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771214
FRAGMENT_COUNT: 3
  ORIGINAL[0]: Float.intBitsToFloat(getInt(data, offset))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( FUN2 ( VAR2 , VAR3 ) )
  ORIGINAL[1]: getInt(data, offset)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: Float
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476970
FRAGMENT_COUNT: 3
  ORIGINAL[0]: data[offset]
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset]
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476923
FRAGMENT_COUNT: 10
  ORIGINAL[0]: LittleEndian.alkylizeMistrusting.compareAndSet(false, true)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 . FUN1 ( false , true )
  ORIGINAL[1]: !downcastRebundle.getParentFile().exists() && !downcastRebundle.getParentFile().mkdirs()
  TYPE[1]: CALL
  TOKENIZED[1]: !downcastRebundle . FUN1 ( ) . FUN2 ( ) && !downcastRebundle . FUN1 ( ) . FUN3 ( )
  ORIGINAL[2]: throw new RuntimeException(\
  TYPE[2]: CALL
  TOKENIZED[2]: throw new FUN1 ( \
  ORIGINAL[3]: LittleEndian.mediaLipogenous != null
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2 != null
  ORIGINAL[4]: LittleEndian.mediaLipogenous.close()
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2 . FUN1 ( )
  ORIGINAL[5]: long result = 0xff & data[offset + 7]
  TYPE[5]: CALL
  TOKENIZED[5]: long VAR1 = 0xff & data[offset + 7]
  ORIGINAL[6]: 0xff & data[offset + 7]
  TYPE[6]: CALL
  TOKENIZED[6]: 0xff & data[offset + 7]
  ORIGINAL[7]: result
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: result
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: result
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719476998
FRAGMENT_COUNT: 2
  ORIGINAL[0]: putInt(data, 0, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477194
FRAGMENT_COUNT: 2
  ORIGINAL[0]: b & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0xFF
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (byte) ((value >>> 0) & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: ( byte ) ( ( VAR1 >>> 0 ) & 0xFF )
  ORIGINAL[1]: (value >>> 0) & 0xFF
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 >>> 0 ) & 0xFF
  ORIGINAL[2]: value >>> 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >>> 0

CENTER_NODE: 30064771667
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (short) readUShort(stream)
  TYPE[0]: CALL
  TOKENIZED[0]: ( short ) FUN1 ( VAR1 )
  ORIGINAL[1]: readUShort(stream)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )

CENTER_NODE: 30064771690
FRAGMENT_COUNT: 4
  ORIGINAL[0]: LittleEndian.alkylizeMistrusting
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: new java.util.concurrent.atomic.AtomicBoolean(false)
  TYPE[1]: CALL
  TOKENIZED[1]: new VAR1 . VAR2 . VAR3 . VAR4 . FUN1 ( false )
  ORIGINAL[2]: LittleEndian.alkylizeMistrusting
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: alkylizeMistrusting
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771682
FRAGMENT_COUNT: 2
  ORIGINAL[0]: int LittleEndian.pythagoreanism_misthought = 19
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 . VAR2 = 19
  ORIGINAL[1]: LittleEndian.pythagoreanism_misthought
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771241
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getLong(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476964
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getUInt(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771204
FRAGMENT_COUNT: 2
  ORIGINAL[0]: long LittleEndian$BufferUnderrunException.serialVersionUID = 8736973884877006145L
  TYPE[0]: CALL
  TOKENIZED[0]: long LittleEndian$BufferUnderrunException . VAR1 = 8736973884877006145L
  ORIGINAL[1]: LittleEndian$BufferUnderrunException.serialVersionUID
  TYPE[1]: CALL
  TOKENIZED[1]: LittleEndian$BufferUnderrunException . VAR1

CENTER_NODE: 30064771529
FRAGMENT_COUNT: 5
  ORIGINAL[0]: data[offset] = (byte) (value & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset] = ( byte ) ( VAR1 & 0xFF )
  ORIGINAL[1]: data[offset]
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset]
  ORIGINAL[2]: (byte) (value & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( VAR1 & 0xFF )
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477110
FRAGMENT_COUNT: 6
  ORIGINAL[0]: outputStream.write((byte) ((value >>> 0) & 0xFF))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 0 ) & 0xFF ) )
  ORIGINAL[1]: outputStream.write((byte) ((value >>> 8) & 0xFF))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ( byte ) ( ( VAR2 >>> 8 ) & 0xFF ) )
  ORIGINAL[2]: (byte) ((value >>> 8) & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( ( VAR1 >>> 8 ) & 0xFF )
  ORIGINAL[3]: outputStream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: outputStream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: outputStream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < result.length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 . VAR3
  ORIGINAL[1]: i * SHORT_SIZE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 * VAR2
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: SHORT_SIZE
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477186
FRAGMENT_COUNT: 6
  ORIGINAL[0]: int ch1 = stream.read()
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2 . FUN1 ( )
  ORIGINAL[1]: int ch2 = stream.read()
  TYPE[1]: CALL
  TOKENIZED[1]: int VAR1 = VAR2 . FUN1 ( )
  ORIGINAL[2]: stream.read()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: ch2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ch2
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477128
FRAGMENT_COUNT: 5
  ORIGINAL[0]: int ch1 = stream.read()
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2 . FUN1 ( )
  ORIGINAL[1]: stream.read()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: ch1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ch1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771341
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (short) (data[0] & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: ( short ) ( data[0] & 0xFF )
  ORIGINAL[1]: data[0] & 0xFF
  TYPE[1]: CALL
  TOKENIZED[1]: data[0] & 0xFF

CENTER_NODE: 30064771684
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrintStream LittleEndian.mediaLipogenous = null
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 VAR2 . VAR3 = null
  ORIGINAL[1]: LittleEndian.mediaLipogenous
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2

CENTER_NODE: 30064771355
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int b0 = data[offset] & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = data[offset] & 0xFF
  ORIGINAL[1]: data[offset] & 0xFF
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset] & 0xFF
  ORIGINAL[2]: data[offset]
  TYPE[2]: CALL
  TOKENIZED[2]: data[offset]
  ORIGINAL[3]: b0
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cagayan_toluene > 10
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 10
  ORIGINAL[1]: tearletSulphazotize(cagayan_toluene++, resistance_unindicative)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( cagayan_toluene++ , VAR1 )
  ORIGINAL[2]: cagayan_toluene++
  TYPE[2]: CALL
  TOKENIZED[2]: cagayan_toluene++
  ORIGINAL[3]: if (cagayan_toluene > 10)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: if ( VAR1 > 10 )
  ORIGINAL[4]: cagayan_toluene
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cagayan_toluene
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: resistance_unindicative
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: Tracer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477014
FRAGMENT_COUNT: 3
  ORIGINAL[0]: value >>> 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >>> 0
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476988
FRAGMENT_COUNT: 3
  ORIGINAL[0]: Double.doubleToLongBits(value)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[1]: Double
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771216
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getInt(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771557
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putUInt(data, 0, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477176
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (long) ch7
  TYPE[0]: CALL
  TOKENIZED[0]: ( long ) VAR1
  ORIGINAL[1]: ch7
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ch7
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771578
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data[i++] = (byte) ((value >>> 0) & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: data[i++] = ( byte ) ( ( VAR1 >>> 0 ) & 0xFF )
  ORIGINAL[1]: data[i++]
  TYPE[1]: CALL
  TOKENIZED[1]: data[i++]
  ORIGINAL[2]: (byte) ((value >>> 0) & 0xFF)
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) ( ( VAR1 >>> 0 ) & 0xFF )
  ORIGINAL[3]: (value >>> 0) & 0xFF
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 >>> 0 ) & 0xFF

CENTER_NODE: 68719477031
FRAGMENT_COUNT: 5
  ORIGINAL[0]: offset + 3
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + 3
  ORIGINAL[1]: offset
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771211
FRAGMENT_COUNT: 3
  ORIGINAL[0]: Double.longBitsToDouble(getLong(data, offset))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( FUN2 ( VAR2 , VAR3 ) )
  ORIGINAL[1]: getLong(data, offset)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: Double
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771510
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putShort(data, 0, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771207
FRAGMENT_COUNT: 4
  ORIGINAL[0]: byte[] copy = new byte[size]
  TYPE[0]: CALL
  TOKENIZED[0]: byte[] VAR1 = new byte[size]
  ORIGINAL[1]: new byte[size]
  TYPE[1]: CALL
  TOKENIZED[1]: new byte[size]
  ORIGINAL[2]: copy
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771322
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int b1 = data[offset + 1] & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = data[offset + 1] & 0xFF
  ORIGINAL[1]: data[offset + 1] & 0xFF
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset + 1] & 0xFF
  ORIGINAL[2]: data[offset + 1]
  TYPE[2]: CALL
  TOKENIZED[2]: data[offset + 1]
  ORIGINAL[3]: b1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771619
FRAGMENT_COUNT: 2
  ORIGINAL[0]: retNum & 0x00FFFFFFFFl
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x00FFFFFFFFl
  ORIGINAL[1]: retNum
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476966
FRAGMENT_COUNT: 4
  ORIGINAL[0]: getInt(data, offset)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: retNum
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 5
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch
  ORIGINAL[2]: catch
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: catch
  ORIGINAL[3]: catch
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: catch
  ORIGINAL[4]: catch
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: catch

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 2
  ORIGINAL[0]: super(\
  TYPE[0]: CALL
  TOKENIZED[0]: super ( \
  ORIGINAL[1]: this
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: this

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 2
  ORIGINAL[0]: try
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: try
  ORIGINAL[1]: catch
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: catch

CENTER_NODE: 68719477075
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int offset = startOffset
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = VAR2
  ORIGINAL[1]: offset
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: startOffset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771594
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (value >>> 8) & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 >>> 8 ) & 0xFF
  ORIGINAL[1]: value >>> 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >>> 8
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476983
FRAGMENT_COUNT: 3
  ORIGINAL[0]: putLong(data, offset, Double.doubleToLongBits(value))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 . FUN2 ( VAR4 ) )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771384
FRAGMENT_COUNT: 6
  ORIGINAL[0]: data[i++] = (byte) ((value >>> 8) & 0xFF)
  TYPE[0]: CALL
  TOKENIZED[0]: data[i++] = ( byte ) ( ( VAR1 >>> 8 ) & 0xFF )
  ORIGINAL[1]: data[i++]
  TYPE[1]: CALL
  TOKENIZED[1]: data[i++]
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: (byte) ((value >>> 8) & 0xFF)
  TYPE[3]: CALL
  TOKENIZED[3]: ( byte ) ( ( VAR1 >>> 8 ) & 0xFF )
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: data
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476995
FRAGMENT_COUNT: 3
  ORIGINAL[0]: Float.floatToIntBits(value)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[1]: Float
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476853
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getLong(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: Double
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771353
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getUShort(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771476
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (value >>> 16) & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 >>> 16 ) & 0xFF
  ORIGINAL[1]: value >>> 16
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >>> 16
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771366
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data[offset] = (byte) value
  TYPE[0]: CALL
  TOKENIZED[0]: data[offset] = ( byte ) VAR1
  ORIGINAL[1]: data[offset]
  TYPE[1]: CALL
  TOKENIZED[1]: data[offset]
  ORIGINAL[2]: (byte) value
  TYPE[2]: CALL
  TOKENIZED[2]: ( byte ) VAR1
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 6
  ORIGINAL[0]: int b0 = data[i++] & 0xFF
  TYPE[0]: CALL
  TOKENIZED[0]: int VAR1 = data[i++] & 0xFF
  ORIGINAL[1]: int b1 = data[i++] & 0xFF
  TYPE[1]: CALL
  TOKENIZED[1]: int VAR1 = data[i++] & 0xFF
  ORIGINAL[2]: data[i++] & 0xFF
  TYPE[2]: CALL
  TOKENIZED[2]: data[i++] & 0xFF
  ORIGINAL[3]: b1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b1
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771317
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getShort(data, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

