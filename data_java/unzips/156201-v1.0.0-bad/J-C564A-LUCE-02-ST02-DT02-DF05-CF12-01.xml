<?xml version="1.0" encoding="utf-8"?>
<project base_program="J-LUCE" language="JAVA" name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01" targeted_architecture="ANY" targeted_os="LINUX" test_case_type="ALL" xmlns="urn:stonesoup:project">
    <description>Using Hibernate to execute a dynamic SQL statement
 with built-in user-controlled input can allow an attacker to
 modify the statement's meaning or to execute arbitrary SQL commands.
</description>
    <additional_information>
        <keyvalue key="JAVA_MAIN">org.apache.lucene.demo.IndexFiles:org.apache.lucene.demo.SearchFiles:org.apache.lucene.demo.facet.SimpleFacetsExample:org.apache.lucene.demo.facet.AssociationsFacetsExample</keyvalue>
        <keyvalue key="JAVA_CLASSPATH">$SS_TC_DEPS/java/lucene/*:$SS_TC_ROOT/$SS_TC_INSTALL/classes/*:$SS_TC_ROOT/$SS_TC_INSTALL/*:$SS_TC_DEPS/java/stonesoup/hibernate/mysql/*:$SS_TC_DEPS/java/stonesoup/lttng/lttng-stonesoup-0.1.jar</keyvalue>
        <keyvalue key="algorithmic_variant_name">UNSPECIFIED</keyvalue>
        <keyvalue key="root_cause">UNSPECIFIED</keyvalue>
    </additional_information>
    <structure install="install" iodata="testData" scoredata="testOutput" scripts="scripts" source="src"/>
    <run_command>java $SS_JAVA_OPTS -Djava.library.path=$SS_TC_DEPS/lib64/ -cp &quot;$SS_JAVA_CLASSPATH&quot;</run_command>
    <weakness generation_method="FAULT_INJECTED">
        <variant cwe="CWE-564" name="CWE-564-A">
            <crossover_point file_name="/tmp/tmpSLwZ8J_ss_testcase/src/core/src/java/org/apache/lucene/LucenePackage.java" line_number="0">
                <method name="brewDittographic"/>
            </crossover_point>
            <trigger_point file_name="/tmp/tmpSLwZ8J_ss_testcase/src/core/src/java/org/apache/lucene/LucenePackage.java" line_number="0">
                <method name="brewDittographic"/>
            </trigger_point>
        </variant>
        <features>
            <taint_source file_name="/tmp/tmpSLwZ8J_ss_testcase/src/core/src/java/org/apache/lucene/LucenePackage.java" line_number="0" type="FILE_CONTENTS">
                <method name="get"/>
            </taint_source>
            <data_type file_name="/tmp/tmpSLwZ8J_ss_testcase/src/core/src/java/org/apache/lucene/LucenePackage.java" line_number="0" type="SIMPLE">
                <method name="get"/>
            </data_type>
            <data_flow file_name="/tmp/tmpSLwZ8J_ss_testcase/src/core/src/java/org/apache/lucene/LucenePackage.java" line_number="0" type="ADDRESS_AS_CONSTANT">
                <method name="get"/>
            </data_flow>
            <control_flow file_name="/tmp/tmpSLwZ8J_ss_testcase/src/core/src/java/org/apache/lucene/LucenePackage.java" line_number="0" type="INTERPROCEDURAL_1">
                <method name="get"/>
            </control_flow>
        </features>
    </weakness>
    <build_commands>
        <command>env ANT_HOME=$SS_TC_DEPS/ant ant $SS_ANT_OPTS -Dstonesoup.database.postgres.required=no -Dstonesoup.hibernate.postgres.required=no -Dstonesoup.hibernate.mysql.required=yes -Dstonesoup.database.mysql.required=no -Dstonesoup.socket.required=no -lib $SS_TC_DEPS/java/stonesoup/lttng/lttng-stonesoup-0.1.jar -Dstonesoup.socket.lib.dir=&quot;$SS_TC_DEPS/java/stonesoup/socket&quot; -Dstonesoup.hibernate.mysql.lib.dir=&quot;$SS_TC_DEPS/java/stonesoup/hibernate/mysql&quot; -Dstonesoup.hibernate.postgres.lib.dir=&quot;$SS_TC_DEPS/java/stonesoup/hibernate/postgres&quot; -Dstonesoup.database.mysql.lib.dir=&quot;$SS_TC_DEPS/java/stonesoup/database/mysql&quot; -Dstonesoup.database.postgres.lib.dir=&quot;$SS_TC_DEPS/java/stonesoup/database/postgres&quot; -Dlib.dir=$SS_TC_DEPS/java/lucene -Ddist.dir=&quot;$SS_TC_ROOT/$SS_TC_INSTALL&quot; -Dbuild.dir=&quot;$SS_TC_ROOT/$SS_TC_INSTALL&quot; -Dstonesoup.lttng.lib.dir=&quot;$SS_TC_DEPS/java/stonesoup/lttng&quot; -Dstonesoup.lttng.dummy.lib.dir=&quot;$SS_TC_DEPS/java/stonesoup/lttng-dummy&quot; compile</command>
    </build_commands>
    <iopairs>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-01" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>index a single file
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">USA</file>
                </process>
                <process>
                    <database database_name="northwind_ekcbznmbqwxolaqe" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_ekcbznmbqwxolaqe.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_ekcbznmbqwxolaqe</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.IndexFiles -index $SS_TC_ROOT/$SS_TC_DATA/good-01-index -docs $SS_TC_ROOT/$SS_TC_DATA/good-01/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_ekcbznmbqwxolaqe" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_4hESJNUWcM" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-01-Default">
                <formula name="GOOD-01-Default">GOOD-01 AND GOOD-02 AND GOOD-03 AND GOOD-04 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <simple_check check_type="SCRIPT" encoding="STRING" name="GOOD-01" type="USE_TEXT">
                    if [[ -a ../testData/good-01-index/_0.cfe ]]; then exit 0; else exit 1; fi;
                </simple_check>
                <simple_check check_type="SCRIPT" encoding="STRING" name="GOOD-02" type="USE_TEXT">
                    if [[ -a ../testData/good-01-index/_0.cfs ]]; then exit 0; else exit 1; fi;
                </simple_check>
                <compare_check check_type="CONTAINS" name="GOOD-03">
                    <actual output_type="FILE_CONTENTS">../testData/good-01-index/segments_1</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-01/segments_1</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-04">
                    <actual output_type="FILE_CONTENTS">good-01-index/segments.gen</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-01/segments.gen</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-02" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>search a single indexed file for &quot;bubbles&quot;
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">Germany</file>
                </process>
                <process>
                    <database database_name="northwind_uafxtuakglpjdlul" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_uafxtuakglpjdlul.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_uafxtuakglpjdlul</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.SearchFiles -query bubbles -index $SS_TC_ROOT/$SS_TC_DATA/good-02/index/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_uafxtuakglpjdlul" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_9XsqD9nhcv" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-02-Default">
                <formula name="GOOD-02-Default">GOOD-02 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-02">
                    <actual output_type="STANDARD_OUT"></actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-02/output.txt</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-03" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>index two files
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">Finland</file>
                </process>
                <process>
                    <database database_name="northwind_beoekanlhgnlmqjq" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_beoekanlhgnlmqjq.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_beoekanlhgnlmqjq</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.IndexFiles -index $SS_TC_ROOT/$SS_TC_DATA/good-03-index -docs $SS_TC_ROOT/$SS_TC_DATA/good-03/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_beoekanlhgnlmqjq" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_vx975AAWzJ" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-03-Default">
                <formula name="GOOD-03-Default">GOOD-01 AND GOOD-02 AND GOOD-03 AND GOOD-04 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <simple_check check_type="SCRIPT" encoding="STRING" name="GOOD-01" type="USE_TEXT">
                    if [[ -a ../testData/good-03-index/_0.cfe ]]; then exit 0; else exit 1; fi;
                </simple_check>
                <simple_check check_type="SCRIPT" encoding="STRING" name="GOOD-02" type="USE_TEXT">
                    if [[ -a ../testData/good-03-index/_0.cfe ]]; then exit 0; else exit 1; fi;
                </simple_check>
                <compare_check check_type="CONTAINS" name="GOOD-03">
                    <actual output_type="FILE_CONTENTS">../testData/good-03-index/segments_1</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-03/segments_1</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-04">
                    <actual output_type="FILE_CONTENTS">../testData/good-03-index/segments.gen</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-03/segments.gen</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-04" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>search two indexed files
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">USA</file>
                </process>
                <process>
                    <database database_name="northwind_bfyiffedkvzjmwnm" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_bfyiffedkvzjmwnm.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_bfyiffedkvzjmwnm</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.SearchFiles -query Sawyer -index $SS_TC_ROOT/$SS_TC_DATA/good-04/index/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_bfyiffedkvzjmwnm" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_Nw4ofZDM1t" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-04-Default">
                <formula name="GOOD-04-Default">GOOD-04 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-04">
                    <actual output_type="STANDARD_OUT"></actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-04/output.txt</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-05" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>search files
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">Germany</file>
                </process>
                <process>
                    <database database_name="northwind_fpmnjrnxwxxzsfvb" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_fpmnjrnxwxxzsfvb.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_fpmnjrnxwxxzsfvb</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.SearchFiles -query microfilm -index $SS_TC_ROOT/$SS_TC_DATA/good-05/index/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_fpmnjrnxwxxzsfvb" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_kFp21VEnuE" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-05-Default">
                <formula name="GOOD-05-Default">GOOD-05 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-05">
                    <actual output_type="STANDARD_OUT"></actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-05/output.txt</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-06" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>search by facets
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">Finland</file>
                </process>
                <process>
                    <database database_name="northwind_vpqizrtqebihqxjr" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_vpqizrtqebihqxjr.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_vpqizrtqebihqxjr</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.facet.SimpleFacetsExample</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_vpqizrtqebihqxjr" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_tDJHiovUb2" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-06-Default">
                <formula name="GOOD-06-Default">GOOD-06 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-06">
                    <actual output_type="STANDARD_OUT"></actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-06/output.txt</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-07" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>search by facet association
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">USA</file>
                </process>
                <process>
                    <database database_name="northwind_kyszhjacctoqojkj" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_kyszhjacctoqojkj.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_kyszhjacctoqojkj</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.facet.AssociationsFacetsExample</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_kyszhjacctoqojkj" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_y5pw7jE3s0" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-07-Default">
                <formula name="GOOD-07-Default">GOOD-07 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-07">
                    <actual output_type="STANDARD_OUT"></actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-07/output.txt</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-08" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>index a large number of files
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">Germany</file>
                </process>
                <process>
                    <database database_name="northwind_entpvblbkrkvpweb" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_entpvblbkrkvpweb.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_entpvblbkrkvpweb</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.IndexFiles -index $SS_TC_ROOT/$SS_TC_DATA/good-08-index -docs $SS_TC_ROOT/$SS_TC_DATA/good-08/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_entpvblbkrkvpweb" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_sq74uBueLs" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-08-Default">
                <formula name="GOOD-08-Default">GOOD-01 AND GOOD-02 AND GOOD-03 AND GOOD-04 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <simple_check check_type="SCRIPT" encoding="STRING" name="GOOD-01" type="USE_TEXT">
                    if [[ -a ../testData/good-08-index/_0.cfe ]]; then exit 0; else exit 1; fi;
                </simple_check>
                <simple_check check_type="SCRIPT" encoding="STRING" name="GOOD-02" type="USE_TEXT">
                    if [[ -a ../testData/good-08-index/_0.cfe ]]; then exit 0; else exit 1; fi;
                </simple_check>
                <compare_check check_type="CONTAINS" name="GOOD-03">
                    <actual output_type="FILE_CONTENTS">../testData/good-08-index/segments_1</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-08/segments_1</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-04">
                    <actual output_type="FILE_CONTENTS">../testData/good-08-index/segments.gen</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-08/segments.gen</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-09" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>search files using regular expression
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">Finland</file>
                </process>
                <process>
                    <database database_name="northwind_jkloidmpgzxbauqq" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_jkloidmpgzxbauqq.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_jkloidmpgzxbauqq</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.SearchFiles -query /\d\d\d/ -index $SS_TC_ROOT/$SS_TC_DATA/good-09/index/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_jkloidmpgzxbauqq" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_2wTEXLSN1L" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-09-Default">
                <formula name="GOOD-09-Default">GOOD-09 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-09">
                    <actual output_type="STANDARD_OUT"></actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-09/output.txt</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-GOOD-10" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>search files using fuzzy searching
Environment variable defining test value.
</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">USA</file>
                </process>
                <process>
                    <database database_name="northwind_wydsgtgbwedclsbx" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_wydsgtgbwedclsbx.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_wydsgtgbwedclsbx</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.SearchFiles -query &quot;password~ OR pengui*&quot; -index $SS_TC_ROOT/$SS_TC_DATA/good-09/index/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_wydsgtgbwedclsbx" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_knD6UWCHgF" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-10-Default">
                <formula name="GOOD-10-Default">GOOD-10 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-10">
                    <actual output_type="STANDARD_OUT"></actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-10/output.txt</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-BAD-01" reset_scheme="NONE" timeout="300" type="BAD">
            <description>Environment variable defining test value.
</description>
            <technical_impact>EXECUTE_UNAUTHORIZED_CODE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">x' or 'x'='x</file>
                </process>
                <process>
                    <database database_name="northwind_hqxovngihtwhhbdx" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_hqxovngihtwhhbdx.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_hqxovngihtwhhbdx</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.IndexFiles -index $SS_TC_ROOT/$SS_TC_DATA/good-01-index -docs $SS_TC_ROOT/$SS_TC_DATA/good-01/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_hqxovngihtwhhbdx" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <database database_name="northwind_hqxovngihtwhhbdx" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_M5uvYILE4U53YfRb2FLW" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="hibernate_sql_output_formula_1i5hKJ2aTx">
                <formula name="hibernate_sql_output_formula_1i5hKJ2aTx">weakness_started_DOkUrHE7JN4cSUAQcw4l AND ((NOT PERFORMER AND (hibernate_sql_output_VJ0i90W5JW OR hibernate_sql_output_Tp77vxGi65) AND NOT timeout_aTxCxNnMWv) or (PERFORMER AND NOT ((hibernate_sql_output_VJ0i90W5JW OR hibernate_sql_output_Tp77vxGi65) OR timeout_aTxCxNnMWv)))</formula>
                <formula name="no_weakness_started_formula_hnzCSKQAhW">(NOT PERFORMER AND (hibernate_sql_output_VJ0i90W5JW OR hibernate_sql_output_Tp77vxGi65) AND NOT timeout_aTxCxNnMWv) or (PERFORMER AND NOT ((hibernate_sql_output_VJ0i90W5JW OR hibernate_sql_output_Tp77vxGi65) OR timeout_aTxCxNnMWv))</formula>
            </scoring_formula>
            <output_checks>
                <simple_check check_type="SPECIAL" encoding="STRING" name="timeout_aTxCxNnMWv" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="controlled_exit_FV1dtueXYu" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="continued_execution_RkC7FnH4vG" type="USE_TEXT">CONTINUED_EXECUTION</simple_check>
                <compare_check check_type="CONTAINS" name="hibernate_sql_output_VJ0i90W5JW">
                    <actual encoding="STRING" output_type="FILE_CONTENTS">logfile.txt</actual>
                    <expected encoding="STRING" type="USE_TEXT">Zbyszek Piestrzeniewicz</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="hibernate_sql_output_Tp77vxGi65">
                    <actual encoding="STRING" output_type="FILE_CONTENTS">logfile.txt</actual>
                    <expected encoding="STRING" type="USE_TEXT">South House 300 Queensbridge</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="weakness_started_DOkUrHE7JN4cSUAQcw4l">
                    <actual encoding="STRING" input_id_ref="lttng_output_M5uvYILE4U53YfRb2FLW" output_type="STANDARD_OUT">None</actual>
                    <expected encoding="STRING" type="USE_TEXT">stonesoup_trace:weakness_start</expected>
                </compare_check>
            </output_checks>
        </iopair>
        <iopair name="J-C564A-LUCE-02-ST02-DT02-DF05-CF12-01-BAD-02" reset_scheme="NONE" timeout="300" type="BAD">
            <description>Environment variable defining test value.
</description>
            <technical_impact>EXECUTE_UNAUTHORIZED_CODE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env ANKLE_SCIENT;\nenv SS_DBMYSQLDATABASE;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="ANKLE_SCIENT" type="USE_TEXT">$SS_TC_ROOT/testData/dermatozoon_economic.bin</environment_variable>
                </process>
                <process>
                    <file encoding="STRING" path="$SS_TC_ROOT/testData/dermatozoon_economic.bin" type="USE_TEXT">x' or city='London</file>
                </process>
                <process>
                    <database database_name="northwind_odinvmkdmfslnspy" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_odinvmkdmfslnspy.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBMYSQLDATABASE" type="USE_TEXT">northwind_odinvmkdmfslnspy</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-java.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">org.apache.lucene.demo.SearchFiles -query microfilm -index $SS_TC_ROOT/$SS_TC_DATA/good-05/index/</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_odinvmkdmfslnspy" database_type="MYSQL" encoding="STRING" server="ss-db-mysql" type="USE_TEXT">DROP DATABASE IF EXISTS $SS_DBMYSQLDATABASE;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_YOobhwQ8qkwAyQIdb24N" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="hibernate_sql_output_formula_LLOQjHuaGN">
                <formula name="hibernate_sql_output_formula_LLOQjHuaGN">weakness_started_7sOX7yHkboCahmGNyE16 AND ((NOT PERFORMER AND (hibernate_sql_output_LSVyrbK03P OR hibernate_sql_output_HsOxu7lRnE) AND NOT timeout_2jAtFVpLvd) or (PERFORMER AND NOT ((hibernate_sql_output_LSVyrbK03P OR hibernate_sql_output_HsOxu7lRnE) OR timeout_2jAtFVpLvd)))</formula>
                <formula name="no_weakness_started_formula_wVJU4pijjc">(NOT PERFORMER AND (hibernate_sql_output_LSVyrbK03P OR hibernate_sql_output_HsOxu7lRnE) AND NOT timeout_2jAtFVpLvd) or (PERFORMER AND NOT ((hibernate_sql_output_LSVyrbK03P OR hibernate_sql_output_HsOxu7lRnE) OR timeout_2jAtFVpLvd))</formula>
            </scoring_formula>
            <output_checks>
                <simple_check check_type="SPECIAL" encoding="STRING" name="timeout_2jAtFVpLvd" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="controlled_exit_hIQ0XBgRMA" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="continued_execution_trusOAhWj2" type="USE_TEXT">CONTINUED_EXECUTION</simple_check>
                <compare_check check_type="CONTAINS" name="hibernate_sql_output_LSVyrbK03P">
                    <actual encoding="STRING" output_type="FILE_CONTENTS">logfile.txt</actual>
                    <expected encoding="STRING" type="USE_TEXT">Zbyszek Piestrzeniewicz</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="hibernate_sql_output_HsOxu7lRnE">
                    <actual encoding="STRING" output_type="FILE_CONTENTS">logfile.txt</actual>
                    <expected encoding="STRING" type="USE_TEXT">South House 300 Queensbridge</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="weakness_started_7sOX7yHkboCahmGNyE16">
                    <actual encoding="STRING" input_id_ref="lttng_output_YOobhwQ8qkwAyQIdb24N" output_type="STANDARD_OUT">None</actual>
                    <expected encoding="STRING" type="USE_TEXT">stonesoup_trace:weakness_start</expected>
                </compare_check>
            </output_checks>
        </iopair>
    </iopairs>
</project>
