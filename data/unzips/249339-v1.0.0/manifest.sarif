{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
  "runs": [
    {
      "properties": {
        "id": 249339,
        "version": "1.0.0",
        "type": "source code",
        "status": "accepted",
        "submissionDate": "2017-11-02",
        "language": "java",
        "author": "NSA/Center for Assured Software",
        "description": "CWE: 190 Integer Overflow\n BadSource: getCookies_Servlet Read data from the first cookie using getCookies()\n GoodSource: A hardcoded non-zero, non-min, non-max, even number\n Sinks: add\n GoodSink: Ensure there will not be an overflow before adding 1 to data\n BadSink : Add 1 to data, which can cause an overflow\n Flow Variant: 52 Data flow: data passed as an argument from one method to another to another in three different classes in the same package",
        "state": "mixed"
      },
      "tool": {
        "driver": {
          "name": "SARD - SAMATE",
          "fullName": "Software Assurance Reference Dataset Project",
          "informationUri": "https://samate.nist.gov/SARD/",
          "version": "5.0.0",
          "organization": "NIST",
          "supportedTaxonomies": [
            {
              "name": "CWE",
              "index": 0
            }
          ]
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "src/main/java/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_getCookies_Servlet_postinc_52a.java"
          },
          "length": 4238,
          "sourceLanguage": "java",
          "hashes": {
            "sha-256": "ed06f56b4cabfea4db74c9e1088c7073a001225ac0f4bedab98fa8cdf480b3d9"
          }
        },
        {
          "location": {
            "uri": "src/main/java/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_getCookies_Servlet_postinc_52b.java"
          },
          "length": 1766,
          "sourceLanguage": "java",
          "hashes": {
            "sha-256": "35b12d459bca8691b9426264c3b5c6eab6ba1728eb4e0ad4d1824cbc1c43563f"
          }
        },
        {
          "location": {
            "uri": "src/main/java/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_getCookies_Servlet_postinc_52c.java"
          },
          "length": 2130,
          "sourceLanguage": "java",
          "hashes": {
            "sha-256": "82584983987679f3f9ddff80624784e432dee4e65c5f2e400392932d145233ea"
          }
        },
        {
          "location": {
            "uri": "src/main/java/testcasesupport/AbstractTestCaseServlet.java"
          },
          "length": 3501,
          "sourceLanguage": "java",
          "hashes": {
            "sha-256": "7ff90f6c1a00b703a70ada485f76058c04143073ae5ccf70051d88b2bbeaadd0"
          }
        },
        {
          "location": {
            "uri": "src/main/java/testcasesupport/AbstractTestCaseServletBase.java"
          },
          "length": 3269,
          "sourceLanguage": "java",
          "hashes": {
            "sha-256": "5e0a00b7282e856cd3587ec6de93d49302f9e874d43f2c6dede40f86cecb9956"
          }
        },
        {
          "location": {
            "uri": "src/main/java/testcasesupport/IO.java"
          },
          "length": 3445,
          "sourceLanguage": "java",
          "hashes": {
            "sha-256": "13fbf67d65544fad1817458b4ee283e3115d2ea299b5c270137e797d8edebe36"
          }
        }
      ],
      "taxonomies": [
        {
          "name": "CWE",
          "version": "4.6",
          "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
          "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
          "organization": "MITRE",
          "shortDescription": {
            "text": "The MITRE Common Weakness Enumeration"
          },
          "isComprehensive": false,
          "taxa": [
            {
              "id": "190",
              "name": "Integer Overflow or Wraparound"
            }
          ]
        }
      ],
      "results": [
        {
          "ruleId": "CWE-190",
          "message": {
            "text": "Integer Overflow or Wraparound."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_getCookies_Servlet_postinc_52a.java",
                  "index": 0
                },
                "region": {
                  "startLine": 40
                }
              }
            }
          ],
          "taxa": [
            {
              "toolComponent": {
                "name": "CWE",
                "index": 0
              },
              "id": "190",
              "index": 0
            }
          ]
        }
      ]
    }
  ]
}
