# Subgraphs for folder: 241038-v2.0.0-mixed
# Total center nodes with subgraphs: 6

START_SUBGRAPH center_node=30064771152
# Node count: 7
# Neighbor count: 6
  "30064771152" -> "30064771153" [label="CDG"];
  "30064771152" -> "30064771154" [label="CDG"];
  "30064771152" -> "68719476780" [label="AST"];
  "30064771152" -> "68719476781" [label="POST_DOMINATE"];
  "30064771152" -> "68719476782" [label="DOMINATE"];
  "30064771152" [label="CALL", ARGUMENT_INDEX="-1", CODE="intPointer == NULL", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="131", METHOD_FULL_NAME="<operator>.equals", NAME="<operator>.equals", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771153" [label="CALL", ARGUMENT_INDEX="-1", CODE="exit(-1)", COLUMN_NUMBER="34", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="131", METHOD_FULL_NAME="<unresolvedNamespace>.exit:<unresolvedSignature>(1)", NAME="exit", ORDER="1", SIGNATURE="<unresolvedSignature>", TYPE_FULL_NAME="ANY"];
  "30064771154" [label="CALL", ARGUMENT_INDEX="1", CODE="-1", COLUMN_NUMBER="39", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="131", METHOD_FULL_NAME="<operator>.minus", NAME="<operator>.minus", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "47244640269" -> "30064771152" [label="CONDITION"];
  "47244640269" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if (intPointer == NULL) {exit(-1);}", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="131", ORDER="4", PARSER_TYPE_NAME="CPPASTIfStatement"];
  "68719476780" -> "30064771152" [label="REACHING_DEF", property="intPointer"];
  "68719476780" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="intPointer", COLUMN_NUMBER="13", LINE_NUMBER="131", NAME="intPointer", ORDER="1", TYPE_FULL_NAME="int*"];
  "68719476781" -> "30064771152" [label="REACHING_DEF", property="NULL"];
  "68719476781" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="NULL", COLUMN_NUMBER="27", LINE_NUMBER="131", NAME="NULL", ORDER="2", TYPE_FULL_NAME="ANY"];
  "68719476782" -> "30064771152" [label="POST_DOMINATE"];
  "68719476782" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="i", COLUMN_NUMBER="14", LINE_NUMBER="132", NAME="i", ORDER="1", TYPE_FULL_NAME="size_t"];
END_SUBGRAPH center_node=30064771152

START_SUBGRAPH center_node=68719476750
# Node count: 4
# Neighbor count: 3
  "30064771086" -> "68719476750" [label="CDG"];
  "30064771086" [label="CALL", ARGUMENT_INDEX="-1", CODE="listenSocket == INVALID_SOCKET", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="69", METHOD_FULL_NAME="<operator>.equals", NAME="<operator>.equals", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771094" -> "68719476750" [label="POST_DOMINATE"];
  "30064771094" [label="CALL", ARGUMENT_INDEX="-1", CODE="service.sin_addr.s_addr = INADDR_ANY", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="75", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="5", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771095" -> "68719476750" [label="DOMINATE"];
  "30064771095" [label="CALL", ARGUMENT_INDEX="1", CODE="service.sin_addr.s_addr", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="75", METHOD_FULL_NAME="<operator>.fieldAccess", NAME="<operator>.fieldAccess", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476750" -> "30064771094" [label="REACHING_DEF", property="INADDR_ANY"];
  "68719476750" -> "30064771095" [label="REACHING_DEF", property="INADDR_ANY"];
  "68719476750" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="INADDR_ANY", COLUMN_NUMBER="39", LINE_NUMBER="75", NAME="INADDR_ANY", ORDER="2", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=68719476750

START_SUBGRAPH center_node=30064771167
# Node count: 3
# Neighbor count: 2
  "30064771167" -> "68719476792" [label="POST_DOMINATE"];
  "30064771167" -> "68719476793" [label="DOMINATE"];
  "30064771167" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2BSource(data)", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="157", METHOD_FULL_NAME="CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.goodG2BSource:void(int&)", NAME="goodG2BSource", ORDER="3", SIGNATURE="void(int&)", TYPE_FULL_NAME="void"];
  "68719476792" -> "30064771167" [label="REACHING_DEF", property="data"];
  "68719476792" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="19", LINE_NUMBER="157", NAME="data", ORDER="1", TYPE_FULL_NAME="int"];
  "68719476793" -> "30064771167" [label="POST_DOMINATE"];
  "68719476793" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="intPointer", COLUMN_NUMBER="9", LINE_NUMBER="163", NAME="intPointer", ORDER="1", TYPE_FULL_NAME="int*"];
END_SUBGRAPH center_node=30064771167

START_SUBGRAPH center_node=30064771164
# Node count: 2
# Neighbor count: 1
  "30064771164" -> "68719476790" [label="AST"];
  "30064771164" [label="CALL", ARGUMENT_INDEX="-1", CODE="data = 20", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="149", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476790" -> "30064771164" [label="REACHING_DEF", property="data"];
  "68719476790" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="5", LINE_NUMBER="149", NAME="data", ORDER="1", TYPE_FULL_NAME="int&"];
END_SUBGRAPH center_node=30064771164

START_SUBGRAPH center_node=30064771185
# Node count: 1
# Neighbor count: 0
  "30064771185" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="176", METHOD_FULL_NAME="CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.goodG2B:void()", NAME="goodG2B", ORDER="1", SIGNATURE="void()", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771185

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
        {
#ifdef _WIN32
            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
            {
                break;
            }
            wsaDataInit = 1;
#endif
            /* POTENTIAL FLAW: Read data using a listen socket */
            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
            if (listenSocket == INVALID_SOCKET)
            {
                break;
            }
            memset(&service, 0, sizeof(service));
            service.sin_family = AF_INET;
            service.sin_addr.s_addr = INADDR_ANY;
            service.sin_port = htons(TCP_PORT);
            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
            {
                break;
            }
            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
            {
                break;
            }
            acceptSocket = accept(listenSocket, NULL, NULL);
            if (acceptSocket == SOCKET_ERROR)
            {
   ...", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="58", ORDER="9", PARSER_TYPE_NAME="CPPASTDoStatement"];
END_SUBGRAPH center_node=47244640256

