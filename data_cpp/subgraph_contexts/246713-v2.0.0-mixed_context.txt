# Subgraphs for folder: 246713-v2.0.0-mixed
# Total center nodes with subgraphs: 4

START_SUBGRAPH center_node=30064771152
# Node count: 3
# Neighbor count: 2
  "30064771151" -> "30064771152" [label="POST_DOMINATE"];
  "30064771151" [label="CALL", ARGUMENT_INDEX="3", CODE="dataBuffer[100] = COMMAND_ARG2", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="156", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="6", SIGNATURE="", TYPE_FULL_NAME="wchar_t[100]"];
  "30064771152" -> "30064771151" [label="REACHING_DEF", property="COMMAND_ARG2"];
  "30064771152" -> "68719476791" [label="REACHING_DEF", property="COMMAND_ARG2"];
  "30064771152" [label="CALL", ARGUMENT_INDEX="2", CODE="COMMAND_ARG2", COLUMN_NUMBER="31", DISPATCH_TYPE="INLINED", LINE_NUMBER="156", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_connect_socket_w32_spawnv_33.cpp:32:32:COMMAND_ARG2:0", NAME="COMMAND_ARG2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="wchar_t[4]"];
  "68719476791" -> "30064771152" [label="DOMINATE"];
  "68719476791" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="dataBuffer", COLUMN_NUMBER="13", LINE_NUMBER="156", NAME="dataBuffer", ORDER="1", TYPE_FULL_NAME="wchar_t[100]"];
END_SUBGRAPH center_node=30064771152

START_SUBGRAPH center_node=30064771163
# Node count: 1
# Neighbor count: 0
  "30064771163" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="173", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_connect_socket_w32_spawnv_33.goodG2B:void()", NAME="goodG2B", ORDER="1", SIGNATURE="void()", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771163

START_SUBGRAPH center_node=30064771145
# Node count: 5
# Neighbor count: 4
  "30064771142" -> "30064771145" [label="AST"];
  "30064771142" [label="CALL", ARGUMENT_INDEX="2", CODE="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}", COLUMN_NUMBER="31", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="139", METHOD_FULL_NAME="<operator>.arrayInitializer", NAME="<operator>.arrayInitializer", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771144" -> "30064771145" [label="DOMINATE"];
  "30064771144" [label="CALL", ARGUMENT_INDEX="2", CODE="COMMAND_ARG1", COLUMN_NUMBER="50", DISPATCH_TYPE="INLINED", LINE_NUMBER="139", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_connect_socket_w32_spawnv_33.cpp:31:31:COMMAND_ARG1:0", NAME="COMMAND_ARG1", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="wchar_t[3]"];
  "30064771145" -> "30064771142" [label="REACHING_DEF", property="COMMAND_ARG3"];
  "30064771145" -> "30064771144" [label="POST_DOMINATE"];
  "30064771145" -> "68719476784" [label="DOMINATE"];
  "30064771145" -> "68719476785" [label="DOMINATE"];
  "30064771145" [label="CALL", ARGUMENT_INDEX="3", CODE="COMMAND_ARG3", COLUMN_NUMBER="64", DISPATCH_TYPE="INLINED", LINE_NUMBER="139", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_connect_socket_w32_spawnv_33.cpp:33:33:COMMAND_ARG3:0", NAME="COMMAND_ARG3", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="wchar_t*"];
  "68719476784" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="64", LINE_NUMBER="139", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476785" -> "30064771145" [label="POST_DOMINATE"];
  "68719476785" [label="IDENTIFIER", ARGUMENT_INDEX="4", CODE="NULL", COLUMN_NUMBER="78", LINE_NUMBER="139", NAME="NULL", ORDER="4", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771145

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
        {
#ifdef _WIN32
            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
            {
                break;
            }
            wsaDataInit = 1;
#endif
            /* POTENTIAL FLAW: Read data using a connect socket */
            connectSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
            if (connectSocket == INVALID_SOCKET)
            {
                break;
            }
            memset(&service, 0, sizeof(service));
            service.sin_family = AF_INET;
            service.sin_addr.s_addr = inet_addr(IP_ADDRESS);
            service.sin_port = htons(TCP_PORT);
            if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
            {
                break;
            }
            /* Abort on error or the connection was closed, make sure to recv one
             * less char than is in the recv_buf in order to append a terminator */
            /* Abort on error or the connection was closed */...", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="79", ORDER="8", PARSER_TYPE_NAME="CPPASTDoStatement"];
END_SUBGRAPH center_node=47244640256

