# Subgraphs for folder: 243940-v2.0.0-mixed
# Total center nodes with subgraphs: 18

START_SUBGRAPH center_node=47244640261
# Node count: 2
# Neighbor count: 1
  "47244640261" -> "47244640262" [label="AST"];
  "47244640261" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(0)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        {
            char * myString;
            /* FIX: Include a MAXIMUM limitation for memory allocation and a check to ensure data is large enough
             * for the strcpy() function to not cause a buffer overflow */
            /* INCIDENTAL FLAW: The source could cause a type overrun in data or in the memory allocation */
            if (data > strlen(HELLO_STRING) && data < 100)
            {
                myString = new char[data];
                /* Copy a small string into myString */
                strcpy(myString, HELLO_STRING);
                printLine(myString);
                delete [] myString;
            }
            else
            {
                printLine(\"Input is less than the length of the source string or too large\");
            }
        }
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="79", ORDER="4", PARSER_TYPE_NAME="CPPASTIfStatement"];
  "47244640262" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="85", ORDER="3", PARSER_TYPE_NAME="CPPASTCompoundStatement"];
END_SUBGRAPH center_node=47244640261

START_SUBGRAPH center_node=30064771076
# Node count: 4
# Neighbor count: 3
  "30064771075" -> "30064771076" [label="POST_DOMINATE"];
  "30064771075" [label="CALL", ARGUMENT_INDEX="-1", CODE="data > strlen(HELLO_STRING)", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="48", METHOD_FULL_NAME="<operator>.greaterThan", NAME="<operator>.greaterThan", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771076" -> "30064771075" [label="REACHING_DEF", property="strlen(HELLO_STRING)"];
  "30064771076" -> "30064771077" [label="POST_DOMINATE"];
  "30064771076" -> "68719476739" [label="REACHING_DEF", property="strlen(HELLO_STRING)"];
  "30064771076" [label="CALL", ARGUMENT_INDEX="2", CODE="strlen(HELLO_STRING)", COLUMN_NUMBER="24", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="48", METHOD_FULL_NAME="<unresolvedNamespace>.strlen:<unresolvedSignature>(1)", NAME="strlen", ORDER="2", SIGNATURE="<unresolvedSignature>", TYPE_FULL_NAME="ANY"];
  "30064771077" -> "30064771076" [label="REACHING_DEF", property="HELLO_STRING"];
  "30064771077" [label="CALL", ARGUMENT_INDEX="1", CODE="HELLO_STRING", COLUMN_NUMBER="31", DISPATCH_TYPE="INLINED", LINE_NUMBER="48", METHOD_FULL_NAME="CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_02.cpp:24:24:HELLO_STRING:0", NAME="HELLO_STRING", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="char[6]"];
  "68719476739" -> "30064771076" [label="REACHING_DEF", property="data"];
  "68719476739" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="17", LINE_NUMBER="48", NAME="data", ORDER="1", TYPE_FULL_NAME="size_t"];
END_SUBGRAPH center_node=30064771076

START_SUBGRAPH center_node=30064771117
# Node count: 1
# Neighbor count: 0
  "30064771117" [label="CALL", ARGUMENT_INDEX="-1", CODE="printLine(\"Benign, fixed string\")", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="150", METHOD_FULL_NAME="<unresolvedNamespace>.printLine:<unresolvedSignature>(1)", NAME="printLine", ORDER="1", SIGNATURE="<unresolvedSignature>", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771117

START_SUBGRAPH center_node=47244640271
# Node count: 1
# Neighbor count: 0
  "47244640271" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
            char * myString;
            /* POTENTIAL FLAW: No MAXIMUM limitation for memory allocation, but ensure data is large enough
             * for the strcpy() function to not cause a buffer overflow */
            /* INCIDENTAL FLAW: The source could cause a type overrun in data or in the memory allocation */
            if (data > strlen(HELLO_STRING))
            {
                myString = new char[data];
                /* Copy a small string into myString */
                strcpy(myString, HELLO_STRING);
                printLine(myString);
                delete [] myString;
            }
            else
            {
                printLine(\"Input is less than the length of the source string\");
            }
        }
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="157", ORDER="4", PARSER_TYPE_NAME="CPPASTIfStatement"];
END_SUBGRAPH center_node=47244640271

START_SUBGRAPH center_node=47244640257
# Node count: 1
# Neighbor count: 0
  "47244640257" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
            char * myString;
            /* POTENTIAL FLAW: No MAXIMUM limitation for memory allocation, but ensure data is large enough
             * for the strcpy() function to not cause a buffer overflow */
            /* INCIDENTAL FLAW: The source could cause a type overrun in data or in the memory allocation */
            if (data > strlen(HELLO_STRING))
            {
                myString = new char[data];
                /* Copy a small string into myString */
                strcpy(myString, HELLO_STRING);
                printLine(myString);
                delete [] myString;
            }
            else
            {
                printLine(\"Input is less than the length of the source string\");
            }
        }
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="41", ORDER="4", PARSER_TYPE_NAME="CPPASTIfStatement"];
END_SUBGRAPH center_node=47244640257

START_SUBGRAPH center_node=30064771086
# Node count: 3
# Neighbor count: 2
  "30064771086" -> "30064771087" [label="POST_DOMINATE"];
  "30064771086" -> "68719476746" [label="AST"];
  "30064771086" [label="CALL", ARGUMENT_INDEX="-1", CODE="fscanf(stdin, \"%zu\", &data)", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="77", METHOD_FULL_NAME="<unresolvedNamespace>.fscanf:<unresolvedSignature>(3)", NAME="fscanf", ORDER="1", SIGNATURE="<unresolvedSignature>", TYPE_FULL_NAME="ANY"];
  "30064771087" -> "30064771086" [label="REACHING_DEF", property="&data"];
  "30064771087" [label="CALL", ARGUMENT_INDEX="3", CODE="&data", COLUMN_NUMBER="30", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="77", METHOD_FULL_NAME="<operator>.addressOf", NAME="<operator>.addressOf", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476746" -> "30064771086" [label="REACHING_DEF", property="stdin"];
  "68719476746" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="stdin", COLUMN_NUMBER="16", LINE_NUMBER="77", NAME="stdin", ORDER="1", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771086

START_SUBGRAPH center_node=30064771123
# Node count: 5
# Neighbor count: 4
  "30064771119" -> "30064771123" [label="CDG"];
  "30064771119" [label="CALL", ARGUMENT_INDEX="-1", CODE="data > strlen(HELLO_STRING)", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="164", METHOD_FULL_NAME="<operator>.greaterThan", NAME="<operator>.greaterThan", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771122" -> "30064771123" [label="POST_DOMINATE"];
  "30064771122" [label="CALL", ARGUMENT_INDEX="-1", CODE="myString = new char[data]", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="166", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771123" -> "30064771122" [label="REACHING_DEF", property="new char[data]"];
  "30064771123" -> "68719476768" [label="REACHING_DEF", property="new char[data]"];
  "30064771123" -> "68719476769" [label="POST_DOMINATE"];
  "30064771123" [label="CALL", ARGUMENT_INDEX="2", CODE="new char[data]", COLUMN_NUMBER="28", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="166", METHOD_FULL_NAME="<operator>.new", NAME="<operator>.new", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476768" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="myString", COLUMN_NUMBER="17", LINE_NUMBER="166", NAME="myString", ORDER="1", TYPE_FULL_NAME="char*"];
  "68719476769" -> "30064771123" [label="REACHING_DEF", property="char"];
  "68719476769" [label="IDENTIFIER", ARGUMENT_INDEX="-1", CODE="char", COLUMN_NUMBER="32", LINE_NUMBER="166", NAME="char", ORDER="1", TYPE_FULL_NAME="char"];
END_SUBGRAPH center_node=30064771123

START_SUBGRAPH center_node=30064771101
# Node count: 2
# Neighbor count: 1
  "30064771101" -> "68719476755" [label="AST"];
  "30064771101" [label="CALL", ARGUMENT_INDEX="-1", CODE="data = 0", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="112", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476755" -> "30064771101" [label="REACHING_DEF", property="data"];
  "68719476755" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="5", LINE_NUMBER="112", NAME="data", ORDER="1", TYPE_FULL_NAME="size_t"];
END_SUBGRAPH center_node=30064771101

START_SUBGRAPH center_node=30064771139
# Node count: 3
# Neighbor count: 2
  "30064771131" -> "30064771139" [label="CDG"];
  "30064771131" [label="CALL", ARGUMENT_INDEX="-1", CODE="data > strlen(HELLO_STRING)", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="198", METHOD_FULL_NAME="<operator>.greaterThan", NAME="<operator>.greaterThan", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771139" -> "68719476780" [label="POST_DOMINATE"];
  "30064771139" [label="CALL", ARGUMENT_INDEX="-1", CODE="delete [] myString", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="204", METHOD_FULL_NAME="<operator>.delete", NAME="<operator>.delete", ORDER="4", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476780" -> "30064771139" [label="REACHING_DEF", property="myString"];
  "68719476780" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="myString", COLUMN_NUMBER="27", LINE_NUMBER="204", NAME="myString", ORDER="1", TYPE_FULL_NAME="char*"];
END_SUBGRAPH center_node=30064771139

START_SUBGRAPH center_node=47244640269
# Node count: 2
# Neighbor count: 1
  "47244640269" -> "47244640270" [label="AST"];
  "47244640269" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(0)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        /* FIX: Use a relatively small number for memory allocation */
        data = 20;
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="147", ORDER="3", PARSER_TYPE_NAME="CPPASTIfStatement"];
  "47244640270" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="153", ORDER="3", PARSER_TYPE_NAME="CPPASTCompoundStatement"];
END_SUBGRAPH center_node=47244640269

START_SUBGRAPH center_node=47244640260
# Node count: 1
# Neighbor count: 0
  "47244640260" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, \"%zu\", &data);
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="74", ORDER="3", PARSER_TYPE_NAME="CPPASTIfStatement"];
END_SUBGRAPH center_node=47244640260

START_SUBGRAPH center_node=30064771088
# Node count: 1
# Neighbor count: 0
  "30064771088" [label="CALL", ARGUMENT_INDEX="-1", CODE="printLine(\"Benign, fixed string\")", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="82", METHOD_FULL_NAME="<unresolvedNamespace>.printLine:<unresolvedSignature>(1)", NAME="printLine", ORDER="1", SIGNATURE="<unresolvedSignature>", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771088

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, \"%zu\", &data);
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="36", ORDER="3", PARSER_TYPE_NAME="CPPASTIfStatement"];
END_SUBGRAPH center_node=47244640256

START_SUBGRAPH center_node=30064771143
# Node count: 3
# Neighbor count: 2
  "30064771142" -> "30064771143" [label="DOMINATE"];
  "30064771142" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodB2G2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="217", METHOD_FULL_NAME="CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_02.goodB2G2:void()", NAME="goodB2G2", ORDER="2", SIGNATURE="void()", TYPE_FULL_NAME="void"];
  "30064771143" -> "30064771142" [label="POST_DOMINATE"];
  "30064771143" -> "30064771144" [label="DOMINATE"];
  "30064771143" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="218", METHOD_FULL_NAME="CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_02.goodG2B1:void()", NAME="goodG2B1", ORDER="3", SIGNATURE="void()", TYPE_FULL_NAME="void"];
  "30064771144" -> "30064771143" [label="POST_DOMINATE"];
  "30064771144" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="219", METHOD_FULL_NAME="CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_02.goodG2B2:void()", NAME="goodG2B2", ORDER="4", SIGNATURE="void()", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771143

START_SUBGRAPH center_node=47244640274
# Node count: 1
# Neighbor count: 0
  "47244640274" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* FIX: Use a relatively small number for memory allocation */
        data = 20;
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="186", ORDER="3", PARSER_TYPE_NAME="CPPASTIfStatement"];
END_SUBGRAPH center_node=47244640274

START_SUBGRAPH center_node=47244640265
# Node count: 1
# Neighbor count: 0
  "47244640265" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, \"%zu\", &data);
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="113", ORDER="3", PARSER_TYPE_NAME="CPPASTIfStatement"];
END_SUBGRAPH center_node=47244640265

START_SUBGRAPH center_node=47244640266
# Node count: 1
# Neighbor count: 0
  "47244640266" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
            char * myString;
            /* FIX: Include a MAXIMUM limitation for memory allocation and a check to ensure data is large enough
             * for the strcpy() function to not cause a buffer overflow */
            /* INCIDENTAL FLAW: The source could cause a type overrun in data or in the memory allocation */
            if (data > strlen(HELLO_STRING) && data < 100)
            {
                myString = new char[data];
                /* Copy a small string into myString */
                strcpy(myString, HELLO_STRING);
                printLine(myString);
                delete [] myString;
            }
            else
            {
                printLine(\"Input is less than the length of the source string or too large\");
            }
        }
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="118", ORDER="4", PARSER_TYPE_NAME="CPPASTIfStatement"];
END_SUBGRAPH center_node=47244640266

START_SUBGRAPH center_node=47244640275
# Node count: 1
# Neighbor count: 0
  "47244640275" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
            char * myString;
            /* POTENTIAL FLAW: No MAXIMUM limitation for memory allocation, but ensure data is large enough
             * for the strcpy() function to not cause a buffer overflow */
            /* INCIDENTAL FLAW: The source could cause a type overrun in data or in the memory allocation */
            if (data > strlen(HELLO_STRING))
            {
                myString = new char[data];
                /* Copy a small string into myString */
                strcpy(myString, HELLO_STRING);
                printLine(myString);
                delete [] myString;
            }
            else
            {
                printLine(\"Input is less than the length of the source string\");
            }
        }
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="191", ORDER="4", PARSER_TYPE_NAME="CPPASTIfStatement"];
END_SUBGRAPH center_node=47244640275

