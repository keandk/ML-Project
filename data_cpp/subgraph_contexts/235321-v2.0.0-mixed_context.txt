# Subgraphs for folder: 235321-v2.0.0-mixed
# Total center nodes with subgraphs: 6

START_SUBGRAPH center_node=30064771167
# Node count: 4
# Neighbor count: 3
  "30064771167" -> "68719476802" [label="AST"];
  "30064771167" -> "68719476803" [label="POST_DOMINATE"];
  "30064771167" -> "68719476804" [label="DOMINATE"];
  "30064771167" [label="CALL", ARGUMENT_INDEX="-1", CODE="data = dataBuffer", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="162", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="7", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476802" -> "30064771167" [label="REACHING_DEF", property="data"];
  "68719476802" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="5", LINE_NUMBER="162", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476803" -> "30064771167" [label="REACHING_DEF", property="dataBuffer"];
  "68719476803" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="dataBuffer", COLUMN_NUMBER="12", LINE_NUMBER="162", NAME="dataBuffer", ORDER="2", TYPE_FULL_NAME="wchar_t[100]"];
  "68719476804" -> "30064771167" [label="POST_DOMINATE"];
  "68719476804" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="12", LINE_NUMBER="164", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
END_SUBGRAPH center_node=30064771167

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
        {
#ifdef _WIN32
            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
            {
                break;
            }
            wsaDataInit = 1;
#endif
            /* POTENTIAL FLAW: Read data using a listen socket */
            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
            if (listenSocket == INVALID_SOCKET)
            {
                break;
            }
            memset(&service, 0, sizeof(service));
            service.sin_family = AF_INET;
            service.sin_addr.s_addr = INADDR_ANY;
            service.sin_port = htons(TCP_PORT);
            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
            {
                break;
            }
            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
            {
                break;
            }
            acceptSocket = accept(listenSocket, NULL, NULL);
            if (acceptSocket == SOCKET_ERROR)
            {
   ...", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="73", ORDER="10", PARSER_TYPE_NAME="CPPASTDoStatement"];
END_SUBGRAPH center_node=47244640256

START_SUBGRAPH center_node=30064771268
# Node count: 2
# Neighbor count: 1
  "30064771268" -> "30064771269" [label="DOMINATE"];
  "30064771268" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="275", METHOD_FULL_NAME="CWE134_Uncontrolled_Format_String__wchar_t_listen_socket_snprintf_33.goodG2B:void()", NAME="goodG2B", ORDER="1", SIGNATURE="void()", TYPE_FULL_NAME="void"];
  "30064771269" -> "30064771268" [label="POST_DOMINATE"];
  "30064771269" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodB2G()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="276", METHOD_FULL_NAME="CWE134_Uncontrolled_Format_String__wchar_t_listen_socket_snprintf_33.goodB2G:void()", NAME="goodB2G", ORDER="2", SIGNATURE="void()", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771268

START_SUBGRAPH center_node=68719476868
# Node count: 4
# Neighbor count: 3
  "30064771260" -> "68719476868" [label="POST_DOMINATE"];
  "30064771260" [label="CALL", ARGUMENT_INDEX="2", CODE="* data = dataRef", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="263", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="wchar_t*"];
  "68719476812" -> "68719476868" [label="REACHING_DEF", property="dataRef"];
  "68719476812" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="dataRef", COLUMN_NUMBER="16", LINE_NUMBER="180", NAME="dataRef", ORDER="1", TYPE_FULL_NAME="wchar_t*&"];
  "68719476867" -> "68719476868" [label="DOMINATE"];
  "68719476867" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="19", LINE_NUMBER="263", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476868" -> "30064771260" [label="REACHING_DEF", property="dataRef"];
  "68719476868" -> "68719476867" [label="REACHING_DEF", property="dataRef"];
  "68719476868" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="dataRef", COLUMN_NUMBER="26", LINE_NUMBER="263", NAME="dataRef", ORDER="2", TYPE_FULL_NAME="wchar_t*&"];
END_SUBGRAPH center_node=68719476868

START_SUBGRAPH center_node=30064771145
# Node count: 7
# Neighbor count: 6
  "30064771145" -> "30064771146" [label="POST_DOMINATE"];
  "30064771145" -> "30064771147" [label="POST_DOMINATE"];
  "30064771145" -> "30064771148" [label="DOMINATE"];
  "30064771145" -> "68719476787" [label="AST"];
  "30064771145" -> "68719476789" [label="DOMINATE"];
  "30064771145" [label="CALL", ARGUMENT_INDEX="-1", CODE="listenSocket != INVALID_SOCKET", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="126", METHOD_FULL_NAME="<operator>.notEquals", NAME="<operator>.notEquals", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771146" -> "30064771145" [label="REACHING_DEF", property="INVALID_SOCKET"];
  "30064771146" [label="CALL", ARGUMENT_INDEX="2", CODE="INVALID_SOCKET", COLUMN_NUMBER="29", DISPATCH_TYPE="INLINED", LINE_NUMBER="126", METHOD_FULL_NAME="CWE134_Uncontrolled_Format_String__wchar_t_listen_socket_snprintf_33.cpp:36:36:INVALID_SOCKET:0", NAME="INVALID_SOCKET", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771147" -> "30064771145" [label="CFG"];
  "30064771147" [label="CALL", ARGUMENT_INDEX="1", CODE="-1", COLUMN_NUMBER="29", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="126", METHOD_FULL_NAME="<operator>.minus", NAME="<operator>.minus", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771148" [label="CALL", ARGUMENT_INDEX="-1", CODE="CLOSE_SOCKET(listenSocket)", COLUMN_NUMBER="13", DISPATCH_TYPE="INLINED", LINE_NUMBER="128", METHOD_FULL_NAME="CWE134_Uncontrolled_Format_String__wchar_t_listen_socket_snprintf_33.cpp:38:38:CLOSE_SOCKET:0", NAME="CLOSE_SOCKET", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "47244640269" -> "30064771145" [label="CONDITION"];
  "47244640269" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if (listenSocket != INVALID_SOCKET)
        {
            CLOSE_SOCKET(listenSocket);
        }", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="126", ORDER="11", PARSER_TYPE_NAME="CPPASTIfStatement"];
  "68719476787" -> "30064771145" [label="REACHING_DEF", property="listenSocket"];
  "68719476787" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="listenSocket", COLUMN_NUMBER="13", LINE_NUMBER="126", NAME="listenSocket", ORDER="1", TYPE_FULL_NAME="int"];
  "68719476789" -> "30064771145" [label="POST_DOMINATE"];
  "68719476789" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="acceptSocket", COLUMN_NUMBER="13", LINE_NUMBER="130", NAME="acceptSocket", ORDER="1", TYPE_FULL_NAME="int"];
END_SUBGRAPH center_node=30064771145

START_SUBGRAPH center_node=47244640271
# Node count: 1
# Neighbor count: 0
  "47244640271" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
        {
#ifdef _WIN32
            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
            {
                break;
            }
            wsaDataInit = 1;
#endif
            /* POTENTIAL FLAW: Read data using a listen socket */
            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
            if (listenSocket == INVALID_SOCKET)
            {
                break;
            }
            memset(&service, 0, sizeof(service));
            service.sin_family = AF_INET;
            service.sin_addr.s_addr = INADDR_ANY;
            service.sin_port = htons(TCP_PORT);
            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
            {
                break;
            }
            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
            {
                break;
            }
            acceptSocket = accept(listenSocket, NULL, NULL);
            if (acceptSocket == SOCKET_ERROR)
            {
   ...", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="194", ORDER="10", PARSER_TYPE_NAME="CPPASTDoStatement"];
END_SUBGRAPH center_node=47244640271

