{
  "creationDate": "2025-04-26T08:48:37.80566+00:00",
  "testCases": [
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243550-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243550/versions/2.0.0",
      "identifier": "243550-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_72b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "9f7b8e3b0005450c82962ae39073d250c1becaad754a000a9fefcf6504e75c83"
                },
                "length": 7495,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_72a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "8e832ef72566a255eab98cac0a4a97873c74576f37b0b3024123be27bbfd9f24"
                },
                "length": 3836,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_72b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243550,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 72 Data flow: data passed in a vector from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243552-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243552/versions/2.0.0",
      "identifier": "243552-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_74b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "214b0c1bd05e1224c05178aa26d1fd96ec5ebaffb25faa2b5f6be1b3d6e3f184"
                },
                "length": 7225,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_74a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "757464511eafe8362d5505c05ce588cd4dd5b7837431840a1fd77a6e7a8d87b6"
                },
                "length": 3815,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_74b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243552,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 74 Data flow: data passed in a map from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243458-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243458/versions/2.0.0",
      "identifier": "243458-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 38
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_14.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "dc13ab391c5585d8c19a8124893ef704c6e8485988186733e9eb588d1b5088b8"
                },
                "length": 4747,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_14.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243458,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 14 Control flow: if(globalFive==5) and if(globalFive!=5)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243509-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243509/versions/2.0.0",
      "identifier": "243509-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 27
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__realloc_delete_01_bad.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "8a5c1ee55f4e6644be7886825428406f5837a23169603ad48a4da4c225646f47"
                },
                "length": 2402,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__realloc_delete_01_bad.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "08cc3063bf3f45a8de1fbe78f7890d9fb7f22ebede1e81d5875abd7cd717ac61"
                },
                "length": 2467,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__realloc_delete_01_good1.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243509,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "Mismatched Memory Management Routines",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243667-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243667/versions/2.0.0",
      "identifier": "243667-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 139
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "f34a895866747b9c814af68e324aaaadc412c0b22b67697a12d693d498a955b3"
                },
                "length": 9771,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243667,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: listen_socket Read data using a listen socket (server side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243502-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243502/versions/2.0.0",
      "identifier": "243502-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "fe514c98b72ab1dba9894a600688b06d3218c581e8f5fef288c4f4218326391b"
                },
                "length": 3169,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243502,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243451-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243451/versions/2.0.0",
      "identifier": "243451-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 44
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_07.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "c1503c925580d0adef04d8758975a8b300b808683af8a97e27697499934cd1c8"
                },
                "length": 4974,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_07.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243451,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 07 Control flow: if(staticFive==5) and if(staticFive!=5)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243456-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243456/versions/2.0.0",
      "identifier": "243456-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 44
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_12.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "ec291e3bd9ab82257b94d4dfc6070b331c9c593cc234f0183d8eb20b00c8ffc9"
                },
                "length": 4512,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_12.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243456,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 12 Control flow: if(globalReturnsTrueOrFalse())",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243747-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243747/versions/2.0.0",
      "identifier": "243747-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 124
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "0e661bb6a7f00bc033d81b129493bcc7194888de3e234ff39eabd0483a60870e"
                },
                "length": 9411,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243747,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243495-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243495/versions/2.0.0",
      "identifier": "243495-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 34
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_21.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "b213a4dfa94d379ac7dc9f7d634a65351dbbf77c9a443c499a8132b901d0cc87"
                },
                "length": 4465,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_21.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243495,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 21 Control flow: Flow controlled by value of a static global variable. All functions contained in one file.",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243487-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243487/versions/2.0.0",
      "identifier": "243487-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 38
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_11.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "53966d0f97eb19c5af8bc7722303e72b4b64afd1e1ebaea56f1eb46d2a59a1b4"
                },
                "length": 4779,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_11.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243487,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 11 Control flow: if(globalReturnsTrue()) and if(globalReturnsFalse())",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243835-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243835/versions/2.0.0",
      "identifier": "243835-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 50
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fscanf_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "0425796a7f059a9fc7425d6eb35b57fd62e7e49d8f3396b1d65bfd4df7913b36"
                },
                "length": 5152,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fscanf_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243835,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243476-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243476/versions/2.0.0",
      "identifier": "243476-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 29
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_82_bad.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "eb893b536733bcbbb99e37f8bd795b2c969f7db0549e835d38e3dc6c0ed4ae3f"
                },
                "length": 1650,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_82.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "9664c5ef84f0c4413970b5108b19801d5409ae039f2c9cec2b2c1eee52311be1"
                },
                "length": 1155,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_82_bad.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "93ba1d3376c39a539b3c704546403dc5f90cfbffd89e08c93fa85fdee4c0dc8e"
                },
                "length": 1061,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_82_goodB2G.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "e48a485d97af91064e7a98513d5d98b38004cd58019721b5b9b2bef6ff59bd08"
                },
                "length": 1169,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_82_goodG2B.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "b925f9926ef7ab4fe6360df7ecd90943e2b28ae15369cd47d2f73bea3542f03e"
                },
                "length": 3288,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_82a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243476,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 82 Data flow: data passed in a parameter to an virtual method called via a pointer",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243636-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243636/versions/2.0.0",
      "identifier": "243636-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_72b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "b56584df2c9b2ea98805da895fe607f160d50f2a2b0fb07a957b355a76b51f26"
                },
                "length": 3440,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_72a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "36b2f84a0a7a7f306382a9c07b45952ae10c7940a6c2a4551ab8f0800552477d"
                },
                "length": 3807,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_72b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243636,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 72 Data flow: data passed in a vector from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243507-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243507/versions/2.0.0",
      "identifier": "243507-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 29
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_81_bad.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "e5b2cd2fee5d72c4dcad4202d22266ebd7a77da73ed3b4ede1c1b565378b6cb2"
                },
                "length": 1661,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_81.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "14cc197790d451e9b62a6ba23a71228d7b322f8caf8e956cd2c94aa5602b43da"
                },
                "length": 1161,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_81_bad.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "51c667a789421769f17be489b66a1a4f17792d15d8f69bc41e3d34bb2cafc1a5"
                },
                "length": 1067,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_81_goodB2G.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "11e7603821e0f64cefd9a0b56d0ae95b077bd343f2301f428824781f8691057b"
                },
                "length": 1175,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_81_goodG2B.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "5265a40c6f51bbfe28ba7392c43fa19cad1d4d3a549ab4c506c857ae572258c3"
                },
                "length": 3177,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_81a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243507,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 81 Data flow: data passed in a parameter to an virtual method called via a reference",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243500-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243500/versions/2.0.0",
      "identifier": "243500-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 29
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_41.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "f754dffcce4dbae556a64d6dc69005657363c5c4bd1d0e2cc3f3be52241665f9"
                },
                "length": 3155,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_41.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243500,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 41 Data flow: data passed as an argument from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243808-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243808/versions/2.0.0",
      "identifier": "243808-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_74b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "07c99d9349f5a060bc4db6ecb42577c141b0c2a6829a4a2c16e1448e0b1a077d"
                },
                "length": 3808,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_74a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "f683f2d3f3d31c0ec9595259e61d48ba3dcea7f9ddd75ad64183e3aa59365eac"
                },
                "length": 3819,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_74b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243808,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 74 Data flow: data passed in a map from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243465-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243465/versions/2.0.0",
      "identifier": "243465-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 42
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "92dbf2cb24fd8e62bd36dd4e655387c6e0d406d5b7d344e34c74368e6d2ce4b9"
                },
                "length": 3685,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243465,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 32 Data flow using two pointers to the same value within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243681-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243681/versions/2.0.0",
      "identifier": "243681-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_73b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "24fbee97a25a8af5c81f2338e704f35564b56d36a079e69620bd325898e43d32"
                },
                "length": 7881,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_73a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "40e6f90969aa55c2530ab9f6c894cfcf4e58ac5dbfa9be08624899844d04e0f3"
                },
                "length": 3820,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_73b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243681,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: listen_socket Read data using a listen socket (server side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 73 Data flow: data passed in a list from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243462-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243462/versions/2.0.0",
      "identifier": "243462-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 37
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_18.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "60128ba43cd1d7f11c8a3fc7079f7989f41a5aa226884908d76a19b466f107be"
                },
                "length": 3157,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_18.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243462,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 18 Control flow: goto statements",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243496-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243496/versions/2.0.0",
      "identifier": "243496-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 37
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_31.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "dbcd38b3720271f92d1503db1cb0ef6240b7a0d1cc663eb1e866b3babeeb2a35"
                },
                "length": 3197,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_31.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243496,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 31 Data flow using a copy of data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243766-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243766/versions/2.0.0",
      "identifier": "243766-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_74b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "7ecb837e3e2c61b5990ff132e6d178adfb0768ebfadc3385df8b6363dbf0e059"
                },
                "length": 7234,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_74a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "6ef915aace31d078d5808273c94f05969177e86f841471ee3314e97fc2b2f057"
                },
                "length": 3852,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_74b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243766,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 74 Data flow: data passed in a map from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243470-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243470/versions/2.0.0",
      "identifier": "243470-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "48a82fe8fa78e7f71dddf083f1813dd18ea6ac2049ff87fec702b8255c342743"
                },
                "length": 3226,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243470,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243831-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243831/versions/2.0.0",
      "identifier": "243831-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 48
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fscanf_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "655ee62a0d13c3f58e11ec453c7078d9ebd49f95346bf344d0047339248d05b0"
                },
                "length": 5356,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fscanf_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243831,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243579-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243579/versions/2.0.0",
      "identifier": "243579-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 63
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "63af5f746179e18de2fbe7f2cb4c4df0961c117c1408c9d8110e1889d78e661b"
                },
                "length": 5741,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243579,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243474-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243474/versions/2.0.0",
      "identifier": "243474-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 36
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_62a.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "e48b99d971d3ee31400bafec01ef3248e3a9a38474c6cb7cf2402955c52e7c18"
                },
                "length": 2810,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_62a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "0a83b8542666def7874f436147b9a4fbe878c984b4a9d79cb7302ac16e7f836c"
                },
                "length": 1546,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_62b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243474,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 62 Data flow: data flows using a C++ reference from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243484-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243484/versions/2.0.0",
      "identifier": "243484-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 52
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_08.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "3a1979921dc02849a9cfb117ea42db924b05671e0d147100bd995011165333cb"
                },
                "length": 5061,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_08.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243484,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 08 Control flow: if(staticReturnsTrue()) and if(staticReturnsFalse())",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243510-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243510/versions/2.0.0",
      "identifier": "243510-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 27
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__realloc_delete_array_01_bad.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "6a6606a93d3cfbbb2077044fb69e5ef875d11e2aa4db2aca709bfb130e2f2b0f"
                },
                "length": 2422,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__realloc_delete_array_01_bad.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "660e3b389eaf3ac4ea14617392bd3da680142b28800c0bbdfaae1000d98436c4"
                },
                "length": 2473,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__realloc_delete_array_01_good1.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243510,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "Mismatched Memory Management Routines",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243723-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243723/versions/2.0.0",
      "identifier": "243723-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_73b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "14e75ee79c5a8aa2193b902deb02f691571ef1c1b314d7c49cfad90979e918a4"
                },
                "length": 3162,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_73a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "1e5c7602181510bd82ce7907d84b7aa3c9ab41a099bfa2b15469e633b20d0ed4"
                },
                "length": 3795,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_73b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243723,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: rand Set data to result of rand(), which may be zero\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 73 Data flow: data passed in a list from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243722-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243722/versions/2.0.0",
      "identifier": "243722-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_72b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "47e2a807042e249826313a3159ad818e3914df06e94a60f3694066f07e33b09a"
                },
                "length": 3380,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_72a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "d9bd0585237d24afec671395dce9834741182378ae7d2648ccaf0c7cdcc7b87d"
                },
                "length": 3807,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_72b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243722,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: rand Set data to result of rand(), which may be zero\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 72 Data flow: data passed in a vector from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243491-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243491/versions/2.0.0",
      "identifier": "243491-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_15.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "1f67322ce9b047bf434ca4a8ece95edd525c24c6866fc1f8b7d24a46579482ee"
                },
                "length": 6070,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_15.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243491,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 15 Control flow: switch(6) and switch(7)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243488-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243488/versions/2.0.0",
      "identifier": "243488-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 44
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_12.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "a5f82d0514417398eac03e75d833fbc562c99c68856d1c7bcee9bd52372f1752"
                },
                "length": 4443,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_12.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243488,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 12 Control flow: if(globalReturnsTrueOrFalse())",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243463-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243463/versions/2.0.0",
      "identifier": "243463-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 34
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_21.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "58c09fc189fedbde68a8a8fd8e7e3c808d53290e82ac154ef5c98dd62491c1c0"
                },
                "length": 4540,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_21.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243463,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 21 Control flow: Flow controlled by value of a static global variable. All functions contained in one file.",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243454-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243454/versions/2.0.0",
      "identifier": "243454-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_10.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "de858fd30a1fe66893ed25bfd9a209818f238ac30bc00964c0cd755f7b933077"
                },
                "length": 4708,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_10.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243454,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 10 Control flow: if(globalTrue) and if(globalFalse)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243504-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243504/versions/2.0.0",
      "identifier": "243504-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 34
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_45.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "749e322a39dbdd50acafc88b1a2b211dc07fb591da141198c4c75250af5b844a"
                },
                "length": 3377,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_45.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243504,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 45 Data flow: data passed as a static global variable from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243501-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243501/versions/2.0.0",
      "identifier": "243501-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 40
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_42.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "4af6645beb0bfb39facd99a43b7bce025bc90e9251edf14e5f87bd9f44f4187e"
                },
                "length": 3244,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_42.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243501,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 42 Data flow: data returned from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243457-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243457/versions/2.0.0",
      "identifier": "243457-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 38
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_13.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "c3fb00dee55c092beb98189c4fd792ab13527032129f018c5f61821a5a27d472"
                },
                "length": 4859,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_13.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243457,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 13 Control flow: if(GLOBAL_CONST_FIVE==5) and if(GLOBAL_CONST_FIVE!=5)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243492-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243492/versions/2.0.0",
      "identifier": "243492-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_16.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "080b290c6c9ffc8307638c33a90ff3b577c5a550aaa39f49a010681095147f82"
                },
                "length": 3285,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_16.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243492,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 16 Control flow: while(1)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243485-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243485/versions/2.0.0",
      "identifier": "243485-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_09.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "24728c37c41c2ec5f1c5dae5f5381c753ec980f36a1be98c79e4001d3b1b457e"
                },
                "length": 4751,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_09.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243485,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 09 Control flow: if(GLOBAL_CONST_TRUE) and if(GLOBAL_CONST_FALSE)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243663-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243663/versions/2.0.0",
      "identifier": "243663-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 137
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "56bfe2723fa892dd735107ab9d6ad4778db9f62d5970e59b8434f5574edfbc48"
                },
                "length": 9975,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243663,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: listen_socket Read data using a listen socket (server side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243467-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243467/versions/2.0.0",
      "identifier": "243467-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 44
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_34.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "d3885315de3ae442df73052fb4e17798096eea2faf8a9d2aff2a24f01ad423eb"
                },
                "length": 3495,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_34.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243467,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 34 Data flow: use of a union containing two methods of accessing the same data (within the same function)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243498-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243498/versions/2.0.0",
      "identifier": "243498-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 37
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "f79f3d40d702ba13e094fddb7077ac5b3b009ba2a2c3d1c0034952bda2ff2bcf"
                },
                "length": 3193,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243498,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243594-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243594/versions/2.0.0",
      "identifier": "243594-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_74b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "9d664105377c16e0d04bc9b7c9a671cbde34d84f01b5a63861ec0f428a437e7e"
                },
                "length": 3799,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_74a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "9e0e32e16ee51b315ec20802fd86228ccc4b000efc46d26ab8fd19b31aefecf1"
                },
                "length": 3782,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_74b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243594,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 74 Data flow: data passed in a map from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243765-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243765/versions/2.0.0",
      "identifier": "243765-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_73b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "9cf6a9cbfc6507c400d498ff7ec6b0d6fb11222855872363b16b171c942d3f4b"
                },
                "length": 7286,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_73a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "417d441204a723c04e35a80b9f0a09736d1b57165910ed01a60cdbd7d06b4bd1"
                },
                "length": 3861,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_73b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243765,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 73 Data flow: data passed in a list from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243497-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243497/versions/2.0.0",
      "identifier": "243497-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 42
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_32.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "ba0d5fc4b70e0c296168a3b1fd0a2798316e26bcf086a2634e3297778fecca29"
                },
                "length": 3574,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_32.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243497,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 32 Data flow using two pointers to the same value within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243464-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243464/versions/2.0.0",
      "identifier": "243464-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 37
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_31.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "251b7c75efdd7c7a425f36cce9c378f942a1818a86775a93748452b47a93355b"
                },
                "length": 3272,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_31.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243464,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 31 Data flow using a copy of data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243638-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243638/versions/2.0.0",
      "identifier": "243638-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_74b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "ec1d288cb8f15404e097344c45b79a7c25106b65d59ea79ef47f54376d621f2a"
                },
                "length": 3170,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_74a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "925d11ee010a688422815947fe1ae0d7d666e256693bcfb9502b78db313cd78a"
                },
                "length": 3786,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_74b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243638,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 74 Data flow: data passed in a map from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243593-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243593/versions/2.0.0",
      "identifier": "243593-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_73b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "dfd0a1bd59042c2b7bf3aa040cdc0d009af6b59c96cd920fe2588413ee97d42b"
                },
                "length": 3851,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_73a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "dec698327a9de59ecc349ce6ba8d2815fbaf0c69ca0cffb7307307d5ed1948ea"
                },
                "length": 3791,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_73b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243593,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 73 Data flow: data passed in a list from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243493-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243493/versions/2.0.0",
      "identifier": "243493-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_17.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "634a91f8003baea2b3c76ecfda4b8f428c1019e3ffa192a02e423e24ba37ec7f"
                },
                "length": 3255,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_17.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243493,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 17 Control flow: for loops",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243751-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243751/versions/2.0.0",
      "identifier": "243751-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 126
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "f31614b9b9b8342676059cdc040e2fb15aacafaff1a974309b4a8eec04a60a96"
                },
                "length": 9207,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243751,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243461-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243461/versions/2.0.0",
      "identifier": "243461-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_17.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "e676f4f9434ffbafe22e3eec85a3a962b467278cc2f0c1c66bb95c6491087f0f"
                },
                "length": 3294,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_17.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243461,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 17 Control flow: for loops",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243617-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243617/versions/2.0.0",
      "identifier": "243617-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 48
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "efecd32d02735da44baafa830ea95d7b25844750e8f9b9a62ef67738a4f2a833"
                },
                "length": 5316,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243617,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243489-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243489/versions/2.0.0",
      "identifier": "243489-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 38
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_13.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "15bb9bf08306234adbbcc618dc29552afcb30886017ad92fdac232812618eac1"
                },
                "length": 4790,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_13.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243489,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 13 Control flow: if(GLOBAL_CONST_FIVE==5) and if(GLOBAL_CONST_FIVE!=5)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243709-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243709/versions/2.0.0",
      "identifier": "243709-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 50
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "6f2d76bc0937f1726eca6663c9a1d363ac4495165b80604fb7f193e37fb5c5d3"
                },
                "length": 5052,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243709,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: rand Set data to result of rand(), which may be zero\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243472-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243472/versions/2.0.0",
      "identifier": "243472-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 34
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_45.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "96f1c43d0ae27b8a265339f9e5d2648e128963a2618b32541370258f3eb99e70"
                },
                "length": 3452,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_45.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243472,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 45 Data flow: data passed as a static global variable from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243705-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243705/versions/2.0.0",
      "identifier": "243705-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 48
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "81ea24f9034d0351d8d811e70263e096c6e77efac80cfeb374c4dac9c19f958b"
                },
                "length": 5256,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243705,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: rand Set data to result of rand(), which may be zero\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243480-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243480/versions/2.0.0",
      "identifier": "243480-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_04.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "264379c998fb9d413a967b9d952d87d01776e5400e79cea0035ec78a4eed553b"
                },
                "length": 5022,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_04.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243480,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 04 Control flow: if(STATIC_CONST_TRUE) and if(STATIC_CONST_FALSE)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243789-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243789/versions/2.0.0",
      "identifier": "243789-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 61
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "bb7e7c5bd9ca0b3da88e0b238d1c817d6ece6e3062c9fddb8fd0c1b75d35c396"
                },
                "length": 5985,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243789,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243764-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243764/versions/2.0.0",
      "identifier": "243764-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_72b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "6e17fa19f7794daef092e68c1a79a5bb9719e2b17eb40c65acbce048761ffe00"
                },
                "length": 7504,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_72a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "f1612e50774fd2e53deb9f15e24ce28f842dc460f47e4ae4f2704811c4b4033c"
                },
                "length": 3873,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_connect_socket_72b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243764,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 72 Data flow: data passed in a vector from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243460-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243460/versions/2.0.0",
      "identifier": "243460-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_16.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "f7309cce086a858e6e7c31c4ceb23cd13edf4750319bc642fcd74f76041c9aa4"
                },
                "length": 3324,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_16.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243460,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 16 Control flow: while(1)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243807-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243807/versions/2.0.0",
      "identifier": "243807-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_73b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "9ce516442929c83e717d8ea66414840a2a501e84d8bfe20dd956799209f69cb4"
                },
                "length": 3860,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_73a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "d83e90a09dc336b5a2b75b9772e4cc12d1336d0805829065a744ad8484b67f5f"
                },
                "length": 3828,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_73b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243807,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 73 Data flow: data passed in a list from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243481-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243481/versions/2.0.0",
      "identifier": "243481-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_05.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "19d10bf24aa75a334320a11af8da3973afd2ca040009ee8661a35dc2399708b7"
                },
                "length": 4930,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_05.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243481,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 05 Control flow: if(staticTrue) and if(staticFalse)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243637-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243637/versions/2.0.0",
      "identifier": "243637-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_73b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "f2376dd004ec2bb5651d5c451ffbc0dc0f803188086842a2160e02479c4f4ccc"
                },
                "length": 3222,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_73a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "382dca729d094998af433ce24d5513cddfb85dbaf8200e0b01deb7248c9c0a29"
                },
                "length": 3795,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_73b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243637,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 73 Data flow: data passed in a list from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243537-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243537/versions/2.0.0",
      "identifier": "243537-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 126
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "7ee6e1c4b137a3e42b4d4f5df905050a427b936385885bcdd8a8c548b8c6b2ef"
                },
                "length": 9167,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243537,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243483-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243483/versions/2.0.0",
      "identifier": "243483-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 44
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_07.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "512ab4b2b478ff0df7daa14c93842c5029cdbd003a6574459ec6f7a5d9cabc2e"
                },
                "length": 4905,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_07.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243483,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 07 Control flow: if(staticFive==5) and if(staticFive!=5)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243640-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243640/versions/2.0.0",
      "identifier": "243640-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 36
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_82_bad.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "bdea13d6859a2a9024f355a0293e7b775d68a3da3ad5b6ce83fbabdfbef83b7f"
                },
                "length": 1667,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_82.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "004207ebc68d33e87113a0d6ffb4406c7eb1ec13260ec3228c7b2373061693c4"
                },
                "length": 1835,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_82_bad.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "b45ea3fb58dad2a07b386e8b05b3699af34cf9c97a8fb0ce863992626af388fe"
                },
                "length": 1882,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_82_goodB2G.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "7b3b7da65ff468d51368cc6d794341dcde88ae692d3d7a0a26431697be30fbfa"
                },
                "length": 1849,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_82_goodG2B.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "7956e6659e6e4bed4fd15fe5645b1b6607d8f132198f31f5a1a3d8f5b5d1255c"
                },
                "length": 3121,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_82a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243640,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 82 Data flow: data passed in a parameter to an virtual method called via a pointer",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243459-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243459/versions/2.0.0",
      "identifier": "243459-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "84ffa23007dd807164a26b47724f4dd409393b5dab68ac4efc39ca5082b5d263"
                },
                "length": 6139,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243459,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 15 Control flow: switch(6) and switch(7)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243592-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243592/versions/2.0.0",
      "identifier": "243592-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_72b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "7e4325e0303d859b43178a39bbf8c9cdda95e91e7c9fe529472227f2b92f45bb"
                },
                "length": 4069,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_72a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "2e44f050bab71b9c4c274b5b72fb210d7b2c31416b6a57f8dcfc52861a985de4"
                },
                "length": 3803,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_72b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243592,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 72 Data flow: data passed in a vector from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243621-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243621/versions/2.0.0",
      "identifier": "243621-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 50
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "84230d74f481870cf26db4cfde7153711a3a13392764b4a6106b5b06721640d7"
                },
                "length": 5112,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243621,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243806-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243806/versions/2.0.0",
      "identifier": "243806-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_72b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "e276fc7e8fdc10f760db4847cb08db63cb9bb820d7d9437e66129587222c777e"
                },
                "length": 4078,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_72a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "343c82b43120c9a68a5e475bde30f6f9c789b3430c43bf1e79da933d820cf3e1"
                },
                "length": 3840,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_72b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243806,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 72 Data flow: data passed in a vector from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243724-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243724/versions/2.0.0",
      "identifier": "243724-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_74b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "fe559fe9fed20d8bee8f5e89b12c91817a6d49969de308ce54ed35d0374c82ce"
                },
                "length": 3110,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_74a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "163f871268c71ba2e1f2b47bef20ee7cbfce82a17b223bce7891ff03df1190c3"
                },
                "length": 3786,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_74b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243724,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: rand Set data to result of rand(), which may be zero\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 74 Data flow: data passed in a map from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243506-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243506/versions/2.0.0",
      "identifier": "243506-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 36
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_62a.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "926c969551a0d3242ba28ed1423677b1c20afcba5dee207a6a67a504baabfcfa"
                },
                "length": 2777,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_62a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "85df9c2ad5c2eb6faf6946b4a962ebfb2a4d9799cf99a932a9fd403a4527c37b"
                },
                "length": 1506,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_62b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243506,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 62 Data flow: data flows using a C++ reference from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243473-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243473/versions/2.0.0",
      "identifier": "243473-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 36
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_61a.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "bbd81447a6479bab7a5604c0660bb13930e473d3b7cf13282cf89219b3c6eead"
                },
                "length": 2842,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_61a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "cceb27a5e3dd5ffd73e3f55b796ef97f4a82085113e24569f9070bcc58c9784f"
                },
                "length": 1611,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_61b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243473,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 61 Data flow: data returned from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243486-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243486/versions/2.0.0",
      "identifier": "243486-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_10.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "6517fcc58aa0b1038feb801a2e3475cb0cbeffbba8a669621f7f5281c1c268c7"
                },
                "length": 4639,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_10.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243486,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 10 Control flow: if(globalTrue) and if(globalFalse)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243682-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243682/versions/2.0.0",
      "identifier": "243682-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_74b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "b0fe187a62df6ad53aa0b62c47aa2faede86f9c17a7d8233ff3c46fcc033290a"
                },
                "length": 7829,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_74a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "6688b1cff569b54f59783122df5c133f0967acf5eb5f7c03fae5fd536e89347a"
                },
                "length": 3811,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_74b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243682,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: listen_socket Read data using a listen socket (server side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 74 Data flow: data passed in a map from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243551-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243551/versions/2.0.0",
      "identifier": "243551-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_73b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "bbc7c3778165fbe3fae7bcec8de5599a2c687c0877238cb00bf2debe5b2814bb"
                },
                "length": 7277,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_73a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "5af9504832a934a9128bb02e610a5dcecc8f2e7c8be98664bb5d26b99649827b"
                },
                "length": 3824,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_73b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243551,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 73 Data flow: data passed in a list from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243505-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243505/versions/2.0.0",
      "identifier": "243505-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 36
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_61a.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "cc444a34576247277f85631be1f0d76b51ea768de4c3ed567537c27656930996"
                },
                "length": 2791,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_61a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "ef4bd703740f3c0684bc5c6775c155724b7fa4fa39e8298193f091472470e5d9"
                },
                "length": 1553,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_61b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243505,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 61 Data flow: data returned from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243453-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243453/versions/2.0.0",
      "identifier": "243453-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_09.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "c9b29ac72e1cb2411bef3f94eac4832f82690a7cf401969a12593dd0c7a83192"
                },
                "length": 4820,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_09.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243453,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 09 Control flow: if(GLOBAL_CONST_TRUE) and if(GLOBAL_CONST_FALSE)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243499-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243499/versions/2.0.0",
      "identifier": "243499-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 44
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_34.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "97070d78430c2ca2e6b457cbe38a9da86dd00e5cd29702e8d9c2515fc81f2d9a"
                },
                "length": 3426,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_34.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243499,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 34 Data flow: use of a union containing two methods of accessing the same data (within the same function)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243482-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243482/versions/2.0.0",
      "identifier": "243482-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 44
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_06.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "f7c99a9b7691ccc657b5e890aba3d8950efa3b1a3f8d81678b17b0127f3f2d2c"
                },
                "length": 4988,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_06.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243482,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 06 Control flow: if(STATIC_CONST_FIVE==5) and if(STATIC_CONST_FIVE!=5)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243455-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243455/versions/2.0.0",
      "identifier": "243455-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 38
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_11.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "5f7b67f761ed2106eb62066c95a1dc55341f28a3a3528341762a545914efd16f"
                },
                "length": 4848,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_11.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243455,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 11 Control flow: if(globalReturnsTrue()) and if(globalReturnsFalse())",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243471-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243471/versions/2.0.0",
      "identifier": "243471-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 29
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_44.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "f6d6f3d0d71a5197c05584e322824cc81ad3338be7b048eb6a1208f203c0f189"
                },
                "length": 3476,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_44.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243471,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 44 Data/control flow: data passed as an argument from one function to a function in the same source file called via a function pointer",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243479-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243479/versions/2.0.0",
      "identifier": "243479-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_03.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "f6fd64c42535b189fffec301132b14f5e520ee0f7066d5ccf6d1c65f19b37135"
                },
                "length": 4538,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_03.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243479,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 03 Control flow: if(5==5) and if(5!=5)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243468-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243468/versions/2.0.0",
      "identifier": "243468-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 29
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_41.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "ffed2352245f63d2a5a9af49463df68691bee02e9286752cb5746169ab97a65e"
                },
                "length": 3212,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_41.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243468,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 41 Data flow: data passed as an argument from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243477-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243477/versions/2.0.0",
      "identifier": "243477-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 34
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_01.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "bdb57b4b56ffb135fd354ced33461cd64908bbc9979a24be261418f3c08c1864"
                },
                "length": 2858,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_01.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243477,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 01 Baseline",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243629-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243629/versions/2.0.0",
      "identifier": "243629-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 47
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_62a.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "4a4c7459322b4e21ea4b4a34860aec647bf7716bfd48fc9810810e1aaf64a0a8"
                },
                "length": 4818,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_62a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "4d90606688cfe8a24d813944d08395fa36f391a944d0fd43f752732bc90586af"
                },
                "length": 1527,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_62b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243629,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 62 Data flow: data flows using a C++ reference from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243680-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243680/versions/2.0.0",
      "identifier": "243680-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 45
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_72b.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "ac78483fd42723f96fb7abbc0d937154d65f1695673ba1964449df15d7437001"
                },
                "length": 8099,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_72a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "879a10302e76ad8e237d4e34f6032e161c843ac270454059f90a80b1bfd09f57"
                },
                "length": 3832,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_72b.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243680,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: listen_socket Read data using a listen socket (server side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 72 Data flow: data passed in a vector from one function to another in different source files",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243793-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243793/versions/2.0.0",
      "identifier": "243793-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 63
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_43.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "90bc3486e64211a44614c7dc277b877adab2900cdc718abf51d371cabeb6f31f"
                },
                "length": 5781,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_43.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243793,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 43 Data flow: data flows using a C++ reference from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243478-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243478/versions/2.0.0",
      "identifier": "243478-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 39
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_02.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "0e01468d74d35aefb555f65212f0c6ef85a7cd9e84032532c8a8a2d4bc3dd4f6"
                },
                "length": 4490,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_02.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243478,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 02 Control flow: if(1) and if(0)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243575-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243575/versions/2.0.0",
      "identifier": "243575-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 61
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "39093a83b06551b449dcbadb1e7929f688b19c34c7ccd4bc7aaf1687e398c52f"
                },
                "length": 5945,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243575,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fgets Read data from the console using fgets()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243494-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243494/versions/2.0.0",
      "identifier": "243494-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 37
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_18.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "b4ee9e81607b9cd62f63f2abe14feb16035c60ebc9d75fff044633708eb2b49e"
                },
                "length": 3118,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_18.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243494,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 18 Control flow: goto statements",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243639-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243639/versions/2.0.0",
      "identifier": "243639-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 36
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_81_bad.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "d2c4261393d8d4fa6fa93347d6af7240a4cbe9ad937f46fc91c15a91249f9be3"
                },
                "length": 1693,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_81.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "bffe853eaa32158808d4ca09e77afe8dc0afbe7a007c54baa4289bf61a1438f7"
                },
                "length": 1843,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_81_bad.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "1b88cbcf65eec0df47b6c15aa0eaa878fd931bb220949cc0775c638887a7ac89"
                },
                "length": 1890,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_81_goodB2G.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "5f334e97e3e678b7409c5e2a5cc1a1bcae1260a25e67b31ef67d22030df7c5d6"
                },
                "length": 1857,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_81_goodG2B.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "528cdd329fd8147452e42fdc78afedf977f5ec8832739b9fa0d9bbb92299e8c2"
                },
                "length": 3060,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_81a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243639,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: fscanf Read data from the console using fscanf()\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 81 Data flow: data passed in a parameter to an virtual method called via a reference",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243452-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243452/versions/2.0.0",
      "identifier": "243452-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 52
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_08.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "440e055f75fb195294cbccfb2582b9025714313c53bb65e21ac8c7a89688c00e"
                },
                "length": 5130,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_08.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243452,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 08 Control flow: if(staticReturnsTrue()) and if(staticReturnsFalse())",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243533-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243533/versions/2.0.0",
      "identifier": "243533-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "789",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-789",
                "message": {
                  "text": "Memory Allocation with Excessive Size Value."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 124
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "385af69cc7eab4b3f2d00d0643f971457503f34afc44ab98f3912f94d7ae26ae"
                },
                "length": 9371,
                "location": {
                  "uri": "src/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243533,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 789 Uncontrolled Memory Allocation\n BadSource: connect_socket Read data using a connect socket (client side)\n GoodSource: Small number greater than zero\n Sinks:\n GoodSink: Allocate memory with malloc() and check the size of the memory to be allocated\n BadSink : Allocate memory with malloc(), but incorrectly check the size of the memory to be allocated\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "789",
                    "name": "Memory Allocation with Excessive Size Value"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243508-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243508/versions/2.0.0",
      "identifier": "243508-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 29
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_82_bad.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "3f57a8fa4beca0cc3c029a510f4a7332f83fb4e0e6d4d311db4558f9c06975e5"
                },
                "length": 1635,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_82.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "aa0e15dc408fe8b126aac9f7fbbd76e50b11be66020db84a6616cd8d5fb2f2d6"
                },
                "length": 1153,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_82_bad.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "dd4e9c598a10d1d19d4a850cd1251d5db093a19756ba5a5806869d2f088a0238"
                },
                "length": 1059,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_82_goodB2G.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "453906d1bb9fc0a6c31e1b5b7ae0624ba38064ddc882dc025b22a89fcf94a095"
                },
                "length": 1167,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_82_goodG2B.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "1d1675b0dfd66fac6282467bbf7bfd122c8720378c38cd4477bd99998785d080"
                },
                "length": 3256,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_82a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243508,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 82 Data flow: data passed in a parameter to an virtual method called via a pointer",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243503-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243503/versions/2.0.0",
      "identifier": "243503-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 29
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_44.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "876feafa4e3f0336635c033d96c35787988f256bc65e4b26b56bda7da4a7b699"
                },
                "length": 3401,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_44.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243503,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 44 Data/control flow: data passed as an argument from one function to a function in the same source file called via a function pointer",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243469-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243469/versions/2.0.0",
      "identifier": "243469-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 40
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_42.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "59ee2f4552aa533f3f6798d84857b90f9cfec037770c93081489815d749e42d9"
                },
                "length": 3319,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_42.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243469,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 42 Data flow: data returned from one function to another in the same source file",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243475-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243475/versions/2.0.0",
      "identifier": "243475-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 29
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_81_bad.cpp",
                        "index": 1
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "241945c837ec3bf9ad49a26dc371f9da6a7d76a4ccfcc6d6fd148fb1e4fe4087"
                },
                "length": 1676,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_81.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6545969476e71894a5a937497e3bfbbf97874d0e20d871157b095f3726f8d475"
                },
                "length": 1163,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_81_bad.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "fa3f7826215d1e2b16acc45f729d04fb507e0c8e8daa4aa2df1f8572b5cf8918"
                },
                "length": 1069,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_81_goodB2G.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "2af89e8bee8f5f03a02d0768a79a3966b010e8cdfba029dac252496c84849fde"
                },
                "length": 1177,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_81_goodG2B.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "38e96d19484cedf70d0708529af4c76b9f3eeca4ac84d94565f957912a62fadf"
                },
                "length": 3209,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_81a.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243475,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 81 Data flow: data passed in a parameter to an virtual method called via a reference",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243490-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243490/versions/2.0.0",
      "identifier": "243490-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 38
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_14.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "1ffff7ba7438f2c640e28be4a4cf1b7641cbe074a3f15fcdcf60b2e769b206b2"
                },
                "length": 4678,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_wchar_t_14.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243490,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 14 Control flow: if(globalFive==5) and if(globalFive!=5)",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    },
    {
      "download": "https://samate.nist.gov/SARD/downloads/versions/243466-v2.0.0.zip",
      "link": "https://samate.nist.gov/SARD/test-cases/243466/versions/2.0.0",
      "identifier": "243466-v2.0.0",
      "sarif": {
        "runs": [
          {
            "tool": {
              "driver": {
                "name": "SARD - SAMATE",
                "version": "5.0.0",
                "fullName": "Software Assurance Reference Dataset Project",
                "organization": "NIST",
                "informationUri": "https://samate.nist.gov/SARD/",
                "supportedTaxonomies": [
                  {
                    "name": "CWE",
                    "index": 0
                  }
                ]
              }
            },
            "results": [
              {
                "taxa": [
                  {
                    "id": "762",
                    "index": 0,
                    "toolComponent": {
                      "name": "CWE",
                      "index": 0
                    }
                  }
                ],
                "ruleId": "CWE-762",
                "message": {
                  "text": "Mismatched Memory Management Routines."
                },
                "locations": [
                  {
                    "physicalLocation": {
                      "region": {
                        "startLine": 37
                      },
                      "artifactLocation": {
                        "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_33.cpp",
                        "index": 0
                      }
                    }
                  }
                ]
              }
            ],
            "artifacts": [
              {
                "hashes": {
                  "sha-256": "16384337be9a2c1e2826273962b07d0b0ffb25d63762390fc6b3033a96ae7840"
                },
                "length": 3268,
                "location": {
                  "uri": "src/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_33.cpp"
                },
                "sourceLanguage": "cplusplus"
              },
              {
                "hashes": {
                  "sha-256": "50ace91d0f9cd9f281d5d8ff3a9ca879ee2779d737030ae84e8e4be3df5b299c"
                },
                "length": 5429,
                "location": {
                  "uri": "src/testcasesupport/io.c"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "a78aaf3a54a6210260ad70123c09c3c283c6edf7808b6244205e00b8f2d9b8d0"
                },
                "length": 4004,
                "location": {
                  "uri": "src/testcasesupport/std_testcase.h"
                },
                "sourceLanguage": "c"
              },
              {
                "hashes": {
                  "sha-256": "6459df50d22697bb61619e2effd688ebb98915db25f7eb1bdbb767f888066fb6"
                },
                "length": 1457,
                "location": {
                  "uri": "src/testcasesupport/std_testcase_io.h"
                },
                "sourceLanguage": "c"
              }
            ],
            "properties": {
              "id": 243466,
              "type": "source code",
              "state": "mixed",
              "author": "NSA/Center for Assured Software",
              "status": "accepted",
              "version": "2.0.0",
              "language": "cplusplus",
              "description": "CWE: 762 Mismatched Memory Management Routines\n BadSource:  Allocate data using new\n GoodSource: Allocate data using malloc()\n Sinks:\n GoodSink: Deallocate data using delete\n BadSink : Deallocate data using free()\n Flow Variant: 33 Data flow: use of a C++ reference to data within the same function",
              "submissionDate": "2017-10-06"
            },
            "taxonomies": [
              {
                "name": "CWE",
                "taxa": [
                  {
                    "id": "762",
                    "name": "Mismatched Memory Management Routines"
                  }
                ],
                "version": "4.6",
                "downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.6.xml.zip",
                "organization": "MITRE",
                "informationUri": "https://cwe.mitre.org/data/published/cwe_v4.6.pdf",
                "isComprehensive": false,
                "shortDescription": {
                  "text": "The MITRE Common Weakness Enumeration"
                }
              }
            ]
          }
        ],
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "version": "2.1.0"
      }
    }
  ],
  "page": 11,
  "total": 25298,
  "limit": 100,
  "count": 100,
  "pageCount": 253
}