# Tokenized code fragments for 240438-v2.0.0-mixed
# Total center nodes processed: 7
# Total code fragments found: 24

CENTER_NODE: 30064771140
FRAGMENT_COUNT: 2
  ORIGINAL[0]: goodG2B()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: goodB2G()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 3
  ORIGINAL[0]: i=0
  TYPE[0]: CALL
  TOKENIZED[0]: i=0
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476768
FRAGMENT_COUNT: 3
  ORIGINAL[0]: i=0
  TYPE[0]: CALL
  TOKENIZED[0]: i=0
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476752
FRAGMENT_COUNT: 3
  ORIGINAL[0]: i=0
  TYPE[0]: CALL
  TOKENIZED[0]: i=0
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771086
FRAGMENT_COUNT: 3
  ORIGINAL[0]: data == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: exit(-1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( -1 )
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1

CENTER_NODE: 30064771139
FRAGMENT_COUNT: 7
  ORIGINAL[0]: data[i]
  TYPE[0]: CALL
  TOKENIZED[0]: data[i]
  ORIGINAL[1]: i<10
  TYPE[1]: CALL
  TOKENIZED[1]: i<10
  ORIGINAL[2]: printDoubleLine(data[i])
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( data[i] )
  ORIGINAL[3]: data[i]
  TYPE[3]: CALL
  TOKENIZED[3]: data[i]
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: data
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (double *)malloc(10*sizeof(double))
  TYPE[0]: CALL
  TOKENIZED[0]: ( double * ) FUN1 ( 10*sizeof ( double ) )
  ORIGINAL[1]: malloc(10*sizeof(double))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 10*sizeof ( double ) )
  ORIGINAL[2]: 10*sizeof(double)
  TYPE[2]: CALL
  TOKENIZED[2]: 10*sizeof ( double )

