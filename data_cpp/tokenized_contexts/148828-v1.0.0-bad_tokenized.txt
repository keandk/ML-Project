# Tokenized code fragments for 148828-v1.0.0-bad
# Total center nodes processed: 121
# Total code fragments found: 472

CENTER_NODE: 30064773490
FRAGMENT_COUNT: 7
  ORIGINAL[0]: fullySelectedRoot->isElementNode() && static_cast<Element*>(fullySelectedRoot)->hasAttribute(backgroundAttr)
  TYPE[0]: CALL
  TOKENIZED[0]: fullySelectedRoot->isElementNode ( ) && static_cast<Element*> ( VAR1 ) ->hasAttribute ( VAR2 )
  ORIGINAL[1]: style->getPropertyCSSValue(CSSPropertyBackgroundImage)
  TYPE[1]: CALL
  TOKENIZED[1]: style->getPropertyCSSValue ( VAR1 )
  ORIGINAL[2]: style->getPropertyCSSValue(CSSPropertyBackgroundColor)
  TYPE[2]: CALL
  TOKENIZED[2]: style->getPropertyCSSValue ( VAR1 )
  ORIGINAL[3]: style
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: CSSPropertyBackgroundImage
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: style
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: CSSPropertyBackgroundColor
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064773273
FRAGMENT_COUNT: 5
  ORIGINAL[0]: node->isHTMLElement()
  TYPE[0]: CALL
  TOKENIZED[0]: node->isHTMLElement ( )
  ORIGINAL[1]: htmlElt->endTagRequirement() == TagStatusForbidden
  TYPE[1]: CALL
  TOKENIZED[1]: htmlElt->endTagRequirement ( ) == VAR1
  ORIGINAL[2]: htmlElt->endTagRequirement()
  TYPE[2]: CALL
  TOKENIZED[2]: htmlElt->endTagRequirement ( )
  ORIGINAL[3]: htmlElt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: TagStatusForbidden
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476935
FRAGMENT_COUNT: 6
  ORIGINAL[0]: m_width[i].isPercent()
  TYPE[0]: CALL
  TOKENIZED[0]: m_width[i] . FUN1 ( )
  ORIGINAL[1]: m_width[i]
  TYPE[1]: CALL
  TOKENIZED[1]: m_width[i]
  ORIGINAL[2]: m_width[i]
  TYPE[2]: CALL
  TOKENIZED[2]: m_width[i]
  ORIGINAL[3]: totalRawPercent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: m_width
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771503
FRAGMENT_COUNT: 5
  ORIGINAL[0]: * frame = contentFrame()
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = FUN1 ( )
  ORIGINAL[1]: contentFrame()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: frame->transferChildFrameToNewDocument()
  TYPE[2]: CALL
  TOKENIZED[2]: frame->transferChildFrameToNewDocument ( )
  ORIGINAL[3]: frame
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: frame
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772315
FRAGMENT_COUNT: 4
  ORIGINAL[0]: result->setIsText(isText())
  TYPE[0]: CALL
  TOKENIZED[0]: result->setIsText ( FUN1 ( ) )
  ORIGINAL[1]: isText()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773331
FRAGMENT_COUNT: 5
  ORIGINAL[0]: * n = node
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: for (Node* n = node;n != end;n = n->traverseNextNode())
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( Node* VAR1 = VAR2 ; VAR1 != VAR3 ; VAR1 = n->traverseNextNode ( ) )
  ORIGINAL[2]: n
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: n
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772290
FRAGMENT_COUNT: 4
  ORIGINAL[0]: m_image->removeClient(this)
  TYPE[0]: CALL
  TOKENIZED[0]: m_image->removeClient ( this )
  ORIGINAL[1]: m_image
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: m_image
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772567
FRAGMENT_COUNT: 5
  ORIGINAL[0]: m_text.isEmpty()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( )
  ORIGINAL[1]: suffixSpace[2] = { listMarkerSuffix(type), ' ' }
  TYPE[1]: CALL
  TOKENIZED[1]: suffixSpace[2] = { FUN1 ( VAR1 ) , ' ' }
  ORIGINAL[2]: suffixSpace[2] = { listMarkerSuffix(type), ' ' }
  TYPE[2]: CALL
  TOKENIZED[2]: suffixSpace[2] = { FUN1 ( VAR1 ) , ' ' }
  ORIGINAL[3]: suffixSpace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: suffixSpace
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771565
FRAGMENT_COUNT: 3
  ORIGINAL[0]: m_checkAttachedTimer.stop()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( )
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: m_checkAttachedTimer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771571
FRAGMENT_COUNT: 2
  ORIGINAL[0]: HTMLFrameOwnerElement::willRemove()
  TYPE[0]: CALL
  TOKENIZED[0]: HTMLFrameOwnerElement::willRemove ( )
  ORIGINAL[1]: m_remainsAliveOnRemovalFromTree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771569
FRAGMENT_COUNT: 3
  ORIGINAL[0]: m_remainsAliveOnRemovalFromTree = false
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = false
  ORIGINAL[1]: willRemove()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: m_remainsAliveOnRemovalFromTree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640397
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772305
FRAGMENT_COUNT: 9
  ORIGINAL[0]: m_image != style()->listStyleImage()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != FUN1 ( ) ->listStyleImage ( )
  ORIGINAL[1]: style()->listStyleImage()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ) ->listStyleImage ( )
  ORIGINAL[2]: m_image = style()->listStyleImage()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( ) ->listStyleImage ( )
  ORIGINAL[3]: style()->listStyleImage()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ) ->listStyleImage ( )
  ORIGINAL[4]: style()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )
  ORIGINAL[5]: m_image
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: m_image
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: m_image
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: m_image
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640400
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773417
FRAGMENT_COUNT: 3
  ORIGINAL[0]: node->hasTagName(emTag)
  TYPE[0]: CALL
  TOKENIZED[0]: node->hasTagName ( VAR1 )
  ORIGINAL[1]: node
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: emTag
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478752
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !blockquote
  TYPE[0]: CALL
  TOKENIZED[0]: !blockquote
  ORIGINAL[1]: blockquote->parentNode()
  TYPE[1]: CALL
  TOKENIZED[1]: blockquote->parentNode ( )
  ORIGINAL[2]: blockquote
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: blockquote
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: blockquote
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771560
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !renderer()
  TYPE[0]: CALL
  TOKENIZED[0]: !renderer ( )
  ORIGINAL[1]: toRenderBox(renderer())->height()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( ) ) ->height ( )
  ORIGINAL[2]: toRenderBox(renderer())
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( FUN2 ( ) )

CENTER_NODE: 47244640321
FRAGMENT_COUNT: 2
  ORIGINAL[0]: attr->name() == nameAttr
  TYPE[0]: CALL
  TOKENIZED[0]: attr->name ( ) == VAR1
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064773068
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !n->internalSubset().isEmpty()
  TYPE[0]: CALL
  TOKENIZED[0]: !n->internalSubset ( ) . FUN1 ( )
  ORIGINAL[1]: append(result, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772603
FRAGMENT_COUNT: 5
  ORIGINAL[0]: style()->direction() == LTR
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ) ->direction ( ) == VAR1
  ORIGINAL[1]: font.ascent() - minPrefWidth()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) - FUN2 ( )
  ORIGINAL[2]: font.ascent()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: minPrefWidth()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: font
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477974
FRAGMENT_COUNT: 3
  ORIGINAL[0]: m_image->errorOccurred()
  TYPE[0]: CALL
  TOKENIZED[0]: m_image->errorOccurred ( )
  ORIGINAL[1]: m_image
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: m_image
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719479195
FRAGMENT_COUNT: 8
  ORIGINAL[0]: i < preCount
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: length += preMarkups[i].length()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += preMarkups[i] . FUN1 ( )
  ORIGINAL[2]: preMarkups[i].length()
  TYPE[2]: CALL
  TOKENIZED[2]: preMarkups[i] . FUN1 ( )
  ORIGINAL[3]: length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: preMarkups
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: length
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: length
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719478832
FRAGMENT_COUNT: 3
  ORIGINAL[0]: style->removeProperty(CSSPropertyFloat)
  TYPE[0]: CALL
  TOKENIZED[0]: style->removeProperty ( VAR1 )
  ORIGINAL[1]: style
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: CSSPropertyFloat
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640377
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640644
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640484
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772293
FRAGMENT_COUNT: 5
  ORIGINAL[0]: style() && (newStyle->listStylePosition() != style()->listStylePosition() || newStyle->listStyleType() != style()->listStyleType())
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ) && ( newStyle->listStylePosition ( ) != FUN1 ( ) ->listStylePosition ( ) || newStyle->listStyleType ( ) != FUN1 ( ) ->listStyleType ( ) )
  ORIGINAL[1]: style()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: newStyle->listStylePosition() != style()->listStylePosition() || newStyle->listStyleType() != style()->listStyleType()
  TYPE[2]: CALL
  TOKENIZED[2]: newStyle->listStylePosition ( ) != FUN1 ( ) ->listStylePosition ( ) || newStyle->listStyleType ( ) != FUN1 ( ) ->listStyleType ( )
  ORIGINAL[3]: newStyle->listStylePosition() != style()->listStylePosition()
  TYPE[3]: CALL
  TOKENIZED[3]: newStyle->listStylePosition ( ) != FUN1 ( ) ->listStylePosition ( )
  ORIGINAL[4]: newStyle->listStyleType() != style()->listStyleType()
  TYPE[4]: CALL
  TOKENIZED[4]: newStyle->listStyleType ( ) != FUN1 ( ) ->listStyleType ( )

CENTER_NODE: 30064771546
FRAGMENT_COUNT: 3
  ORIGINAL[0]: received ? contentFrame() : 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 ? FUN1 ( ) : 0
  ORIGINAL[1]: contentFrame()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: received
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719479827
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !node
  TYPE[0]: CALL
  TOKENIZED[0]: !node
  ORIGINAL[1]: node->document()
  TYPE[1]: CALL
  TOKENIZED[1]: node->document ( )
  ORIGINAL[2]: node
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: document
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771391
FRAGMENT_COUNT: 7
  ORIGINAL[0]: * parentFrame = document()->frame()
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = FUN1 ( ) ->frame ( )
  ORIGINAL[1]: parentFrame->page()->frameCount() > 200
  TYPE[1]: CALL
  TOKENIZED[1]: parentFrame->page ( ) ->frameCount ( ) > 200
  ORIGINAL[2]: * frame = document()->frame()
  TYPE[2]: CALL
  TOKENIZED[2]: * VAR1 = FUN1 ( ) ->frame ( )
  ORIGINAL[3]: document()->frame()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ) ->frame ( )
  ORIGINAL[4]: for (Frame* frame = document()->frame();frame;frame = frame->tree()->parent())
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: for ( Frame* VAR1 = FUN1 ( ) ->frame ( ) ; VAR1 ; VAR1 = frame->tree ( ) ->parent ( ) )
  ORIGINAL[5]: frame
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: frame
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719478741
FRAGMENT_COUNT: 5
  ORIGINAL[0]: matchedRules->item(i)->type() == CSSRule::STYLE_RULE
  TYPE[0]: CALL
  TOKENIZED[0]: matchedRules->item ( VAR1 ) ->type ( ) == CSSRule::STYLE_RULE
  ORIGINAL[1]: RefPtr<CSSMutableStyleDeclaration
  TYPE[1]: CALL
  TOKENIZED[1]: RefPtr<CSSMutableStyleDeclaration
  ORIGINAL[2]: RefPtr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: RefPtr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: CSSMutableStyleDeclaration
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773277
FRAGMENT_COUNT: 4
  ORIGINAL[0]: node->hasChildNodes()
  TYPE[0]: CALL
  TOKENIZED[0]: node->hasChildNodes ( )
  ORIGINAL[1]: node->isHTMLElement() && !doesHTMLForbidEndTag(node)
  TYPE[1]: CALL
  TOKENIZED[1]: node->isHTMLElement ( ) && !doesHTMLForbidEndTag ( VAR1 )
  ORIGINAL[2]: node->isHTMLElement()
  TYPE[2]: CALL
  TOKENIZED[2]: node->isHTMLElement ( )
  ORIGINAL[3]: !doesHTMLForbidEndTag(node)
  TYPE[3]: CALL
  TOKENIZED[3]: !doesHTMLForbidEndTag ( VAR1 )

CENTER_NODE: 68719478791
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ns.isEmpty()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( )
  ORIGINAL[1]: ns.impl()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: ns
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: foundNS
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ns
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ns
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064773300
FRAGMENT_COUNT: 2
  ORIGINAL[0]: String::adopt(m_result)
  TYPE[0]: CALL
  TOKENIZED[0]: String::adopt ( VAR1 )
  ORIGINAL[1]: this->m_result
  TYPE[1]: CALL
  TOKENIZED[1]: this->m_result

CENTER_NODE: 30064773802
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !baseURL.isEmpty()
  TYPE[0]: CALL
  TOKENIZED[0]: !baseURL . FUN1 ( )
  ORIGINAL[1]: baseURL.isEmpty()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( )
  ORIGINAL[2]: fragment
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: baseURL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773381
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !node->isHTMLElement()
  TYPE[0]: CALL
  TOKENIZED[0]: !node->isHTMLElement ( )
  ORIGINAL[1]: * element = const_cast<HTMLElement*>(static_cast<const HTMLElement*>(node))
  TYPE[1]: CALL
  TOKENIZED[1]: * VAR1 = const_cast<HTMLElement*> ( static_cast<const HTMLElement*> ( VAR2 ) )
  ORIGINAL[2]: const_cast<HTMLElement*>(static_cast<const HTMLElement*>(node))
  TYPE[2]: CALL
  TOKENIZED[2]: const_cast<HTMLElement*> ( static_cast<const HTMLElement*> ( VAR1 ) )
  ORIGINAL[3]: element
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: RefPtr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772509
FRAGMENT_COUNT: 1
  ORIGINAL[0]: setNeedsLayout(false)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( false )

CENTER_NODE: 68719478629
FRAGMENT_COUNT: 4
  ORIGINAL[0]: appendEscapedContent(buffer, make_pair(in.characters(), in.length()), escapeNBSP)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR2 . FUN3 ( ) , VAR2 . FUN4 ( ) ) , VAR3 )
  ORIGINAL[1]: String::adopt(buffer)
  TYPE[1]: CALL
  TOKENIZED[1]: String::adopt ( VAR1 )
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640383
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478499
FRAGMENT_COUNT: 4
  ORIGINAL[0]: this->m_element
  TYPE[0]: CALL
  TOKENIZED[0]: this->m_element
  ORIGINAL[1]: this->m_name
  TYPE[1]: CALL
  TOKENIZED[1]: this->m_name
  ORIGINAL[2]: m_name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: this
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: this

CENTER_NODE: 30064771499
FRAGMENT_COUNT: 2
  ORIGINAL[0]: setName()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: openURL()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 30064772514
FRAGMENT_COUNT: 13
  ORIGINAL[0]: o != m_image->data()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != m_image->data ( )
  ORIGINAL[1]: width() != m_image->imageSize(this, style()->effectiveZoom()).width() || height() != m_image->imageSize(this, style()->effectiveZoom()).height()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ) != m_image->imageSize ( this , FUN2 ( ) ->effectiveZoom ( ) ) . FUN1 ( ) || FUN3 ( ) != m_image->imageSize ( this , FUN2 ( ) ->effectiveZoom ( ) ) . FUN3 ( )
  ORIGINAL[2]: width() != m_image->imageSize(this, style()->effectiveZoom()).width()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ) != m_image->imageSize ( this , FUN2 ( ) ->effectiveZoom ( ) ) . FUN1 ( )
  ORIGINAL[3]: width()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: m_image->imageSize(this, style()->effectiveZoom()).width()
  TYPE[4]: CALL
  TOKENIZED[4]: m_image->imageSize ( this , FUN1 ( ) ->effectiveZoom ( ) ) . FUN2 ( )
  ORIGINAL[5]: height() != m_image->imageSize(this, style()->effectiveZoom()).height()
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( ) != m_image->imageSize ( this , FUN2 ( ) ->effectiveZoom ( ) ) . FUN1 ( )
  ORIGINAL[6]: height()
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( )
  ORIGINAL[7]: m_image->imageSize(this, style()->effectiveZoom()).height()
  TYPE[7]: CALL
  TOKENIZED[7]: m_image->imageSize ( this , FUN1 ( ) ->effectiveZoom ( ) ) . FUN2 ( )
  ORIGINAL[8]: m_image->imageSize(this, style()->effectiveZoom())
  TYPE[8]: CALL
  TOKENIZED[8]: m_image->imageSize ( this , FUN1 ( ) ->effectiveZoom ( ) )
  ORIGINAL[9]: style()->effectiveZoom()
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( ) ->effectiveZoom ( )
  ORIGINAL[10]: style()
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( )
  ORIGINAL[11]: m_image
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: this
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: this

CENTER_NODE: 30064773964
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !block->hasTagName(bodyTag)
  TYPE[0]: CALL
  TOKENIZED[0]: !block->hasTagName ( VAR1 )
  ORIGINAL[1]: block->hasTagName(bodyTag)
  TYPE[1]: CALL
  TOKENIZED[1]: block->hasTagName ( VAR1 )
  ORIGINAL[2]: block
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bodyTag
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719479264
FRAGMENT_COUNT: 4
  ORIGINAL[0]: Vector<UChar> openTag
  TYPE[0]: CALL
  TOKENIZED[0]: Vector<UChar> VAR1
  ORIGINAL[1]: Vector<UChar
  TYPE[1]: CALL
  TOKENIZED[1]: Vector<UChar
  ORIGINAL[2]: openTag
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: openTag
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771518
FRAGMENT_COUNT: 6
  ORIGINAL[0]: * renderPart = toRenderPart(renderer())
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = FUN1 ( FUN2 ( ) )
  ORIGINAL[1]: toRenderPart(renderer())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( ) )
  ORIGINAL[2]: * frame = contentFrame()
  TYPE[2]: CALL
  TOKENIZED[2]: * VAR1 = FUN1 ( )
  ORIGINAL[3]: contentFrame()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: renderPart
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: frame
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640535
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640341
FRAGMENT_COUNT: 1
  ORIGINAL[0]: m_frameName.isNull()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( )

CENTER_NODE: 30064772288
FRAGMENT_COUNT: 1
  ORIGINAL[0]: setInline(true)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( true )

CENTER_NODE: 30064772664
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !isImage()
  TYPE[0]: CALL
  TOKENIZED[0]: !isImage ( )
  ORIGINAL[1]: isImage()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: m_listItem->lineHeight(false, true)
  TYPE[2]: CALL
  TOKENIZED[2]: m_listItem->lineHeight ( false , true )
  ORIGINAL[3]: height()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: m_listItem
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478658
FRAGMENT_COUNT: 7
  ORIGINAL[0]: node == range->endContainer(ec)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == range->endContainer ( VAR2 )
  ORIGINAL[1]: range->endOffset(ec)
  TYPE[1]: CALL
  TOKENIZED[1]: range->endOffset ( VAR1 )
  ORIGINAL[2]: range
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: range
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ec
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: range
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719479820
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: fragment->appendChild(element.release(), ec)
  TYPE[1]: CALL
  TOKENIZED[1]: fragment->appendChild ( VAR1 . FUN1 ( ) , VAR2 )
  ORIGINAL[2]: element.release()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: ec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fragment
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ec
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ec
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771535
FRAGMENT_COUNT: 5
  ORIGINAL[0]: settings && settings->needsAcrobatFrameReloadingQuirk() && m_URL == str
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && settings->needsAcrobatFrameReloadingQuirk ( ) && VAR2 == VAR3
  ORIGINAL[1]: m_URL = AtomicString(str)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[2]: AtomicString(str)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: inDocument()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: m_URL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640699
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !node
  TYPE[0]: CALL
  TOKENIZED[0]: !node

CENTER_NODE: 68719477177
FRAGMENT_COUNT: 2
  ORIGINAL[0]: attr->name()
  TYPE[0]: CALL
  TOKENIZED[0]: attr->name ( )
  ORIGINAL[1]: attr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477302
FRAGMENT_COUNT: 4
  ORIGINAL[0]: toAlphabetic(number, alphabet, size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: number
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: alphabet
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477425
FRAGMENT_COUNT: 5
  ORIGINAL[0]: number < 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 1
  ORIGINAL[1]: number
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: number
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: number
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: number
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773363
FRAGMENT_COUNT: 4
  ORIGINAL[0]: * upstreamNode = next.deepEquivalent().upstream().node()
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2 . FUN1 ( ) . FUN2 ( ) . FUN3 ( )
  ORIGINAL[1]: next.deepEquivalent().upstream().node()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) . FUN2 ( ) . FUN3 ( )
  ORIGINAL[2]: upstreamNode
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: downstreamNode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477306
FRAGMENT_COUNT: 4
  ORIGINAL[0]: toNumeric(number, alphabet, size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: number
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: alphabet
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478504
FRAGMENT_COUNT: 4
  ORIGINAL[0]: attr.length()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( )
  ORIGINAL[1]: attr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: attr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478865
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stringValueForRange(node, range)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: node
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: useRenderedText
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: range
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477153
FRAGMENT_COUNT: 3
  ORIGINAL[0]: HTMLFrameOwnerElement::insertedIntoDocument()
  TYPE[0]: CALL
  TOKENIZED[0]: HTMLFrameOwnerElement::insertedIntoDocument ( )
  ORIGINAL[1]: m_shouldOpenURLAfterAttach = true
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = true
  ORIGINAL[2]: m_shouldOpenURLAfterAttach
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477647
FRAGMENT_COUNT: 2
  ORIGINAL[0]: type
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: LowerGreek
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640343
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !renderer()
  TYPE[0]: CALL
  TOKENIZED[0]: !renderer ( )

CENTER_NODE: 30064772856
FRAGMENT_COUNT: 5
  ORIGINAL[0]: append(result, nbspEntity)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: escapeNBSP
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: nbspEntity
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: lastCopiedFrom
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772400
FRAGMENT_COUNT: 6
  ORIGINAL[0]: isImage()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: context->setFillColor(color, style()->colorSpace())
  TYPE[1]: CALL
  TOKENIZED[1]: context->setFillColor ( VAR1 , FUN1 ( ) ->colorSpace ( ) )
  ORIGINAL[2]: style()->colorSpace()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ) ->colorSpace ( )
  ORIGINAL[3]: context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: color
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: type
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719479696
FRAGMENT_COUNT: 8
  ORIGINAL[0]: node->childNodeCount() == 1 && (node->firstChild()->isTextNode() || (node->firstChild()->firstChild()))
  TYPE[0]: CALL
  TOKENIZED[0]: node->childNodeCount ( ) == 1 && ( node->firstChild ( ) ->isTextNode ( ) || ( node->firstChild ( ) ->firstChild ( ) ) )
  ORIGINAL[1]: node->childNodeCount()
  TYPE[1]: CALL
  TOKENIZED[1]: node->childNodeCount ( )
  ORIGINAL[2]: node
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: node
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477320
FRAGMENT_COUNT: 5
  ORIGINAL[0]: letters[length++]
  TYPE[0]: CALL
  TOKENIZED[0]: letters[length++]
  ORIGINAL[1]: number / 100
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 / 100
  ORIGINAL[2]: letters[length++]
  TYPE[2]: CALL
  TOKENIZED[2]: letters[length++]
  ORIGINAL[3]: letters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479157
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !style
  TYPE[0]: CALL
  TOKENIZED[0]: !style
  ORIGINAL[1]: style
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: style
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640347
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478722
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !node->isTextNode()
  TYPE[0]: CALL
  TOKENIZED[0]: !node->isTextNode ( )
  ORIGINAL[1]: Range::create(node->document(), start, end)
  TYPE[1]: CALL
  TOKENIZED[1]: Range::create ( node->document ( ) , VAR1 , VAR2 )
  ORIGINAL[2]: node->document()
  TYPE[2]: CALL
  TOKENIZED[2]: node->document ( )
  ORIGINAL[3]: start
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: end
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719479036
FRAGMENT_COUNT: 8
  ORIGINAL[0]: appendStartMarkup(result, node, range, annotate, convertBlocksToInlines, namespaces, rangeFullySelectsNode)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 , VAR7 )
  ORIGINAL[1]: result
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: node
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: range
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: annotate
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: convertBlocksToInlines
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: namespaces
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: rangeFullySelectsNode
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477822
FRAGMENT_COUNT: 4
  ORIGINAL[0]: toAlphabetic(value, katakanaIrohaAlphabet)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: type
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: katakanaIrohaAlphabet
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478761
FRAGMENT_COUNT: 6
  ORIGINAL[0]: & prefix = elem->prefix()
  TYPE[0]: CALL
  TOKENIZED[0]: & VAR1 = elem->prefix ( )
  ORIGINAL[1]: attr = !prefix.isEmpty() ? \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = !prefix . FUN1 ( ) ? \
  ORIGINAL[2]: !prefix.isEmpty() ? \
  TYPE[2]: CALL
  TOKENIZED[2]: !prefix . FUN1 ( ) ? \
  ORIGINAL[3]: attr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: prefix
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: attr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477487
FRAGMENT_COUNT: 5
  ORIGINAL[0]: number < 1 || number > 19999
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 1 || VAR1 > 19999
  ORIGINAL[1]: length <= lettersSize
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= VAR2
  ORIGINAL[2]: lettersSize
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: lettersSize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640398
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640351
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479075
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !childrenOnly
  TYPE[0]: CALL
  TOKENIZED[0]: !childrenOnly
  ORIGINAL[1]: appendStartMarkup(m_result, startNode, 0, DoNotAnnotateForInterchange, false, &namespaceHash)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , 0 , VAR3 , false , &namespaceHash )
  ORIGINAL[2]: this->m_result
  TYPE[2]: CALL
  TOKENIZED[2]: this->m_result
  ORIGINAL[3]: &namespaceHash
  TYPE[3]: CALL
  TOKENIZED[3]: &namespaceHash
  ORIGINAL[4]: startNode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: startNode
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: startNode
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: DoNotAnnotateForInterchange
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: startNode
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477391
FRAGMENT_COUNT: 10
  ORIGINAL[0]: thousands == 7
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 7
  ORIGINAL[1]: length++
  TYPE[1]: CALL
  TOKENIZED[1]: length++
  ORIGINAL[2]: length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: letters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: length
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: length
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: length
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: length
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478482
FRAGMENT_COUNT: 7
  ORIGINAL[0]: * root = box->root()
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = box->root ( )
  ORIGINAL[1]: state != SelectionNone
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: state
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: root
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: state
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: SelectionNone
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: state
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640485
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640399
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477291
FRAGMENT_COUNT: 4
  ORIGINAL[0]: number < 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 1
  ORIGINAL[1]: number
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: number
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: number
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773461
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !node || !isBlock(node)
  TYPE[0]: CALL
  TOKENIZED[0]: !node || !isBlock ( VAR1 )
  ORIGINAL[1]: !node
  TYPE[1]: CALL
  TOKENIZED[1]: !node
  ORIGINAL[2]: !isBlock(node)
  TYPE[2]: CALL
  TOKENIZED[2]: !isBlock ( VAR1 )
  ORIGINAL[3]: isBlock(node)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640442
FRAGMENT_COUNT: 2
  ORIGINAL[0]: isImage()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719478492
FRAGMENT_COUNT: 6
  ORIGINAL[0]: computeRectForRepaint(repaintContainer, rect)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: rect
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: clipToVisibleContent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: repaintContainer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rect
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: rect
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640480
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !isImage()
  TYPE[0]: CALL
  TOKENIZED[0]: !isImage ( )

CENTER_NODE: 68719477299
FRAGMENT_COUNT: 5
  ORIGINAL[0]: toAlphabeticOrNumeric(number, numerals, numeralsSize, NumericSequence)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: number
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: numerals
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: numeralsSize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NumericSequence
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771413
FRAGMENT_COUNT: 12
  ORIGINAL[0]: !isURLAllowed()
  TYPE[0]: CALL
  TOKENIZED[0]: !isURLAllowed ( )
  ORIGINAL[1]: !parentFrame
  TYPE[1]: CALL
  TOKENIZED[1]: !parentFrame
  ORIGINAL[2]: parentFrame->loader()->requestFrame(this, m_URL, m_frameName, lockHistory, lockBackForwardList)
  TYPE[2]: CALL
  TOKENIZED[2]: parentFrame->loader ( ) ->requestFrame ( this , VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[3]: parentFrame->loader()
  TYPE[3]: CALL
  TOKENIZED[3]: parentFrame->loader ( )
  ORIGINAL[4]: contentFrame()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )
  ORIGINAL[5]: parentFrame
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: parentFrame
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: this
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: this
  ORIGINAL[8]: m_URL
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: m_frameName
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: lockHistory
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: lockBackForwardList
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719479063
FRAGMENT_COUNT: 4
  ORIGINAL[0]: appendEndMarkup(result, node)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: String::adopt(result)
  TYPE[1]: CALL
  TOKENIZED[1]: String::adopt ( VAR1 )
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640348
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771509
FRAGMENT_COUNT: 3
  ORIGINAL[0]: m_shouldOpenURLAfterAttach = false
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = false
  ORIGINAL[1]: HTMLFrameOwnerElement::removedFromDocument()
  TYPE[1]: CALL
  TOKENIZED[1]: HTMLFrameOwnerElement::removedFromDocument ( )
  ORIGINAL[2]: m_shouldOpenURLAfterAttach
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478642
FRAGMENT_COUNT: 6
  ORIGINAL[0]: protocolIsJavaScript(strippedURLString)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: append(result, strippedURLString)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: result.append(quoteChar)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( VAR2 )
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: quoteChar
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719479054
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !node->isElementNode() || shouldSelfClose(node) || (!node->hasChildNodes() && doesHTMLForbidEndTag(node))
  TYPE[0]: CALL
  TOKENIZED[0]: !node->isElementNode ( ) || FUN1 ( VAR1 ) || ( !node->hasChildNodes ( ) && FUN2 ( VAR1 ) )
  ORIGINAL[1]: result.append('<')
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( '<' )
  ORIGINAL[2]: result.append('/')
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( '/' )
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: result
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772289
FRAGMENT_COUNT: 1
  ORIGINAL[0]: setReplaced(true)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( true )

CENTER_NODE: 30064773856
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !tabText.isEmpty()
  TYPE[0]: CALL
  TOKENIZED[0]: !tabText . FUN1 ( )
  ORIGINAL[1]: ASSERT(ec == 0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 == 0 )
  ORIGINAL[2]: ec == 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0
  ORIGINAL[3]: ec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640667
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772680
FRAGMENT_COUNT: 3
  ORIGINAL[0]: m_listItem->notInList() || style()->listStylePosition() == INSIDE
  TYPE[0]: CALL
  TOKENIZED[0]: m_listItem->notInList ( ) || FUN1 ( ) ->listStylePosition ( ) == VAR1
  ORIGINAL[1]: m_listItem->notInList()
  TYPE[1]: CALL
  TOKENIZED[1]: m_listItem->notInList ( )
  ORIGINAL[2]: style()->listStylePosition() == INSIDE
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ) ->listStylePosition ( ) == VAR1

CENTER_NODE: 68719477165
FRAGMENT_COUNT: 3
  ORIGINAL[0]: document()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: getAttribute(srcAttr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: srcAttr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772325
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !box
  TYPE[0]: CALL
  TOKENIZED[0]: !box
  ORIGINAL[1]: * root = box->root()
  TYPE[1]: CALL
  TOKENIZED[1]: * VAR1 = box->root ( )
  ORIGINAL[2]: box->root()
  TYPE[2]: CALL
  TOKENIZED[2]: box->root ( )
  ORIGINAL[3]: root
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: box
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478685
FRAGMENT_COUNT: 5
  ORIGINAL[0]: node == range->startContainer(ec)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == range->startContainer ( VAR2 )
  ORIGINAL[1]: range->startOffset(ec)
  TYPE[1]: CALL
  TOKENIZED[1]: range->startOffset ( VAR1 )
  ORIGINAL[2]: ec
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: range
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ec
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772913
FRAGMENT_COUNT: 7
  ORIGINAL[0]: result.append(range.first, range.second)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . FUN1 ( VAR2 . VAR3 , VAR2 . VAR4 )
  ORIGINAL[1]: range.first
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: range.second
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: first
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: range
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: range
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719479632
FRAGMENT_COUNT: 6
  ORIGINAL[0]: * frame = node->document()->frame()
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = node->document ( ) ->frame ( )
  ORIGINAL[1]: node->isDescendantOf(deleteButtonContainerElement)
  TYPE[1]: CALL
  TOKENIZED[1]: node->isDescendantOf ( VAR1 )
  ORIGINAL[2]: accumulator.appendMarkup(const_cast<Node*>(node), childrenOnly)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( const_cast<Node*> ( VAR2 ) , VAR3 )
  ORIGINAL[3]: const_cast<Node*>(node)
  TYPE[3]: CALL
  TOKENIZED[3]: const_cast<Node*> ( VAR1 )
  ORIGINAL[4]: accumulator
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: childrenOnly
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 3
  ORIGINAL[0]: static_cast<HTMLFrameElementBase*>(n)->setNameAndOpenURL()
  TYPE[0]: CALL
  TOKENIZED[0]: static_cast<HTMLFrameElementBase*> ( VAR1 ) ->setNameAndOpenURL ( )
  ORIGINAL[1]: static_cast<HTMLFrameElementBase*>(n)
  TYPE[1]: CALL
  TOKENIZED[1]: static_cast<HTMLFrameElementBase*> ( VAR1 )
  ORIGINAL[2]: n
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476868
FRAGMENT_COUNT: 6
  ORIGINAL[0]: m_width[cCol + i].isAuto() && w.type() != Auto
  TYPE[0]: CALL
  TOKENIZED[0]: m_width[cCol + i] . FUN1 ( ) && VAR1 . FUN2 ( ) != VAR2
  ORIGINAL[1]: w.rawValue() * eSpan / span
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( ) * VAR2 / VAR3
  ORIGINAL[2]: w.rawValue() * eSpan
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( ) * VAR2
  ORIGINAL[3]: span
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: span
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: span
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771990
FRAGMENT_COUNT: 9
  ORIGINAL[0]: groupValue < 20
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 20
  ORIGINAL[1]: group[4] == noChar || group[4] == digit0 || group[4] == digit1
  TYPE[1]: CALL
  TOKENIZED[1]: group[4] == VAR1 || group[4] == VAR2 || group[4] == VAR3
  ORIGINAL[2]: group[4] == noChar || group[4] == digit0
  TYPE[2]: CALL
  TOKENIZED[2]: group[4] == VAR1 || group[4] == VAR2
  ORIGINAL[3]: group[4] == noChar
  TYPE[3]: CALL
  TOKENIZED[3]: group[4] == VAR1
  ORIGINAL[4]: group[4] == digit0
  TYPE[4]: CALL
  TOKENIZED[4]: group[4] == VAR1
  ORIGINAL[5]: group[4] == digit1
  TYPE[5]: CALL
  TOKENIZED[5]: group[4] == VAR1
  ORIGINAL[6]: group[4]
  TYPE[6]: CALL
  TOKENIZED[6]: group[4]
  ORIGINAL[7]: group
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: digit1
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640388
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640622
FRAGMENT_COUNT: 1
  ORIGINAL[0]: next != pastEnd && next->isDescendantOf(ancestor)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2 && next->isDescendantOf ( VAR3 )

CENTER_NODE: 30064771604
FRAGMENT_COUNT: 11
  ORIGINAL[0]: num >= 4 && num <= 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 4 && VAR1 <= 8
  ORIGINAL[1]: letters[lettersSize - ++length] = digits[d + 1]
  TYPE[1]: CALL
  TOKENIZED[1]: letters[lettersSize - ++length] = digits[d + 1]
  ORIGINAL[2]: letters[lettersSize - ++length]
  TYPE[2]: CALL
  TOKENIZED[2]: letters[lettersSize - ++length]
  ORIGINAL[3]: lettersSize - ++length
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - ++length
  ORIGINAL[4]: digits[d + 1]
  TYPE[4]: CALL
  TOKENIZED[4]: digits[d + 1]
  ORIGINAL[5]: letters
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: letters
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: digits
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: letters
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: letters
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: letters
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772979
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !document || !document->documentElement()
  TYPE[0]: CALL
  TOKENIZED[0]: !document || !document->documentElement ( )
  ORIGINAL[1]: !document
  TYPE[1]: CALL
  TOKENIZED[1]: !document
  ORIGINAL[2]: !document->documentElement()
  TYPE[2]: CALL
  TOKENIZED[2]: !document->documentElement ( )
  ORIGINAL[3]: document->documentElement()
  TYPE[3]: CALL
  TOKENIZED[3]: document->documentElement ( )

CENTER_NODE: 47244640378
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771514
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !m_remainsAliveOnRemovalFromTree
  TYPE[0]: CALL
  TOKENIZED[0]: !m_remainsAliveOnRemovalFromTree
  ORIGINAL[1]: queuePostAttachCallback(&HTMLFrameElementBase::setNameAndOpenURLCallback, this)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &HTMLFrameElementBase::setNameAndOpenURLCallback , this )
  ORIGINAL[2]: &HTMLFrameElementBase::setNameAndOpenURLCallback
  TYPE[2]: CALL
  TOKENIZED[2]: &HTMLFrameElementBase::setNameAndOpenURLCallback
  ORIGINAL[3]: HTMLFrameElementBase::setNameAndOpenURLCallback
  TYPE[3]: CALL
  TOKENIZED[3]: HTMLFrameElementBase::setNameAndOpenURLCallback
  ORIGINAL[4]: this
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: this

CENTER_NODE: 30064771220
FRAGMENT_COUNT: 4
  ORIGINAL[0]: m_table->style()->width().isFixed()
  TYPE[0]: CALL
  TOKENIZED[0]: m_table->style ( ) ->width ( ) . FUN1 ( )
  ORIGINAL[1]: m_table->style()->width()
  TYPE[1]: CALL
  TOKENIZED[1]: m_table->style ( ) ->width ( )
  ORIGINAL[2]: m_table->style()
  TYPE[2]: CALL
  TOKENIZED[2]: m_table->style ( )
  ORIGINAL[3]: m_table
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 1
  ORIGINAL[0]: isNegativeNumber
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771748
FRAGMENT_COUNT: 5
  ORIGINAL[0]: number == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: hebrewZero[3] = { 0x05D0, 0x05E4, 0x05E1 }
  TYPE[1]: CALL
  TOKENIZED[1]: hebrewZero[3] = { 0x05D0 , 0x05E4 , 0x05E1 }
  ORIGINAL[2]: hebrewZero[3] = { 0x05D0, 0x05E4, 0x05E1 }
  TYPE[2]: CALL
  TOKENIZED[2]: hebrewZero[3] = { 0x05D0 , 0x05E4 , 0x05E1 }
  ORIGINAL[3]: hebrewZero
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hebrewZero
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772998
FRAGMENT_COUNT: 7
  ORIGINAL[0]: attr->name() == XMLNSNames::xmlnsAttr
  TYPE[0]: CALL
  TOKENIZED[0]: attr->name ( ) == XMLNSNames::xmlnsAttr
  ORIGINAL[1]: namespaces.set(emptyAtom.impl(), attr->value().impl())
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . FUN1 ( VAR2 . FUN2 ( ) , attr->value ( ) . FUN2 ( ) )
  ORIGINAL[2]: emptyAtom.impl()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . FUN1 ( )
  ORIGINAL[3]: attr->value().impl()
  TYPE[3]: CALL
  TOKENIZED[3]: attr->value ( ) . FUN1 ( )
  ORIGINAL[4]: namespaces
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: emptyAtom
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: attr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772716
FRAGMENT_COUNT: 4
  ORIGINAL[0]: 3 * (ascent - ascent * 2 / 3) / 2
  TYPE[0]: CALL
  TOKENIZED[0]: 3 * ( VAR1 - VAR1 * 2 / 3 ) / 2
  ORIGINAL[1]: 3 * (ascent - ascent * 2 / 3)
  TYPE[1]: CALL
  TOKENIZED[1]: 3 * ( VAR1 - VAR1 * 2 / 3 )
  ORIGINAL[2]: ascent - ascent * 2 / 3
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - VAR1 * 2 / 3
  ORIGINAL[3]: type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

