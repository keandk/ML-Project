# Tokenized code fragments for 243953-v2.0.0-mixed
# Total center nodes processed: 31
# Total code fragments found: 63

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771091
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 30064771076
FRAGMENT_COUNT: 15
  ORIGINAL[0]: data > strlen(HELLO_STRING)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(HELLO_STRING)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: myString = new char[data]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = new char[data]
  ORIGINAL[3]: new char[data]
  TYPE[3]: CALL
  TOKENIZED[3]: new char[data]
  ORIGINAL[4]: strcpy(myString, HELLO_STRING)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: HELLO_STRING
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: printLine(myString)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 )
  ORIGINAL[7]: delete [] myString
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 [] VAR2
  ORIGINAL[8]: printLine(\
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( \
  ORIGINAL[9]: data
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: myString
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: char
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: char
  ORIGINAL[12]: myString
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: myString
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: myString
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640267
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data > strlen(HELLO_STRING) && data < 100
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > FUN1 ( VAR2 ) && VAR1 < 100
  ORIGINAL[1]: printLine(myString)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: myString
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: myString
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640280
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771134
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

CENTER_NODE: 47244640278
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771120
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

CENTER_NODE: 30064771086
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

CENTER_NODE: 30064771139
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data > strlen(HELLO_STRING)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(HELLO_STRING)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: HELLO_STRING
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data > strlen(HELLO_STRING)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > FUN1 ( VAR2 )
  ORIGINAL[1]: printLine(myString)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: myString
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: myString
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771150
FRAGMENT_COUNT: 3
  ORIGINAL[0]: goodB2G1()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: goodB2G2()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: goodG2B1()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 47244640286
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 47244640256
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476758
FRAGMENT_COUNT: 8
  ORIGINAL[0]: &data
  TYPE[0]: CALL
  TOKENIZED[0]: &data
  ORIGINAL[1]: data > strlen(HELLO_STRING)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > FUN1 ( VAR2 )
  ORIGINAL[2]: strlen(HELLO_STRING)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: HELLO_STRING
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: data
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: data
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: data
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printLine(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;

