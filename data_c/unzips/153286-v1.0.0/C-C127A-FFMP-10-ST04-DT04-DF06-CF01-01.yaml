code_complexity_features:
  - function_name: avformat_write_header
    line_number: 0
    feature: callback
    feature_group: control_flow
    file_name: /tmp/tmp1sBmdU_ss_testcase/src-rose/libavformat/mux.c
  - file_name: /tmp/tmp1sBmdU_ss_testcase/src-rose/libavformat/mux.c
    function_name: allotriophagia_ammonoids
    line_number: 0
    feature_group: source_taint
    feature: SHARED_MEMORY
  - function_name: allotriophagia_ammonoids
    feature_group: data_type
    file_name: /tmp/tmp1sBmdU_ss_testcase/src-rose/libavformat/mux.c
    line_number: 0
    feature: heap_pointer
  - feature_group: data_flow
    file_name: /tmp/tmp1sBmdU_ss_testcase/src-rose/libavformat/mux.c
    function_name: bobbled_frownful
    line_number: 0
    feature: address_as_function_return_value
description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"
io_pair:
  base_inputs:
    - source: shared_memory_input
      source_enum: 6
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      key: 4581
      size: 105
      flags: 950
  benigns:
    - inputs:
        - size: 105
          source: shared_memory_input
          value_type: USE_TEXT_DIRECTLY
          flags: 950
          value_encoding: none
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          id: source
          value_type_enum: 0
          ordinal: 1
          key: 4581
          stage: pre_process
          source_enum: 6
          stage_enum: 0
        - name: INPUT_STRING
          stage: pre_process
          ordinal: 2
          stage_enum: 0
          source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          value_type_enum: 0
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - source: shared_memory_input
          id: source
          stage_enum: 0
          flags: 950
          source_enum: 6
          ordinal: 1
          stage: pre_process
          key: 4581
          value_encoding: none
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          size: 105
        - ordinal: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source: env_var_input
          source_enum: 2
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          name: INPUT_STRING
          stage: pre_process
          value_encoding: none
          value_type_enum: 0
    - inputs:
        - source_enum: 6
          value: As long as this statement has more than 64 characters, then nothing bad should happen
          id: source
          stage_enum: 0
          ordinal: 1
          stage: pre_process
          size: 105
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          flags: 950
          value_type_enum: 0
          key: 4581
          source: shared_memory_input
        - value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage: pre_process
          source: env_var_input
          value_encoding: none
          ordinal: 2
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          name: INPUT_STRING
          source_enum: 2
  description: "Has a stack buffer of size 128.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  exploits:
    - inputs:
        - value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          flags: 950
          value_type: USE_TEXT_DIRECTLY
          size: 105
          source_enum: 6
          source: shared_memory_input
          stage_enum: 0
          stage: pre_process
          ordinal: 1
          value_encoding: base64
          id: source
          value_type_enum: 0
          key: 4581
        - source_enum: 2
          ordinal: 2
          stage: pre_process
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          name: INPUT_STRING
          value_type_enum: 0
    - inputs:
        - id: source
          value_encoding: base64
          flags: 950
          size: 105
          stage_enum: 0
          source_enum: 6
          source: shared_memory_input
          stage: pre_process
          ordinal: 1
          value_type_enum: 0
          key: 4581
          value_type: USE_TEXT_DIRECTLY
          value: SGVsbKUgV6lybGSI
        - source_enum: 2
          stage: pre_process
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source: env_var_input
          value_type_enum: 0
          ordinal: 2
          name: INPUT_STRING
          value_encoding: none