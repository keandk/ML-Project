<?xml version="1.0" encoding="utf-8"?>
<project base_program="C-FFMP" language="C" name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01" targeted_architecture="ANY" targeted_os="LINUX" test_case_type="ALL" xmlns="urn:stonesoup:project">
    <description>Creating test case using base program.
Added an environment variable read to the function definition.
Completed injection.
</description>
    <additional_information>
        <keyvalue key="algorithmic_variant_name">UNSPECIFIED</keyvalue>
        <keyvalue key="root_cause">UNSPECIFIED</keyvalue>
    </additional_information>
    <structure install="install" iodata="testData" scoredata="testOutput" scripts="scripts" source="src"/>
    <run_command>$SS_TC_ROOT/$SS_TC_INSTALL/bin/ffmpeg</run_command>
    <weakness generation_method="FAULT_INJECTED">
        <variant cwe="CWE-89" name="CWE-89-D"/>
        <features>
            <taint_source file_name="/ffmpeg.c" line_number="0" type="ENVIRONMENT_VARIABLE">
                <method name="sub2video_heartbeat"/>
            </taint_source>
            <data_type file_name="/ffmpeg.c" line_number="0" type="UNION">
                <method name="sub2video_heartbeat"/>
            </data_type>
            <data_flow file_name="/ffmpeg.c" line_number="0" type="ADDRESS_AS_VARIABLE">
                <method name="sub2video_heartbeat"/>
            </data_flow>
            <control_flow file_name="/ffmpeg.c" line_number="0" type="SEQUENCE">
                <method name="sub2video_heartbeat"/>
            </control_flow>
        </features>
    </weakness>
    <build_commands cppflags="-DSTONESOUP_TRACE=1" libs="-lssl -lpq -ldl">
        <command>env</command>
        <command>./configure --prefix=&quot;$SS_TC_ROOT/$SS_TC_INSTALL&quot; --enable-pic --disable-static --enable-shared --disable-yasm --disable-doc --enable-pthreads --disable-w32threads --disable-os2threads --enable-zlib --enable-openssl --disable-asm --extra-cflags=&quot;$SS_CFLAGS&quot; --extra-ldflags=&quot;$SS_LDFLAGS&quot; --extra-libs=&quot;$SS_LIBS&quot;</command>
        <command>mv config.mak config.mak.bak</command>
        <command>awk -v compiler=&quot;$SS_CC&quot; '/CC=gcc/{gsub(/gcc/, compiler)};{print}' config.mak.bak &gt; config.mak &amp;&amp; true</command>
        <command>make V=1</command>
        <command>make install V=1</command>
    </build_commands>
    <iopairs>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-01" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>remove the audio from a video
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">shipper1</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_bgweeoiocwyibbdy" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_bgweeoiocwyibbdy.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_bgweeoiocwyibbdy</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-an -i grsm_0001-shorter.mov good-01/grsm_0001_no_audio.mov</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_bgweeoiocwyibbdy" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_Qh19Rs8I1f" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-01-Default">
                <formula name="GOOD-01-Default">(GOOD-01-CENTOS OR GOOD-01-UBUNTU OR GOOD-01-DEBIAN) AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-01-CENTOS">
                    <actual output_type="FILE_CONTENTS">good-01/grsm_0001_no_audio.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-01/grsm_0001_no_audio-centos.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-01-UBUNTU">
                    <actual output_type="FILE_CONTENTS">good-01/grsm_0001_no_audio.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-01/grsm_0001_no_audio-ubuntu.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-01-DEBIAN">
                    <actual output_type="FILE_CONTENTS">good-01/grsm_0001_no_audio.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-01/grsm_0001_no_audio-debian.mov</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-02" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>change the frame rate and aspect ration of a video
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">NewShipper</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_slbolpqmjtnnbazt" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_slbolpqmjtnnbazt.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_slbolpqmjtnnbazt</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-r 20 -aspect 16:9 -i elis_m0001-shorter.mov good-02/elis_m0001_rate_aspect.mov</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_slbolpqmjtnnbazt" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_zp0z4S6u30" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-02-Default">
                <formula name="GOOD-02-Default">(GOOD-02-CENTOS OR GOOD-02-UBUNTU OR GOOD-02-DEBIAN) AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-02-CENTOS">
                    <actual output_type="FILE_CONTENTS">good-02/elis_m0001_rate_aspect.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-02/elis_m0001_rate_aspect-centos.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-02-UBUNTU">
                    <actual output_type="FILE_CONTENTS">good-02/elis_m0001_rate_aspect.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-02/elis_m0001_rate_aspect-ubuntu.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-02-DEBIAN">
                    <actual output_type="FILE_CONTENTS">good-02/elis_m0001_rate_aspect.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-02/elis_m0001_rate_aspect-debian.mov</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-03" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>remove the audio and change the video format from .mov to .mp4 using the mpeg4 codec
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">ShippingCompany</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_ridjzfnbbnhumrtm" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_ridjzfnbbnhumrtm.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_ridjzfnbbnhumrtm</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-an -i bost_people_0001-shorter.mov -vcodec mpeg4 -strict -2 good-03/bost_people_0001.mp4</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_ridjzfnbbnhumrtm" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_Thw3zwAPaZ" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-03-Default">
                <formula name="GOOD-03-Default">(GOOD-03-CENTOS OR GOOD-03-UBUNTU OR GOOD-03-DEBIAN) AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-03-CENTOS">
                    <actual output_type="FILE_CONTENTS">good-03/bost_people_0001.mp4</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-03/bost_people_0001-centos.mp4</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-03-UBUNTU">
                    <actual output_type="FILE_CONTENTS">good-03/bost_people_0001.mp4</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-03/bost_people_0001-ubuntu.mp4</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-03-DEBIAN">
                    <actual output_type="FILE_CONTENTS">good-03/bost_people_0001.mp4</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-03/bost_people_0001-debian.mp4</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-04" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>copy the audio file and convert the number of audio channels to 2.
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">shipper1</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_wghbbisnsftxmgoy" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_wghbbisnsftxmgoy.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_wghbbisnsftxmgoy</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-i ApacheTomcat-SomewhereInMyMind.mp3 -acodec copy -ac 2 good-04/ApacheTomcat_dualchannelaudio.mp3</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_wghbbisnsftxmgoy" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_eQjGiED39N" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-04-Default">
                <formula name="GOOD-04-Default">GOOD-04 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-04">
                    <actual output_type="FILE_CONTENTS">good-04/ApacheTomcat_dualchannelaudio.mp3</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-04/ApacheTomcat_dualchannelaudio.mp3</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-05" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>remove original audio from a file and combine the audio from another file to create a new video and audio file
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">NewShipper</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_rkimjofkcsthfsyc" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_rkimjofkcsthfsyc.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_rkimjofkcsthfsyc</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-an -i grsm_0001-shorter.mov -i ApacheTomcat-SomewhereInMyMind.mp3 -acodec copy good-05/combined.mov</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_rkimjofkcsthfsyc" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_Qsh12BDdJG" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-05-Default">
                <formula name="GOOD-05-Default">(GOOD-05-CENTOS OR GOOD-05-UBUNTU OR GOOD-05-DEBIAN) AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-05-CENTOS">
                    <actual output_type="FILE_CONTENTS">good-05/combined.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-05/combined-centos.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-05-UBUNTU">
                    <actual output_type="FILE_CONTENTS">good-05/combined.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-05/combined-ubuntu.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-05-DEBIAN">
                    <actual output_type="FILE_CONTENTS">good-05/combined.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-05/combined-debian.mov</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-06" reset_scheme="NONE" timeout="600" type="GOOD">
            <description>Convert the size of a video to vga (640x480)
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">ShippingCompany</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_zhvkacrudqwxpzax" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_zhvkacrudqwxpzax.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_zhvkacrudqwxpzax</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-i good-06/combined.mov -strict -2 -s vga good-06/combined_vga_sized.mov</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_zhvkacrudqwxpzax" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_VhroIPdteQ" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-06-Default">
                <formula name="GOOD-06-Default">(GOOD-06-CENTOS OR GOOD-06-UBUNTU OR GOOD-06-DEBIAN) AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-06-CENTOS">
                    <actual output_type="FILE_CONTENTS">good-06/combined_vga_sized.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-06/combined_vga_sized-centos.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-06-UBUNTU">
                    <actual output_type="FILE_CONTENTS">good-06/combined_vga_sized.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-06/combined_vga_sized-ubuntu.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-06-DEBIAN">
                    <actual output_type="FILE_CONTENTS">good-06/combined_vga_sized.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-06/combined_vga_sized-debian.mov</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-07" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>Covert a .wav file to .mp2 at 22050Hz
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">shipper1</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_goiaqsgxeikaukmd" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_goiaqsgxeikaukmd.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_goiaqsgxeikaukmd</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-i good-07/Bow_To_My_firewall.wav -ar 22050 good-07/Bow_To_My_firewall.mp2</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_goiaqsgxeikaukmd" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_uvddRbvKpx" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-07-Default">
                <formula name="GOOD-07-Default">GOOD-07 AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-07">
                    <actual output_type="FILE_CONTENTS">good-07/Bow_To_My_firewall.mp2</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-07/Bow_To_My_firewall.mp2</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-08" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>Change the bitrate and do it in two passes
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">NewShipper</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_xdzpebnbhmfkyeof" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_xdzpebnbhmfkyeof.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_xdzpebnbhmfkyeof</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-b 300 -pass 2 -i grsm_0001-shorter.mov good-08/grsm_0001_bitrate.mov</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_xdzpebnbhmfkyeof" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_Bc8q9dLL3S" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-08-Default">
                <formula name="GOOD-08-Default">(GOOD-08-CENTOS OR GOOD-08-UBUNTU OR GOOD-08-DEBIAN) AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-08-CENTOS">
                    <actual output_type="FILE_CONTENTS">good-08/grsm_0001_bitrate.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-08/grsm_0001_bitrate-centos.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-08-UBUNTU">
                    <actual output_type="FILE_CONTENTS">good-08/grsm_0001_bitrate.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-08/grsm_0001_bitrate-ubuntu.mov</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-08-DEBIAN">
                    <actual output_type="FILE_CONTENTS">good-08/grsm_0001_bitrate.mov</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-08/grsm_0001_bitrate-debian.mov</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-09" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>Convert images into a video
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">ShippingCompany</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_fleowkvxptugsbvj" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_fleowkvxptugsbvj.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_fleowkvxptugsbvj</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-f image2 -i good-09/%03d.jpg -r 12 -s vga good-09/images.avi</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_fleowkvxptugsbvj" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_ixaviLct7G" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-09-Default">
                <formula name="GOOD-09-Default">(GOOD-09-CENTOS OR GOOD-09-UBUNTU OR GOOD-09-DEBIAN) AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-09-CENTOS">
                    <actual output_type="FILE_CONTENTS">good-09/images.avi</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-09/images-centos.avi</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-09-UBUNTU">
                    <actual output_type="FILE_CONTENTS">good-09/images.avi</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-09/images-ubuntu.avi</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-09-DEBIAN">
                    <actual output_type="FILE_CONTENTS">good-09/images.avi</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-09/images-debian.avi</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-GOOD-10" reset_scheme="NONE" timeout="300" type="GOOD">
            <description>Extract every fifth frame and convert it to an image
Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>NONE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">shipper1</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_juhinnoslvybslox" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_juhinnoslvybslox.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_juhinnoslvybslox</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-i elis_m0001-shorter.mov -r 5 -s vga good-10/elise-%04d.jpg</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_juhinnoslvybslox" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_QyBtHYFiD7" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="GOOD-10-Default">
                <formula name="GOOD-10-Default">((GOOD-10-1-CENTOS AND GOOD-10-2-CENTOS) OR (GOOD-10-1-UBUNTU AND GOOD-10-2-UBUNTU) OR (GOOD-10-1-DEBIAN AND GOOD-10-2-DEBIAN)) AND NOT TIMEOUT AND NOT CONTROLLED_EXIT</formula>
            </scoring_formula>
            <output_checks>
                <compare_check check_type="CONTAINS" name="GOOD-10-1-CENTOS">
                    <actual output_type="FILE_CONTENTS">good-10/elise-0001.jpg</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-10/elise-0001-centos.jpg</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-10-2-CENTOS">
                    <actual output_type="FILE_CONTENTS">good-10/elise-0028.jpg</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-10/elise-0028-centos.jpg</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-10-1-UBUNTU">
                    <actual output_type="FILE_CONTENTS">good-10/elise-0001.jpg</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-10/elise-0001-ubuntu.jpg</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-10-2-UBUNTU">
                    <actual output_type="FILE_CONTENTS">good-10/elise-0028.jpg</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-10/elise-0028-ubuntu.jpg</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-10-1-DEBIAN">
                    <actual output_type="FILE_CONTENTS">good-10/elise-0001.jpg</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-10/elise-0001-debian.jpg</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="GOOD-10-2-DEBIAN">
                    <actual output_type="FILE_CONTENTS">good-10/elise-0028.jpg</actual>
                    <expected encoding="STRING" type="USE_FILE_CONTENTS">good-10/elise-0028-debian.jpg</expected>
                </compare_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="TIMEOUT" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="CONTROLLED_EXIT" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-BAD-01" reset_scheme="NONE" timeout="300" type="BAD">
            <description>Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>EXECUTE_UNAUTHORIZED_CODE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">BadShipper'), ('80','BadShipper2</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_dqjnohjplnhscrwz" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_dqjnohjplnhscrwz.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_dqjnohjplnhscrwz</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-i good-07/Bow_To_My_firewall.wav -ar 22050 good-07/Bow_To_My_firewall.mp2</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_dqjnohjplnhscrwz" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_lOKOalyNldcduWeuMHMv" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="db_sql_formula_4JQU7chjaN">
                <formula name="db_sql_formula_4JQU7chjaN">weakness_started_EbIfSh31y7rUafVDJDyG AND ((NOT PERFORMER AND (db_sql_output_UJSTFrNSM6 OR db_sql_output_C5llFPJcaj OR database_insert_check_1yi1eNf8Qp) AND NOT timeout_iV2nSGcLMr) or (PERFORMER AND NOT ((db_sql_output_UJSTFrNSM6 OR db_sql_output_C5llFPJcaj OR database_insert_check_1yi1eNf8Qp) OR timeout_iV2nSGcLMr)))</formula>
                <formula name="no_weakness_started_formula_BLc6P2EFUp">(NOT PERFORMER AND (db_sql_output_UJSTFrNSM6 OR db_sql_output_C5llFPJcaj OR database_insert_check_1yi1eNf8Qp) AND NOT timeout_iV2nSGcLMr) or (PERFORMER AND NOT ((db_sql_output_UJSTFrNSM6 OR db_sql_output_C5llFPJcaj OR database_insert_check_1yi1eNf8Qp) OR timeout_iV2nSGcLMr))</formula>
            </scoring_formula>
            <output_checks>
                <simple_check check_type="SPECIAL" encoding="STRING" name="timeout_iV2nSGcLMr" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="controlled_exit_v4h0EYn8C6" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="continued_execution_E75JEKLewG" type="USE_TEXT">CONTINUED_EXECUTION</simple_check>
                <compare_check check_type="CONTAINS" name="db_sql_output_UJSTFrNSM6">
                    <actual encoding="STRING" output_type="FILE_CONTENTS">logfile.txt</actual>
                    <expected encoding="STRING" type="USE_TEXT">Query OK, 2 rows affected</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="db_sql_output_C5llFPJcaj">
                    <actual encoding="STRING" output_type="FILE_CONTENTS">logfile.txt</actual>
                    <expected encoding="STRING" type="USE_TEXT">Query OK, 4 rows affected</expected>
                </compare_check>
                <simple_check check_type="SCRIPT" encoding="STRING" name="database_insert_check_1yi1eNf8Qp" type="USE_TEXT">export PGPASSWORD=$DBPGPASSWORD; if `psql -U $DBPGUSER -h $DBPGHOST -d $SS_DBPGDATABASE -c &quot;select * from shippers;&quot; | grep -q &quot;BadShipper2\|ShipAttack&quot;`; then true; else false; fi;</simple_check>
                <compare_check check_type="CONTAINS" name="weakness_started_EbIfSh31y7rUafVDJDyG">
                    <actual encoding="STRING" input_id_ref="lttng_output_lOKOalyNldcduWeuMHMv" output_type="STANDARD_OUT">None</actual>
                    <expected encoding="STRING" type="USE_TEXT">stonesoup_trace:weakness_start</expected>
                </compare_check>
            </output_checks>
        </iopair>
        <iopair name="C-C089D-FFMP-09-ST01-DT07-DF15-CF20-01-BAD-02" reset_scheme="NONE" timeout="300" type="BAD">
            <description>Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection 

</description>
            <technical_impact>EXECUTE_UNAUTHORIZED_CODE</technical_impact>
            <pre_processes scheme="SEQUENCE">
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">printf 'env SS_DBPGDATABASE;\nenv DISFROCKED_LEUKOPOIESIS;\n' | tee nginx_conf_env.txt</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="DISFROCKED_LEUKOPOIESIS" type="USE_TEXT">ShippersRUs'), ('20','BadShips'), ('65','ShipAttack'), ('45', 'MultiShip</environment_variable>
                </process>
                <process>
                    <database database_name="northwind_glrfornlanngdenf" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_FILE_CONTENTS">/opt/stonesoup/workspace/scripts/northwind_create_northwind_glrfornlanngdenf.sql</database>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_DBPGDATABASE" type="USE_TEXT">northwind_glrfornlanngdenf</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir $SS_TC_ROOT/logs/execute/lttng</script>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="LTTNG_HOME" type="USE_TEXT">$SS_TC_ROOT/logs/execute/lttng</environment_variable>
                </process>
                <process>
                    <environment_variable encoding="STRING" key="SS_RUN_COMMAND_LD_PRELOAD" type="USE_TEXT">$SS_TC_DEPS/lib64/liblttng-stonesoup-c.so:$SS_TC_DEPS/lib64/liblttng-ust-fork.so</environment_variable>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">mkdir -p $SS_TC_DEPS/var/run/lttng</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">$SS_TC_DEPS/bin/lttng create &amp;&amp; $SS_TC_DEPS/bin/lttng enable-event -u -a &amp;&amp; $SS_TC_DEPS/bin/lttng start</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">rm -rf $SS_TC_ROOT/lockDir</script>
                </process>
                <process>
                    <script background="false" encoding="STRING" type="USE_TEXT">sleep 2 &amp;&amp; printf &quot;Sleeping to allow DB to be created.&quot;</script>
                </process>
            </pre_processes>
            <run_command encoding="STRING" preprend_runcommand="true" type="USE_TEXT">-r 20 -aspect 16:9 -i elis_m0001-shorter.mov good-02/elis_m0001_rate_aspect.mov</run_command>
            <post_processes scheme="SEQUENCE">
                <process>
                    <database database_name="northwind_glrfornlanngdenf" database_type="POSTGRESQL" encoding="STRING" server="ss-db-postgres" type="USE_TEXT">DROP DATABASE IF EXISTS &quot;$SS_DBPGDATABASE;&quot;</database>
                </process>
                <process>
                    <script background="false" encoding="STRING" input_id="lttng_output_VetVFX5dnxFDfFYFMIjW" type="USE_TEXT">$SS_TC_DEPS/bin/lttng stop &amp;&amp; $SS_TC_DEPS/bin/lttng view &amp;&amp; $SS_TC_DEPS/bin/lttng destroy</script>
                </process>
            </post_processes>
            <scoring_formula default="db_sql_formula_e0EtHiHoNP">
                <formula name="db_sql_formula_e0EtHiHoNP">weakness_started_aZ9WLlMyaMChIq9kARiA AND ((NOT PERFORMER AND (db_sql_output_OihkrGPpnq OR db_sql_output_JQHLRaCThp OR database_insert_check_yhME8jbpVs) AND NOT timeout_DuYFIX2NlR) or (PERFORMER AND NOT ((db_sql_output_OihkrGPpnq OR db_sql_output_JQHLRaCThp OR database_insert_check_yhME8jbpVs) OR timeout_DuYFIX2NlR)))</formula>
                <formula name="no_weakness_started_formula_fGRBpUYpxC">(NOT PERFORMER AND (db_sql_output_OihkrGPpnq OR db_sql_output_JQHLRaCThp OR database_insert_check_yhME8jbpVs) AND NOT timeout_DuYFIX2NlR) or (PERFORMER AND NOT ((db_sql_output_OihkrGPpnq OR db_sql_output_JQHLRaCThp OR database_insert_check_yhME8jbpVs) OR timeout_DuYFIX2NlR))</formula>
            </scoring_formula>
            <output_checks>
                <simple_check check_type="SPECIAL" encoding="STRING" name="timeout_DuYFIX2NlR" type="USE_TEXT">DOES_NOT_RETURN</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="controlled_exit_EbR2SN1idJ" type="USE_TEXT">CONTROLLED_EXIT</simple_check>
                <simple_check check_type="SPECIAL" encoding="STRING" name="continued_execution_pPV3Yw8ker" type="USE_TEXT">CONTINUED_EXECUTION</simple_check>
                <compare_check check_type="CONTAINS" name="db_sql_output_OihkrGPpnq">
                    <actual encoding="STRING" output_type="FILE_CONTENTS">logfile.txt</actual>
                    <expected encoding="STRING" type="USE_TEXT">Query OK, 2 rows affected</expected>
                </compare_check>
                <compare_check check_type="CONTAINS" name="db_sql_output_JQHLRaCThp">
                    <actual encoding="STRING" output_type="FILE_CONTENTS">logfile.txt</actual>
                    <expected encoding="STRING" type="USE_TEXT">Query OK, 4 rows affected</expected>
                </compare_check>
                <simple_check check_type="SCRIPT" encoding="STRING" name="database_insert_check_yhME8jbpVs" type="USE_TEXT">export PGPASSWORD=$DBPGPASSWORD; if `psql -U $DBPGUSER -h $DBPGHOST -d $SS_DBPGDATABASE -c &quot;select * from shippers;&quot; | grep -q &quot;BadShipper2\|ShipAttack&quot;`; then true; else false; fi;</simple_check>
                <compare_check check_type="CONTAINS" name="weakness_started_aZ9WLlMyaMChIq9kARiA">
                    <actual encoding="STRING" input_id_ref="lttng_output_VetVFX5dnxFDfFYFMIjW" output_type="STANDARD_OUT">None</actual>
                    <expected encoding="STRING" type="USE_TEXT">stonesoup_trace:weakness_start</expected>
                </compare_check>
            </output_checks>
        </iopair>
    </iopairs>
</project>
