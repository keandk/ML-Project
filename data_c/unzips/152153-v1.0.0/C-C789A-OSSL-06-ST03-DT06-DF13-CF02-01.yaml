io_pair:
  exploits:
    - inputs:
        - value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          id: source
          ordinal: 1
          address: ss-localhost
          source: socket_input
          port: 8887
          stage: co_process
          value: 123451234567
          source_enum: 5
          stage_enum: 1
          value_encoding: none
    - inputs:
        - stage_enum: 1
          value_type: USE_TEXT_DIRECTLY
          value: 845633125678
          source_enum: 5
          value_encoding: none
          stage: co_process
          ordinal: 1
          id: source
          address: ss-localhost
          source: socket_input
          value_type_enum: 0
          port: 8887
  base_inputs:
    - id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
      source: socket_input
      source_enum: 5
      stage: co_process
      stage_enum: 1
  description: "Reads in a integer and uses the value to allocate memory for a string on the stack. Because the input value is unchecked can allocate arbitrarily large value, resulting in a resource drain\n\n"
  benigns:
    - inputs:
        - port: 8887
          address: ss-localhost
          value_encoding: none
          value: 80
          value_type_enum: 0
          stage_enum: 1
          value_type: USE_TEXT_DIRECTLY
          stage: co_process
          source_enum: 5
          ordinal: 1
          id: source
          source: socket_input
    - inputs:
        - source: socket_input
          value_type: USE_TEXT_DIRECTLY
          port: 8887
          source_enum: 5
          stage: co_process
          id: source
          ordinal: 1
          address: ss-localhost
          stage_enum: 1
          value: 3643
          value_encoding: none
          value_type_enum: 0
    - inputs:
        - id: source
          port: 8887
          ordinal: 1
          source_enum: 5
          address: ss-localhost
          source: socket_input
          stage_enum: 1
          value_type: USE_TEXT_DIRECTLY
          value: 10
          stage: co_process
          value_type_enum: 0
          value_encoding: none
code_complexity_features:
  - file_name: /tmp/tmpqZ9CUN_ss_testcase/src-rose/crypto/mem_dbg.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: source_taint
    feature: SOCKET
  - file_name: /tmp/tmpqZ9CUN_ss_testcase/src-rose/crypto/mem_dbg.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: typedef
  - file_name: /tmp/tmpqZ9CUN_ss_testcase/src-rose/crypto/mem_dbg.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: address_as_linear_expression
  - file_name: /tmp/tmpqZ9CUN_ss_testcase/src-rose/crypto/mem_dbg.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: control_flow
    feature: indirectly_recursive
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"