description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
io_pair:
  base_inputs:
    - stage: pre_process
      source: env_var_input
      source_enum: 2
      stage_enum: 0
      id: source
      ordinal: 1
      name: CATCHIE_ROUNDO
  benigns:
    - inputs:
        - source_enum: 2
          stage_enum: 0
          value_encoding: none
          value_type_enum: 0
          id: source
          value_type: USE_TEXT_DIRECTLY
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          source: env_var_input
          ordinal: 1
          name: CATCHIE_ROUNDO
          stage: pre_process
        - name: INPUT_STRING
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source_enum: 2
          ordinal: 2
          stage_enum: 0
          value_encoding: none
    - inputs:
        - source: env_var_input
          value_type_enum: 0
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          id: source
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          stage_enum: 0
          name: CATCHIE_ROUNDO
          value_encoding: none
          ordinal: 1
          source_enum: 2
        - source_enum: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          ordinal: 2
          stage_enum: 0
          source: env_var_input
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
          name: INPUT_STRING
    - inputs:
        - id: source
          source: env_var_input
          source_enum: 2
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          name: CATCHIE_ROUNDO
          value_encoding: none
          value: As long as this statement has more than 128 characters, then nothing bad should happen
          value_type_enum: 0
          stage: pre_process
          stage_enum: 0
        - source: env_var_input
          ordinal: 2
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          stage_enum: 0
          stage: pre_process
          name: INPUT_STRING
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          value_type_enum: 0
  description: "Has a stack buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  exploits:
    - inputs:
        - source_enum: 2
          value_type_enum: 0
          stage: pre_process
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          value_type: USE_TEXT_DIRECTLY
          source: env_var_input
          id: source
          name: CATCHIE_ROUNDO
          stage_enum: 0
          ordinal: 1
          value_encoding: base64
        - value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          value_encoding: none
          name: INPUT_STRING
          source: env_var_input
          stage: pre_process
          source_enum: 2
          ordinal: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
    - inputs:
        - ordinal: 1
          source: env_var_input
          stage: pre_process
          stage_enum: 0
          source_enum: 2
          value: SGVsbKUgV6lybGSI
          name: CATCHIE_ROUNDO
          id: source
          value_type: USE_TEXT_DIRECTLY
          value_encoding: base64
          value_type_enum: 0
        - value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
          ordinal: 2
          name: INPUT_STRING
          source_enum: 2
          stage_enum: 0
          source: env_var_input
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
code_complexity_features:
  - file_name: /tmp/tmpmzGysZ_ss_testcase/src-rose/app/core/gimpviewable.c
    function_name: gimp_viewable_get_children
    line_number: 0
    feature: ENVIRONMENT_VARIABLE
    feature_group: source_taint
  - line_number: 0
    feature: heap_pointer
    function_name: gimp_viewable_get_children
    feature_group: data_type
    file_name: /tmp/tmpmzGysZ_ss_testcase/src-rose/app/core/gimpviewable.c
  - file_name: /tmp/tmpmzGysZ_ss_testcase/src-rose/app/core/gimpviewable.c
    function_name: gimp_viewable_get_children
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmpmzGysZ_ss_testcase/src-rose/app/core/gimpviewable.c
    function_name: gimp_viewable_get_children
    line_number: 0
    feature_group: control_flow
    feature: set_jump_long_jump