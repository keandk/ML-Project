description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"
code_complexity_features:
  - function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: source_taint
    feature: SOCKET
    file_name: /tmp/tmpcIWFyr_ss_testcase/src-rose/crypto/engine/eng_table.c
  - file_name: /tmp/tmpcIWFyr_ss_testcase/src-rose/crypto/engine/eng_table.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: struct
  - file_name: /tmp/tmpcIWFyr_ss_testcase/src-rose/crypto/engine/eng_table.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: buffer_address_array_index
  - file_name: /tmp/tmpcIWFyr_ss_testcase/src-rose/crypto/engine/eng_table.c
    feature_group: control_flow
    function_name: stonesoup_handle_taint
    line_number: 0
    feature: indirectly_recursive
io_pair:
  benigns:
    - inputs:
        - stage: co_process
          value: AAA
          address: ss-localhost
          port: 8887
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          source: socket_input
          value_encoding: none
          id: source
          stage_enum: 1
          value_type_enum: 0
          source_enum: 5
    - inputs:
        - port: 8887
          source_enum: 5
          stage: co_process
          stage_enum: 1
          value_encoding: none
          value: Hellow world!
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          address: ss-localhost
          id: source
          ordinal: 1
          source: socket_input
    - inputs:
        - stage: co_process
          source: socket_input
          address: ss-localhost
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          id: source
          value: Good-bye cruel world!
          value_encoding: none
          value_type_enum: 0
          port: 8887
          stage_enum: 1
          source_enum: 5
  description: "Has a fixed stack buffer of size 64, allocated within a struct  (char [64])\n\n"
  exploits:
    - inputs:
        - ordinal: 1
          id: source
          stage: co_process
          value_encoding: none
          value_type_enum: 0
          value
          stage_enum: 1
          port: 8887
          source: socket_input
          address: ss-localhost
          value_type: USE_TEXT_DIRECTLY
          source_enum: 5
    - inputs:
        - value_type_enum: 0
          stage_enum: 1
          port: 8887
          id: source
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          stage: co_process
          address: ss-localhost
          ordinal: 1
          value: This is probably going to overflow a buffer of some sort.  Let's run it anyway and see what happens.  I hope that everything turns out ok, because I would love to see what this looks like in all CAPS.  Converting ASCII characters to upper case is easy, you can either call a system function, or just add the standard difference between the start of the two character sets.  But, I am sure there is a reason that system functions exist for this sort of functionality.
          source: socket_input
          source_enum: 5
  base_inputs:
    - source: socket_input
      source_enum: 5
      stage_enum: 1
      stage: co_process
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887