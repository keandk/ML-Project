io_pair:
  exploits:
    - inputs:
        - id: source
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          value: ../testData
          source: env_var_input
          value_type_enum: 0
          name: UNIQUEST_NONPHILOLOGIC
          stage: pre_process
          source_enum: 2
          value_encoding: none
          stage_enum: 0
    - inputs:
        - name: UNIQUEST_NONPHILOLOGIC
          stage_enum: 0
          source: env_var_input
          source_enum: 2
          stage: pre_process
          value_encoding: none
          value: ../testOutput
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          id: source
          ordinal: 1
  benigns:
    - inputs:
        - value_type_enum: 0
          id: source
          value_encoding: none
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          value: /etc/passwd
          stage: pre_process
          stage_enum: 0
          source: env_var_input
          source_enum: 2
          name: UNIQUEST_NONPHILOLOGIC
    - inputs:
        - id: source
          name: UNIQUEST_NONPHILOLOGIC
          source: env_var_input
          stage: pre_process
          source_enum: 2
          stage_enum: 0
          value_encoding: none
          value: /etc/ssh/ssh_config
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
    - inputs:
        - source: env_var_input
          id: source
          value_encoding: none
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          value_type_enum: 0
          name: UNIQUEST_NONPHILOLOGIC
          value: /usr/bin/gcc
          ordinal: 1
          stage: pre_process
  description: "Has a buffer declared on the stack. char[20] If input is resolved to a value larger than 20 it will overflow\n\n"
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: UNIQUEST_NONPHILOLOGIC
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
code_complexity_features:
  - file_name: /tmp/tmpolol1n_ss_testcase/src-rose/crypto/engine/eng_table.c
    function_name: int_cleanup_cb_LHASH_DOALL
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - file_name: /tmp/tmpolol1n_ss_testcase/src-rose/crypto/engine/eng_table.c
    feature_group: data_type
    function_name: int_cleanup_cb_LHASH_DOALL
    line_number: 0
    feature: heap_pointer
  - file_name: /tmp/tmpolol1n_ss_testcase/src-rose/crypto/engine/eng_table.c
    function_name: int_cleanup_cb_LHASH_DOALL
    line_number: 0
    feature_group: data_flow
    feature: address_as_variable
  - feature_group: control_flow
    file_name: /tmp/tmpolol1n_ss_testcase/src-rose/crypto/engine/eng_table.c
    function_name: int_cleanup_cb_LHASH_DOALL
    line_number: 0
    feature: unconditional_jump