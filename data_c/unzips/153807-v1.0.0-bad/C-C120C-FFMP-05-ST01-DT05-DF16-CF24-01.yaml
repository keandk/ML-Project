io_pair:
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: SUBSPECIALIST_NONLOYALTY
  description: "Has a fixed heap buffer of size 64, allocated within a struct (char [64])\n\n"
  exploits:
    - inputs:
        - stage: pre_process
          value
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          stage_enum: 0
          id: source
          value_type_enum: 0
          ordinal: 1
          source: env_var_input
          source_enum: 2
          name: SUBSPECIALIST_NONLOYALTY
    - inputs:
        - ordinal: 1
          source: env_var_input
          source_enum: 2
          name: SUBSPECIALIST_NONLOYALTY
          value: This is probably going to overflow a buffer of some sort.  Let's run it anyway and see what happens.  I hope that everything turns out ok, because I would love to see what this looks like in all CAPS.  Converting ASCII characters to upper case is easy, you can either call a system function, or just add the standard difference between the start of the two character sets.  But, I am sure there is a reason that system functions exist for this sort of functionality.
          id: source
          stage: pre_process
          value_encoding: none
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
  benigns:
    - inputs:
        - source_enum: 2
          id: source
          stage_enum: 0
          stage: pre_process
          name: SUBSPECIALIST_NONLOYALTY
          value: AAA
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value_encoding: none
          source: env_var_input
    - inputs:
        - source: env_var_input
          ordinal: 1
          value_encoding: none
          source_enum: 2
          stage: pre_process
          stage_enum: 0
          id: source
          value: Hellow world!
          value_type: USE_TEXT_DIRECTLY
          name: SUBSPECIALIST_NONLOYALTY
          value_type_enum: 0
    - inputs:
        - name: SUBSPECIALIST_NONLOYALTY
          value: Good-bye cruel world!
          value_encoding: none
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          stage: pre_process
          stage_enum: 0
          id: source
          ordinal: 1
          source: env_var_input
code_complexity_features:
  - file_name: /tmp/tmps8J_Gj_ss_testcase/src-rose/libavcodec/utils.c
    function_name: avcodec_configuration
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - function_name: avcodec_configuration
    line_number: 0
    file_name: /tmp/tmps8J_Gj_ss_testcase/src-rose/libavcodec/utils.c
    feature_group: data_type
    feature: struct
  - file_name: /tmp/tmps8J_Gj_ss_testcase/src-rose/libavcodec/utils.c
    function_name: avcodec_configuration
    line_number: 0
    feature_group: data_flow
    feature: buffer_address_array_index
  - file_name: /tmp/tmps8J_Gj_ss_testcase/src-rose/libavcodec/utils.c
    function_name: avcodec_configuration
    line_number: 0
    feature_group: control_flow
    feature: unconditional_jump
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"