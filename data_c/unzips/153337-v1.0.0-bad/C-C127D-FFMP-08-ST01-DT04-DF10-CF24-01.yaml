description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
code_complexity_features:
  - file_name: /tmp/tmpT14xa4_ss_testcase/src-rose/libavformat/img2.c
    feature: ENVIRONMENT_VARIABLE
    line_number: 0
    feature_group: source_taint
    function_name: av_str2id
  - feature: heap_pointer
    file_name: /tmp/tmpT14xa4_ss_testcase/src-rose/libavformat/img2.c
    line_number: 0
    function_name: av_str2id
    feature_group: data_type
  - line_number: 0
    function_name: av_str2id
    feature: index_alias_50
    feature_group: data_flow
    file_name: /tmp/tmpT14xa4_ss_testcase/src-rose/libavformat/img2.c
  - line_number: 0
    file_name: /tmp/tmpT14xa4_ss_testcase/src-rose/libavformat/img2.c
    feature_group: control_flow
    feature: unconditional_jump
    function_name: av_str2id
io_pair:
  exploits:
    - inputs:
        - stage: pre_process
          value_type_enum: 0
          value_encoding: base64
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          ordinal: 1
          id: source
          stage_enum: 0
          source: env_var_input
          name: UPCURVED_JUNCTION
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
        - value_type_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type: USE_TEXT_DIRECTLY
          ordinal: 2
          source_enum: 2
          stage: pre_process
          source: env_var_input
          stage_enum: 0
          name: INPUT_STRING
          value_encoding: none
    - inputs:
        - source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          ordinal: 1
          id: source
          value: SGVsbKUgV6lybGSI
          name: UPCURVED_JUNCTION
          value_type_enum: 0
          source: env_var_input
          value_encoding: base64
          stage: pre_process
        - source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          name: INPUT_STRING
          stage_enum: 0
          value_type_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          ordinal: 2
          value_encoding: none
          source: env_var_input
          stage: pre_process
  description: "Has a stack buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  benigns:
    - inputs:
        - source_enum: 2
          source: env_var_input
          name: UPCURVED_JUNCTION
          ordinal: 1
          value_type_enum: 0
          stage_enum: 0
          id: source
          value_encoding: none
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
        - stage_enum: 0
          source_enum: 2
          value_encoding: none
          stage: pre_process
          name: INPUT_STRING
          value_type_enum: 0
          source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type: USE_TEXT_DIRECTLY
          ordinal: 2
    - inputs:
        - stage: pre_process
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          source_enum: 2
          value_encoding: none
          name: UPCURVED_JUNCTION
          source: env_var_input
          stage_enum: 0
          value_type_enum: 0
          id: source
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
        - stage_enum: 0
          name: INPUT_STRING
          source: env_var_input
          ordinal: 2
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value_encoding: none
          source_enum: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
    - inputs:
        - stage: pre_process
          value_encoding: none
          value: As long as this statement has more than 128 characters, then nothing bad should happen
          value_type_enum: 0
          source_enum: 2
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          id: source
          stage_enum: 0
          ordinal: 1
          name: UPCURVED_JUNCTION
        - source: env_var_input
          name: INPUT_STRING
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
          ordinal: 2
          source_enum: 2
          stage_enum: 0
          stage: pre_process
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
  base_inputs:
    - stage: pre_process
      source_enum: 2
      source: env_var_input
      name: UPCURVED_JUNCTION
      stage_enum: 0
      ordinal: 1
      id: source