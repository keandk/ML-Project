description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"
io_pair:
  description: "Has a heap buffer of size 64.  Reads in an ascii string from an environment variable and copies the final 63 characters into the heap buffer.  Then  reads the variable back from the heap buffer in reverse order, but incorrectly uses the size of the original string.  If the original string is longer than 63characters, this will result in an underread.\n\n"
  benigns:
    - inputs:
        - id: source
          stage_enum: 0
          ordinal: 1
          size: 131
          value_encoding: none
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          value_type: USE_TEXT_DIRECTLY
          source: shared_memory_input
          flags: 950
          stage: pre_process
          source_enum: 6
          value_type_enum: 0
          key: 9197
    - inputs:
        - ordinal: 1
          key: 9197
          source: shared_memory_input
          stage_enum: 0
          source_enum: 6
          id: source
          size: 131
          flags: 950
          value_encoding: none
          value_type_enum: 0
          value: This is probably not going to overflow a buffer of some sort.
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
    - inputs:
        - source: shared_memory_input
          source_enum: 6
          stage: pre_process
          value_type_enum: 0
          id: source
          value: This statement has less than 64 characters, then nothing bad.
          value_type: USE_TEXT_DIRECTLY
          key: 9197
          flags: 950
          value_encoding: none
          size: 131
          ordinal: 1
          stage_enum: 0
  exploits:
    - inputs:
        - id: source
          key: 9197
          value: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
          source: shared_memory_input
          source_enum: 6
          stage: pre_process
          stage_enum: 0
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          size: 131
          value_type_enum: 0
          ordinal: 1
          flags: 950
    - inputs:
        - stage_enum: 0
          value: The quick brown fox jumps over the lazy dog.  Why?  I don't know, because he was in a rush and trying to get somewhere.
          key: 9197
          value_encoding: none
          source_enum: 6
          source: shared_memory_input
          size: 131
          flags: 950
          stage: pre_process
          ordinal: 1
          id: source
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
  base_inputs:
    - source: shared_memory_input
      source_enum: 6
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      key: 9197
      size: 131
      flags: 950
code_complexity_features:
  - function_name: ResourceOwnerForgetCatCacheRef
    line_number: 0
    feature_group: source_taint
    feature: SHARED_MEMORY
    file_name: /tmp/tmpeTgkXa_ss_testcase/src-rose/src/backend/utils/resowner/resowner.c
  - function_name: ResourceOwnerForgetCatCacheRef
    line_number: 0
    feature: void_pointer
    feature_group: data_type
    file_name: /tmp/tmpeTgkXa_ss_testcase/src-rose/src/backend/utils/resowner/resowner.c
  - file_name: /tmp/tmpeTgkXa_ss_testcase/src-rose/src/backend/utils/resowner/resowner.c
    function_name: ResourceOwnerForgetCatCacheRef
    line_number: 0
    feature_group: data_flow
    feature: address_as_nonlinear_expression
  - file_name: /tmp/tmpeTgkXa_ss_testcase/src-rose/src/backend/utils/resowner/resowner.c
    function_name: ResourceOwnerForgetCatCacheRef
    line_number: 0
    feature_group: control_flow
    feature: recursive