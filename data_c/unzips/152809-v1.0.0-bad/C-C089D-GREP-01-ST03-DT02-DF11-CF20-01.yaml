code_complexity_features:
  - file_name: /tmp/tmpDwIHKq_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: source_taint
    feature: SOCKET
  - file_name: /tmp/tmpDwIHKq_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpDwIHKq_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmpDwIHKq_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: control_flow
    feature: sequence
io_pair:
  benigns:
    - inputs:
        - value: shipper1
          source_enum: 5
          stage_enum: 1
          stage: co_process
          address: ss-localhost
          value_encoding: none
          id: source
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          port: 8887
          value_type_enum: 0
          source: socket_input
        - value: northwind
          value_type: USE_CONTENTS_OF_FILE
          source_enum: 0
          server: ss-db-postgres
          stage: pre_process
          stage_enum: 0
          source: database_content_input
          ordinal: 2
          database_enum: 1
          value_encoding: none
          value_type_enum: 1
          database: postgresql
        - stage_enum: 0
          source: env_var_input
          source_enum: 2
          ordinal: 3
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          value: SET_DYNAMIC_DB_NAME
          value_type_enum: 0
          value_encoding: none
          name: SS_DBPGDATABASE
        - stage: post_process
          stage_enum: 2
          source_enum: 0
          ordinal: 1
          value_encoding: none
          value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          database_enum: 1
          source: database_content_input
          value_type: USE_TEXT_DIRECTLY
          database: postgresql
          value_type_enum: 0
          server: ss-db-postgres
    - inputs:
        - value_encoding: none
          stage: co_process
          source_enum: 5
          stage_enum: 1
          source: socket_input
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value: NewShipper
          id: source
          ordinal: 1
          address: ss-localhost
          port: 8887
        - stage_enum: 0
          ordinal: 2
          stage: pre_process
          source_enum: 0
          source: database_content_input
          value_type_enum: 1
          value: northwind
          value_encoding: none
          value_type: USE_CONTENTS_OF_FILE
          database_enum: 1
          database: postgresql
          server: ss-db-postgres
        - stage_enum: 0
          source: env_var_input
          value: SET_DYNAMIC_DB_NAME
          source_enum: 2
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          ordinal: 3
          value_type_enum: 0
          value_encoding: none
          name: SS_DBPGDATABASE
        - source: database_content_input
          server: ss-db-postgres
          value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          database_enum: 1
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 2
          source_enum: 0
          value_type_enum: 0
          database: postgresql
          ordinal: 1
          stage: post_process
    - inputs:
        - source: socket_input
          source_enum: 5
          stage: co_process
          stage_enum: 1
          id: source
          ordinal: 1
          address: ss-localhost
          port: 8887
          value: ShippingCompany
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
        - value_encoding: none
          value_type: USE_CONTENTS_OF_FILE
          value_type_enum: 1
          database: postgresql
          database_enum: 1
          server: ss-db-postgres
          stage_enum: 0
          source_enum: 0
          value: northwind
          stage: pre_process
          source: database_content_input
          ordinal: 2
        - stage_enum: 0
          source_enum: 2
          source: env_var_input
          name: SS_DBPGDATABASE
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          ordinal: 3
          value: SET_DYNAMIC_DB_NAME
          value_encoding: none
          value_type_enum: 0
        - database: postgresql
          server: ss-db-postgres
          stage_enum: 2
          source_enum: 0
          source: database_content_input
          stage: post_process
          value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          value_encoding: none
          value_type_enum: 0
          database_enum: 1
  exploits:
    - inputs:
        - ordinal: 1
          port: 8887
          value: BadShipper'), ('80','BadShipper2
          source: socket_input
          source_enum: 5
          address: ss-localhost
          stage: co_process
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 1
          id: source
          value_type_enum: 0
          value_encoding: none
        - stage: pre_process
          value: northwind
          value_type_enum: 1
          value_type: USE_CONTENTS_OF_FILE
          database: postgresql
          server: ss-db-postgres
          source_enum: 0
          stage_enum: 0
          database_enum: 1
          source: database_content_input
          ordinal: 2
          value_encoding: none
        - ordinal: 3
          name: SS_DBPGDATABASE
          value_encoding: none
          value_type_enum: 0
          value: SET_DYNAMIC_DB_NAME
          stage_enum: 0
          source: env_var_input
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
        - stage: post_process
          value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          source: database_content_input
          ordinal: 1
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          database: postgresql
          stage_enum: 2
          database_enum: 1
          server: ss-db-postgres
          source_enum: 0
    - inputs:
        - value_type: USE_TEXT_DIRECTLY
          id: source
          value: ShippersRUs'), ('20','BadShips'), ('65','ShipAttack'), ('45', 'MultiShip
          address: ss-localhost
          port: 8887
          value_type_enum: 0
          stage_enum: 1
          value_encoding: none
          ordinal: 1
          stage: co_process
          source: socket_input
          source_enum: 5
        - source: database_content_input
          source_enum: 0
          stage_enum: 0
          ordinal: 2
          value_encoding: none
          value: northwind
          value_type_enum: 1
          value_type: USE_CONTENTS_OF_FILE
          database: postgresql
          server: ss-db-postgres
          database_enum: 1
          stage: pre_process
        - stage_enum: 0
          name: SS_DBPGDATABASE
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          ordinal: 3
          source: env_var_input
          value: SET_DYNAMIC_DB_NAME
          value_encoding: none
          value_type_enum: 0
          stage: pre_process
        - server: ss-db-postgres
          value_type: USE_TEXT_DIRECTLY
          source: database_content_input
          database_enum: 1
          stage: post_process
          value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          ordinal: 1
          value_encoding: none
          value_type_enum: 0
          stage_enum: 2
          source_enum: 0
          database: postgresql
  base_inputs:
    - source: socket_input
      source_enum: 5
      stage: co_process
      stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
  description: "Good inputs: 1) name of shipper for use in Sql databaseBad inputs:SQL argument injection \n\n"
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"