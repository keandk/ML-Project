description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
code_complexity_features:
  - file_name: /tmp/tmplfnsRh_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - file_name: /tmp/tmplfnsRh_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmplfnsRh_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmplfnsRh_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: control_flow
    feature: sequence
io_pair:
  exploits:
    - inputs:
        - stage_enum: 0
          id: source
          ordinal: 1
          source: env_var_input
          source_enum: 2
          stage: pre_process
          name: VINCENTA_CACORRHACHIS
          value: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
    - inputs:
        - id: source
          stage: pre_process
          source: env_var_input
          value: The quick brown fox jumps over the lazy dog.  Why?  I don't know, because he was in a rush and trying to get somewhere.
          source_enum: 2
          value_encoding: none
          stage_enum: 0
          name: VINCENTA_CACORRHACHIS
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          ordinal: 1
  description: "Has a heap buffer of size 64.  Reads in an ascii string from an environment variable and copies the final 63 characters into the heap buffer.  Then  reads the variable back from the heap buffer in reverse order, but incorrectly uses the size of the original string.  If the original string is longer than 63characters, this will result in an underread.\n\n"
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: VINCENTA_CACORRHACHIS
  benigns:
    - inputs:
        - ordinal: 1
          name: VINCENTA_CACORRHACHIS
          source_enum: 2
          stage: pre_process
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          value_encoding: none
          stage_enum: 0
          id: source
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          source: env_var_input
    - inputs:
        - stage_enum: 0
          source_enum: 2
          ordinal: 1
          source: env_var_input
          value: This is probably not going to overflow a buffer of some sort.
          id: source
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          value_encoding: none
          name: VINCENTA_CACORRHACHIS
          value_type_enum: 0
    - inputs:
        - id: source
          stage_enum: 0
          source: env_var_input
          source_enum: 2
          ordinal: 1
          stage: pre_process
          value: This statement has less than 64 characters, then nothing bad.
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          name: VINCENTA_CACORRHACHIS