code_complexity_features:
  - function_name: initlinedraw
    line_number: 0
    feature_group: source_taint
    feature: SHARED_MEMORY
    file_name: /tmp/tmpELkoQe_ss_testcase/src-rose/color.c
  - file_name: /tmp/tmpELkoQe_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpELkoQe_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmpELkoQe_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: control_flow
    feature: sequence
io_pair:
  base_inputs:
    - source: shared_memory_input
      source_enum: 6
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      key: 8359
      size: 105
      flags: 950
  benigns:
    - inputs:
        - value_encoding: none
          size: 105
          stage: pre_process
          source: shared_memory_input
          stage_enum: 0
          id: source
          ordinal: 1
          source_enum: 6
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          key: 8359
          flags: 950
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
        - value_type_enum: 0
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source_enum: 2
          name: INPUT_STRING
          ordinal: 2
          stage_enum: 0
          stage: pre_process
          source: env_var_input
    - inputs:
        - id: source
          flags: 950
          value_encoding: none
          key: 8359
          source: shared_memory_input
          stage: pre_process
          source_enum: 6
          stage_enum: 0
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          size: 105
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
        - stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          source_enum: 2
          ordinal: 2
          stage_enum: 0
          value_type_enum: 0
          name: INPUT_STRING
          source: env_var_input
    - inputs:
        - stage: pre_process
          source_enum: 6
          value: As long as this statement has more than 64 characters, then nothing bad should happen
          value_type_enum: 0
          size: 105
          ordinal: 1
          key: 8359
          source: shared_memory_input
          stage_enum: 0
          id: source
          flags: 950
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
        - source_enum: 2
          source: env_var_input
          name: INPUT_STRING
          value_encoding: none
          stage_enum: 0
          ordinal: 2
          stage: pre_process
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
  description: "Has a stack buffer of size 128.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  exploits:
    - inputs:
        - value_type_enum: 0
          stage: pre_process
          source: shared_memory_input
          value_type: USE_TEXT_DIRECTLY
          source_enum: 6
          id: source
          stage_enum: 0
          value_encoding: base64
          ordinal: 1
          size: 105
          key: 8359
          flags: 950
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
        - source: env_var_input
          source_enum: 2
          stage: pre_process
          ordinal: 2
          stage_enum: 0
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          name: INPUT_STRING
    - inputs:
        - flags: 950
          key: 8359
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          size: 105
          value_encoding: base64
          source: shared_memory_input
          stage: pre_process
          source_enum: 6
          id: source
          ordinal: 1
          stage_enum: 0
          value: SGVsbKUgV6lybGSI
        - source_enum: 2
          source: env_var_input
          value_type_enum: 0
          stage: pre_process
          stage_enum: 0
          ordinal: 2
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          name: INPUT_STRING
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"