description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"
io_pair:
  description: "Has a stack buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  benigns:
    - inputs:
        - stage_enum: 1
          stage: co_process
          source: socket_input
          source_enum: 5
          id: source
          ordinal: 1
          address: ss-localhost
          port: 8887
          value_type_enum: 0
          value_encoding: none
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          value_type: USE_TEXT_DIRECTLY
        - stage_enum: 0
          source_enum: 2
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          ordinal: 2
          value_type_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          name: INPUT_STRING
          value_encoding: none
          stage: pre_process
    - inputs:
        - id: source
          source_enum: 5
          source: socket_input
          stage: co_process
          address: ss-localhost
          port: 8887
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value_encoding: none
          ordinal: 1
          stage_enum: 1
        - value_encoding: none
          stage_enum: 0
          ordinal: 2
          source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source_enum: 2
          stage: pre_process
          name: INPUT_STRING
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
    - inputs:
        - stage: co_process
          port: 8887
          stage_enum: 1
          ordinal: 1
          id: source
          value: As long as this statement has more than 128 characters, then nothing bad should happen
          source: socket_input
          source_enum: 5
          value_encoding: none
          address: ss-localhost
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
        - stage_enum: 0
          stage: pre_process
          source_enum: 2
          name: INPUT_STRING
          value_type: USE_TEXT_DIRECTLY
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
          ordinal: 2
          value_encoding: none
          source: env_var_input
  base_inputs:
    - source: socket_input
      source_enum: 5
      stage: co_process
      stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
  exploits:
    - inputs:
        - stage_enum: 1
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          port: 8887
          id: source
          source: socket_input
          ordinal: 1
          stage: co_process
          address: ss-localhost
          source_enum: 5
          value_encoding: base64
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
        - value_type_enum: 0
          ordinal: 2
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          stage: pre_process
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage_enum: 0
          value_encoding: none
          name: INPUT_STRING
    - inputs:
        - value_encoding: base64
          source_enum: 5
          source: socket_input
          value: SGVsbKUgV6lybGSI
          stage: co_process
          stage_enum: 1
          id: source
          ordinal: 1
          address: ss-localhost
          port: 8887
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
        - value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage: pre_process
          stage_enum: 0
          value_encoding: none
          name: INPUT_STRING
          value_type_enum: 0
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          ordinal: 2
          source_enum: 2
code_complexity_features:
  - line_number: 0
    feature_group: source_taint
    feature: SOCKET
    file_name: /tmp/tmpQl6vXB_ss_testcase/src-rose/libavformat/aviobuf.c
    function_name: stonesoup_handle_taint
  - file_name: /tmp/tmpQl6vXB_ss_testcase/src-rose/libavformat/aviobuf.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpQl6vXB_ss_testcase/src-rose/libavformat/aviobuf.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: address_alias_10
  - function_name: stonesoup_handle_taint
    file_name: /tmp/tmpQl6vXB_ss_testcase/src-rose/libavformat/aviobuf.c
    line_number: 0
    feature_group: control_flow
    feature: indirectly_recursive