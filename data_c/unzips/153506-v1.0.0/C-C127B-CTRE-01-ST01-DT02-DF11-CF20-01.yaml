code_complexity_features:
  - file_name: /tmp/tmpJcSgtJ_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    feature_group: source_taint
    line_number: 0
    feature: ENVIRONMENT_VARIABLE
  - file_name: /tmp/tmpJcSgtJ_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpJcSgtJ_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmpJcSgtJ_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: control_flow
    feature: sequence
io_pair:
  exploits:
    - inputs:
        - name: CABOOSE_WHANGEE
          stage: pre_process
          stage_enum: 0
          id: source
          source_enum: 2
          source: env_var_input
          ordinal: 1
          value_encoding: none
          value: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - source: env_var_input
          ordinal: 1
          source_enum: 2
          stage: pre_process
          stage_enum: 0
          value_type_enum: 0
          id: source
          name: CABOOSE_WHANGEE
          value_encoding: none
          value: The quick brown fox jumps over the lazy dog.  Why?  I don't know, because he was in a rush and trying to get somewhere.
          value_type: USE_TEXT_DIRECTLY
  benigns:
    - inputs:
        - name: CABOOSE_WHANGEE
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          source_enum: 2
          value_type_enum: 0
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          id: source
          ordinal: 1
          source: env_var_input
          stage_enum: 0
    - inputs:
        - id: source
          stage_enum: 0
          source_enum: 2
          value: This is probably not going to overflow a buffer of some sort.
          stage: pre_process
          ordinal: 1
          name: CABOOSE_WHANGEE
          source: env_var_input
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
    - inputs:
        - stage_enum: 0
          source: env_var_input
          source_enum: 2
          id: source
          value_encoding: none
          ordinal: 1
          name: CABOOSE_WHANGEE
          stage: pre_process
          value: This statement has less than 64 characters, then nothing bad.
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: CABOOSE_WHANGEE
  description: "Has a heap buffer of size 64.  Reads in an ascii string from an environment variable and copies the final 63 characters into the heap buffer.  Then  reads the variable back from the heap buffer in reverse order, but incorrectly uses the size of the original string.  If the original string is longer than 63characters, this will result in an underread.\n\n"
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"