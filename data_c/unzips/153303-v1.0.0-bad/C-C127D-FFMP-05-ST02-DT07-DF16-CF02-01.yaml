code_complexity_features:
  - file_name: /tmp/tmpUid6D4_ss_testcase/src-rose/libavcodec/utils.c
    function_name: avcodec_configuration
    line_number: 0
    feature_group: source_taint
    feature: FILE_CONTENTS
  - file_name: /tmp/tmpUid6D4_ss_testcase/src-rose/libavcodec/utils.c
    function_name: avcodec_configuration
    line_number: 0
    feature_group: data_type
    feature: union
  - file_name: /tmp/tmpUid6D4_ss_testcase/src-rose/libavcodec/utils.c
    function_name: avcodec_configuration
    line_number: 0
    feature_group: data_flow
    feature: buffer_address_array_index
  - file_name: /tmp/tmpUid6D4_ss_testcase/src-rose/libavcodec/utils.c
    function_name: avcodec_configuration
    line_number: 0
    feature_group: control_flow
    feature: indirectly_recursive
io_pair:
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      value: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
      value_type_enum: 0
      ordinal: 1
      name: INWRAP_GRAPHIOLOGIST
    - source: file_content_input
      source_enum: 3
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 2
      name: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
  description: "Has a stack buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  exploits:
    - inputs:
        - name: INWRAP_GRAPHIOLOGIST
          value: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
          source: env_var_input
          stage: pre_process
          source_enum: 2
          value_encoding: none
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          value_type_enum: 0
        - source_enum: 3
          stage: pre_process
          value_type_enum: 0
          name: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
          value_encoding: base64
          stage_enum: 0
          id: source
          source: file_content_input
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          value_type: USE_TEXT_DIRECTLY
          ordinal: 2
        - value_encoding: none
          source: env_var_input
          value_type_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          stage_enum: 0
          ordinal: 2
          name: INPUT_STRING
    - inputs:
        - source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          source_enum: 2
          stage: pre_process
          stage_enum: 0
          value: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
          value_type_enum: 0
          ordinal: 1
          name: INWRAP_GRAPHIOLOGIST
        - source: file_content_input
          source_enum: 3
          stage: pre_process
          stage_enum: 0
          id: source
          ordinal: 2
          name: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
          value: SGVsbKUgV6lybGSI
          value_encoding: base64
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
        - source_enum: 2
          stage: pre_process
          value_type_enum: 0
          stage_enum: 0
          source: env_var_input
          ordinal: 2
          value_encoding: none
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type: USE_TEXT_DIRECTLY
          name: INPUT_STRING
  benigns:
    - inputs:
        - source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          stage: pre_process
          stage_enum: 0
          value_type_enum: 0
          value: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
          value_encoding: none
          name: INWRAP_GRAPHIOLOGIST
          ordinal: 1
        - source_enum: 3
          value_type: USE_TEXT_DIRECTLY
          id: source
          stage: pre_process
          source: file_content_input
          value_encoding: none
          stage_enum: 0
          name: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
          ordinal: 2
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          value_type_enum: 0
        - stage_enum: 0
          value_encoding: none
          source_enum: 2
          ordinal: 2
          stage: pre_process
          name: INPUT_STRING
          source: env_var_input
          value_type_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - ordinal: 1
          name: INWRAP_GRAPHIOLOGIST
          source_enum: 2
          source: env_var_input
          stage_enum: 0
          stage: pre_process
          value_encoding: none
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
        - source: file_content_input
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          name: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
          stage: pre_process
          stage_enum: 0
          source_enum: 3
          id: source
          ordinal: 2
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          value_type_enum: 0
        - stage_enum: 0
          name: INPUT_STRING
          value_type_enum: 0
          ordinal: 2
          source: env_var_input
          source_enum: 2
          stage: pre_process
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - source: env_var_input
          value: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
          value_type_enum: 0
          source_enum: 2
          stage: pre_process
          stage_enum: 0
          name: INWRAP_GRAPHIOLOGIST
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
        - source_enum: 3
          value_type: USE_TEXT_DIRECTLY
          source: file_content_input
          value_type_enum: 0
          value_encoding: none
          stage: pre_process
          id: source
          stage_enum: 0
          name: /opt/stonesoup/workspace/testData/spellman_empoverish/sectism_lumumba.txt
          ordinal: 2
          value: As long as this statement has more than 128 characters, then nothing bad should happen
        - value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          value_encoding: none
          ordinal: 2
          name: INPUT_STRING
          source_enum: 2
          source: env_var_input
          stage_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
description: "Creating test case using base program.\nAdded an environment variable read to get a filename to read in the file contents using an fread operation within the function\nCompleted injection.\n"