code_complexity_features:
  - file_name: /tmp/tmpThNoS8_ss_testcase/src-rose/epan/oids.c
    function_name: oid_string2subid
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - line_number: 0
    function_name: oid_string2subid
    feature: heap_pointer
    feature_group: data_type
    file_name: /tmp/tmpThNoS8_ss_testcase/src-rose/epan/oids.c
  - file_name: /tmp/tmpThNoS8_ss_testcase/src-rose/epan/oids.c
    function_name: oid_string2subid
    line_number: 0
    feature_group: data_flow
    feature: address_as_constant
  - file_name: /tmp/tmpThNoS8_ss_testcase/src-rose/epan/oids.c
    function_name: explorational_micropterygidae
    line_number: 0
    feature_group: control_flow
    feature: infinite_loop
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
io_pair:
  base_inputs:
    - name: TRANSGRESSED_SULFONAL
      source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
  description: "Has a heap buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the heap buffer.  Then reads in an input and prints out the count of the characters from the heap buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  benigns:
    - inputs:
        - value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          name: TRANSGRESSED_SULFONAL
          source_enum: 2
          ordinal: 1
          stage: pre_process
          value_encoding: none
          source: env_var_input
          stage_enum: 0
          id: source
        - source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          value_encoding: none
          stage: pre_process
          name: INPUT_STRING
          ordinal: 2
    - inputs:
        - name: TRANSGRESSED_SULFONAL
          ordinal: 1
          source: env_var_input
          source_enum: 2
          stage_enum: 0
          stage: pre_process
          value_encoding: none
          id: source
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
        - value_type_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source: env_var_input
          stage_enum: 0
          name: INPUT_STRING
          value_encoding: none
          stage: pre_process
          ordinal: 2
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - value: As long as this statement has more than 64 characters, then nothing bad should happen
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          stage_enum: 0
          value_type_enum: 0
          source: env_var_input
          name: TRANSGRESSED_SULFONAL
          stage: pre_process
          source_enum: 2
          id: source
          value_encoding: none
        - ordinal: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          name: INPUT_STRING
          stage: pre_process
          source_enum: 2
          stage_enum: 0
          source: env_var_input
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
  exploits:
    - inputs:
        - stage: pre_process
          name: TRANSGRESSED_SULFONAL
          value_encoding: base64
          value_type: USE_TEXT_DIRECTLY
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          source: env_var_input
          source_enum: 2
          id: source
          stage_enum: 0
          ordinal: 1
          value_type_enum: 0
        - value_type: USE_TEXT_DIRECTLY
          ordinal: 2
          stage_enum: 0
          value_type_enum: 0
          source: env_var_input
          name: INPUT_STRING
          stage: pre_process
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source_enum: 2
          value_encoding: none
    - inputs:
        - value_type_enum: 0
          value: SGVsbKUgV6lybGSI
          value_encoding: base64
          id: source
          name: TRANSGRESSED_SULFONAL
          source: env_var_input
          stage: pre_process
          source_enum: 2
          stage_enum: 0
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
        - name: INPUT_STRING
          value_encoding: none
          ordinal: 2
          source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          value_type_enum: 0
          stage_enum: 0