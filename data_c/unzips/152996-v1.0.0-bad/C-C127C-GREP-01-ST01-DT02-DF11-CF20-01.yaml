code_complexity_features:
  - file_name: /tmp/tmp9o52X0_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - file_name: /tmp/tmp9o52X0_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmp9o52X0_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmp9o52X0_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: control_flow
    feature: sequence
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
io_pair:
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: SOLPUGIDES_VIOLATING
  description: "Has a heap buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the heap buffer.  Then reads in an input and prints out the count of the characters from the heap buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  exploits:
    - inputs:
        - ordinal: 1
          value_type_enum: 0
          name: SOLPUGIDES_VIOLATING
          id: source
          source: env_var_input
          stage: pre_process
          source_enum: 2
          stage_enum: 0
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          value_type: USE_TEXT_DIRECTLY
          value_encoding: base64
        - value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          ordinal: 2
          value_encoding: none
          source: env_var_input
          source_enum: 2
          name: INPUT_STRING
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage_enum: 0
          value_type_enum: 0
    - inputs:
        - source_enum: 2
          stage: pre_process
          stage_enum: 0
          source: env_var_input
          ordinal: 1
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: SGVsbKUgV6lybGSI
          id: source
          value_encoding: base64
          name: SOLPUGIDES_VIOLATING
        - value_type_enum: 0
          ordinal: 2
          value_encoding: none
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          name: INPUT_STRING
          source_enum: 2
          source: env_var_input
          stage: pre_process
  benigns:
    - inputs:
        - value_type_enum: 0
          value_encoding: none
          source: env_var_input
          source_enum: 2
          stage_enum: 0
          stage: pre_process
          id: source
          value_type: USE_TEXT_DIRECTLY
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          ordinal: 1
          name: SOLPUGIDES_VIOLATING
        - value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          stage: pre_process
          value_type_enum: 0
          name: INPUT_STRING
          stage_enum: 0
          source: env_var_input
          ordinal: 2
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - name: SOLPUGIDES_VIOLATING
          stage_enum: 0
          value_encoding: none
          id: source
          value_type_enum: 0
          source_enum: 2
          stage: pre_process
          source: env_var_input
          ordinal: 1
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          value_type: USE_TEXT_DIRECTLY
        - value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          ordinal: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          name: INPUT_STRING
          source: env_var_input
          source_enum: 2
          stage: pre_process
          stage_enum: 0
          value_type_enum: 0
    - inputs:
        - ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value: As long as this statement has more than 64 characters, then nothing bad should happen
          id: source
          stage_enum: 0
          source: env_var_input
          stage: pre_process
          source_enum: 2
          name: SOLPUGIDES_VIOLATING
          value_encoding: none
        - value_type: USE_TEXT_DIRECTLY
          source: env_var_input
          name: INPUT_STRING
          value_type_enum: 0
          stage_enum: 0
          stage: pre_process
          source_enum: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          ordinal: 2
          value_encoding: none