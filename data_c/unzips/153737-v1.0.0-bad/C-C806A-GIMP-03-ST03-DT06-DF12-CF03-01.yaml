io_pair:
  benigns:
    - inputs:
        - stage: co_process
          port: 8887
          value_type_enum: 0
          address: ss-localhost
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAA
          source_enum: 5
          id: source
          stage_enum: 1
          source: socket_input
          ordinal: 1
    - inputs:
        - value: Hello World!  If this statement isn't more than 64 characters, it will go badly
          address: ss-localhost
          ordinal: 1
          port: 8887
          stage: co_process
          source_enum: 5
          source: socket_input
          stage_enum: 1
          id: source
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
    - inputs:
        - ordinal: 1
          source_enum: 5
          port: 8887
          stage_enum: 1
          source: socket_input
          stage: co_process
          id: source
          value: Short is good for buffer overflows, unless you make a mistake and get it wrong
          value_encoding: none
          address: ss-localhost
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
  base_inputs:
    - stage: co_process
      source: socket_input
      source_enum: 5
      stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
  description: "Has a buffer declared on the stack. char[64] If input is shorter than 64 it will overflow,due to using improper sizeof and strlen checking\n\n"
  exploits:
    - inputs:
        - stage_enum: 1
          stage: co_process
          source_enum: 5
          value_type_enum: 0
          source: socket_input
          ordinal: 1
          id: source
          port: 8887
          value_encoding: none
          address: ss-localhost
          value: Short is now bad
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - ordinal: 1
          source: socket_input
          port: 8887
          stage: co_process
          value_type: USE_TEXT_DIRECTLY
          source_enum: 5
          id: source
          stage_enum: 1
          address: ss-localhost
          value_encoding: none
          value: AAAAAAAAAAAA
          value_type_enum: 0
code_complexity_features:
  - feature_group: source_taint
    function_name: stonesoup_handle_taint
    file_name: /tmp/tmp7J47hp_ss_testcase/src-rose/app/widgets/gimpdialogfactory.c
    line_number: 0
    feature: SOCKET
  - file_name: /tmp/tmp7J47hp_ss_testcase/src-rose/app/widgets/gimpdialogfactory.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: typedef
  - file_name: /tmp/tmp7J47hp_ss_testcase/src-rose/app/widgets/gimpdialogfactory.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: var_arg_list
  - file_name: /tmp/tmp7J47hp_ss_testcase/src-rose/app/widgets/gimpdialogfactory.c
    function_name: upseal_mfr
    line_number: 0
    feature_group: control_flow
    feature: infinite_loop
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"