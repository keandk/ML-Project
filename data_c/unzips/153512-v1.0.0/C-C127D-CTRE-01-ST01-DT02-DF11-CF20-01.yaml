code_complexity_features:
  - file_name: /tmp/tmp3NcIVl_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - file_name: /tmp/tmp3NcIVl_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmp3NcIVl_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmp3NcIVl_ss_testcase/src-rose/color.c
    function_name: initlinedraw
    line_number: 0
    feature_group: control_flow
    feature: sequence
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
io_pair:
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: SEMICLINICALLY_OVERCOMMIT
  exploits:
    - inputs:
        - stage_enum: 0
          value_type_enum: 0
          source: env_var_input
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          value_encoding: base64
          id: source
          ordinal: 1
          name: SEMICLINICALLY_OVERCOMMIT
          source_enum: 2
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
        - stage: pre_process
          value_encoding: none
          source: env_var_input
          value_type_enum: 0
          name: INPUT_STRING
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage_enum: 0
          source_enum: 2
          ordinal: 2
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - name: SEMICLINICALLY_OVERCOMMIT
          stage_enum: 0
          id: source
          value_type_enum: 0
          stage: pre_process
          source_enum: 2
          source: env_var_input
          value_encoding: base64
          ordinal: 1
          value: SGVsbKUgV6lybGSI
          value_type: USE_TEXT_DIRECTLY
        - name: INPUT_STRING
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
          source: env_var_input
          value_encoding: none
          ordinal: 2
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          stage_enum: 0
  description: "Has a stack buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  benigns:
    - inputs:
        - value_encoding: none
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          source: env_var_input
          stage: pre_process
          value_type_enum: 0
          source_enum: 2
          id: source
          stage_enum: 0
          name: SEMICLINICALLY_OVERCOMMIT
        - source_enum: 2
          name: INPUT_STRING
          ordinal: 2
          source: env_var_input
          stage: pre_process
          value_encoding: none
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
    - inputs:
        - stage_enum: 0
          source: env_var_input
          source_enum: 2
          ordinal: 1
          id: source
          stage: pre_process
          value_type_enum: 0
          name: SEMICLINICALLY_OVERCOMMIT
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
        - source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          source_enum: 2
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          value_type_enum: 0
          name: INPUT_STRING
          ordinal: 2
    - inputs:
        - value_type_enum: 0
          ordinal: 1
          stage: pre_process
          source_enum: 2
          id: source
          stage_enum: 0
          name: SEMICLINICALLY_OVERCOMMIT
          value_type: USE_TEXT_DIRECTLY
          source: env_var_input
          value_encoding: none
          value: As long as this statement has more than 128 characters, then nothing bad should happen
        - source: env_var_input
          stage_enum: 0
          value_encoding: none
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          ordinal: 2
          name: INPUT_STRING
          value_type_enum: 0
          source_enum: 2