code_complexity_features:
  - file_name: /tmp/tmpjJu_Q5_ss_testcase/src-rose/app/core/gimpcontext.c
    function_name: gimp_context_dispose
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - file_name: /tmp/tmpjJu_Q5_ss_testcase/src-rose/app/core/gimpcontext.c
    function_name: gimp_context_dispose
    line_number: 0
    feature_group: data_type
    feature: union
  - file_name: /tmp/tmpjJu_Q5_ss_testcase/src-rose/app/core/gimpcontext.c
    function_name: gimp_context_dispose
    line_number: 0
    feature_group: data_flow
    feature: var_arg_list
  - line_number: 0
    feature_group: control_flow
    feature: recursive
    function_name: fractioning_judicature
    file_name: /tmp/tmpjJu_Q5_ss_testcase/src-rose/app/core/gimpcontext.c
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
io_pair:
  exploits:
    - inputs:
        - stage_enum: 0
          source: env_var_input
          name: AGENIZING_NONNATIONAL
          stage: pre_process
          id: source
          ordinal: 1
          value_encoding: base64
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          value_type_enum: 0
        - value_type_enum: 0
          ordinal: 2
          value_type: USE_TEXT_DIRECTLY
          source: env_var_input
          value_encoding: none
          stage_enum: 0
          name: INPUT_STRING
          stage: pre_process
          source_enum: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
    - inputs:
        - ordinal: 1
          name: AGENIZING_NONNATIONAL
          source_enum: 2
          stage: pre_process
          stage_enum: 0
          id: source
          source: env_var_input
          value_encoding: base64
          value: SGVsbKUgV6lybGSI
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
        - value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage: pre_process
          name: INPUT_STRING
          source_enum: 2
          ordinal: 2
          source: env_var_input
          value_encoding: none
          stage_enum: 0
  base_inputs:
    - stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: AGENIZING_NONNATIONAL
      source: env_var_input
      source_enum: 2
  description: "Has a stack buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  benigns:
    - inputs:
        - stage: pre_process
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          name: AGENIZING_NONNATIONAL
          value_type_enum: 0
          source: env_var_input
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          source_enum: 2
          value_encoding: none
          id: source
        - source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          ordinal: 2
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          stage_enum: 0
          stage: pre_process
          name: INPUT_STRING
    - inputs:
        - value_encoding: none
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          stage: pre_process
          name: AGENIZING_NONNATIONAL
          ordinal: 1
          stage_enum: 0
          source: env_var_input
          id: source
          source_enum: 2
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
        - value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage_enum: 0
          name: INPUT_STRING
          ordinal: 2
          source_enum: 2
          value_type_enum: 0
          value_encoding: none
          source: env_var_input
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - stage: pre_process
          value_type_enum: 0
          value_encoding: none
          value: As long as this statement has more than 128 characters, then nothing bad should happen
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          id: source
          name: AGENIZING_NONNATIONAL
          source_enum: 2
          ordinal: 1
          source: env_var_input
        - stage_enum: 0
          name: INPUT_STRING
          source_enum: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          ordinal: 2
          source: env_var_input
          stage: pre_process
          value_type_enum: 0
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY