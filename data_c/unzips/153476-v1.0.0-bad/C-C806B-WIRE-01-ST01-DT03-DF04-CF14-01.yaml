code_complexity_features:
  - line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
    file_name: /tmp/tmp9kTIvW_ss_testcase/src-rose/epan/column.c
    function_name: get_column_visible
  - file_name: /tmp/tmp9kTIvW_ss_testcase/src-rose/epan/column.c
    feature_group: data_type
    function_name: get_column_visible
    line_number: 0
    feature: void_pointer
  - file_name: /tmp/tmp9kTIvW_ss_testcase/src-rose/epan/column.c
    function_name: get_column_visible
    line_number: 0
    feature_group: data_flow
    feature: address_alias_50
  - function_name: get_column_visible
    line_number: 0
    feature_group: control_flow
    file_name: /tmp/tmp9kTIvW_ss_testcase/src-rose/epan/column.c
    feature: interprocedural_10
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
io_pair:
  description: "Has a buffer declared on the heap. malloc(64*sizeOf(char)) If input is shorter than 64 it will overflowdue to using improper sizeof and strlen checking\n\n"
  benigns:
    - inputs:
        - name: COCCYGOMORPH_BLOODYING
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          source: env_var_input
          value_type_enum: 0
          ordinal: 1
          stage_enum: 0
          source_enum: 2
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAA
          stage: pre_process
          id: source
    - inputs:
        - source: env_var_input
          value_encoding: none
          value_type_enum: 0
          ordinal: 1
          value: Hello World!  If this statement isn't more than 64 characters, it will go badly
          name: COCCYGOMORPH_BLOODYING
          stage: pre_process
          stage_enum: 0
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          id: source
    - inputs:
        - source: env_var_input
          source_enum: 2
          name: COCCYGOMORPH_BLOODYING
          ordinal: 1
          stage_enum: 0
          value: Short is good for buffer overflows, unless you make a mistake and get it wrong
          stage: pre_process
          id: source
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
  exploits:
    - inputs:
        - stage: pre_process
          ordinal: 1
          id: source
          source: env_var_input
          stage_enum: 0
          source_enum: 2
          value: AAAAAAAAAAAAAAA
          value_type: USE_TEXT_DIRECTLY
          name: COCCYGOMORPH_BLOODYING
          value_encoding: none
          value_type_enum: 0
    - inputs:
        - source_enum: 2
          source: env_var_input
          stage_enum: 0
          stage: pre_process
          id: source
          value_type_enum: 0
          name: COCCYGOMORPH_BLOODYING
          ordinal: 1
          value: Short is now bad
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: COCCYGOMORPH_BLOODYING