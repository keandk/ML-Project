code_complexity_features:
  - feature: callback
    file_name: /tmp/tmptR8_SL_ss_testcase/src-rose/ui/gtk/main_filter_toolbar.c
    function_name: filter_toolbar_new
    feature_group: control_flow
    line_number: 0
  - function_name: greyback_ostracean
    line_number: 0
    feature_group: source_taint
    file_name: /tmp/tmptR8_SL_ss_testcase/src-rose/ui/gtk/main_filter_toolbar.c
    feature: SHARED_MEMORY
  - line_number: 0
    feature: address_as_constant
    feature_group: data_flow
    file_name: /tmp/tmptR8_SL_ss_testcase/src-rose/ui/gtk/main_filter_toolbar.c
    function_name: phaenanthery_mytilene
  - feature_group: data_type
    feature: array
    file_name: /tmp/tmptR8_SL_ss_testcase/src-rose/ui/gtk/main_filter_toolbar.c
    function_name: joly_adaiha
    line_number: 0
description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"
io_pair:
  exploits:
    - inputs:
        - id: source
          ordinal: 1
          value_type_enum: 0
          key: 4980
          flags: 950
          size: 596
          value_encoding: none
          stage: pre_process
          stage_enum: 0
          value
          value_type: USE_TEXT_DIRECTLY
          source_enum: 6
          source: shared_memory_input
    - inputs:
        - stage_enum: 0
          flags: 950
          value: This is probably going to overflow a buffer of some sort.  Let's run it anyway and see what happens.  I hope that everything turns out ok, because I would love to see what this looks like in all CAPS.  Converting ASCII characters to upper case is easy, you can either call a system function, or just add the standard difference between the start of the two character sets.  But, I am sure there is a reason that system functions exist for this sort of functionality.
          source_enum: 6
          key: 4980
          value_encoding: none
          ordinal: 1
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          id: source
          value_type_enum: 0
          size: 596
          source: shared_memory_input
  benigns:
    - inputs:
        - key: 4980
          id: source
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          source_enum: 6
          value: AAAAAAAAAAAAAAAAAAAAAAA
          value_encoding: none
          stage_enum: 0
          ordinal: 1
          source: shared_memory_input
          flags: 950
          size: 596
          value_type_enum: 0
    - inputs:
        - size: 596
          stage: pre_process
          value_type_enum: 0
          flags: 950
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          source: shared_memory_input
          key: 4980
          stage_enum: 0
          id: source
          source_enum: 6
          value: Hello World!
          value_encoding: none
    - inputs:
        - id: source
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          flags: 950
          key: 4980
          value: Short is good
          source: shared_memory_input
          stage_enum: 0
          size: 596
          ordinal: 1
          source_enum: 6
          value_type_enum: 0
  base_inputs:
    - ordinal: 1
      flags: 950
      stage: pre_process
      stage_enum: 0
      size: 596
      source_enum: 6
      id: source
      source: shared_memory_input
      key: 4980
  description: "Has a fixed heap buffer of size 64, allocated within a struct When input has a larger size, the heap buffer will be over read\n\n"