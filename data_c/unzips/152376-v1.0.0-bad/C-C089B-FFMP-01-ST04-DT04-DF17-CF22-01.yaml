code_complexity_features:
  - file_name: /tmp/tmpyn2inj_ss_testcase/src-rose/libavdevice/avdevice.c
    function_name: avdevice_version
    line_number: 0
    feature_group: source_taint
    feature: SHARED_MEMORY
  - function_name: avdevice_version
    feature_group: data_type
    line_number: 0
    file_name: /tmp/tmpyn2inj_ss_testcase/src-rose/libavdevice/avdevice.c
    feature: heap_pointer
  - feature_group: data_flow
    feature: buffer_address_array_index
    file_name: /tmp/tmpyn2inj_ss_testcase/src-rose/libavdevice/avdevice.c
    line_number: 0
    function_name: avdevice_version
  - line_number: 0
    feature_group: control_flow
    file_name: /tmp/tmpyn2inj_ss_testcase/src-rose/libavdevice/avdevice.c
    function_name: avdevice_version
    feature: macros
io_pair:
  benigns:
    - inputs:
        - value_encoding: none
          id: source
          value: USA
          key: 9025
          source: shared_memory_input
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          stage_enum: 0
          value_type_enum: 0
          flags: 950
          size: 30
          stage: pre_process
          source_enum: 6
        - stage: pre_process
          value_type: USE_CONTENTS_OF_FILE
          value_encoding: none
          server: ss-db-postgres
          source_enum: 0
          stage_enum: 0
          source: database_content_input
          value: northwind
          database_enum: 1
          value_type_enum: 1
          ordinal: 2
          database: postgresql
        - stage_enum: 0
          source_enum: 2
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          source: env_var_input
          name: SS_DBPGDATABASE
          ordinal: 3
          value_encoding: none
          stage: pre_process
          value: SET_DYNAMIC_DB_NAME
        - stage: post_process
          server: ss-db-postgres
          database: postgresql
          source_enum: 0
          value_type_enum: 0
          value_encoding: none
          source: database_content_input
          value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          ordinal: 1
          database_enum: 1
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 2
    - inputs:
        - source_enum: 6
          flags: 950
          value: Germany
          size: 30
          stage: pre_process
          value_type_enum: 0
          id: source
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          key: 9025
          source: shared_memory_input
          ordinal: 1
          value_encoding: none
        - value_type: USE_CONTENTS_OF_FILE
          stage: pre_process
          database_enum: 1
          source: database_content_input
          value_encoding: none
          source_enum: 0
          stage_enum: 0
          server: ss-db-postgres
          ordinal: 2
          database: postgresql
          value: northwind
          value_type_enum: 1
        - name: SS_DBPGDATABASE
          stage: pre_process
          value_encoding: none
          ordinal: 3
          value: SET_DYNAMIC_DB_NAME
          source_enum: 2
          value_type_enum: 0
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
        - value_type_enum: 0
          ordinal: 1
          database: postgresql
          value_encoding: none
          stage_enum: 2
          stage: post_process
          server: ss-db-postgres
          value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          source_enum: 0
          source: database_content_input
          database_enum: 1
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - key: 9025
          value_encoding: none
          value_type_enum: 0
          id: source
          stage: pre_process
          flags: 950
          source_enum: 6
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          source: shared_memory_input
          size: 30
          value: Finland
          stage_enum: 0
        - source_enum: 0
          database_enum: 1
          source: database_content_input
          stage_enum: 0
          server: ss-db-postgres
          stage: pre_process
          value_encoding: none
          value_type: USE_CONTENTS_OF_FILE
          value: northwind
          value_type_enum: 1
          ordinal: 2
          database: postgresql
        - value_type: USE_TEXT_DIRECTLY
          name: SS_DBPGDATABASE
          ordinal: 3
          stage_enum: 0
          value_type_enum: 0
          stage: pre_process
          value: SET_DYNAMIC_DB_NAME
          source: env_var_input
          source_enum: 2
          value_encoding: none
        - value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          source: database_content_input
          stage: post_process
          database_enum: 1
          stage_enum: 2
          server: ss-db-postgres
          ordinal: 1
          database: postgresql
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          source_enum: 0
  exploits:
    - inputs:
        - value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          size: 30
          id: source
          flags: 950
          ordinal: 1
          stage_enum: 0
          stage: pre_process
          source: shared_memory_input
          source_enum: 6
          value_encoding: none
          key: 9025
          value: x' or 'x'='x
        - server: ss-db-postgres
          stage_enum: 0
          value: northwind
          source: database_content_input
          stage: pre_process
          database: postgresql
          source_enum: 0
          ordinal: 2
          value_type: USE_CONTENTS_OF_FILE
          value_type_enum: 1
          database_enum: 1
          value_encoding: none
        - name: SS_DBPGDATABASE
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value_encoding: none
          source_enum: 2
          value: SET_DYNAMIC_DB_NAME
          source: env_var_input
          stage: pre_process
          stage_enum: 0
          ordinal: 3
        - database: postgresql
          source_enum: 0
          database_enum: 1
          value_type_enum: 0
          value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 2
          server: ss-db-postgres
          stage: post_process
          ordinal: 1
          source: database_content_input
          value_encoding: none
    - inputs:
        - size: 30
          value_type_enum: 0
          value_encoding: none
          source: shared_memory_input
          stage: pre_process
          key: 9025
          source_enum: 6
          value: "x'; SELECT * FROM Orders; -- "
          id: source
          value_type: USE_TEXT_DIRECTLY
          flags: 950
          ordinal: 1
          stage_enum: 0
        - source: database_content_input
          value_encoding: none
          stage: pre_process
          value_type_enum: 1
          source_enum: 0
          value: northwind
          database: postgresql
          stage_enum: 0
          value_type: USE_CONTENTS_OF_FILE
          ordinal: 2
          server: ss-db-postgres
          database_enum: 1
        - value_type: USE_TEXT_DIRECTLY
          name: SS_DBPGDATABASE
          stage_enum: 0
          value_encoding: none
          stage: pre_process
          value_type_enum: 0
          source: env_var_input
          value: SET_DYNAMIC_DB_NAME
          source_enum: 2
          ordinal: 3
        - ordinal: 1
          value_encoding: none
          database_enum: 1
          stage: post_process
          server: ss-db-postgres
          source_enum: 0
          stage_enum: 2
          database: postgresql
          value_type: USE_TEXT_DIRECTLY
          source: database_content_input
          value: DROP DATABASE IF EXISTS "$SS_DBPGDATABASE;"
          value_type_enum: 0
  base_inputs:
    - stage_enum: 0
      size: 30
      flags: 950
      stage: pre_process
      id: source
      source: shared_memory_input
      ordinal: 1
      source_enum: 6
      key: 9025
  description: "Good inputs: 1) name of country for use in Sql databaseBad inputs:1) SQL argument injection 2) SQL command injection \n\n"
description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"