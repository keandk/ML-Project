io_pair:
  benigns:
    - inputs:
        - id: source
          value_type_enum: 0
          ordinal: 1
          source_enum: 5
          stage: co_process
          stage_enum: 1
          port: 8887
          source: socket_input
          value_type: USE_TEXT_DIRECTLY
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          value_encoding: none
          address: ss-localhost
        - value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          name: INPUT_STRING
          stage_enum: 0
          value_type_enum: 0
          source_enum: 2
          value_encoding: none
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          ordinal: 2
    - inputs:
        - port: 8887
          address: ss-localhost
          id: source
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          value_encoding: none
          ordinal: 1
          stage_enum: 1
          stage: co_process
          value_type: USE_TEXT_DIRECTLY
          source: socket_input
          value_type_enum: 0
          source_enum: 5
        - source_enum: 2
          value_encoding: none
          name: INPUT_STRING
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          value_type_enum: 0
          ordinal: 2
          stage: pre_process
    - inputs:
        - port: 8887
          value_encoding: none
          stage: co_process
          address: ss-localhost
          value_type: USE_TEXT_DIRECTLY
          source: socket_input
          source_enum: 5
          value: As long as this statement has more than 128 characters, then nothing bad should happen
          value_type_enum: 0
          stage_enum: 1
          id: source
          ordinal: 1
        - value_type_enum: 0
          source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          ordinal: 2
          stage_enum: 0
          name: INPUT_STRING
          stage: pre_process
          value_encoding: none
  description: "Has a stack buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  base_inputs:
    - source_enum: 5
      id: source
      port: 8887
      ordinal: 1
      address: ss-localhost
      stage_enum: 1
      stage: co_process
      source: socket_input
  exploits:
    - inputs:
        - stage_enum: 1
          value_encoding: base64
          id: source
          address: ss-localhost
          port: 8887
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          source: socket_input
          source_enum: 5
          value_type_enum: 0
          stage: co_process
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
        - value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage_enum: 0
          name: INPUT_STRING
          ordinal: 2
          value_encoding: none
          source: env_var_input
          value_type_enum: 0
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
    - inputs:
        - stage_enum: 1
          value_type: USE_TEXT_DIRECTLY
          source: socket_input
          id: source
          source_enum: 5
          stage: co_process
          ordinal: 1
          value_type_enum: 0
          value: SGVsbKUgV6lybGSI
          value_encoding: base64
          port: 8887
          address: ss-localhost
        - ordinal: 2
          stage: pre_process
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source_enum: 2
          stage_enum: 0
          value_type_enum: 0
          name: INPUT_STRING
          source: env_var_input
code_complexity_features:
  - feature: callback
    file_name: /tmp/tmpP7LpHt_ss_testcase/src-rose/src/backend/utils/hash/hashfn.c
    function_name: oid_hash
    line_number: 0
    feature_group: control_flow
  - feature: SOCKET
    function_name: stonesoup_handle_taint
    line_number: 0
    file_name: /tmp/tmpP7LpHt_ss_testcase/src-rose/src/backend/utils/hash/hashfn.c
    feature_group: source_taint
  - feature_group: data_type
    file_name: /tmp/tmpP7LpHt_ss_testcase/src-rose/src/backend/utils/hash/hashfn.c
    feature: array
    line_number: 0
    function_name: stonesoup_handle_taint
  - line_number: 0
    feature: var_arg_list
    file_name: /tmp/tmpP7LpHt_ss_testcase/src-rose/src/backend/utils/hash/hashfn.c
    function_name: stonesoup_handle_taint
    feature_group: data_flow
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"