io_pair:
  benigns:
    - inputs:
        - value_type_enum: 0
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          stage_enum: 0
          stage: pre_process
          source: env_var_input
          id: source
          source_enum: 2
          ordinal: 1
          name: UNBRAVENESS_CAPPELLO
        - value_type_enum: 0
          stage: pre_process
          name: INPUT_STRING
          stage_enum: 0
          source_enum: 2
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          ordinal: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
    - inputs:
        - stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          source: env_var_input
          stage_enum: 0
          name: UNBRAVENESS_CAPPELLO
          ordinal: 1
          id: source
          value_encoding: none
          value_type_enum: 0
          source_enum: 2
        - value_type_enum: 0
          value_encoding: none
          source_enum: 2
          stage_enum: 0
          source: env_var_input
          stage: pre_process
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          ordinal: 2
          name: INPUT_STRING
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - value: As long as this statement has more than 64 characters, then nothing bad should happen
          value_encoding: none
          id: source
          value_type_enum: 0
          source: env_var_input
          stage: pre_process
          source_enum: 2
          ordinal: 1
          stage_enum: 0
          name: UNBRAVENESS_CAPPELLO
          value_type: USE_TEXT_DIRECTLY
        - name: INPUT_STRING
          stage_enum: 0
          stage: pre_process
          source_enum: 2
          source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          ordinal: 2
          value_type_enum: 0
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: UNBRAVENESS_CAPPELLO
  description: "Has a stack buffer of size 128.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  exploits:
    - inputs:
        - value_type: USE_TEXT_DIRECTLY
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          ordinal: 1
          id: source
          value_encoding: base64
          name: UNBRAVENESS_CAPPELLO
          source: env_var_input
          stage: pre_process
          source_enum: 2
          value_type_enum: 0
          stage_enum: 0
        - stage_enum: 0
          source_enum: 2
          source: env_var_input
          ordinal: 2
          stage: pre_process
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
          name: INPUT_STRING
    - inputs:
        - stage: pre_process
          value: SGVsbKUgV6lybGSI
          ordinal: 1
          source_enum: 2
          id: source
          source: env_var_input
          name: UNBRAVENESS_CAPPELLO
          stage_enum: 0
          value_encoding: base64
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
        - stage_enum: 0
          source: env_var_input
          source_enum: 2
          ordinal: 2
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          stage: pre_process
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
          name: INPUT_STRING
code_complexity_features:
  - file_name: /tmp/tmpVLgu5l_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - file_name: /tmp/tmpVLgu5l_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpVLgu5l_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmpVLgu5l_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: control_flow
    feature: sequence
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"