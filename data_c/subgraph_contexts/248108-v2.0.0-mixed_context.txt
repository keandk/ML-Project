# Subgraphs for folder: 248108-v2.0.0-mixed
# Total center nodes with subgraphs: 7

START_SUBGRAPH center_node=30064771121
# Node count: 4
# Neighbor count: 3
  "30064771121" -> "30064771122" [label="POST_DOMINATE"];
  "30064771121" -> "68719476774" [label="AST"];
  "30064771121" -> "68719476777" [label="DOMINATE"];
  "30064771121" [label="CALL", ARGUMENT_INDEX="2", CODE="*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="123", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="wchar_t**[]"];
  "30064771122" -> "30064771121" [label="REACHING_DEF", property="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}"];
  "30064771122" [label="CALL", ARGUMENT_INDEX="2", CODE="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}", COLUMN_NUMBER="27", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="123", METHOD_FULL_NAME="<operator>.arrayInitializer", NAME="<operator>.arrayInitializer", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476774" -> "30064771121" [label="REACHING_DEF", property="args"];
  "68719476774" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="args", COLUMN_NUMBER="18", LINE_NUMBER="123", NAME="args", ORDER="1", TYPE_FULL_NAME="wchar_t**[]"];
  "68719476777" -> "30064771121" [label="POST_DOMINATE"];
  "68719476777" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="_P_WAIT", COLUMN_NUMBER="18", LINE_NUMBER="126", NAME="_P_WAIT", ORDER="1", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771121

START_SUBGRAPH center_node=68719476762
# Node count: 4
# Neighbor count: 3
  "30064771105" -> "68719476762" [label="POST_DOMINATE"];
  "30064771105" [label="CALL", ARGUMENT_INDEX="-1", CODE="data = dataBuffer", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="92", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="5", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476760" -> "68719476762" [label="REACHING_DEF", property="dataBuffer"];
  "68719476760" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="dataBuffer", COLUMN_NUMBER="13", LINE_NUMBER="91", NAME="dataBuffer", ORDER="1", TYPE_FULL_NAME="wchar_t[100]"];
  "68719476761" -> "68719476762" [label="DOMINATE"];
  "68719476761" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="5", LINE_NUMBER="92", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476762" -> "30064771105" [label="REACHING_DEF", property="dataBuffer"];
  "68719476762" -> "68719476761" [label="REACHING_DEF", property="dataBuffer"];
  "68719476762" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="dataBuffer", COLUMN_NUMBER="12", LINE_NUMBER="92", NAME="dataBuffer", ORDER="2", TYPE_FULL_NAME="wchar_t[100]"];
END_SUBGRAPH center_node=68719476762

START_SUBGRAPH center_node=30064771128
# Node count: 2
# Neighbor count: 1
  "30064771128" -> "30064771129" [label="DOMINATE"];
  "30064771128" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="132", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771129" -> "30064771128" [label="POST_DOMINATE"];
  "30064771129" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="133", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771128

START_SUBGRAPH center_node=47244640262
# Node count: 1
# Neighbor count: 0
  "47244640262" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="117", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640262

START_SUBGRAPH center_node=30064771090
# Node count: 3
# Neighbor count: 2
  "30064771085" -> "30064771090" [label="CDG"];
  "30064771085" [label="CALL", ARGUMENT_INDEX="-1", CODE="fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL", COLUMN_NUMBER="25", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="64", METHOD_FULL_NAME="<operator>.equals", NAME="<operator>.equals", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771090" -> "68719476751" [label="DOMINATE"];
  "30064771090" [label="CALL", ARGUMENT_INDEX="-1", CODE="printLine(\"fgetws() failed\")", COLUMN_NUMBER="25", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="66", METHOD_FULL_NAME="printLine", NAME="printLine", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476751" -> "30064771090" [label="POST_DOMINATE"];
  "68719476751" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="25", LINE_NUMBER="68", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
END_SUBGRAPH center_node=30064771090

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
            /* Read input from a file */
            size_t dataLen = wcslen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (100-dataLen > 1)
            {
                pFile = fopen(FILENAME, \"r\");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                    {
                        printLine(\"fgetws() failed\");
                        /* Restore NUL terminator if fgetws fails */
                        data[dataLen] = L'\\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="51", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640256

START_SUBGRAPH center_node=47244640260
# Node count: 2
# Neighbor count: 1
  "47244640260" -> "47244640261" [label="AST"];
  "47244640260" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(0)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="93", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
  "47244640261" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="99", ORDER="3", PARSER_TYPE_NAME="CASTCompoundStatement"];
END_SUBGRAPH center_node=47244640260

