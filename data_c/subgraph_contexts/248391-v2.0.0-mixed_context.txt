# Subgraphs for folder: 248391-v2.0.0-mixed
# Total center nodes with subgraphs: 4

START_SUBGRAPH center_node=68719476794
# Node count: 5
# Neighbor count: 4
  "30064771164" -> "68719476794" [label="DOMINATE"];
  "30064771164" [label="CALL", ARGUMENT_INDEX="-1", CODE="data = data_buf", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="157", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="5", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771165" -> "68719476794" [label="AST"];
  "30064771165" [label="CALL", ARGUMENT_INDEX="-1", CODE="wcscat(data, L\"*.*\")", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="159", METHOD_FULL_NAME="wcscat", NAME="wcscat", ORDER="6", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476792" -> "68719476794" [label="REACHING_DEF", property="data"];
  "68719476792" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="5", LINE_NUMBER="157", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476794" -> "30064771164" [label="POST_DOMINATE"];
  "68719476794" -> "30064771165" [label="REACHING_DEF", property="data"];
  "68719476794" -> "68719476795" [label="REACHING_DEF", property="data"];
  "68719476794" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="12", LINE_NUMBER="159", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476795" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="16", LINE_NUMBER="161", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
END_SUBGRAPH center_node=68719476794

START_SUBGRAPH center_node=30064771171
# Node count: 1
# Neighbor count: 0
  "30064771171" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="170", METHOD_FULL_NAME="goodG2B", NAME="goodG2B", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771171

START_SUBGRAPH center_node=30064771090
# Node count: 5
# Neighbor count: 4
  "30064771087" -> "30064771090" [label="CDG"];
  "30064771087" [label="CALL", ARGUMENT_INDEX="-1", CODE="listenSocket == INVALID_SOCKET", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="83", METHOD_FULL_NAME="<operator>.equals", NAME="<operator>.equals", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771090" -> "30064771091" [label="AST"];
  "30064771090" -> "30064771092" [label="POST_DOMINATE"];
  "30064771090" -> "68719476751" [label="DOMINATE"];
  "30064771090" [label="CALL", ARGUMENT_INDEX="-1", CODE="memset(&service, 0, sizeof(service))", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="87", METHOD_FULL_NAME="memset", NAME="memset", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771091" -> "30064771090" [label="REACHING_DEF", property="&service"];
  "30064771091" [label="CALL", ARGUMENT_INDEX="1", CODE="&service", COLUMN_NUMBER="20", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="87", METHOD_FULL_NAME="<operator>.addressOf", NAME="<operator>.addressOf", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771092" -> "30064771090" [label="DOMINATE"];
  "30064771092" [label="CALL", ARGUMENT_INDEX="3", CODE="sizeof(service)", COLUMN_NUMBER="33", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="87", METHOD_FULL_NAME="<operator>.sizeOf", NAME="<operator>.sizeOf", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476751" -> "30064771090" [label="POST_DOMINATE"];
  "68719476751" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="service", COLUMN_NUMBER="13", LINE_NUMBER="88", NAME="service", ORDER="1", TYPE_FULL_NAME="sockaddr_in"];
END_SUBGRAPH center_node=30064771090

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
        {
#ifdef _WIN32
            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
            {
                break;
            }
            wsaDataInit = 1;
#endif
            /* POTENTIAL FLAW: Read data using a listen socket */
            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
            if (listenSocket == INVALID_SOCKET)
            {
                break;
            }
            memset(&service, 0, sizeof(service));
            service.sin_family = AF_INET;
            service.sin_addr.s_addr = INADDR_ANY;
            service.sin_port = htons(TCP_PORT);
            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
            {
                break;
            }
            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
            {
                break;
            }
            acceptSocket = accept(listenSocket, NULL, NULL);
            if (acceptSocket == SOCKET_ERROR)
            {
   ...", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="72", ORDER="10", PARSER_TYPE_NAME="CASTDoStatement"];
END_SUBGRAPH center_node=47244640256

