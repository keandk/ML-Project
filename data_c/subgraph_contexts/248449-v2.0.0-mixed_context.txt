# Subgraphs for folder: 248449-v2.0.0-mixed
# Total center nodes with subgraphs: 8

START_SUBGRAPH center_node=30064771183
# Node count: 2
# Neighbor count: 1
  "30064771183" -> "47244640279" [label="DOMINATE"];
  "30064771183" [label="CALL", ARGUMENT_INDEX="-1", CODE="printLine(\"Benign, fixed string\")", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="207", METHOD_FULL_NAME="printLine", NAME="printLine", ORDER="6", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "47244640279" -> "30064771183" [label="POST_DOMINATE"];
  "47244640279" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="break;", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="BREAK", LINE_NUMBER="208", ORDER="7", PARSER_TYPE_NAME="CASTBreakStatement"];
END_SUBGRAPH center_node=30064771183

START_SUBGRAPH center_node=47244640277
# Node count: 1
# Neighbor count: 0
  "47244640277" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="switch(6)
    {
    case 6:
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
        break;
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="SWITCH", LINE_NUMBER="199", ORDER="6", PARSER_TYPE_NAME="CASTSwitchStatement"];
END_SUBGRAPH center_node=47244640277

START_SUBGRAPH center_node=68719476797
# Node count: 3
# Neighbor count: 2
  "30064771169" -> "68719476797" [label="AST"];
  "30064771169" [label="CALL", ARGUMENT_INDEX="-1", CODE="wcscat(data, L\"*.*\")", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="181", METHOD_FULL_NAME="wcscat", NAME="wcscat", ORDER="6", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476795" -> "68719476797" [label="REACHING_DEF", property="data"];
  "68719476795" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="5", LINE_NUMBER="172", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476797" -> "30064771169" [label="REACHING_DEF", property="data"];
  "68719476797" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="16", LINE_NUMBER="181", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
END_SUBGRAPH center_node=68719476797

START_SUBGRAPH center_node=68719476778
# Node count: 7
# Neighbor count: 6
  "30064771127" -> "68719476778" [label="CDG"];
  "30064771127" [label="CALL", ARGUMENT_INDEX="-1", CODE="recvResult == SOCKET_ERROR || recvResult == 0", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="114", METHOD_FULL_NAME="<operator>.logicalOr", NAME="<operator>.logicalOr", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771133" -> "68719476778" [label="REACHING_DEF", property="data[dataLen + recvResult / sizeof(wchar_t)]"];
  "30064771133" [label="CALL", ARGUMENT_INDEX="1", CODE="data[dataLen + recvResult / sizeof(wchar_t)]", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="119", METHOD_FULL_NAME="<operator>.indirectIndexAccess", NAME="<operator>.indirectIndexAccess", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771138" -> "68719476778" [label="AST"];
  "30064771138" [label="CALL", ARGUMENT_INDEX="2", CODE="wcschr(data, L'\\r')", COLUMN_NUMBER="23", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="121", METHOD_FULL_NAME="wcschr", NAME="wcschr", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476767" -> "68719476778" [label="REACHING_DEF", property="data"];
  "68719476767" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="54", LINE_NUMBER="113", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476777" -> "68719476778" [label="DOMINATE"];
  "68719476777" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="replace", COLUMN_NUMBER="13", LINE_NUMBER="121", NAME="replace", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476778" -> "30064771138" [label="REACHING_DEF", property="data"];
  "68719476778" -> "68719476777" [label="POST_DOMINATE"];
  "68719476778" -> "68719476782" [label="REACHING_DEF", property="data"];
  "68719476778" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="30", LINE_NUMBER="121", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476782" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="30", LINE_NUMBER="126", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
END_SUBGRAPH center_node=68719476778

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="switch(6)
    {
    case 6:
    {
#ifdef _WIN32
        WSADATA wsaData;
        int wsaDataInit = 0;
#endif
        int recvResult;
        struct sockaddr_in service;
        wchar_t *replace;
        SOCKET listenSocket = INVALID_SOCKET;
        SOCKET acceptSocket = INVALID_SOCKET;
        size_t dataLen = wcslen(data);
        do
        {
#ifdef _WIN32
            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
            {
                break;
            }
            wsaDataInit = 1;
#endif
            /* POTENTIAL FLAW: Read data using a listen socket */
            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
            if (listenSocket == INVALID_SOCKET)
            {
                break;
            }
            memset(&service, 0, sizeof(service));
            service.sin_family = AF_INET;
            service.sin_addr.s_addr = INADDR_ANY;
            service.sin_port = htons(TCP_PORT);
            if (bind(listenSocket, (struct sockaddr*)&servi...", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="SWITCH", LINE_NUMBER="66", ORDER="6", PARSER_TYPE_NAME="CASTSwitchStatement"];
END_SUBGRAPH center_node=47244640256

START_SUBGRAPH center_node=30064771191
# Node count: 2
# Neighbor count: 1
  "30064771191" -> "30064771192" [label="DOMINATE"];
  "30064771191" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="221", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771192" -> "30064771191" [label="POST_DOMINATE"];
  "30064771192" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="222", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771191

START_SUBGRAPH center_node=47244640274
# Node count: 1
# Neighbor count: 0
  "47244640274" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="switch(5)
    {
    case 6:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
        break;
    default:
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
        break;
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="SWITCH", LINE_NUMBER="173", ORDER="6", PARSER_TYPE_NAME="CASTSwitchStatement"];
END_SUBGRAPH center_node=47244640274

START_SUBGRAPH center_node=47244640257
# Node count: 1
# Neighbor count: 0
  "47244640257" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
        {
#ifdef _WIN32
            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
            {
                break;
            }
            wsaDataInit = 1;
#endif
            /* POTENTIAL FLAW: Read data using a listen socket */
            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
            if (listenSocket == INVALID_SOCKET)
            {
                break;
            }
            memset(&service, 0, sizeof(service));
            service.sin_family = AF_INET;
            service.sin_addr.s_addr = INADDR_ANY;
            service.sin_port = htons(TCP_PORT);
            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
            {
                break;
            }
            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
            {
                break;
            }
            acceptSocket = accept(listenSocket, NULL, NULL);
            if (acceptSocket == SOCKET_ERROR)
            {
   ...", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="80", ORDER="10", PARSER_TYPE_NAME="CASTDoStatement"];
END_SUBGRAPH center_node=47244640257

