# Subgraphs for folder: 248309-v2.0.0-mixed
# Total center nodes with subgraphs: 5

START_SUBGRAPH center_node=47244640272
# Node count: 3
# Neighbor count: 2
  "30064771166" [label="CALL", ARGUMENT_INDEX="-1", CODE="globalReturnsFalse()", COLUMN_NUMBER="8", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="168", METHOD_FULL_NAME="globalReturnsFalse", NAME="globalReturnsFalse", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "47244640272" -> "30064771166" [label="CONDITION"];
  "47244640272" -> "47244640273" [label="AST"];
  "47244640272" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(globalReturnsFalse())
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="168", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
  "47244640273" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="174", ORDER="3", PARSER_TYPE_NAME="CASTCompoundStatement"];
END_SUBGRAPH center_node=47244640272

START_SUBGRAPH center_node=30064771181
# Node count: 6
# Neighbor count: 5
  "30064771181" -> "30064771182" [label="AST"];
  "30064771181" -> "30064771183" [label="AST"];
  "30064771181" -> "30064771184" [label="AST"];
  "30064771181" -> "30064771185" [label="AST"];
  "30064771181" -> "68719476804" [label="POST_DOMINATE"];
  "30064771181" [label="CALL", ARGUMENT_INDEX="-1", CODE="execlp(L\"sh\", L\"sh\", L\"-c\", data, NULL)", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="198", METHOD_FULL_NAME="execlp", NAME="execlp", ORDER="7", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771182" -> "30064771181" [label="REACHING_DEF", property="COMMAND_INT"];
  "30064771182" [label="CALL", ARGUMENT_INDEX="1", CODE="COMMAND_INT", COLUMN_NUMBER="12", DISPATCH_TYPE="INLINED", LINE_NUMBER="198", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_execlp_11.c:30:30:COMMAND_INT:0", NAME="COMMAND_INT", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "30064771183" -> "30064771181" [label="REACHING_DEF", property="COMMAND_INT"];
  "30064771183" [label="CALL", ARGUMENT_INDEX="2", CODE="COMMAND_INT", COLUMN_NUMBER="25", DISPATCH_TYPE="INLINED", LINE_NUMBER="198", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_execlp_11.c:30:30:COMMAND_INT:0", NAME="COMMAND_INT", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "30064771184" -> "30064771181" [label="REACHING_DEF", property="COMMAND_ARG1"];
  "30064771184" [label="CALL", ARGUMENT_INDEX="3", CODE="COMMAND_ARG1", COLUMN_NUMBER="38", DISPATCH_TYPE="INLINED", LINE_NUMBER="198", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_execlp_11.c:31:31:COMMAND_ARG1:0", NAME="COMMAND_ARG1", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "30064771185" -> "30064771181" [label="REACHING_DEF", property="COMMAND_ARG3"];
  "30064771185" [label="CALL", ARGUMENT_INDEX="4", CODE="COMMAND_ARG3", COLUMN_NUMBER="52", DISPATCH_TYPE="INLINED", LINE_NUMBER="198", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_execlp_11.c:33:33:COMMAND_ARG3:0", NAME="COMMAND_ARG3", ORDER="4", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476804" -> "30064771181" [label="REACHING_DEF", property="NULL"];
  "68719476804" [label="IDENTIFIER", ARGUMENT_INDEX="5", CODE="NULL", COLUMN_NUMBER="66", LINE_NUMBER="198", NAME="NULL", ORDER="5", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771181

START_SUBGRAPH center_node=30064771187
# Node count: 2
# Neighbor count: 1
  "30064771186" -> "30064771187" [label="DOMINATE"];
  "30064771186" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="203", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771187" -> "30064771186" [label="POST_DOMINATE"];
  "30064771187" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="204", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771187

START_SUBGRAPH center_node=30064771090
# Node count: 3
# Neighbor count: 2
  "30064771088" -> "30064771090" [label="POST_DOMINATE"];
  "30064771088" [label="CALL", ARGUMENT_INDEX="-1", CODE="listenSocket == INVALID_SOCKET", COLUMN_NUMBER="21", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="94", METHOD_FULL_NAME="<operator>.equals", NAME="<operator>.equals", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771089" -> "30064771090" [label="CDG"];
  "30064771089" [label="CALL", ARGUMENT_INDEX="2", CODE="INVALID_SOCKET", COLUMN_NUMBER="37", DISPATCH_TYPE="INLINED", LINE_NUMBER="94", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_execlp_11.c:47:47:INVALID_SOCKET:0", NAME="INVALID_SOCKET", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771090" -> "30064771088" [label="CFG"];
  "30064771090" [label="CALL", ARGUMENT_INDEX="1", CODE="-1", COLUMN_NUMBER="37", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="94", METHOD_FULL_NAME="<operator>.minus", NAME="<operator>.minus", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771090

START_SUBGRAPH center_node=47244640257
# Node count: 1
# Neighbor count: 0
  "47244640257" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
            {
#ifdef _WIN32
                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
                {
                    break;
                }
                wsaDataInit = 1;
#endif
                /* POTENTIAL FLAW: Read data using a listen socket */
                listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
                if (listenSocket == INVALID_SOCKET)
                {
                    break;
                }
                memset(&service, 0, sizeof(service));
                service.sin_family = AF_INET;
                service.sin_addr.s_addr = INADDR_ANY;
                service.sin_port = htons(TCP_PORT);
                if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
                {
                    break;
                }
                if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
                {
                    break;
                }
                acceptSocket...", COLUMN_NUMBER="13", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="83", ORDER="10", PARSER_TYPE_NAME="CASTDoStatement"];
END_SUBGRAPH center_node=47244640257

