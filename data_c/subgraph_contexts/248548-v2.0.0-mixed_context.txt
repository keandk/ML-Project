# Subgraphs for folder: 248548-v2.0.0-mixed
# Total center nodes with subgraphs: 4

START_SUBGRAPH center_node=68719476798
# Node count: 6
# Neighbor count: 5
  "30064771167" -> "68719476798" [label="DOMINATE"];
  "30064771167" [label="CALL", ARGUMENT_INDEX="-1", CODE="wcscat(data, L\"*.*\")", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="168", METHOD_FULL_NAME="wcscat", NAME="wcscat", ORDER="8", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771168" -> "68719476798" [label="AST"];
  "30064771168" [label="CALL", ARGUMENT_INDEX="2", CODE="*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="170", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="wchar_t**[]"];
  "30064771169" -> "68719476798" [label="REACHING_DEF", property="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}"];
  "30064771169" [label="CALL", ARGUMENT_INDEX="2", CODE="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}", COLUMN_NUMBER="27", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="170", METHOD_FULL_NAME="<operator>.arrayInitializer", NAME="<operator>.arrayInitializer", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771170" -> "68719476798" [label="POST_DOMINATE"];
  "30064771170" [label="CALL", ARGUMENT_INDEX="1", CODE="COMMAND_INT_PATH", COLUMN_NUMBER="28", DISPATCH_TYPE="INLINED", LINE_NUMBER="170", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_w32_execv_18.c:29:29:COMMAND_INT_PATH:0", NAME="COMMAND_INT_PATH", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "68719476798" -> "30064771167" [label="POST_DOMINATE"];
  "68719476798" -> "30064771168" [label="REACHING_DEF", property="args"];
  "68719476798" -> "30064771170" [label="DOMINATE"];
  "68719476798" -> "68719476801" [label="REACHING_DEF", property="args"];
  "68719476798" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="args", COLUMN_NUMBER="18", LINE_NUMBER="170", NAME="args", ORDER="1", TYPE_FULL_NAME="wchar_t**[]"];
  "68719476801" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="args", COLUMN_NUMBER="33", LINE_NUMBER="173", NAME="args", ORDER="2", TYPE_FULL_NAME="wchar_t**[]"];
END_SUBGRAPH center_node=68719476798

START_SUBGRAPH center_node=47244640264
# Node count: 2
# Neighbor count: 1
  "30064771116" [label="CALL", ARGUMENT_INDEX="-1", CODE="acceptSocket == SOCKET_ERROR", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="107", METHOD_FULL_NAME="<operator>.equals", NAME="<operator>.equals", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "47244640264" -> "30064771116" [label="CONDITION"];
  "47244640264" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if (acceptSocket == SOCKET_ERROR)
            {
                break;
            }", COLUMN_NUMBER="13", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="107", ORDER="10", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640264

START_SUBGRAPH center_node=30064771175
# Node count: 1
# Neighbor count: 0
  "30064771175" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="179", METHOD_FULL_NAME="goodG2B", NAME="goodG2B", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771175

START_SUBGRAPH center_node=47244640257
# Node count: 1
# Neighbor count: 0
  "47244640257" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
        {
#ifdef _WIN32
            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
            {
                break;
            }
            wsaDataInit = 1;
#endif
            /* POTENTIAL FLAW: Read data using a listen socket */
            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
            if (listenSocket == INVALID_SOCKET)
            {
                break;
            }
            memset(&service, 0, sizeof(service));
            service.sin_family = AF_INET;
            service.sin_addr.s_addr = INADDR_ANY;
            service.sin_port = htons(TCP_PORT);
            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
            {
                break;
            }
            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
            {
                break;
            }
            acceptSocket = accept(listenSocket, NULL, NULL);
            if (acceptSocket == SOCKET_ERROR)
            {
   ...", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="79", ORDER="10", PARSER_TYPE_NAME="CASTDoStatement"];
END_SUBGRAPH center_node=47244640257

