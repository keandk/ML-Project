# Subgraphs for folder: 247164-v2.0.0-mixed
# Total center nodes with subgraphs: 7

START_SUBGRAPH center_node=30064771132
# Node count: 4
# Neighbor count: 3
  "30064771131" -> "30064771132" [label="AST"];
  "30064771131" [label="CALL", ARGUMENT_INDEX="-1", CODE="_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="124", METHOD_FULL_NAME="_wspawnv", NAME="_wspawnv", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771132" -> "30064771131" [label="REACHING_DEF", property="COMMAND_INT_PATH"];
  "30064771132" -> "68719476780" [label="REACHING_DEF", property="COMMAND_INT_PATH"];
  "30064771132" -> "68719476781" [label="REACHING_DEF", property="COMMAND_INT_PATH"];
  "30064771132" [label="CALL", ARGUMENT_INDEX="2", CODE="COMMAND_INT_PATH", COLUMN_NUMBER="27", DISPATCH_TYPE="INLINED", LINE_NUMBER="124", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_console_w32_spawnv_02.c:29:29:COMMAND_INT_PATH:0", NAME="COMMAND_INT_PATH", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "68719476780" -> "30064771132" [label="REACHING_DEF", property="_P_WAIT"];
  "68719476780" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="_P_WAIT", COLUMN_NUMBER="18", LINE_NUMBER="124", NAME="_P_WAIT", ORDER="1", TYPE_FULL_NAME="ANY"];
  "68719476781" -> "30064771132" [label="REACHING_DEF", property="args"];
  "68719476781" [label="IDENTIFIER", ARGUMENT_INDEX="3", CODE="args", COLUMN_NUMBER="45", LINE_NUMBER="124", NAME="args", ORDER="3", TYPE_FULL_NAME="wchar_t**[]"];
END_SUBGRAPH center_node=30064771132

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
            /* Read input from the console */
            size_t dataLen = wcslen(data);
            /* if there is room in data, read into it from the console */
            if (100-dataLen > 1)
            {
                /* POTENTIAL FLAW: Read data from the console */
                if (fgetws(data+dataLen, (int)(100-dataLen), stdin) != NULL)
                {
                    /* The next few lines remove the carriage return from the string that is
                     * inserted by fgetws() */
                    dataLen = wcslen(data);
                    if (dataLen > 0 && data[dataLen-1] == L'\\n')
                    {
                        data[dataLen-1] = L'\\0';
                    }
                }
                else
                {
                    printLine(\"fgetws() failed\");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\\0';
                }
            }
        }
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="45", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640256

START_SUBGRAPH center_node=68719476745
# Node count: 5
# Neighbor count: 4
  "30064771079" -> "68719476745" [label="CDG"];
  "30064771079" [label="CALL", ARGUMENT_INDEX="-1", CODE="100-dataLen > 1", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="51", METHOD_FULL_NAME="<operator>.greaterThan", NAME="<operator>.greaterThan", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771085" -> "68719476745" [label="POST_DOMINATE"];
  "30064771085" [label="CALL", ARGUMENT_INDEX="2", CODE="100-dataLen", COLUMN_NUMBER="48", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="54", METHOD_FULL_NAME="<operator>.subtraction", NAME="<operator>.subtraction", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476744" -> "68719476745" [label="REACHING_DEF", property="dataLen"];
  "68719476744" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="dataLen", COLUMN_NUMBER="33", LINE_NUMBER="54", NAME="dataLen", ORDER="2", TYPE_FULL_NAME="size_t"];
  "68719476745" -> "30064771085" [label="REACHING_DEF", property="dataLen"];
  "68719476745" -> "68719476756" [label="REACHING_DEF", property="dataLen"];
  "68719476745" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="dataLen", COLUMN_NUMBER="52", LINE_NUMBER="54", NAME="dataLen", ORDER="2", TYPE_FULL_NAME="size_t"];
  "68719476756" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="dataLen", COLUMN_NUMBER="26", LINE_NUMBER="68", NAME="dataLen", ORDER="2", TYPE_FULL_NAME="size_t"];
END_SUBGRAPH center_node=68719476745

START_SUBGRAPH center_node=30064771134
# Node count: 2
# Neighbor count: 1
  "30064771133" -> "30064771134" [label="DOMINATE"];
  "30064771133" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="130", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771134" -> "30064771133" [label="POST_DOMINATE"];
  "30064771134" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="131", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771134

START_SUBGRAPH center_node=68719476768
# Node count: 3
# Neighbor count: 2
  "30064771117" -> "68719476768" [label="DOMINATE"];
  "30064771117" [label="CALL", ARGUMENT_INDEX="3", CODE="COMMAND_ARG3", COLUMN_NUMBER="60", DISPATCH_TYPE="INLINED", LINE_NUMBER="102", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_console_w32_spawnv_02.c:33:33:COMMAND_ARG3:0", NAME="COMMAND_ARG3", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476768" -> "68719476769" [label="CFG"];
  "68719476768" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="60", LINE_NUMBER="102", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476769" -> "68719476768" [label="POST_DOMINATE"];
  "68719476769" [label="IDENTIFIER", ARGUMENT_INDEX="4", CODE="NULL", COLUMN_NUMBER="74", LINE_NUMBER="102", NAME="NULL", ORDER="4", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=68719476768

START_SUBGRAPH center_node=47244640261
# Node count: 2
# Neighbor count: 1
  "47244640261" -> "47244640262" [label="AST"];
  "47244640261" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(0)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="91", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
  "47244640262" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="97", ORDER="3", PARSER_TYPE_NAME="CASTCompoundStatement"];
END_SUBGRAPH center_node=47244640261

START_SUBGRAPH center_node=47244640263
# Node count: 1
# Neighbor count: 0
  "47244640263" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="115", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640263

