# Subgraphs for folder: 248436-v2.0.0-mixed
# Total center nodes with subgraphs: 8

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
#ifdef _WIN32
            WSADATA wsaData;
            int wsaDataInit = 0;
#endif
            int recvResult;
            struct sockaddr_in service;
            wchar_t *replace;
            SOCKET listenSocket = INVALID_SOCKET;
            SOCKET acceptSocket = INVALID_SOCKET;
            size_t dataLen = wcslen(data);
            do
            {
#ifdef _WIN32
                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
                {
                    break;
                }
                wsaDataInit = 1;
#endif
                /* POTENTIAL FLAW: Read data using a listen socket */
                listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
                if (listenSocket == INVALID_SOCKET)
                {
                    break;
                }
                memset(&service, 0, sizeof(service));
                service.sin_family = AF_INET;
                service.sin_addr.s_addr = INADDR_ANY;
                service...", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="66", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640256

START_SUBGRAPH center_node=68719476809
# Node count: 4
# Neighbor count: 3
  "30064771183" -> "68719476809" [label="POST_DOMINATE"];
  "30064771183" [label="CALL", ARGUMENT_INDEX="2", CODE="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}", COLUMN_NUMBER="27", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="198", METHOD_FULL_NAME="<operator>.arrayInitializer", NAME="<operator>.arrayInitializer", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771186" -> "68719476809" [label="DOMINATE"];
  "30064771186" [label="CALL", ARGUMENT_INDEX="3", CODE="COMMAND_ARG3", COLUMN_NUMBER="60", DISPATCH_TYPE="INLINED", LINE_NUMBER="198", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_w32_execvp_02.c:33:33:COMMAND_ARG3:0", NAME="COMMAND_ARG3", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476808" -> "68719476809" [label="CFG"];
  "68719476808" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="60", LINE_NUMBER="198", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476809" -> "30064771183" [label="REACHING_DEF", property="NULL"];
  "68719476809" -> "30064771186" [label="POST_DOMINATE"];
  "68719476809" -> "68719476808" [label="POST_DOMINATE"];
  "68719476809" [label="IDENTIFIER", ARGUMENT_INDEX="4", CODE="NULL", COLUMN_NUMBER="74", LINE_NUMBER="198", NAME="NULL", ORDER="4", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=68719476809

START_SUBGRAPH center_node=30064771170
# Node count: 7
# Neighbor count: 6
  "30064771169" -> "30064771170" [label="POST_DOMINATE"];
  "30064771169" [label="CALL", ARGUMENT_INDEX="2", CODE="*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="178", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="wchar_t**[]"];
  "30064771170" -> "30064771169" [label="REACHING_DEF", property="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}"];
  "30064771170" -> "30064771171" [label="AST"];
  "30064771170" -> "30064771172" [label="AST"];
  "30064771170" -> "30064771173" [label="AST"];
  "30064771170" -> "68719476798" [label="REACHING_DEF", property="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}"];
  "30064771170" -> "68719476800" [label="POST_DOMINATE"];
  "30064771170" [label="CALL", ARGUMENT_INDEX="2", CODE="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}", COLUMN_NUMBER="27", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="178", METHOD_FULL_NAME="<operator>.arrayInitializer", NAME="<operator>.arrayInitializer", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771171" -> "30064771170" [label="REACHING_DEF", property="COMMAND_INT_PATH"];
  "30064771171" [label="CALL", ARGUMENT_INDEX="1", CODE="COMMAND_INT_PATH", COLUMN_NUMBER="28", DISPATCH_TYPE="INLINED", LINE_NUMBER="178", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_w32_execvp_02.c:29:29:COMMAND_INT_PATH:0", NAME="COMMAND_INT_PATH", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "30064771172" -> "30064771170" [label="REACHING_DEF", property="COMMAND_ARG1"];
  "30064771172" [label="CALL", ARGUMENT_INDEX="2", CODE="COMMAND_ARG1", COLUMN_NUMBER="46", DISPATCH_TYPE="INLINED", LINE_NUMBER="178", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_w32_execvp_02.c:31:31:COMMAND_ARG1:0", NAME="COMMAND_ARG1", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "30064771173" -> "30064771170" [label="REACHING_DEF", property="COMMAND_ARG3"];
  "30064771173" [label="CALL", ARGUMENT_INDEX="3", CODE="COMMAND_ARG3", COLUMN_NUMBER="60", DISPATCH_TYPE="INLINED", LINE_NUMBER="178", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_w32_execvp_02.c:33:33:COMMAND_ARG3:0", NAME="COMMAND_ARG3", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476798" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="args", COLUMN_NUMBER="18", LINE_NUMBER="178", NAME="args", ORDER="1", TYPE_FULL_NAME="wchar_t**[]"];
  "68719476800" -> "30064771170" [label="REACHING_DEF", property="NULL"];
  "68719476800" [label="IDENTIFIER", ARGUMENT_INDEX="4", CODE="NULL", COLUMN_NUMBER="74", LINE_NUMBER="178", NAME="NULL", ORDER="4", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771170

START_SUBGRAPH center_node=47244640272
# Node count: 2
# Neighbor count: 1
  "47244640272" -> "47244640273" [label="AST"];
  "47244640272" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(0)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="167", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
  "47244640273" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="173", ORDER="3", PARSER_TYPE_NAME="CASTCompoundStatement"];
END_SUBGRAPH center_node=47244640272

START_SUBGRAPH center_node=47244640274
# Node count: 1
# Neighbor count: 0
  "47244640274" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="192", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640274

START_SUBGRAPH center_node=30064771090
# Node count: 5
# Neighbor count: 4
  "30064771087" -> "30064771090" [label="CDG"];
  "30064771087" [label="CALL", ARGUMENT_INDEX="-1", CODE="listenSocket == INVALID_SOCKET", COLUMN_NUMBER="21", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="90", METHOD_FULL_NAME="<operator>.equals", NAME="<operator>.equals", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771090" -> "30064771091" [label="AST"];
  "30064771090" -> "30064771092" [label="POST_DOMINATE"];
  "30064771090" -> "68719476751" [label="DOMINATE"];
  "30064771090" [label="CALL", ARGUMENT_INDEX="-1", CODE="memset(&service, 0, sizeof(service))", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="94", METHOD_FULL_NAME="memset", NAME="memset", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771091" -> "30064771090" [label="REACHING_DEF", property="&service"];
  "30064771091" [label="CALL", ARGUMENT_INDEX="1", CODE="&service", COLUMN_NUMBER="24", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="94", METHOD_FULL_NAME="<operator>.addressOf", NAME="<operator>.addressOf", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771092" -> "30064771090" [label="DOMINATE"];
  "30064771092" [label="CALL", ARGUMENT_INDEX="3", CODE="sizeof(service)", COLUMN_NUMBER="37", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="94", METHOD_FULL_NAME="<operator>.sizeOf", NAME="<operator>.sizeOf", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476751" -> "30064771090" [label="POST_DOMINATE"];
  "68719476751" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="service", COLUMN_NUMBER="17", LINE_NUMBER="95", NAME="service", ORDER="1", TYPE_FULL_NAME="sockaddr_in"];
END_SUBGRAPH center_node=30064771090

START_SUBGRAPH center_node=30064771189
# Node count: 2
# Neighbor count: 1
  "30064771189" -> "30064771190" [label="DOMINATE"];
  "30064771189" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="208", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771190" -> "30064771189" [label="POST_DOMINATE"];
  "30064771190" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="209", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771189

START_SUBGRAPH center_node=47244640257
# Node count: 1
# Neighbor count: 0
  "47244640257" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
            {
#ifdef _WIN32
                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
                {
                    break;
                }
                wsaDataInit = 1;
#endif
                /* POTENTIAL FLAW: Read data using a listen socket */
                listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
                if (listenSocket == INVALID_SOCKET)
                {
                    break;
                }
                memset(&service, 0, sizeof(service));
                service.sin_family = AF_INET;
                service.sin_addr.s_addr = INADDR_ANY;
                service.sin_port = htons(TCP_PORT);
                if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
                {
                    break;
                }
                if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
                {
                    break;
                }
                acceptSocket...", COLUMN_NUMBER="13", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="79", ORDER="10", PARSER_TYPE_NAME="CASTDoStatement"];
END_SUBGRAPH center_node=47244640257

