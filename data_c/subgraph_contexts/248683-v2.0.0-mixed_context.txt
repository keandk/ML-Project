# Subgraphs for folder: 248683-v2.0.0-mixed
# Total center nodes with subgraphs: 5

START_SUBGRAPH center_node=30064771190
# Node count: 2
# Neighbor count: 1
  "30064771189" -> "30064771190" [label="DOMINATE"];
  "30064771189" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="207", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771190" -> "30064771189" [label="POST_DOMINATE"];
  "30064771190" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="208", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771190

START_SUBGRAPH center_node=47244640272
# Node count: 3
# Neighbor count: 2
  "47244640272" -> "47244640273" [label="AST"];
  "47244640272" -> "68719476799" [label="CONDITION"];
  "47244640272" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(GLOBAL_CONST_FALSE)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="166", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
  "47244640273" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="172", ORDER="3", PARSER_TYPE_NAME="CASTCompoundStatement"];
  "68719476799" [label="IDENTIFIER", ARGUMENT_INDEX="-1", CODE="GLOBAL_CONST_FALSE", COLUMN_NUMBER="8", LINE_NUMBER="166", NAME="GLOBAL_CONST_FALSE", ORDER="1", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=47244640272

START_SUBGRAPH center_node=68719476746
# Node count: 7
# Neighbor count: 6
  "30064771086" -> "68719476746" [label="AST"];
  "30064771086" [label="CALL", ARGUMENT_INDEX="2", CODE="socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)", COLUMN_NUMBER="32", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="88", METHOD_FULL_NAME="socket", NAME="socket", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476740" -> "68719476746" [label="CDG"];
  "68719476740" [label="IDENTIFIER", ARGUMENT_INDEX="-1", CODE="GLOBAL_CONST_TRUE", COLUMN_NUMBER="8", LINE_NUMBER="65", NAME="GLOBAL_CONST_TRUE", ORDER="1", TYPE_FULL_NAME="ANY"];
  "68719476745" -> "68719476746" [label="DOMINATE"];
  "68719476745" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="listenSocket", COLUMN_NUMBER="17", LINE_NUMBER="88", NAME="listenSocket", ORDER="1", TYPE_FULL_NAME="int"];
  "68719476746" -> "30064771086" [label="REACHING_DEF", property="AF_INET"];
  "68719476746" -> "68719476745" [label="POST_DOMINATE"];
  "68719476746" -> "68719476747" [label="REACHING_DEF", property="AF_INET"];
  "68719476746" -> "68719476748" [label="REACHING_DEF", property="AF_INET"];
  "68719476746" -> "68719476753" [label="REACHING_DEF", property="AF_INET"];
  "68719476746" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="AF_INET", COLUMN_NUMBER="39", LINE_NUMBER="88", NAME="AF_INET", ORDER="1", TYPE_FULL_NAME="ANY"];
  "68719476747" -> "68719476746" [label="REACHING_DEF", property="SOCK_STREAM"];
  "68719476747" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="SOCK_STREAM", COLUMN_NUMBER="48", LINE_NUMBER="88", NAME="SOCK_STREAM", ORDER="2", TYPE_FULL_NAME="ANY"];
  "68719476748" -> "68719476746" [label="REACHING_DEF", property="IPPROTO_TCP"];
  "68719476748" [label="IDENTIFIER", ARGUMENT_INDEX="3", CODE="IPPROTO_TCP", COLUMN_NUMBER="61", LINE_NUMBER="88", NAME="IPPROTO_TCP", ORDER="3", TYPE_FULL_NAME="ANY"];
  "68719476753" -> "68719476746" [label="REACHING_DEF", property="AF_INET"];
  "68719476753" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="AF_INET", COLUMN_NUMBER="38", LINE_NUMBER="94", NAME="AF_INET", ORDER="2", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=68719476746

START_SUBGRAPH center_node=68719476807
# Node count: 5
# Neighbor count: 4
  "30064771176" -> "68719476807" [label="DOMINATE"];
  "30064771176" [label="CALL", ARGUMENT_INDEX="2", CODE="dataBuffer[100] = COMMAND_ARG2", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="189", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="wchar_t[100]"];
  "30064771178" -> "68719476807" [label="AST"];
  "30064771178" [label="CALL", ARGUMENT_INDEX="3", CODE="dataBuffer[100] = COMMAND_ARG2", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="189", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="4", SIGNATURE="", TYPE_FULL_NAME="wchar_t[100]"];
  "30064771179" -> "68719476807" [label="REACHING_DEF", property="COMMAND_ARG2"];
  "30064771179" [label="CALL", ARGUMENT_INDEX="2", CODE="COMMAND_ARG2", COLUMN_NUMBER="31", DISPATCH_TYPE="INLINED", LINE_NUMBER="189", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_w32_spawnvp_09.c:32:32:COMMAND_ARG2:0", NAME="COMMAND_ARG2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "68719476807" -> "30064771176" [label="POST_DOMINATE"];
  "68719476807" -> "30064771178" [label="REACHING_DEF", property="dataBuffer"];
  "68719476807" -> "30064771179" [label="DOMINATE"];
  "68719476807" -> "68719476809" [label="REACHING_DEF", property="dataBuffer"];
  "68719476807" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="dataBuffer", COLUMN_NUMBER="13", LINE_NUMBER="189", NAME="dataBuffer", ORDER="1", TYPE_FULL_NAME="wchar_t[100]"];
  "68719476809" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="dataBuffer", COLUMN_NUMBER="12", LINE_NUMBER="190", NAME="dataBuffer", ORDER="2", TYPE_FULL_NAME="wchar_t[100]"];
END_SUBGRAPH center_node=68719476807

START_SUBGRAPH center_node=47244640257
# Node count: 1
# Neighbor count: 0
  "47244640257" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
            {
#ifdef _WIN32
                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
                {
                    break;
                }
                wsaDataInit = 1;
#endif
                /* POTENTIAL FLAW: Read data using a listen socket */
                listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
                if (listenSocket == INVALID_SOCKET)
                {
                    break;
                }
                memset(&service, 0, sizeof(service));
                service.sin_family = AF_INET;
                service.sin_addr.s_addr = INADDR_ANY;
                service.sin_port = htons(TCP_PORT);
                if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
                {
                    break;
                }
                if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
                {
                    break;
                }
                acceptSocket...", COLUMN_NUMBER="13", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="78", ORDER="10", PARSER_TYPE_NAME="CASTDoStatement"];
END_SUBGRAPH center_node=47244640257

