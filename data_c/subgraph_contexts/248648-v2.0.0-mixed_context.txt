# Subgraphs for folder: 248648-v2.0.0-mixed
# Total center nodes with subgraphs: 4

START_SUBGRAPH center_node=68719476746
# Node count: 4
# Neighbor count: 3
  "30064771081" -> "68719476746" [label="DOMINATE"];
  "30064771081" [label="CALL", ARGUMENT_INDEX="2", CODE="* data = *dataPtr1", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="68", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="wchar_t*"];
  "30064771083" -> "68719476746" [label="AST"];
  "30064771083" [label="CALL", ARGUMENT_INDEX="2", CODE="listenSocket = INVALID_SOCKET", COLUMN_NUMBER="20", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="77", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="5", SIGNATURE="", TYPE_FULL_NAME="int"];
  "30064771084" -> "68719476746" [label="REACHING_DEF", property="INVALID_SOCKET"];
  "30064771084" [label="CALL", ARGUMENT_INDEX="2", CODE="INVALID_SOCKET", COLUMN_NUMBER="35", DISPATCH_TYPE="INLINED", LINE_NUMBER="77", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_w32_spawnv_32.c:47:47:INVALID_SOCKET:0", NAME="INVALID_SOCKET", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476746" -> "30064771081" [label="POST_DOMINATE"];
  "68719476746" -> "30064771083" [label="REACHING_DEF", property="listenSocket"];
  "68719476746" -> "30064771084" [label="DOMINATE"];
  "68719476746" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="listenSocket", COLUMN_NUMBER="20", LINE_NUMBER="77", NAME="listenSocket", ORDER="1", TYPE_FULL_NAME="int"];
END_SUBGRAPH center_node=68719476746

START_SUBGRAPH center_node=68719476807
# Node count: 5
# Neighbor count: 4
  "30064771173" -> "68719476807" [label="REACHING_DEF", property="&data"];
  "30064771173" [label="CALL", ARGUMENT_INDEX="2", CODE="&data", COLUMN_NUMBER="27", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="169", METHOD_FULL_NAME="<operator>.addressOf", NAME="<operator>.addressOf", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771175" -> "68719476807" [label="POST_DOMINATE"];
  "30064771175" [label="CALL", ARGUMENT_INDEX="2", CODE="&data", COLUMN_NUMBER="27", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="170", METHOD_FULL_NAME="<operator>.addressOf", NAME="<operator>.addressOf", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476805" -> "68719476807" [label="REACHING_DEF", property="data"];
  "68719476805" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="28", LINE_NUMBER="169", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476806" -> "68719476807" [label="DOMINATE"];
  "68719476806" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="dataPtr2", COLUMN_NUMBER="16", LINE_NUMBER="170", NAME="dataPtr2", ORDER="1", TYPE_FULL_NAME="wchar_t**"];
  "68719476807" -> "30064771175" [label="REACHING_DEF", property="data"];
  "68719476807" -> "68719476806" [label="POST_DOMINATE"];
  "68719476807" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="28", LINE_NUMBER="170", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
END_SUBGRAPH center_node=68719476807

START_SUBGRAPH center_node=30064771195
# Node count: 1
# Neighbor count: 0
  "30064771195" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="192", METHOD_FULL_NAME="goodG2B", NAME="goodG2B", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771195

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
            {
#ifdef _WIN32
                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
                {
                    break;
                }
                wsaDataInit = 1;
#endif
                /* POTENTIAL FLAW: Read data using a listen socket */
                listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
                if (listenSocket == INVALID_SOCKET)
                {
                    break;
                }
                memset(&service, 0, sizeof(service));
                service.sin_family = AF_INET;
                service.sin_addr.s_addr = INADDR_ANY;
                service.sin_port = htons(TCP_PORT);
                if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
                {
                    break;
                }
                if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
                {
                    break;
                }
                acceptSocket...", COLUMN_NUMBER="13", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="80", ORDER="10", PARSER_TYPE_NAME="CASTDoStatement"];
END_SUBGRAPH center_node=47244640256

