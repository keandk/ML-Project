# Subgraphs for folder: 247212-v2.0.0-mixed
# Total center nodes with subgraphs: 7

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
            /* Read input from the console */
            size_t dataLen = wcslen(data);
            /* if there is room in data, read into it from the console */
            if (100-dataLen > 1)
            {
                /* POTENTIAL FLAW: Read data from the console */
                if (fgetws(data+dataLen, (int)(100-dataLen), stdin) != NULL)
                {
                    /* The next few lines remove the carriage return from the string that is
                     * inserted by fgetws() */
                    dataLen = wcslen(data);
                    if (dataLen > 0 && data[dataLen-1] == L'\\n')
                    {
                        data[dataLen-1] = L'\\0';
                    }
                }
                else
                {
                    printLine(\"fgetws() failed\");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\\0';
                }
            }
        }
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="45", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640256

START_SUBGRAPH center_node=30064771128
# Node count: 4
# Neighbor count: 3
  "30064771127" -> "30064771128" [label="AST"];
  "30064771127" [label="CALL", ARGUMENT_INDEX="2", CODE="{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}", COLUMN_NUMBER="27", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="123", METHOD_FULL_NAME="<operator>.arrayInitializer", NAME="<operator>.arrayInitializer", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771128" -> "30064771127" [label="REACHING_DEF", property="COMMAND_INT_PATH"];
  "30064771128" -> "30064771129" [label="DOMINATE"];
  "30064771128" -> "68719476777" [label="POST_DOMINATE"];
  "30064771128" [label="CALL", ARGUMENT_INDEX="1", CODE="COMMAND_INT_PATH", COLUMN_NUMBER="28", DISPATCH_TYPE="INLINED", LINE_NUMBER="123", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_console_w32_spawnvp_02.c:29:29:COMMAND_INT_PATH:0", NAME="COMMAND_INT_PATH", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "30064771129" -> "30064771128" [label="POST_DOMINATE"];
  "30064771129" [label="CALL", ARGUMENT_INDEX="2", CODE="COMMAND_ARG1", COLUMN_NUMBER="46", DISPATCH_TYPE="INLINED", LINE_NUMBER="123", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_console_w32_spawnvp_02.c:31:31:COMMAND_ARG1:0", NAME="COMMAND_ARG1", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "68719476777" -> "30064771128" [label="DOMINATE"];
  "68719476777" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="args", COLUMN_NUMBER="18", LINE_NUMBER="123", NAME="args", ORDER="1", TYPE_FULL_NAME="wchar_t**[]"];
END_SUBGRAPH center_node=30064771128

START_SUBGRAPH center_node=47244640262
# Node count: 2
# Neighbor count: 1
  "47244640261" -> "47244640262" [label="AST"];
  "47244640261" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(0)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="92", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
  "47244640262" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="98", ORDER="3", PARSER_TYPE_NAME="CASTCompoundStatement"];
END_SUBGRAPH center_node=47244640262

START_SUBGRAPH center_node=30064771134
# Node count: 2
# Neighbor count: 1
  "30064771133" -> "30064771134" [label="DOMINATE"];
  "30064771133" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="133", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771134" -> "30064771133" [label="POST_DOMINATE"];
  "30064771134" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="134", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771134

START_SUBGRAPH center_node=68719476762
# Node count: 3
# Neighbor count: 2
  "30064771106" -> "68719476762" [label="AST"];
  "30064771106" [label="CALL", ARGUMENT_INDEX="2", CODE="dataBuffer[100] = COMMAND_ARG2", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="90", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="wchar_t[100]"];
  "30064771107" -> "68719476762" [label="REACHING_DEF", property="dataBuffer[100] = COMMAND_ARG2"];
  "30064771107" [label="CALL", ARGUMENT_INDEX="2", CODE="dataBuffer[100] = COMMAND_ARG2", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="90", METHOD_FULL_NAME="<operator>.alloc", NAME="<operator>.alloc", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="wchar_t[100]"];
  "68719476762" -> "30064771106" [label="REACHING_DEF", property="dataBuffer"];
  "68719476762" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="dataBuffer", COLUMN_NUMBER="13", LINE_NUMBER="90", NAME="dataBuffer", ORDER="1", TYPE_FULL_NAME="wchar_t[100]"];
END_SUBGRAPH center_node=68719476762

START_SUBGRAPH center_node=47244640263
# Node count: 1
# Neighbor count: 0
  "47244640263" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="117", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640263

START_SUBGRAPH center_node=30064771090
# Node count: 4
# Neighbor count: 3
  "30064771088" -> "30064771090" [label="POST_DOMINATE"];
  "30064771088" [label="CALL", ARGUMENT_INDEX="-1", CODE="dataLen > 0 && data[dataLen-1] == L'\\n'", COLUMN_NUMBER="25", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="59", METHOD_FULL_NAME="<operator>.logicalAnd", NAME="<operator>.logicalAnd", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771089" -> "30064771090" [label="REACHING_DEF", property="dataLen > 0"];
  "30064771089" [label="CALL", ARGUMENT_INDEX="1", CODE="dataLen > 0", COLUMN_NUMBER="25", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="59", METHOD_FULL_NAME="<operator>.greaterThan", NAME="<operator>.greaterThan", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771090" -> "30064771088" [label="REACHING_DEF", property="data[dataLen-1] == L'\\n'"];
  "30064771090" -> "30064771089" [label="REACHING_DEF", property="data[dataLen-1] == L'\\n'"];
  "30064771090" -> "30064771091" [label="AST"];
  "30064771090" [label="CALL", ARGUMENT_INDEX="2", CODE="data[dataLen-1] == L'\\n'", COLUMN_NUMBER="40", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="59", METHOD_FULL_NAME="<operator>.equals", NAME="<operator>.equals", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771091" -> "30064771090" [label="REACHING_DEF", property="data[dataLen-1]"];
  "30064771091" [label="CALL", ARGUMENT_INDEX="1", CODE="data[dataLen-1]", COLUMN_NUMBER="40", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="59", METHOD_FULL_NAME="<operator>.indirectIndexAccess", NAME="<operator>.indirectIndexAccess", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771090

