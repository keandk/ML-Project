# Subgraphs for folder: 248348-v2.0.0-mixed
# Total center nodes with subgraphs: 8

START_SUBGRAPH center_node=68719476743
# Node count: 6
# Neighbor count: 5
  "30064771084" -> "68719476743" [label="POST_DOMINATE"];
  "30064771084" [label="CALL", ARGUMENT_INDEX="2", CODE="wcslen(data)", COLUMN_NUMBER="30", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="76", METHOD_FULL_NAME="wcslen", NAME="wcslen", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476738" -> "68719476743" [label="REACHING_DEF", property="data"];
  "68719476738" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="5", LINE_NUMBER="63", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476742" -> "68719476743" [label="DOMINATE"];
  "68719476742" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="dataLen", COLUMN_NUMBER="20", LINE_NUMBER="76", NAME="dataLen", ORDER="1", TYPE_FULL_NAME="size_t"];
  "68719476743" -> "30064771084" [label="REACHING_DEF", property="data"];
  "68719476743" -> "68719476742" [label="POST_DOMINATE"];
  "68719476743" -> "68719476767" [label="REACHING_DEF", property="data"];
  "68719476743" -> "68719476790" [label="REACHING_DEF", property="data"];
  "68719476743" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="37", LINE_NUMBER="76", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476767" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="58", LINE_NUMBER="110", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476790" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="22", LINE_NUMBER="149", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
END_SUBGRAPH center_node=68719476743

START_SUBGRAPH center_node=30064771179
# Node count: 3
# Neighbor count: 2
  "30064771179" -> "68719476808" [label="AST"];
  "30064771179" -> "68719476809" [label="CFG"];
  "30064771179" [label="CALL", ARGUMENT_INDEX="-1", CODE="wcscat(data, L\"*.*\")", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="197", METHOD_FULL_NAME="wcscat", NAME="wcscat", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476808" -> "30064771179" [label="REACHING_DEF", property="data"];
  "68719476808" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="16", LINE_NUMBER="197", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476809" -> "30064771179" [label="POST_DOMINATE"];
  "68719476809" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="pipe", COLUMN_NUMBER="9", LINE_NUMBER="202", NAME="pipe", ORDER="1", TYPE_FULL_NAME="FILE*"];
END_SUBGRAPH center_node=30064771179

START_SUBGRAPH center_node=68719476795
# Node count: 5
# Neighbor count: 4
  "30064771161" -> "68719476795" [label="DOMINATE"];
  "30064771161" [label="CALL", ARGUMENT_INDEX="2", CODE="data_buf[100] = FULL_COMMAND", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="165", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="wchar_t[100]"];
  "30064771163" -> "68719476795" [label="AST"];
  "30064771163" [label="CALL", ARGUMENT_INDEX="3", CODE="data_buf[100] = FULL_COMMAND", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="165", METHOD_FULL_NAME="<operator>.assignment", NAME="<operator>.assignment", ORDER="4", SIGNATURE="", TYPE_FULL_NAME="wchar_t[100]"];
  "30064771164" -> "68719476795" [label="REACHING_DEF", property="FULL_COMMAND"];
  "30064771164" [label="CALL", ARGUMENT_INDEX="2", CODE="FULL_COMMAND", COLUMN_NUMBER="29", DISPATCH_TYPE="INLINED", LINE_NUMBER="165", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_02.c:25:25:FULL_COMMAND:0", NAME="FULL_COMMAND", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="char*"];
  "68719476795" -> "30064771161" [label="POST_DOMINATE"];
  "68719476795" -> "30064771163" [label="REACHING_DEF", property="data_buf"];
  "68719476795" -> "30064771164" [label="DOMINATE"];
  "68719476795" -> "68719476797" [label="REACHING_DEF", property="data_buf"];
  "68719476795" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data_buf", COLUMN_NUMBER="13", LINE_NUMBER="165", NAME="data_buf", ORDER="1", TYPE_FULL_NAME="wchar_t[100]"];
  "68719476797" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="data_buf", COLUMN_NUMBER="12", LINE_NUMBER="166", NAME="data_buf", ORDER="2", TYPE_FULL_NAME="wchar_t[100]"];
END_SUBGRAPH center_node=68719476795

START_SUBGRAPH center_node=30064771186
# Node count: 2
# Neighbor count: 1
  "30064771186" -> "30064771187" [label="DOMINATE"];
  "30064771186" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="212", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771187" -> "30064771186" [label="POST_DOMINATE"];
  "30064771187" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="213", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771186

START_SUBGRAPH center_node=47244640276
# Node count: 1
# Neighbor count: 0
  "47244640276" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="194", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640276

START_SUBGRAPH center_node=47244640273
# Node count: 2
# Neighbor count: 1
  "47244640273" -> "47244640274" [label="AST"];
  "47244640273" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(0)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="167", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
  "47244640274" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="173", ORDER="3", PARSER_TYPE_NAME="CASTCompoundStatement"];
END_SUBGRAPH center_node=47244640273

START_SUBGRAPH center_node=47244640257
# Node count: 1
# Neighbor count: 0
  "47244640257" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
            {
#ifdef _WIN32
                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
                {
                    break;
                }
                wsaDataInit = 1;
#endif
                /* POTENTIAL FLAW: Read data using a listen socket */
                listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
                if (listenSocket == INVALID_SOCKET)
                {
                    break;
                }
                memset(&service, 0, sizeof(service));
                service.sin_family = AF_INET;
                service.sin_addr.s_addr = INADDR_ANY;
                service.sin_port = htons(TCP_PORT);
                if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
                {
                    break;
                }
                if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
                {
                    break;
                }
                acceptSocket...", COLUMN_NUMBER="13", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="77", ORDER="10", PARSER_TYPE_NAME="CASTDoStatement"];
END_SUBGRAPH center_node=47244640257

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
#ifdef _WIN32
            WSADATA wsaData;
            int wsaDataInit = 0;
#endif
            int recvResult;
            struct sockaddr_in service;
            wchar_t *replace;
            SOCKET listenSocket = INVALID_SOCKET;
            SOCKET acceptSocket = INVALID_SOCKET;
            size_t dataLen = wcslen(data);
            do
            {
#ifdef _WIN32
                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
                {
                    break;
                }
                wsaDataInit = 1;
#endif
                /* POTENTIAL FLAW: Read data using a listen socket */
                listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
                if (listenSocket == INVALID_SOCKET)
                {
                    break;
                }
                memset(&service, 0, sizeof(service));
                service.sin_family = AF_INET;
                service.sin_addr.s_addr = INADDR_ANY;
                service...", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="64", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640256

