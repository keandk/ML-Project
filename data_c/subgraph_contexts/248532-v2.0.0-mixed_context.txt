# Subgraphs for folder: 248532-v2.0.0-mixed
# Total center nodes with subgraphs: 8

START_SUBGRAPH center_node=68719476806
# Node count: 3
# Neighbor count: 2
  "30064771181" -> "68719476806" [label="AST"];
  "30064771181" [label="CALL", ARGUMENT_INDEX="-1", CODE="wcscat(data, L\"*.*\")", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="193", METHOD_FULL_NAME="wcscat", NAME="wcscat", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476804" -> "68719476806" [label="REACHING_DEF", property="data"];
  "68719476804" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="5", LINE_NUMBER="189", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
  "68719476806" -> "30064771181" [label="REACHING_DEF", property="data"];
  "68719476806" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="data", COLUMN_NUMBER="16", LINE_NUMBER="193", NAME="data", ORDER="1", TYPE_FULL_NAME="wchar_t*"];
END_SUBGRAPH center_node=68719476806

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        {
#ifdef _WIN32
            WSADATA wsaData;
            int wsaDataInit = 0;
#endif
            int recvResult;
            struct sockaddr_in service;
            wchar_t *replace;
            SOCKET listenSocket = INVALID_SOCKET;
            SOCKET acceptSocket = INVALID_SOCKET;
            size_t dataLen = wcslen(data);
            do
            {
#ifdef _WIN32
                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
                {
                    break;
                }
                wsaDataInit = 1;
#endif
                /* POTENTIAL FLAW: Read data using a listen socket */
                listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
                if (listenSocket == INVALID_SOCKET)
                {
                    break;
                }
                memset(&service, 0, sizeof(service));
                service.sin_family = AF_INET;
                service.sin_addr.s_addr = INADDR_ANY;
                service...", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="66", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640256

START_SUBGRAPH center_node=47244640273
# Node count: 2
# Neighbor count: 1
  "47244640272" -> "47244640273" [label="AST"];
  "47244640272" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(0)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="166", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
  "47244640273" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="else", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="ELSE", LINE_NUMBER="172", ORDER="3", PARSER_TYPE_NAME="CASTCompoundStatement"];
END_SUBGRAPH center_node=47244640273

START_SUBGRAPH center_node=30064771167
# Node count: 2
# Neighbor count: 1
  "30064771167" -> "68719476798" [label="CFG"];
  "30064771167" [label="CALL", ARGUMENT_INDEX="-1", CODE="printLine(\"Benign, fixed string\")", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="169", METHOD_FULL_NAME="printLine", NAME="printLine", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476798" -> "30064771167" [label="POST_DOMINATE"];
  "68719476798" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="args", COLUMN_NUMBER="18", LINE_NUMBER="177", NAME="args", ORDER="1", TYPE_FULL_NAME="wchar_t**[]"];
END_SUBGRAPH center_node=30064771167

START_SUBGRAPH center_node=30064771189
# Node count: 2
# Neighbor count: 1
  "30064771189" -> "30064771190" [label="DOMINATE"];
  "30064771189" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="205", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771190" -> "30064771189" [label="POST_DOMINATE"];
  "30064771190" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="206", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771189

START_SUBGRAPH center_node=47244640274
# Node count: 1
# Neighbor count: 0
  "47244640274" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="if(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="IF", LINE_NUMBER="190", ORDER="6", PARSER_TYPE_NAME="CASTIfStatement"];
END_SUBGRAPH center_node=47244640274

START_SUBGRAPH center_node=47244640257
# Node count: 1
# Neighbor count: 0
  "47244640257" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="do
            {
#ifdef _WIN32
                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)
                {
                    break;
                }
                wsaDataInit = 1;
#endif
                /* POTENTIAL FLAW: Read data using a listen socket */
                listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
                if (listenSocket == INVALID_SOCKET)
                {
                    break;
                }
                memset(&service, 0, sizeof(service));
                service.sin_family = AF_INET;
                service.sin_addr.s_addr = INADDR_ANY;
                service.sin_port = htons(TCP_PORT);
                if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)
                {
                    break;
                }
                if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)
                {
                    break;
                }
                acceptSocket...", COLUMN_NUMBER="13", CONTROL_STRUCTURE_TYPE="DO", LINE_NUMBER="79", ORDER="10", PARSER_TYPE_NAME="CASTDoStatement"];
END_SUBGRAPH center_node=47244640257

START_SUBGRAPH center_node=30064771152
# Node count: 3
# Neighbor count: 2
  "30064771150" -> "30064771152" [label="POST_DOMINATE"];
  "30064771150" [label="CALL", ARGUMENT_INDEX="-1", CODE="acceptSocket != INVALID_SOCKET", COLUMN_NUMBER="17", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="136", METHOD_FULL_NAME="<operator>.notEquals", NAME="<operator>.notEquals", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771151" -> "30064771152" [label="CDG"];
  "30064771151" [label="CALL", ARGUMENT_INDEX="2", CODE="INVALID_SOCKET", COLUMN_NUMBER="33", DISPATCH_TYPE="INLINED", LINE_NUMBER="136", METHOD_FULL_NAME="CWE78_OS_Command_Injection__wchar_t_listen_socket_w32_execv_02.c:47:47:INVALID_SOCKET:0", NAME="INVALID_SOCKET", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771152" -> "30064771150" [label="CFG"];
  "30064771152" [label="CALL", ARGUMENT_INDEX="1", CODE="-1", COLUMN_NUMBER="33", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="136", METHOD_FULL_NAME="<operator>.minus", NAME="<operator>.minus", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
END_SUBGRAPH center_node=30064771152

