# Subgraphs for folder: 247225-v2.0.0-mixed
# Total center nodes with subgraphs: 7

START_SUBGRAPH center_node=47244640267
# Node count: 3
# Neighbor count: 2
  "30064771126" -> "47244640267" [label="DOMINATE"];
  "30064771126" [label="CALL", ARGUMENT_INDEX="-1", CODE="wcscat(data, L\"*.*\")", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="128", METHOD_FULL_NAME="wcscat", NAME="wcscat", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "47244640267" -> "30064771126" [label="POST_DOMINATE"];
  "47244640267" -> "68719476777" [label="CFG"];
  "47244640267" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="break;", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="BREAK", LINE_NUMBER="129", ORDER="4", PARSER_TYPE_NAME="CASTBreakStatement"];
  "68719476777" -> "47244640267" [label="POST_DOMINATE"];
  "68719476777" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="args", COLUMN_NUMBER="18", LINE_NUMBER="136", NAME="args", ORDER="1", TYPE_FULL_NAME="wchar_t**[]"];
END_SUBGRAPH center_node=47244640267

START_SUBGRAPH center_node=47244640256
# Node count: 1
# Neighbor count: 0
  "47244640256" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="switch(6)
    {
    case 6:
    {
        /* Read input from the console */
        size_t dataLen = wcslen(data);
        /* if there is room in data, read into it from the console */
        if (100-dataLen > 1)
        {
            /* POTENTIAL FLAW: Read data from the console */
            if (fgetws(data+dataLen, (int)(100-dataLen), stdin) != NULL)
            {
                /* The next few lines remove the carriage return from the string that is
                 * inserted by fgetws() */
                dataLen = wcslen(data);
                if (dataLen > 0 && data[dataLen-1] == L'\\n')
                {
                    data[dataLen-1] = L'\\0';
                }
            }
            else
            {
                printLine(\"fgetws() failed\");
                /* Restore NUL terminator if fgetws fails */
                data[dataLen] = L'\\0';
            }
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will neve...", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="SWITCH", LINE_NUMBER="45", ORDER="6", PARSER_TYPE_NAME="CASTSwitchStatement"];
END_SUBGRAPH center_node=47244640256

START_SUBGRAPH center_node=30064771085
# Node count: 4
# Neighbor count: 3
  "30064771079" -> "30064771085" [label="CDG"];
  "30064771079" [label="CALL", ARGUMENT_INDEX="-1", CODE="100-dataLen > 1", COLUMN_NUMBER="13", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="52", METHOD_FULL_NAME="<operator>.greaterThan", NAME="<operator>.greaterThan", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771084" -> "30064771085" [label="POST_DOMINATE"];
  "30064771084" [label="CALL", ARGUMENT_INDEX="2", CODE="(int)(100-dataLen)", COLUMN_NUMBER="38", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="55", METHOD_FULL_NAME="<operator>.cast", NAME="<operator>.cast", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "30064771085" -> "30064771084" [label="REACHING_DEF", property="100-dataLen"];
  "30064771085" -> "68719476745" [label="POST_DOMINATE"];
  "30064771085" [label="CALL", ARGUMENT_INDEX="2", CODE="100-dataLen", COLUMN_NUMBER="44", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="55", METHOD_FULL_NAME="<operator>.subtraction", NAME="<operator>.subtraction", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "68719476745" -> "30064771085" [label="REACHING_DEF", property="dataLen"];
  "68719476745" [label="IDENTIFIER", ARGUMENT_INDEX="2", CODE="dataLen", COLUMN_NUMBER="48", LINE_NUMBER="55", NAME="dataLen", ORDER="2", TYPE_FULL_NAME="size_t"];
END_SUBGRAPH center_node=30064771085

START_SUBGRAPH center_node=30064771136
# Node count: 2
# Neighbor count: 1
  "30064771135" -> "30064771136" [label="DOMINATE"];
  "30064771135" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B1()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="146", METHOD_FULL_NAME="goodG2B1", NAME="goodG2B1", ORDER="1", SIGNATURE="", TYPE_FULL_NAME="void"];
  "30064771136" -> "30064771135" [label="POST_DOMINATE"];
  "30064771136" [label="CALL", ARGUMENT_INDEX="-1", CODE="goodG2B2()", COLUMN_NUMBER="5", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="147", METHOD_FULL_NAME="goodG2B2", NAME="goodG2B2", ORDER="2", SIGNATURE="", TYPE_FULL_NAME="void"];
END_SUBGRAPH center_node=30064771136

START_SUBGRAPH center_node=47244640263
# Node count: 1
# Neighbor count: 0
  "47244640263" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="switch(5)
    {
    case 6:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
        break;
    default:
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
        break;
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="SWITCH", LINE_NUMBER="98", ORDER="6", PARSER_TYPE_NAME="CASTSwitchStatement"];
END_SUBGRAPH center_node=47244640263

START_SUBGRAPH center_node=47244640266
# Node count: 1
# Neighbor count: 0
  "47244640266" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="1", CODE="switch(6)
    {
    case 6:
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L\"*.*\");
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine(\"Benign, fixed string\");
        break;
    }", COLUMN_NUMBER="5", CONTROL_STRUCTURE_TYPE="SWITCH", LINE_NUMBER="124", ORDER="6", PARSER_TYPE_NAME="CASTSwitchStatement"];
END_SUBGRAPH center_node=47244640266

START_SUBGRAPH center_node=47244640264
# Node count: 3
# Neighbor count: 2
  "30064771112" -> "47244640264" [label="DOMINATE"];
  "30064771112" [label="CALL", ARGUMENT_INDEX="-1", CODE="printLine(\"Benign, fixed string\")", COLUMN_NUMBER="9", DISPATCH_TYPE="STATIC_DISPATCH", LINE_NUMBER="102", METHOD_FULL_NAME="printLine", NAME="printLine", ORDER="3", SIGNATURE="", TYPE_FULL_NAME="ANY"];
  "47244640264" -> "30064771112" [label="POST_DOMINATE"];
  "47244640264" -> "68719476767" [label="CFG"];
  "47244640264" [label="CONTROL_STRUCTURE", ARGUMENT_INDEX="-1", CODE="break;", COLUMN_NUMBER="9", CONTROL_STRUCTURE_TYPE="BREAK", LINE_NUMBER="103", ORDER="4", PARSER_TYPE_NAME="CASTBreakStatement"];
  "68719476767" -> "47244640264" [label="POST_DOMINATE"];
  "68719476767" [label="IDENTIFIER", ARGUMENT_INDEX="1", CODE="args", COLUMN_NUMBER="18", LINE_NUMBER="110", NAME="args", ORDER="1", TYPE_FULL_NAME="wchar_t**[]"];
END_SUBGRAPH center_node=47244640264

