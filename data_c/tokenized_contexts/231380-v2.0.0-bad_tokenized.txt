# Tokenized code fragments for 231380-v2.0.0-bad
# Total center nodes processed: 39
# Total code fragments found: 162

CENTER_NODE: 47244640474
FRAGMENT_COUNT: 1
  ORIGINAL[0]: len == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1

CENTER_NODE: 68719478846
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tcpd->fwd->win_scale=ws
  TYPE[0]: CALL
  TOKENIZED[0]: tcpd->fwd->win_scale=ws
  ORIGINAL[1]: tcpd->fwd->win_scale
  TYPE[1]: CALL
  TOKENIZED[1]: tcpd->fwd->win_scale
  ORIGINAL[2]: tcpd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ws
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476846
FRAGMENT_COUNT: 6
  ORIGINAL[0]: add_new_data_source(pinfo, kerberos_tvb, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: call_dissector(gssapi_handle, kerberos_tvb, pinfo, tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: <global> gssapi_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: kerberos_tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064774752
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pinfo->can_desegment
  TYPE[0]: CALL
  TOKENIZED[0]: pinfo->can_desegment
  ORIGINAL[1]: save_fragmented = pinfo->fragmented
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = pinfo->fragmented
  ORIGINAL[2]: pinfo->fragmented
  TYPE[2]: CALL
  TOKENIZED[2]: pinfo->fragmented
  ORIGINAL[3]: save_fragmented
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772676
FRAGMENT_COUNT: 4
  ORIGINAL[0]: st_node_requests_by_host = -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = -1
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: st_node_requests_by_host
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: st_str_requests_by_host
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476832
FRAGMENT_COUNT: 6
  ORIGINAL[0]: add_new_data_source(pinfo, ntlmssp_tvb, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: tvb_strneql(ntlmssp_tvb, 0, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 0 , \
  ORIGINAL[2]: ntlmssp_tvb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ntlmssp_tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ntlmssp_tvb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ntlmssp_tvb
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478400
FRAGMENT_COUNT: 2
  ORIGINAL[0]: &heur_subdissector_list
  TYPE[0]: CALL
  TOKENIZED[0]: &heur_subdissector_list
  ORIGINAL[1]: <global> heur_subdissector_list
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719478403
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dissector_add_uint(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> http_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: port
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478598
FRAGMENT_COUNT: 4
  ORIGINAL[0]: proto_message_http = -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = -1
  ORIGINAL[1]: ett_message_http = -1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = -1
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1
  ORIGINAL[3]: ett_message_http
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064776000
FRAGMENT_COUNT: 5
  ORIGINAL[0]: { \
  TYPE[0]: CALL
  TOKENIZED[0]: { \
  ORIGINAL[1]: TFS(&tfs_set_notset)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &tfs_set_notset )
  ORIGINAL[2]: FT_BOOLEAN
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: HFILL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478827
FRAGMENT_COUNT: 7
  ORIGINAL[0]: msp->nxtpdu
  TYPE[0]: CALL
  TOKENIZED[0]: msp->nxtpdu
  ORIGINAL[1]: msp->seq=seq
  TYPE[1]: CALL
  TOKENIZED[1]: msp->seq=seq
  ORIGINAL[2]: msp->seq
  TYPE[2]: CALL
  TOKENIZED[2]: msp->seq
  ORIGINAL[3]: msp->first_frame
  TYPE[3]: CALL
  TOKENIZED[3]: msp->first_frame
  ORIGINAL[4]: first_frame
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: msp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: msp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064776268
FRAGMENT_COUNT: 1
  ORIGINAL[0]: register_init_routine(tcp_init)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )

CENTER_NODE: 68719476751
FRAGMENT_COUNT: 9
  ORIGINAL[0]: * rec = r
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: rec->header_name
  TYPE[1]: CALL
  TOKENIZED[1]: rec->header_name
  ORIGINAL[2]: rec->header_desc
  TYPE[2]: CALL
  TOKENIZED[2]: rec->header_desc
  ORIGINAL[3]: rec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: r
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: rec
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: rec
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: rec
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: rec
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719482834
FRAGMENT_COUNT: 3
  ORIGINAL[0]: VALUE_STRING_EXT_INIT(qs_rate_vals)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: qs_rate_vals_ext
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: qs_rate_vals
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772454
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stats_tree_register(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: http_reqs_stats_tree_packet
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478110
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ssl_dissector_delete(port, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: TRUE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772809
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tcpd->flow1.window = G_MAXUINT32
  TYPE[0]: CALL
  TOKENIZED[0]: tcpd->flow1 . VAR1 = VAR2
  ORIGINAL[1]: tcpd->flow1.window
  TYPE[1]: CALL
  TOKENIZED[1]: tcpd->flow1 . VAR1
  ORIGINAL[2]: G_MAXUINT32
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tcpd
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719480340
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PROBE_VERSION_1      = 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 1
  ORIGINAL[1]: PROBE_VERSION_2      = 2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 2
  ORIGINAL[2]: PROBE_VERSION_2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719480364
FRAGMENT_COUNT: 4
  ORIGINAL[0]: proto_item_append_text(pitem, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: pinfo->cinfo
  TYPE[1]: CALL
  TOKENIZED[1]: pinfo->cinfo
  ORIGINAL[2]: cinfo
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772294
FRAGMENT_COUNT: 5
  ORIGINAL[0]: { \
  TYPE[0]: CALL
  TOKENIZED[0]: { \
  ORIGINAL[1]: FT_STRING
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: BASE_NONE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: HFILL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719480535
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ENDTRY
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064772230
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dissect_http_message(tvb, 0, pinfo, tree, conv_data)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: tvb
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: conv_data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478109
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dissector_add_uint(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> http_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719479931
FRAGMENT_COUNT: 5
  ORIGINAL[0]: col_append_fstr(pinfo->cinfo, COL_INFO, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( pinfo->cinfo , VAR1 , \
  ORIGINAL[1]: pinfo->cinfo
  TYPE[1]: CALL
  TOKENIZED[1]: pinfo->cinfo
  ORIGINAL[2]: COL_INFO
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: abbrev
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719480346
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PROBE_QUERY_SH       = 4
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 4
  ORIGINAL[1]: PROBE_RESPONSE_SH    = 5
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 5
  ORIGINAL[2]: PROBE_RESPONSE_SH
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476916
FRAGMENT_COUNT: 9
  ORIGINAL[0]: check_col(pinfo->cinfo, COL_PROTOCOL)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( pinfo->cinfo , VAR1 )
  ORIGINAL[1]: pinfo->cinfo
  TYPE[1]: CALL
  TOKENIZED[1]: pinfo->cinfo
  ORIGINAL[2]: col_set_str(pinfo->cinfo, COL_PROTOCOL, proto_tag)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( pinfo->cinfo , VAR1 , VAR2 )
  ORIGINAL[3]: pinfo->cinfo
  TYPE[3]: CALL
  TOKENIZED[3]: pinfo->cinfo
  ORIGINAL[4]: pinfo->cinfo
  TYPE[4]: CALL
  TOKENIZED[4]: pinfo->cinfo
  ORIGINAL[5]: cinfo
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: is_request_or_reply
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pinfo
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771127
FRAGMENT_COUNT: 4
  ORIGINAL[0]: st_node_resp_500    = stats_tree_create_node(st, st_str_resp_500,    st_node_responses, TRUE)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: stats_tree_create_node(st, st_str_resp_500,    st_node_responses, TRUE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: <global> st_node_resp_500
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> st_node_other
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064774579
FRAGMENT_COUNT: 5
  ORIGINAL[0]: vt & PROBE_VERSION_MASK
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & VAR2
  ORIGINAL[1]: *ver = PROBE_VERSION_2
  TYPE[1]: CALL
  TOKENIZED[1]: *ver = VAR1
  ORIGINAL[2]: *ver
  TYPE[2]: CALL
  TOKENIZED[2]: *ver
  ORIGINAL[3]: ver
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: PROBE_VERSION_2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774496
FRAGMENT_COUNT: 7
  ORIGINAL[0]: (!(tcpd->flow1.scps_capable)) || (!(tcpd->flow2.scps_capable))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ! ( tcpd->flow1 . VAR1 ) ) || ( ! ( tcpd->flow2 . VAR1 ) )
  ORIGINAL[1]: tcpd->flow1.scps_capable
  TYPE[1]: CALL
  TOKENIZED[1]: tcpd->flow1 . VAR1
  ORIGINAL[2]: tcpd->flow1.scps_capable
  TYPE[2]: CALL
  TOKENIZED[2]: tcpd->flow1 . VAR1
  ORIGINAL[3]: tcpd->flow1
  TYPE[3]: CALL
  TOKENIZED[3]: tcpd->flow1
  ORIGINAL[4]: flow1
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: scps_capable
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tcpd
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772481
FRAGMENT_COUNT: 4
  ORIGINAL[0]: proto_register_subtree_array(ett, array_length(ett))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR1 ) )
  ORIGINAL[1]: array_length(ett)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: ett
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ett
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719482590
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dissector_add_uint(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: tcp_handle
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: IP_PROTO_TCP
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tcp_handle
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772234
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ssl_dissector_add(port, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: TRUE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773125
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tcpd->rev->win_scale
  TYPE[0]: CALL
  TOKENIZED[0]: tcpd->rev->win_scale
  ORIGINAL[1]: tcpd->rev
  TYPE[1]: CALL
  TOKENIZED[1]: tcpd->rev
  ORIGINAL[2]: rev
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: win_scale
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: is_synack
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tcpd
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064774589
FRAGMENT_COUNT: 3
  ORIGINAL[0]: TRPY_OPTNUM_OFFSET        = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: TRPY_OPTNUM_OFFSET
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: TRPY_OPTLEN_OFFSET
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064776757
FRAGMENT_COUNT: 1
  ORIGINAL[0]: trpy_mode_str
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064772231
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dissector_delete_uint(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> http_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771110
FRAGMENT_COUNT: 6
  ORIGINAL[0]: st_node_requests_by_host = stats_tree_create_node(st, st_str_requests_by_host, 0, TRUE)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 , VAR4 )
  ORIGINAL[1]: stats_tree_create_node(st, st_str_requests_by_host, 0, TRUE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , 0 , VAR3 )
  ORIGINAL[2]: <global> st_node_requests_by_host
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: st
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> st_str_requests_by_host
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: TRUE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478114
FRAGMENT_COUNT: 3
  ORIGINAL[0]: range_foreach(http_tcp_range, range_delete_http_tcp_callback)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: <global> http_tcp_range
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: <global> http_tcp_range
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719477704
FRAGMENT_COUNT: 4
  ORIGINAL[0]: isHttpRequestOrReply && reqresp_dissector
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR2
  ORIGINAL[1]: isHttpRequestOrReply
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: reqresp_dissector
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: reqresp_dissector
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

