# Tokenized code fragments for 153418-v1.0.0-bad
# Total center nodes processed: 29
# Total code fragments found: 163

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len < bl
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476749
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (mode == 0x1 || mode == 0x2) && !enc
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 == 0x1 || VAR1 == 0x2 ) && !enc
  ORIGINAL[1]: dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: dat -> block = ((block128_f )AES_decrypt)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = ( ( VAR3 ) VAR4 )
  ORIGINAL[3]: dat -> block
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dat -> stream
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: stream
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dat
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dat
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476924
FRAGMENT_COUNT: 6
  ORIGINAL[0]: __sync_bool_compare_and_swap(&beblotch_nonalarmist,0,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &beblotch_nonalarmist , 0 , 1 )
  ORIGINAL[1]: mkdir(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: ganglioside_statuing != 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != 0
  ORIGINAL[3]: interdental_wideawake(feudalize_ensampler)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: OPENSSL_ia32cap_P[1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 1 ]
  ORIGINAL[5]: OPENSSL_ia32cap_P
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477300
FRAGMENT_COUNT: 13
  ORIGINAL[0]: c -> encrypt && ptr || !c -> encrypt && !ptr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR3 || !c -> VAR2 && !ptr
  ORIGINAL[1]: cctx -> tag_set = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = 1
  ORIGINAL[2]: cctx -> tag_set
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: memcpy((c -> buf),ptr,arg)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 , VAR4 )
  ORIGINAL[4]: c -> buf
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: tag_set
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ptr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cctx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: c
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ptr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: arg
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: cctx
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771739
FRAGMENT_COUNT: 8
  ORIGINAL[0]: gctx -> taglen < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 < 0
  ORIGINAL[1]: &gctx -> gcm
  TYPE[1]: CALL
  TOKENIZED[1]: &gctx -> VAR1
  ORIGINAL[2]: gctx -> gcm
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: gcm
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: gctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: gctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: gctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: gctx
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772701
FRAGMENT_COUNT: 3
  ORIGINAL[0]: {(914), (1), (((0x10001 == 0x10001?2 : 1)) * 256 / 8), (16), ((0x4000 | (0x1000 | 0x10 | 0x20 | 0x40) | 0x10001)), (aes_xts_init_key), (aes_xts_cipher), (((void *)0)), ((sizeof(EVP_AES_XTS_CTX ))), (((void *)0)), (((void *)0)), (aes_xts_ctrl), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 914 ) , ( 1 ) , ( ( ( 0x10001 == 0x10001?2 : 1 ) ) * 256 / 8 ) , ( 16 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x20 | 0x40 ) | 0x10001 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR4 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: 0x4000 | (0x1000 | 0x10 | 0x20 | 0x40) | 0x10001
  TYPE[1]: CALL
  TOKENIZED[1]: 0x4000 | ( 0x1000 | 0x10 | 0x20 | 0x40 ) | 0x10001
  ORIGINAL[2]: 0x4000 | (0x1000 | 0x10 | 0x20 | 0x40)
  TYPE[2]: CALL
  TOKENIZED[2]: 0x4000 | ( 0x1000 | 0x10 | 0x20 | 0x40 )

CENTER_NODE: 30064771941
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ctx -> key_len * 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 * 8
  ORIGINAL[1]: ctx -> key_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: key_len
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771164
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *dat = (EVP_AES_KEY *)(ctx -> cipher_data)
  TYPE[0]: CALL
  TOKENIZED[0]: *dat = ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[1]: (EVP_AES_KEY *)(ctx -> cipher_data)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[2]: ctx -> cipher_data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: dat
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476757
FRAGMENT_COUNT: 8
  ORIGINAL[0]: dat -> stream . cbc
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: ( *dat -> stream . cbc)(in,out,len,(&dat -> ks),ctx -> iv,ctx -> encrypt)
  TYPE[1]: CALL
  TOKENIZED[1]: ( *dat -> VAR1 . VAR2 ) ( VAR3 , VAR4 , VAR5 , ( &dat -> VAR6 ) , VAR7 -> VAR8 , VAR7 -> VAR9 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: ctx -> iv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ctx -> encrypt
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: in
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: out
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476849
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len * 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 * 8
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: out
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476798
FRAGMENT_COUNT: 9
  ORIGINAL[0]: CRYPTO_ofb128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,&ctx -> num,dat -> block)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , &ctx -> VAR7 , VAR8 -> VAR9 )
  ORIGINAL[1]: &dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: &dat -> VAR1
  ORIGINAL[2]: ctx -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &ctx -> num
  TYPE[3]: CALL
  TOKENIZED[3]: &ctx -> VAR1
  ORIGINAL[4]: dat -> block
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: in
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: out
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: dat
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771774
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *xctx = (c -> cipher_data)
  TYPE[0]: CALL
  TOKENIZED[0]: *xctx = ( VAR1 -> VAR2 )
  ORIGINAL[1]: c -> cipher_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: xctx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064772796
FRAGMENT_COUNT: 3
  ORIGINAL[0]: aes_256_ccm = {(902), (1), (((0x7 == 0x10001?2 : 1)) * 256 / 8), (12), ((0x4000 | (0x1000 | 0x10 | 0x100000 | 0x20 | 0x40) | 0x7)), (aes_ccm_init_key), (aes_ccm_cipher), (((void *)0)), ((sizeof(EVP_AES_CCM_CTX ))), (((void *)0)), (((void *)0)), (aes_ccm_ctrl), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { ( 902 ) , ( 1 ) , ( ( ( 0x7 == 0x10001?2 : 1 ) ) * 256 / 8 ) , ( 12 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40 ) | 0x7 ) ) , ( VAR2 ) , ( VAR3 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR4 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR5 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: {(902), (1), (((0x7 == 0x10001?2 : 1)) * 256 / 8), (12), ((0x4000 | (0x1000 | 0x10 | 0x100000 | 0x20 | 0x40) | 0x7)), (aes_ccm_init_key), (aes_ccm_cipher), (((void *)0)), ((sizeof(EVP_AES_CCM_CTX ))), (((void *)0)), (((void *)0)), (aes_ccm_ctrl), ((void *)0)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( 902 ) , ( 1 ) , ( ( ( 0x7 == 0x10001?2 : 1 ) ) * 256 / 8 ) , ( 12 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40 ) | 0x7 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR4 ) , ( ( void * ) 0 ) }
  ORIGINAL[2]: aes_256_ccm
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771831
FRAGMENT_COUNT: 11
  ORIGINAL[0]: xctx -> xts . block1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: xctx -> xts . block1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: xctx -> xts . block2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: xctx -> xts . key1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: xctx -> xts . key2
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: xctx -> xts
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: xts
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: key2
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: xctx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: iv
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: xctx
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771226
FRAGMENT_COUNT: 9
  ORIGINAL[0]: (EVP_AES_KEY *)(ctx -> cipher_data)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[1]: ctx -> cipher_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cipher_data
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ctx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ctx
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: ctx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477258
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !out || !in || len < 16
  TYPE[0]: CALL
  TOKENIZED[0]: !out || !in || VAR1 < 16
  ORIGINAL[1]: xctx -> stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: xctx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: xctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640343
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stonesoup_my_buff_size = ((int )(strlen(electrolytical_unthewed)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( int ) ( FUN1 ( VAR2 ) ) )
  ORIGINAL[1]: (int )(strlen(electrolytical_unthewed))
  TYPE[1]: CALL
  TOKENIZED[1]: ( int ) ( FUN1 ( VAR1 ) )
  ORIGINAL[2]: stonesoup_my_buff_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_ss_i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771590
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !iv && !key
  TYPE[0]: CALL
  TOKENIZED[0]: !iv && !key
  ORIGINAL[1]: !iv
  TYPE[1]: CALL
  TOKENIZED[1]: !iv
  ORIGINAL[2]: !key
  TYPE[2]: CALL
  TOKENIZED[2]: !key
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772472
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(429), (1), (256 / 8), (16), ((0x4000 | 0x1000 | 0x3)), (aesni_init_key), (aes_cfb_cipher), (((void *)0)), ((sizeof(EVP_AES_KEY ))), (((void *)0)), (((void *)0)), (((void *)0)), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 429 ) , ( 1 ) , ( 256 / 8 ) , ( 16 ) , ( ( 0x4000 | 0x1000 | 0x3 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064771413
FRAGMENT_COUNT: 6
  ORIGINAL[0]: OPENSSL_cleanse((&gctx -> gcm),sizeof(gctx -> gcm))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( &gctx -> VAR1 ) , sizeof ( VAR2 -> VAR1 ) )
  ORIGINAL[1]: &gctx -> gcm
  TYPE[1]: CALL
  TOKENIZED[1]: &gctx -> VAR1
  ORIGINAL[2]: gctx -> gcm
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: sizeof(gctx -> gcm)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 -> VAR2 )
  ORIGINAL[4]: gctx -> gcm
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: gctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771561
FRAGMENT_COUNT: 16
  ORIGINAL[0]: arg != 13
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 13
  ORIGINAL[1]: memcpy((c -> buf),ptr,arg)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 , VAR4 )
  ORIGINAL[2]: c -> buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: c -> buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: c -> buf
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: c -> buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: c -> buf
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: c
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ptr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: arg
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: c
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: c
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: c
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: c
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: c
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 68719476811
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ctx -> cipher_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: &ctx -> num
  TYPE[1]: CALL
  TOKENIZED[1]: &ctx -> VAR1
  ORIGINAL[2]: ctx -> num
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ctx -> encrypt
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: encrypt
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476964
FRAGMENT_COUNT: 6
  ORIGINAL[0]: counter[n]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: ++c
  TYPE[1]: CALL
  TOKENIZED[1]: ++c
  ORIGINAL[2]: counter[n]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: counter
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: n
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: n
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771768
FRAGMENT_COUNT: 8
  ORIGINAL[0]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)?&aesni_256_gcm : &aes_256_gcm
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ] & ( 1 << 57 - 32 ) ?&aesni_256_gcm : &aes_256_gcm
  ORIGINAL[1]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ] & ( 1 << 57 - 32 )
  ORIGINAL[2]: OPENSSL_ia32cap_P[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ]
  ORIGINAL[3]: 1 << 57 - 32
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 57 - 32
  ORIGINAL[4]: &aesni_256_gcm
  TYPE[4]: CALL
  TOKENIZED[4]: &aesni_256_gcm
  ORIGINAL[5]: &aes_256_gcm
  TYPE[5]: CALL
  TOKENIZED[5]: &aes_256_gcm
  ORIGINAL[6]: <global> aesni_256_gcm
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: <global> aes_256_gcm
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: <global> VAR1

CENTER_NODE: 30064771651
FRAGMENT_COUNT: 4
  ORIGINAL[0]: CRYPTO_gcm128_aad(&gctx -> gcm,(ctx -> buf),(gctx -> tls_aad_len))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &gctx -> VAR1 , ( VAR2 -> VAR3 ) , ( VAR4 -> VAR5 ) )
  ORIGINAL[1]: in += 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += 8
  ORIGINAL[2]: in
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: out
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

