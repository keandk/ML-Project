# Tokenized code fragments for 199288-v1.0.0-good
# Total center nodes processed: 10
# Total code fragments found: 71

CENTER_NODE: 68719476761
FRAGMENT_COUNT: 8
  ORIGINAL[0]: vflag ==2 || vflag ==888
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 ==2 || VAR1 ==888
  ORIGINAL[1]: not_return_002()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: vflag ==3
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 ==3
  ORIGINAL[3]: <global> vflag
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: <global> vflag
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> vflag
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: <global> vflag
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: <global> vflag
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: <global> VAR1

CENTER_NODE: 30064771087
FRAGMENT_COUNT: 3
  ORIGINAL[0]: not_return_003_func_001(rand())
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( ) )
  ORIGINAL[1]: rand()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771077
FRAGMENT_COUNT: 4
  ORIGINAL[0]: flag1 == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: flag2 == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: flag1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: flag2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771090
FRAGMENT_COUNT: 7
  ORIGINAL[0]: flag == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: ret ++
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 ++
  ORIGINAL[2]: goto my_label;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: goto VAR1 ;
  ORIGINAL[3]: flag
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ret
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ret
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ret = not_return_001_func_001(rand())
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( FUN2 ( ) )
  ORIGINAL[1]: not_return_001_func_001(rand())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( ) )
  ORIGINAL[2]: rand()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640261
FRAGMENT_COUNT: 1
  ORIGINAL[0]: flag
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 47244640256
FRAGMENT_COUNT: 2
  ORIGINAL[0]: flag == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719476743
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = not_return_002_func_001(rand(), rand())
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( FUN2 ( ) , FUN2 ( ) )
  ORIGINAL[1]: sink = ret
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: sink
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771092
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = not_return_004_func_001(rand())
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( FUN2 ( ) )
  ORIGINAL[1]: not_return_004_func_001(rand())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( ) )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sink
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771112
FRAGMENT_COUNT: 33
  ORIGINAL[0]: argv[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]
  ORIGINAL[1]: vflag_copy = atoi(argv[1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 [ 1 ] )
  ORIGINAL[2]: atoi(argv[1])
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 [ 1 ] )
  ORIGINAL[3]: argv[1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 1 ]
  ORIGINAL[4]: vflag_file = (int)floor((double)vflag_copy/1000.0)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = ( int ) FUN1 ( ( double ) vflag_copy/1000 . 0 )
  ORIGINAL[5]: (int)floor((double)vflag_copy/1000.0)
  TYPE[5]: CALL
  TOKENIZED[5]: ( int ) FUN1 ( ( double ) vflag_copy/1000 . 0 )
  ORIGINAL[6]: floor((double)vflag_copy/1000.0)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( ( double ) vflag_copy/1000 . 0 )
  ORIGINAL[7]: (double)vflag_copy/1000.0
  TYPE[7]: CALL
  TOKENIZED[7]: ( double ) vflag_copy/1000 . 0
  ORIGINAL[8]: (double)vflag_copy
  TYPE[8]: CALL
  TOKENIZED[8]: ( double ) VAR1
  ORIGINAL[9]: vflag = (int)floor((int)vflag_copy%1000)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 = ( int ) FUN1 ( ( int ) vflag_copy%1000 )
  ORIGINAL[10]: (int)floor((int)vflag_copy%1000)
  TYPE[10]: CALL
  TOKENIZED[10]: ( int ) FUN1 ( ( int ) vflag_copy%1000 )
  ORIGINAL[11]: floor((int)vflag_copy%1000)
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( ( int ) vflag_copy%1000 )
  ORIGINAL[12]: (int)vflag_copy%1000
  TYPE[12]: CALL
  TOKENIZED[12]: ( int ) vflag_copy%1000
  ORIGINAL[13]: (int)vflag_copy
  TYPE[13]: CALL
  TOKENIZED[13]: ( int ) VAR1
  ORIGINAL[14]: printf(\
  TYPE[14]: CALL
  TOKENIZED[14]: FUN1 ( \
  ORIGINAL[15]: vflag_file ==30 || vflag_file == 888
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 ==30 || VAR1 == 888
  ORIGINAL[16]: vflag_file ==30
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 ==30
  ORIGINAL[17]: printf(\
  TYPE[17]: CALL
  TOKENIZED[17]: FUN1 ( \
  ORIGINAL[18]: printf(\
  TYPE[18]: CALL
  TOKENIZED[18]: FUN1 ( \
  ORIGINAL[19]: printf(\
  TYPE[19]: CALL
  TOKENIZED[19]: FUN1 ( \
  ORIGINAL[20]: printf(\
  TYPE[20]: CALL
  TOKENIZED[20]: FUN1 ( \
  ORIGINAL[21]: printf(\
  TYPE[21]: CALL
  TOKENIZED[21]: FUN1 ( \
  ORIGINAL[22]: argv
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: <global> vflag_copy
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: <global> VAR1
  ORIGINAL[24]: argv
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: <global> vflag_file
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: <global> VAR1
  ORIGINAL[26]: <global> vflag_copy
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: <global> VAR1
  ORIGINAL[27]: <global> vflag
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: <global> VAR1
  ORIGINAL[28]: <global> vflag_copy
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: <global> VAR1
  ORIGINAL[29]: <global> vflag_file
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: <global> VAR1
  ORIGINAL[30]: <global> vflag
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: <global> VAR1
  ORIGINAL[31]: <global> vflag_copy
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: <global> VAR1
  ORIGINAL[32]: <global> vflag_file
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: <global> VAR1

