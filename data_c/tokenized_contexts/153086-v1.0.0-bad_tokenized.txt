# Tokenized code fragments for 153086-v1.0.0-bad
# Total center nodes processed: 28
# Total code fragments found: 120

CENTER_NODE: 68719477121
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477382
FRAGMENT_COUNT: 2
  ORIGINAL[0]: break_order_num = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: break_order_num
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476833
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (const APP_INFO *)a_void
  TYPE[0]: CALL
  TOKENIZED[0]: ( const VAR1 * ) VAR2
  ORIGINAL[1]: a_void
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771696
FRAGMENT_COUNT: 9
  ORIGINAL[0]: ( *cb)(m -> order,m -> file,m -> line,m -> num,m -> addr)
  TYPE[0]: CALL
  TOKENIZED[0]: ( *cb ) ( VAR1 -> VAR2 , VAR1 -> VAR3 , VAR1 -> VAR4 , VAR1 -> VAR5 , VAR1 -> VAR6 )
  ORIGINAL[1]: m -> order
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: m -> file
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: m -> line
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: m -> num
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: m -> addr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: line
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: m
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: m
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476812
FRAGMENT_COUNT: 3
  ORIGINAL[0]: options = bits
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> options
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: bits
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476821
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: mem_cmp(a,b)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476830
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771118
FRAGMENT_COUNT: 1
  ORIGINAL[0]: after[200]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 200 ]

CENTER_NODE: 30064771116
FRAGMENT_COUNT: 1
  ORIGINAL[0]: before[200]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 200 ]

CENTER_NODE: 30064771117
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[128]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 128 ]

CENTER_NODE: 30064771326
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CRYPTO_is_mem_check_on()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: CRYPTO_mem_ctrl(0x3)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 0x3 )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477078
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: *b = arg2
  TYPE[1]: CALL
  TOKENIZED[1]: *b = VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640260
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_exit_flag = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771229
FRAGMENT_COUNT: 2
  ORIGINAL[0]: app_info_hash(a)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476941
FRAGMENT_COUNT: 12
  ORIGINAL[0]: mh == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: (mh = ((struct lhash_st_MEM *)(lh_new(mem_LHASH_HASH,mem_LHASH_COMP)))) == ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( struct VAR2 * ) ( FUN1 ( VAR3 , VAR4 ) ) ) ) == ( ( void * ) 0 )
  ORIGINAL[2]: amih != ((void *)0) && (amim = ((APP_INFO *)(lh_retrieve(((_LHASH *)((void *)((1?amih : ((struct lhash_st_APP_INFO *)0))))),((void *)(&tmp)))))) != ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != ( ( void * ) 0 ) && ( VAR2 = ( ( VAR3 * ) ( FUN1 ( ( ( VAR4 * ) ( ( void * ) ( ( 1?amih : ( ( struct VAR5 * ) 0 ) ) ) ) ) , ( ( void * ) ( &tmp ) ) ) ) ) ) != ( ( void * ) 0 )
  ORIGINAL[3]: amim -> references++
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> references++
  ORIGINAL[4]: mm = ((MEM *)(lh_insert(((_LHASH *)((void *)((1?mh : ((struct lhash_st_MEM *)0))))),((void *)((1?m : ((MEM *)0)))))))
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = ( ( VAR2 * ) ( FUN1 ( ( ( VAR3 * ) ( ( void * ) ( ( 1?mh : ( ( struct VAR4 * ) 0 ) ) ) ) ) , ( ( void * ) ( ( 1?m : ( ( VAR2 * ) 0 ) ) ) ) ) ) )
  ORIGINAL[5]: (MEM *)(lh_insert(((_LHASH *)((void *)((1?mh : ((struct lhash_st_MEM *)0))))),((void *)((1?m : ((MEM *)0))))))
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 * ) ( FUN1 ( ( ( VAR2 * ) ( ( void * ) ( ( 1?mh : ( ( struct VAR3 * ) 0 ) ) ) ) ) , ( ( void * ) ( ( 1?m : ( ( VAR1 * ) 0 ) ) ) ) ) )
  ORIGINAL[6]: mm -> app_info
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: mm -> app_info
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: mm
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: mm
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: mm
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: mm
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771681
FRAGMENT_COUNT: 3
  ORIGINAL[0]: mh == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> mh
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 7
  ORIGINAL[0]: laconic_nonspherical != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: huxtable_sabre = &preorder_brideman
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = &preorder_brideman
  ORIGINAL[2]: tenebrously_wizzen = &huxtable_sabre
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = &huxtable_sabre
  ORIGINAL[3]: &huxtable_sabre
  TYPE[3]: CALL
  TOKENIZED[3]: &huxtable_sabre
  ORIGINAL[4]: tenebrously_wizzen
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: huxtable_sabre
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tenebrously_wizzen
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771194
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ret * 17851 + (ret >> 14) * 7
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 * 17851 + ( VAR1 >> 14 ) * 7
  ORIGINAL[1]: (ret >> 14) * 7
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 >> 14 ) * 7
  ORIGINAL[2]: ret >> 14
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >> 14

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771207
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771612
FRAGMENT_COUNT: 16
  ORIGINAL[0]: !amip
  TYPE[0]: CALL
  TOKENIZED[0]: !amip
  ORIGINAL[1]: amip = amip -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 -> VAR2
  ORIGINAL[2]: amip -> next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: amip && !CRYPTO_THREADID_cmp((&amip -> threadid),(&ti))
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 && !CRYPTO_THREADID_cmp ( ( &amip -> VAR2 ) , ( &ti ) )
  ORIGINAL[4]: next
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: amip
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: amip
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: amip
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: amip
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: amip
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: amip
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: amip
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: amip
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: amip
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: amip
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: amip
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 1
  ORIGINAL[0]: mg_poll_server(stonesoup_server, 1000) == 0 && stonesoup_exit_flag == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1000 ) == 0 && VAR2 == 1

CENTER_NODE: 30064771180
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((const char *)(a -> addr)) - ((const char *)(b -> addr))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( const char * ) ( VAR1 -> VAR2 ) ) - ( ( const char * ) ( VAR3 -> VAR2 ) )
  ORIGINAL[1]: (const char *)(a -> addr)
  TYPE[1]: CALL
  TOKENIZED[1]: ( const char * ) ( VAR1 -> VAR2 )
  ORIGINAL[2]: a -> addr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (const char *)(b -> addr)
  TYPE[3]: CALL
  TOKENIZED[3]: ( const char * ) ( VAR1 -> VAR2 )

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *ret = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *ret = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> amih
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771119
FRAGMENT_COUNT: 9
  ORIGINAL[0]: --inf -> references <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: --inf -> VAR1 <= 0
  ORIGINAL[1]: --inf -> references
  TYPE[1]: CALL
  TOKENIZED[1]: --inf -> VAR1
  ORIGINAL[2]: inf -> next != ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[3]: inf -> next
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: CRYPTO_free(inf)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 )
  ORIGINAL[6]: next
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: inf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: inf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771336
FRAGMENT_COUNT: 6
  ORIGINAL[0]: CRYPTO_is_mem_check_on()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: CRYPTO_mem_ctrl(0x3)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 0x3 )
  ORIGINAL[2]: pop_info() != ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ) != ( ( void * ) 0 )
  ORIGINAL[3]: pop_info()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: ret++
  TYPE[5]: CALL
  TOKENIZED[5]: ret++

