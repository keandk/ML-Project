# Tokenized code fragments for 152248-v1.0.0-bad
# Total center nodes processed: 72
# Total code fragments found: 366

CENTER_NODE: 68719477073
FRAGMENT_COUNT: 6
  ORIGINAL[0]: avio_write(s,((const unsigned char *)str),len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( const unsigned char * ) VAR2 ) , VAR3 )
  ORIGINAL[1]: avio_w8(s,0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 0 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771957
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ret + 1 < maxlen
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + 1 < VAR2
  ORIGINAL[1]: ch = ((ret += 2) <= maxlen?avio_rb16(pb) : 0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 += 2 ) <= maxlen?avio_rb16 ( VAR3 ) : 0 )
  ORIGINAL[2]: (ret += 2) <= maxlen?avio_rb16(pb) : 0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 += 2 ) <= maxlen?avio_rb16 ( VAR2 ) : 0
  ORIGINAL[3]: (ret += 2) <= maxlen
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 += 2 ) <= VAR2
  ORIGINAL[4]: avio_rb16(pb)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: ch
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771826
FRAGMENT_COUNT: 5
  ORIGINAL[0]: val = ((uint64_t )(avio_rl32(s)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( VAR2 ) ( FUN1 ( VAR3 ) ) )
  ORIGINAL[1]: (uint64_t )(avio_rl32(s))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( FUN1 ( VAR2 ) )
  ORIGINAL[2]: avio_rl32(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uint64_t
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772239
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = avio_close( *s)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( *s )
  ORIGINAL[1]: avio_close( *s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( *s )
  ORIGINAL[2]: *s
  TYPE[2]: CALL
  TOKENIZED[2]: *s
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772447
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .version = '4' << 16 | 18 << 8 | 100
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = '4' << 16 | 18 << 8 | 100
  ORIGINAL[1]: '4' << 16 | 18 << 8 | 100
  TYPE[1]: CALL
  TOKENIZED[1]: '4' << 16 | 18 << 8 | 100
  ORIGINAL[2]: version
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771323
FRAGMENT_COUNT: 4
  ORIGINAL[0]: force = whence & 0x20000
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 & 0x20000
  ORIGINAL[1]: whence & 0x20000
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x20000
  ORIGINAL[2]: force
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: whence
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477229
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s -> checksum = ((s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_ptr - s -> checksum_ptr)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( VAR1 -> VAR3 ) ( VAR1 -> VAR2 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) ) )
  ORIGINAL[1]: s -> checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> checksum_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buf_ptr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> update_checksum
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: update_checksum
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477233
FRAGMENT_COUNT: 5
  ORIGINAL[0]: s -> update_checksum = update_checksum
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> update_checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: update_checksum
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477588
FRAGMENT_COUNT: 4
  ORIGINAL[0]: flags & 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 2
  ORIGINAL[1]: s -> buf_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf_end
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772027
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tmp = avio_r8(bc)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: avio_r8(bc)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: tmp & 128
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 & 128
  ORIGINAL[3]: tmp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bc
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476826
FRAGMENT_COUNT: 3
  ORIGINAL[0]: &ffurl_context_class
  TYPE[0]: CALL
  TOKENIZED[0]: &ffurl_context_class
  ORIGINAL[1]: prev
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ffurl_context_class
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640256
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2

CENTER_NODE: 47244640311
FRAGMENT_COUNT: 3
  ORIGINAL[0]: --i > 0
  TYPE[0]: CALL
  TOKENIZED[0]: --i > 0
  ORIGINAL[1]: avio_w8(bc,128 | ((uint8_t )(val >> 7 * i)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 128 | ( ( VAR2 ) ( VAR3 >> 7 * VAR4 ) ) )
  ORIGINAL[2]: while (--i > 0)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( --i > 0 )

CENTER_NODE: 30064772068
FRAGMENT_COUNT: 8
  ORIGINAL[0]: h -> prot
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ( *s) -> read_pause = ((int (*)(void *, int ))(h -> prot -> url_read_pause))
  TYPE[1]: CALL
  TOKENIZED[1]: ( *s ) -> VAR1 = ( ( int ( * ) ( void * , int ) ) ( VAR2 -> VAR3 -> VAR4 ) )
  ORIGINAL[2]: ( *s) -> read_pause
  TYPE[2]: CALL
  TOKENIZED[2]: ( *s ) -> VAR1
  ORIGINAL[3]: *s
  TYPE[3]: CALL
  TOKENIZED[3]: *s
  ORIGINAL[4]: (int (*)(void *, int ))(h -> prot -> url_read_pause)
  TYPE[4]: CALL
  TOKENIZED[4]: ( int ( * ) ( void * , int ) ) ( VAR1 -> VAR2 -> VAR3 )
  ORIGINAL[5]: *s
  TYPE[5]: CALL
  TOKENIZED[5]: *s
  ORIGINAL[6]: *s
  TYPE[6]: CALL
  TOKENIZED[6]: *s
  ORIGINAL[7]: read_pause
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771470
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_w8(s,((uint8_t )(val >> 8)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) ( VAR3 >> 8 ) ) )
  ORIGINAL[1]: (uint8_t )(val >> 8)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( VAR2 >> 8 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640324
FRAGMENT_COUNT: 1
  ORIGINAL[0]: s -> buf_ptr < s -> buf_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 < VAR1 -> VAR3

CENTER_NODE: 30064771816
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val = avio_rl16(s)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: avio_rl16(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771836
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= (avio_r8(s))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= ( FUN1 ( VAR2 ) )
  ORIGINAL[1]: avio_r8(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772280
FRAGMENT_COUNT: 1
  ORIGINAL[0]: io_buffer[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]

CENTER_NODE: 30064771810
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val = (avio_r8(s))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 ) )
  ORIGINAL[1]: avio_r8(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477038
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> seek
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: (size = ((s -> seek)(s -> opaque,(- 1),2))) < 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( VAR2 -> VAR3 ) ( VAR2 -> VAR4 , ( - 1 ) , 2 ) ) ) < 0
  ORIGINAL[2]: s -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> opaque
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> pos
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: pos
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771743
FRAGMENT_COUNT: 7
  ORIGINAL[0]: size > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: (s -> direct || size > s -> buffer_size) && !s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 || VAR3 > VAR1 -> VAR4 ) && !s -> VAR5
  ORIGINAL[2]: len == 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0
  ORIGINAL[3]: break;
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: break ;
  ORIGINAL[4]: size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: size1
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771539
FRAGMENT_COUNT: 5
  ORIGINAL[0]: val >>= 7
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >>= 7
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: while (val >>= 7)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( VAR1 >>= 7 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val >> 32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >> 32
  ORIGINAL[1]: uint32_t
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 4
  ORIGINAL[0]: s -> write_packet && !s -> error
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && !s -> VAR3
  ORIGINAL[1]: s -> write_packet
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !s -> error
  TYPE[2]: CALL
  TOKENIZED[2]: !s -> VAR1
  ORIGINAL[3]: s -> error
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2

CENTER_NODE: 30064772300
FRAGMENT_COUNT: 19
  ORIGINAL[0]: d -> allocated_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: new_size < (d -> pos) || new_size > (2147483647 / 2)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < ( VAR2 -> VAR3 ) || VAR1 > ( 2147483647 / 2 )
  ORIGINAL[2]: new_allocated_size > (d -> allocated_size)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > ( VAR2 -> VAR3 )
  ORIGINAL[3]: d -> allocated_size
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: allocated_size
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: d
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: new_allocated_size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: d
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: d
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: d
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: d
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: d
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: d
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: d
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: d
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: d
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: d
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: d
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: d
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 68719476847
FRAGMENT_COUNT: 16
  ORIGINAL[0]: s -> buffer
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> buffer_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> opaque
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> direct
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> write_packet
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> read_packet
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: s -> seek
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: s -> pos
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: s -> must_flush
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: s -> eof_reached = 0
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2 = 0
  ORIGINAL[11]: s -> eof_reached
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: s -> error
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: error
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: s
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 30064771272
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> buf_ptr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> buf_ptr >= s -> buf_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 >= VAR1 -> VAR3
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buf_end
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf_ptr
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771770
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> read_packet && s -> write_flag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3
  ORIGINAL[1]: len = ((s -> read_packet)(s -> opaque,buf,size))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 -> VAR3 ) ( VAR2 -> VAR4 , VAR5 , VAR6 ) )
  ORIGINAL[2]: (s -> read_packet)(s -> opaque,buf,size)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[3]: s -> read_packet
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> opaque
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: size
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477580
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !buffer
  TYPE[0]: CALL
  TOKENIZED[0]: !buffer
  ORIGINAL[1]: s -> buffer = buffer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: s -> buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477729
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !s -> read_pause
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: s -> read_pause
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> read_pause
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> opaque
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: opaque
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772248
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ret = vsnprintf(buf,sizeof(buf),fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , sizeof ( VAR2 ) , VAR3 , VAR4 )
  ORIGINAL[1]: vsnprintf(buf,sizeof(buf),fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( VAR1 ) , VAR2 , VAR3 )
  ORIGINAL[2]: sizeof(buf)
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: fmt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ap
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771320
FRAGMENT_COUNT: 3
  ORIGINAL[0]: flush_buffer(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771846
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= avio_rb16(s)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= FUN1 ( VAR2 )
  ORIGINAL[1]: avio_rb16(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477834
FRAGMENT_COUNT: 2
  ORIGINAL[0]: url_open_dyn_buf_internal(s,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477885
FRAGMENT_COUNT: 7
  ORIGINAL[0]: strlen(anagoges_pluffy) < 1000 - strlen(stonesoup_command_str)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) < 1000 - FUN1 ( VAR2 )
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_trace
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: trace_point
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_trace
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771244
FRAGMENT_COUNT: 12
  ORIGINAL[0]: s -> buf_ptr > s -> buffer
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > VAR1 -> VAR3
  ORIGINAL[1]: s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> buffer
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buffer
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640355
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !avio_r8(s)
  TYPE[0]: CALL
  TOKENIZED[0]: !avio_r8 ( VAR1 )
  ORIGINAL[1]: for (;i < maxlen;i++)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( ; VAR1 < VAR2 ; i++ )

CENTER_NODE: 68719477222
FRAGMENT_COUNT: 5
  ORIGINAL[0]: av_crc(av_crc_get_table(AV_CRC_32_IEEE),checksum,buf,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: av_crc_get_table(AV_CRC_32_IEEE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: checksum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771291
FRAGMENT_COUNT: 9
  ORIGINAL[0]: count > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: s -> buf_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buf_ptr >= s -> buf_end
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 >= VAR1 -> VAR3
  ORIGINAL[4]: s -> buf_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> buf_end
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf_end
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771924
FRAGMENT_COUNT: 4
  ORIGINAL[0]: in < 0x80
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0x80
  ORIGINAL[1]: (bytes - 1) * 6
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 - 1 ) * 6
  ORIGINAL[2]: bytes - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: bytes
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477791
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((union unaligned_32 *)buf1) -> l
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( union VAR1 * ) VAR2 ) -> VAR3
  ORIGINAL[1]: av_bswap32(buf_size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: buf_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772453
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = ffio_url_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476821
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *s = obj
  TYPE[0]: CALL
  TOKENIZED[0]: *s = VAR1
  ORIGINAL[1]: s -> opaque
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: obj
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772149
FRAGMENT_COUNT: 7
  ORIGINAL[0]: new_size > buf_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2
  ORIGINAL[1]: memcpy((buf + buf_size),(s -> buffer + overlap),(buffer_size - overlap))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 + VAR2 ) , ( VAR3 -> VAR4 + VAR5 ) , ( VAR6 - VAR5 ) )
  ORIGINAL[2]: buf + buf_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2
  ORIGINAL[3]: s -> buffer + overlap
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 + VAR3
  ORIGINAL[4]: buffer_size - overlap
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 - VAR2
  ORIGINAL[5]: buffer_size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: overlap
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477906
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .item_name = av_default_item_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: av_default_item_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477097
FRAGMENT_COUNT: 5
  ORIGINAL[0]: in < 0x10000
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0x10000
  ORIGINAL[1]: tmp = in
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: tmp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: in
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772379
FRAGMENT_COUNT: 4
  ORIGINAL[0]: max_packet_size <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: url_open_dyn_buf_internal(s,max_packet_size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: max_packet_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477132
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (uint32_t )(val >> 32)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( VAR2 >> 32 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uint32_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771440
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_seek(s,offset,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477043
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> eof_reached
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> eof_reached = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = 0
  ORIGINAL[2]: s -> eof_reached
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: fill_buffer(s)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: s -> eof_reached
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477141
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (uint8_t )val
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) VAR2
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477148
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_wl16(s,val & 0xffff)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 & 0xffff )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772366
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !d
  TYPE[0]: CALL
  TOKENIZED[0]: !d
  ORIGINAL[1]: avio_alloc_context(d -> io_buffer,d -> io_buffer_size,1,d,((void *)0),(max_packet_size?dyn_packet_buf_write : dyn_buf_write),(max_packet_size?((void *)0) : dyn_buf_seek))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR1 -> VAR3 , 1 , VAR1 , ( ( void * ) 0 ) , ( max_packet_size?dyn_packet_buf_write : VAR4 ) , ( max_packet_size? ( ( void * ) 0 ) : VAR5 ) )
  ORIGINAL[2]: max_packet_size?dyn_packet_buf_write : dyn_buf_write
  TYPE[2]: CALL
  TOKENIZED[2]: max_packet_size?dyn_packet_buf_write : VAR1
  ORIGINAL[3]: max_packet_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: max_packet_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477732
FRAGMENT_COUNT: 4
  ORIGINAL[0]: s -> opaque
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: opaque
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: h
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772454
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = ffio_url_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771479
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_w8(s,(val >> 24))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( VAR2 >> 24 ) )
  ORIGINAL[1]: val >> 24
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >> 24
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 8
  ORIGINAL[0]: len <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: s -> buf_ptr = dst
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf_ptr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dst
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771823
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= avio_rl16(s) << 16
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= FUN1 ( VAR2 ) << 16
  ORIGINAL[1]: avio_rl16(s) << 16
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) << 16
  ORIGINAL[2]: avio_rl16(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772024
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (uint64_t )(avio_rb32(s))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( FUN1 ( VAR2 ) )
  ORIGINAL[1]: avio_rb32(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772387
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !s -> max_packet_size
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: s -> max_packet_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: avio_write(s,padbuf,(sizeof(padbuf)))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , ( sizeof ( VAR2 ) ) )
  ORIGINAL[3]: sizeof(padbuf)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 )
  ORIGINAL[4]: padding = 16
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = 16
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: padbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: padbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: padding
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477370
FRAGMENT_COUNT: 7
  ORIGINAL[0]: val = avio_rb16(s) << 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 ) << 8
  ORIGINAL[1]: val |= (avio_r8(s))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 |= ( FUN1 ( VAR2 ) )
  ORIGINAL[2]: avio_r8(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: val
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477650
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_open2(s,filename,flags,((void *)0),((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[1]: filename
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: flags
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477146
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_w8(s,((int )val) >> 8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( int ) VAR2 ) >> 8 )
  ORIGINAL[1]: avio_w8(s,((uint8_t )val))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( VAR2 ) VAR3 ) )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772207
FRAGMENT_COUNT: 6
  ORIGINAL[0]: savers_save != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: monogoneutic_wray[5] = washbowl_professable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 5 ] = VAR2
  ORIGINAL[2]: monogoneutic_wray[5]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 5 ]
  ORIGINAL[3]: monogoneutic_wray
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: washbowl_professable
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: monogoneutic_wray
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477152
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_wb16(s,(((int )val) >> 8))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( ( int ) VAR2 ) >> 8 ) )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477703
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: h = (s -> opaque)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR2 -> VAR3 )
  ORIGINAL[2]: s -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buffer
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771317
FRAGMENT_COUNT: 4
  ORIGINAL[0]: s -> buf_ptr >= s -> buf_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 >= VAR1 -> VAR3
  ORIGINAL[1]: flush_buffer(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771855
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c && i < maxlen - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR2 < VAR3 - 1
  ORIGINAL[1]: buf[i++]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ i++ ]
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476804
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stonesoup_tainted_file != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: fseek(stonesoup_tainted_file,0L,2)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 0L , 2 )
  ORIGINAL[2]: stonesoup_lsize = ftell(stonesoup_tainted_file)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[3]: ftell(stonesoup_tainted_file)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: stonesoup_lsize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_lsize
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s

