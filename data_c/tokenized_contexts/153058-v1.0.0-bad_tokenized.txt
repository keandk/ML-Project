# Tokenized code fragments for 153058-v1.0.0-bad
# Total center nodes processed: 71
# Total code fragments found: 283

CENTER_NODE: 30064772299
FRAGMENT_COUNT: 7
  ORIGINAL[0]: link -> partial_buf
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: frame -> audio -> nb_samples
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: frame -> audio
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: audio
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: nb_samples
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: frame
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: frame
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771170
FRAGMENT_COUNT: 3
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c - 32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 32
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640327
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640404
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476997
FRAGMENT_COUNT: 7
  ORIGINAL[0]: link -> dstpad
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: (ret = avfilter_link(filt,filt_dstpad_idx,link -> dst,dstpad_idx)) < 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 -> VAR5 , VAR6 ) ) < 0
  ORIGINAL[2]: link -> dst = filt
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = VAR3
  ORIGINAL[3]: link -> dst
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: link -> dstpad
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: dstpad
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: link
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477570
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .category = AV_CLASS_CATEGORY_FILTER
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: category
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: AV_CLASS_CATEGORY_FILTER
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477304
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < filter -> nb_inputs
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: avfilter_link_free(&link)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &link )
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640326
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772353
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .item_name = default_filter_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477208
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memset(registered_avfilters,0,sizeof(registered_avfilters))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , sizeof ( VAR1 ) )
  ORIGINAL[1]: sizeof(registered_avfilters)
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: <global> registered_avfilters
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> registered_avfilters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771262
FRAGMENT_COUNT: 2
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: sizeof(\
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( \

CENTER_NODE: 30064771740
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !link -> src -> inputs[i]
  TYPE[0]: CALL
  TOKENIZED[0]: !link -> VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: val = ff_poll_frame(link -> src -> inputs[i])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 -> VAR3 -> VAR4 [ VAR5 ] )
  ORIGINAL[2]: ff_poll_frame(link -> src -> inputs[i])
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 -> VAR3 [ VAR4 ] )
  ORIGINAL[3]: link -> src -> inputs[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771425
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !( *link)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( *link )
  ORIGINAL[1]: *link
  TYPE[1]: CALL
  TOKENIZED[1]: *link
  ORIGINAL[2]: ( *link) -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: ( *link ) -> VAR1
  ORIGINAL[3]: ( *link) -> partial_buf
  TYPE[3]: CALL
  TOKENIZED[3]: ( *link ) -> VAR1
  ORIGINAL[4]: *link
  TYPE[4]: CALL
  TOKENIZED[4]: *link
  ORIGINAL[5]: partial_buf
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: link
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772104
FRAGMENT_COUNT: 5
  ORIGINAL[0]: link -> closed
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ('E' | 'O' << 8 | 'F' << 16) | ((unsigned int )32) << 24
  TYPE[1]: CALL
  TOKENIZED[1]: ( 'E' | 'O' << 8 | 'F' << 16 ) | ( ( unsigned int ) 32 ) << 24
  ORIGINAL[2]: 'E' | 'O' << 8 | 'F' << 16
  TYPE[2]: CALL
  TOKENIZED[2]: 'E' | 'O' << 8 | 'F' << 16
  ORIGINAL[3]: ((unsigned int )32) << 24
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( unsigned int ) 32 ) << 24
  ORIGINAL[4]: (unsigned int )32
  TYPE[4]: CALL
  TOKENIZED[4]: ( unsigned int ) 32

CENTER_NODE: 47244640276
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477214
FRAGMENT_COUNT: 6
  ORIGINAL[0]: pads -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: count++
  TYPE[1]: CALL
  TOKENIZED[1]: count++
  ORIGINAL[2]: pads++
  TYPE[2]: CALL
  TOKENIZED[2]: pads++
  ORIGINAL[3]: count
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: count
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: count
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772309
FRAGMENT_COUNT: 3
  ORIGINAL[0]: BRUNNICHIA_APRILIS(engracing_creg)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: ccip_chatterbag((reemission_cwrite)engracing_creg)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 ) VAR2 )
  ORIGINAL[2]: (reemission_cwrite)engracing_creg
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2

CENTER_NODE: 30064772272
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640278
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640322
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771247
FRAGMENT_COUNT: 3
  ORIGINAL[0]: 3 << 16 | 42 << 8
  TYPE[0]: CALL
  TOKENIZED[0]: 3 << 16 | 42 << 8
  ORIGINAL[1]: 3 << 16
  TYPE[1]: CALL
  TOKENIZED[1]: 3 << 16
  ORIGINAL[2]: 42 << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 42 << 8

CENTER_NODE: 30064771216
FRAGMENT_COUNT: 11
  ORIGINAL[0]: ref -> video -> w
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: ref -> video -> h
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: ref -> video
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ref -> video -> interlaced
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: ref -> video -> top_field_first
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: ref -> video -> key_frame
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[6]: ref -> video -> pict_type
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[7]: video
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: h
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ref
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ref
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771915
FRAGMENT_COUNT: 28
  ORIGINAL[0]: !ret -> input_pads
  TYPE[0]: CALL
  TOKENIZED[0]: !ret -> VAR1
  ORIGINAL[1]: ret -> inputs
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !ret -> inputs
  TYPE[2]: CALL
  TOKENIZED[2]: !ret -> VAR1
  ORIGINAL[3]: ret -> inputs
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: &ret -> inputs
  TYPE[4]: CALL
  TOKENIZED[4]: &ret -> VAR1
  ORIGINAL[5]: ret -> inputs
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: inputs
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ret
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: ret
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ret
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ret
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ret
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: ret
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: ret
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: ret
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ret
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: ret
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: ret
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: ret
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: ret
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: ret
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: ret
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: ret
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: ret
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: ret
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: ret
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: ret
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: ret
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1

CENTER_NODE: 68719477542
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tracepoint(stonesoup_trace, variable_buffer_info, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: strlen(peripneumonic_trimetrical)+1
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) +1
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: variable_buffer_info
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: peripneumonic_trimetrical
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: peripneumonic_trimetrical
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: peripneumonic_trimetrical
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771759
FRAGMENT_COUNT: 4
  ORIGINAL[0]: link -> graph && link -> age_index >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3 >= 0
  ORIGINAL[1]: ff_avfilter_graph_update_heap(link -> graph,link)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR1 )
  ORIGINAL[2]: link -> graph
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: link
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477228
FRAGMENT_COUNT: 7
  ORIGINAL[0]: **filter_ptr = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: **filter_ptr = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: filter_ptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filter_ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filter_ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filter_ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: filter_ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477573
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = filter_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771427
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> channels
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: channels
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: link
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477120
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = - 1
  ORIGINAL[1]: - 1
  TYPE[1]: CALL
  TOKENIZED[1]: - 1
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477207
FRAGMENT_COUNT: 3
  ORIGINAL[0]: registered_avfilters[0]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ]
  ORIGINAL[1]: filter
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> registered_avfilters
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064772080
FRAGMENT_COUNT: 3
  ORIGINAL[0]: pads[pad_idx] . name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[1]: pads[pad_idx]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772355
FRAGMENT_COUNT: 4
  ORIGINAL[0]: .version = 52 << 16 | 18 << 8 | 100
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = 52 << 16 | 18 << 8 | 100
  ORIGINAL[1]: 52 << 16 | 18 << 8 | 100
  TYPE[1]: CALL
  TOKENIZED[1]: 52 << 16 | 18 << 8 | 100
  ORIGINAL[2]: 52 << 16 | 18 << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 52 << 16 | 18 << 8
  ORIGINAL[3]: version
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771810
FRAGMENT_COUNT: 4
  ORIGINAL[0]: next_registered_avfilter_idx == 256
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 256
  ORIGINAL[1]: registered_avfilters[next_registered_avfilter_idx++] = filter
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ next_registered_avfilter_idx++ ] = VAR2
  ORIGINAL[2]: registered_avfilters[next_registered_avfilter_idx++]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ next_registered_avfilter_idx++ ]
  ORIGINAL[3]: filter
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771428
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> closed = closed
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: link -> closed
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: closed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640402
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771267
FRAGMENT_COUNT: 8
  ORIGINAL[0]: &c -> arg
  TYPE[0]: CALL
  TOKENIZED[0]: &c -> VAR1
  ORIGINAL[1]: c -> arg
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: arg
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: c
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: c
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771185
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buf[16]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 16 ]
  ORIGINAL[1]: buf[16]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 16 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477103
FRAGMENT_COUNT: 10
  ORIGINAL[0]: link -> type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: link -> w
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: link -> h
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: link -> format
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: link -> src?link -> src -> filter -> name : \
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> src?link -> VAR2 -> VAR3 -> VAR4 : \
  ORIGINAL[5]: link -> src
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: link -> dst
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: dst
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: link
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: link
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640405
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771384
FRAGMENT_COUNT: 5
  ORIGINAL[0]: src -> output_pads[srcpad] . type != dst -> input_pads[dstpad] . type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] . VAR4 != VAR5 -> VAR6 [ VAR7 ] . VAR4
  ORIGINAL[1]: link -> src = src
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: link -> src
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: link
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477363
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> dst
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: dst
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: link
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 14
  ORIGINAL[0]: i <  *count
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < *count
  ORIGINAL[1]: *links[i]
  TYPE[1]: CALL
  TOKENIZED[1]: *links [ VAR1 ]
  ORIGINAL[2]: links[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: ( *((unsigned int *)(((uint8_t *)( *links[i])) + padidx_off)))++
  TYPE[3]: CALL
  TOKENIZED[3]: ( * ( ( unsigned int * ) ( ( ( VAR1 * ) ( *links [ VAR2 ] ) ) + VAR3 ) ) ) ++
  ORIGINAL[4]: *((unsigned int *)(((uint8_t *)( *links[i])) + padidx_off))
  TYPE[4]: CALL
  TOKENIZED[4]: * ( ( unsigned int * ) ( ( ( VAR1 * ) ( *links [ VAR2 ] ) ) + VAR3 ) )
  ORIGINAL[5]: (unsigned int *)(((uint8_t *)( *links[i])) + padidx_off)
  TYPE[5]: CALL
  TOKENIZED[5]: ( unsigned int * ) ( ( ( VAR1 * ) ( *links [ VAR2 ] ) ) + VAR3 )
  ORIGINAL[6]: ((uint8_t *)( *links[i])) + padidx_off
  TYPE[6]: CALL
  TOKENIZED[6]: ( ( VAR1 * ) ( *links [ VAR2 ] ) ) + VAR3
  ORIGINAL[7]: (uint8_t *)( *links[i])
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 * ) ( *links [ VAR2 ] )
  ORIGINAL[8]: *links[i]
  TYPE[8]: CALL
  TOKENIZED[8]: *links [ VAR1 ]
  ORIGINAL[9]: links[i]
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 [ VAR2 ]
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: links
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: i
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: padidx_off
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064771124
FRAGMENT_COUNT: 2
  ORIGINAL[0]: fflush(stonesoup_printf_context)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772209
FRAGMENT_COUNT: 6
  ORIGINAL[0]: frame -> audio -> nb_samples
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: frame -> audio -> channels
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: frame -> audio
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: audio
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: channels
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: frame
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640323
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771182
FRAGMENT_COUNT: 10
  ORIGINAL[0]: snprintf(buf,buf_size,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: perms & 0x1?\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x1?\
  ORIGINAL[2]: perms & 0x02?\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 & 0x02?\
  ORIGINAL[3]: perms & 0x04?\
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 & 0x04?\
  ORIGINAL[4]: perms & 0x08?\
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 & 0x08?\
  ORIGINAL[5]: perms & 0x10?\
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 & 0x10?\
  ORIGINAL[6]: perms & 0x20?\
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 & 0x20?\
  ORIGINAL[7]: perms & 0x20
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 & 0x20
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf_size
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *stonesoup_tainted_buff != 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_tainted_buff != 0
  ORIGINAL[1]: fread(*stonesoup_tainted_buff,1,stonesoup_lsize,stonesoup_tainted_file)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( *stonesoup_tainted_buff , 1 , VAR1 , VAR2 )
  ORIGINAL[2]: *stonesoup_tainted_buff
  TYPE[2]: CALL
  TOKENIZED[2]: *stonesoup_tainted_buff
  ORIGINAL[3]: stonesoup_lsize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_lsize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_lsize
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771665
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064772268
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064772360
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = filter_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772068
FRAGMENT_COUNT: 20
  ORIGINAL[0]: filter -> filter -> init_opaque
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[1]: filter -> filter
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR1
  ORIGINAL[2]: ret = ((filter -> filter -> init_opaque)(filter,args,opaque))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( VAR2 -> VAR2 -> VAR3 ) ( VAR2 , VAR4 , VAR5 ) )
  ORIGINAL[3]: (filter -> filter -> init_opaque)(filter,args,opaque)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 -> VAR1 -> VAR2 ) ( VAR1 , VAR3 , VAR4 )
  ORIGINAL[4]: filter -> filter -> init_opaque
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[5]: filter -> filter
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR1
  ORIGINAL[6]: filter -> filter -> init
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[7]: filter -> filter
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR1
  ORIGINAL[8]: init_opaque
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: filter
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: init_opaque
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: filter
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: init
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: ret
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: filter
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: filter
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: args
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: opaque
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: filter
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: ret
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064771827
FRAGMENT_COUNT: 12
  ORIGINAL[0]: ctx -> name?(ctx -> name) : ctx -> filter -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> name? ( VAR1 -> VAR2 ) : VAR1 -> VAR3 -> VAR2
  ORIGINAL[1]: ctx -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ctx -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ctx -> filter -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: ctx -> filter
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: name
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: name
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: filter
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: name
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ctx
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ctx
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ctx
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pads[pad_idx] . type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[1]: pads[pad_idx]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: type
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pads
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pad_idx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640347
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771779
FRAGMENT_COUNT: 6
  ORIGINAL[0]: registered_avfilters[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: registered_avfilters[i] -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] -> VAR3
  ORIGINAL[2]: registered_avfilters[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: name
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> registered_avfilters
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477224
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *ctx = obj
  TYPE[0]: CALL
  TOKENIZED[0]: *ctx = VAR1
  ORIGINAL[1]: !prev
  TYPE[1]: CALL
  TOKENIZED[1]: !prev
  ORIGINAL[2]: prev
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771772
FRAGMENT_COUNT: 2
  ORIGINAL[0]: filter -> filter -> process_command
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[1]: - 38
  TYPE[1]: CALL
  TOKENIZED[1]: - 38

CENTER_NODE: 30064771239
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(103 >= 100)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( 103 >= 100 )
  ORIGINAL[1]: 103 >= 100
  TYPE[1]: CALL
  TOKENIZED[1]: 103 >= 100
  ORIGINAL[2]: av_log(((void *)0),0,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( void * ) 0 ) , 0 , \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: abort()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640328
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771609
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !link -> time_base . num && !link -> time_base . den
  TYPE[0]: CALL
  TOKENIZED[0]: !link -> VAR1 . VAR2 && !link -> VAR1 . VAR3
  ORIGINAL[1]: (AVRational ){(1), link -> sample_rate}
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) { ( 1 ) , VAR2 -> VAR3 }
  ORIGINAL[2]: {(1), link -> sample_rate}
  TYPE[2]: CALL
  TOKENIZED[2]: { ( 1 ) , VAR1 -> VAR2 }
  ORIGINAL[3]: link -> sample_rate
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2

