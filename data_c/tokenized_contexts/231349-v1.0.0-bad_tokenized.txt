# Tokenized code fragments for 231349-v1.0.0-bad
# Total center nodes processed: 10
# Total code fragments found: 65

CENTER_NODE: 30064772363
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *bytecount >= (int) sizeof(gint64)
  TYPE[0]: CALL
  TOKENIZED[0]: *bytecount >= ( int ) sizeof ( VAR1 )
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1

CENTER_NODE: 30064772876
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hf_bundle_dest_scheme_offset = -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = -1
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: hf_bundle_dest_scheme_offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hf_bundle_dest_ssp_offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 6
  ORIGINAL[0]: proc_flag_tree
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: <global> hf_bundle_procflags_dont_fragment
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: tvb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> pri_hdr_procflags
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: proc_flag_tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478178
FRAGMENT_COUNT: 7
  ORIGINAL[0]: fragment_offset < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: offset += sdnv_length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += VAR2
  ORIGINAL[2]: total_adu_length = evaluate_sdnv(tvb, offset, &sdnv_length)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , &sdnv_length )
  ORIGINAL[3]: evaluate_sdnv(tvb, offset, &sdnv_length)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 , &sdnv_length )
  ORIGINAL[4]: total_adu_length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tvb
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: total_adu_length
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772322
FRAGMENT_COUNT: 23
  ORIGINAL[0]: (curbyte = tvb_get_guint8(tvb, offset)) & ~SDNV_MASK
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 ) ) & ~SDNV_MASK
  ORIGINAL[1]: curbyte = tvb_get_guint8(tvb, offset)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[2]: ~SDNV_MASK
  TYPE[2]: CALL
  TOKENIZED[2]: ~SDNV_MASK
  ORIGINAL[3]: *bytecount >= (int) sizeof(int)
  TYPE[3]: CALL
  TOKENIZED[3]: *bytecount >= ( int ) sizeof ( int )
  ORIGINAL[4]: *bytecount
  TYPE[4]: CALL
  TOKENIZED[4]: *bytecount
  ORIGINAL[5]: (int) sizeof(int)
  TYPE[5]: CALL
  TOKENIZED[5]: ( int ) sizeof ( int )
  ORIGINAL[6]: sizeof(int)
  TYPE[6]: CALL
  TOKENIZED[6]: sizeof ( int )
  ORIGINAL[7]: value = value << 7
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 = VAR1 << 7
  ORIGINAL[8]: value << 7
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 << 7
  ORIGINAL[9]: value |= (curbyte & SDNV_MASK)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 |= ( VAR2 & VAR3 )
  ORIGINAL[10]: curbyte & SDNV_MASK
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 & VAR2
  ORIGINAL[11]: SDNV_MASK
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: ++*bytecount
  TYPE[12]: CALL
  TOKENIZED[12]: ++*bytecount
  ORIGINAL[13]: *bytecount
  TYPE[13]: CALL
  TOKENIZED[13]: *bytecount
  ORIGINAL[14]: while ((curbyte = tvb_get_guint8(tvb, offset)) & ~SDNV_MASK)
  TYPE[14]: CONTROL_STRUCTURE
  TOKENIZED[14]: while ( ( VAR1 = FUN1 ( VAR2 , VAR3 ) ) & ~SDNV_MASK )
  ORIGINAL[15]: bytecount
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: int
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: int
  ORIGINAL[17]: value
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: value
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: value
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: curbyte
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: bytecount
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: value
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1

CENTER_NODE: 30064772395
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sdnv_value < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: sdnv_value = evaluate_sdnv(tvb, offset, &sdnv2_length)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 , &sdnv2_length )
  ORIGINAL[2]: evaluate_sdnv(tvb, offset, &sdnv2_length)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , &sdnv2_length )
  ORIGINAL[3]: sdnv_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sdnv_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479193
FRAGMENT_COUNT: 8
  ORIGINAL[0]: sdnv_value < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: proto_tree_add_text(tree, tvb, offset, sdnv_length, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , \
  ORIGINAL[2]: tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: sdnv_length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: field_id
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: sdnv_value
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719479324
FRAGMENT_COUNT: 5
  ORIGINAL[0]: {\
  TYPE[0]: CALL
  TOKENIZED[0]: { \
  ORIGINAL[1]: HFILL
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: HFILL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: HFILL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772761
FRAGMENT_COUNT: 1
  ORIGINAL[0]: register_init_routine(bundle_defragment_init)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )

CENTER_NODE: 68719479253
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &sdnv_length
  TYPE[0]: CALL
  TOKENIZED[0]: &sdnv_length
  ORIGINAL[1]: sdnv_value < 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 0
  ORIGINAL[2]: sdnv_length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sdnv_length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

