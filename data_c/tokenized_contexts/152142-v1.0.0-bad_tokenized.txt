# Tokenized code fragments for 152142-v1.0.0-bad
# Total center nodes processed: 25
# Total code fragments found: 63

CENTER_NODE: 30064771563
FRAGMENT_COUNT: 6
  ORIGINAL[0]: gap -> end = end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: gap -> end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: end
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: gap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: end
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: gap
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640340
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771168
FRAGMENT_COUNT: 4
  ORIGINAL[0]: g_build_filename(dirname,basename,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: dirname
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: basename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476825
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gimp_swap_file = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> gimp_swap_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771073
FRAGMENT_COUNT: 3
  ORIGINAL[0]: SWAP_OUT=2
  TYPE[0]: CALL
  TOKENIZED[0]: SWAP_OUT=2
  ORIGINAL[1]: SWAP_OUT
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_DELETE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771570
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stonesoup_ssi = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: stonesoup_ssi
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stonesoup_files
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477155
FRAGMENT_COUNT: 3
  ORIGINAL[0]: * stonesoup_printf_context = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719476855
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile -> data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: data
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tile
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771566
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )(((SwapFileGap *)0) == gap)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( ( VAR1 * ) 0 ) == VAR2 )
  ORIGINAL[1]: ((SwapFileGap *)0) == gap
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 * ) 0 ) == VAR2

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640338
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771466
FRAGMENT_COUNT: 4
  ORIGINAL[0]: swap_file -> fd = open((swap_file -> filename),0100 | 02 | 0 | 0,0400 | 0200)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = FUN1 ( ( VAR1 -> VAR3 ) , 0100 | 02 | 0 | 0 , 0400 | 0200 )
  ORIGINAL[1]: swap_file -> fd
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: open((swap_file -> filename),0100 | 02 | 0 | 0,0400 | 0200)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( VAR1 -> VAR2 ) , 0100 | 02 | 0 | 0 , 0400 | 0200 )
  ORIGINAL[3]: swap_file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771106
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771416
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tmp -> prev
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: tmp -> prev
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tmp -> prev -> next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: tmp -> prev
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: prev
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: next
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tmp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771224
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile -> swap_offset == (- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( - 1 )
  ORIGINAL[1]: tile_alloc(tile)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: tile
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477107
FRAGMENT_COUNT: 3
  ORIGINAL[0]: g_slice_free1(sizeof(SwapFileGap ),gap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( sizeof ( VAR1 ) , VAR2 )
  ORIGINAL[1]: sizeof(SwapFileGap )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: gap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771226
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_OUT)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_OUT
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476841
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_DELETE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_DELETE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771482
FRAGMENT_COUNT: 5
  ORIGINAL[0]: swap_file -> swap_file_end > new_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > VAR3
  ORIGINAL[1]: ftruncate(swap_file -> fd,new_size) != 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 ) != 0
  ORIGINAL[2]: ftruncate(swap_file -> fd,new_size)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[3]: swap_file -> fd
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: new_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

