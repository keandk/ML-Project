# Tokenized code fragments for 152636-v1.0.0-bad
# Total center nodes processed: 72
# Total code fragments found: 236

CENTER_NODE: 68719477327
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *ctx = obj
  TYPE[0]: CALL
  TOKENIZED[0]: *ctx = VAR1
  ORIGINAL[1]: !prev
  TYPE[1]: CALL
  TOKENIZED[1]: !prev
  ORIGINAL[2]: prev
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640349
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477274
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !strcmp(cmd,\
  TYPE[0]: CALL
  TOKENIZED[0]: !strcmp ( VAR1 , \
  ORIGINAL[1]: filter -> filter -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[2]: filter -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: name
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filter
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477538
FRAGMENT_COUNT: 10
  ORIGINAL[0]: cmd && cmd -> time <= (out -> pts) * av_q2d(link -> time_base)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 <= ( VAR3 -> VAR4 ) * FUN1 ( VAR5 -> VAR6 )
  ORIGINAL[1]: cmd -> time
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cmd -> command
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cmd -> arg
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cmd -> command
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cmd -> arg
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: cmd -> flags
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: arg
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cmd
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: cmd
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772447
FRAGMENT_COUNT: 3
  ORIGINAL[0]: 52 << 16 | 18 << 8
  TYPE[0]: CALL
  TOKENIZED[0]: 52 << 16 | 18 << 8
  ORIGINAL[1]: 52 << 16
  TYPE[1]: CALL
  TOKENIZED[1]: 52 << 16
  ORIGINAL[2]: 18 << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 18 << 8

CENTER_NODE: 30064772450
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = filter_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771308
FRAGMENT_COUNT: 3
  ORIGINAL[0]: 3 << 16 | 42 << 8
  TYPE[0]: CALL
  TOKENIZED[0]: 3 << 16 | 42 << 8
  ORIGINAL[1]: 3 << 16
  TYPE[1]: CALL
  TOKENIZED[1]: 3 << 16
  ORIGINAL[2]: 42 << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 42 << 8

CENTER_NODE: 30064772211
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ff_filter_frame(link -> dst -> outputs[0],frame)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 -> VAR3 [ 0 ] , VAR4 )
  ORIGINAL[1]: link -> dst -> outputs[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 [ 0 ]
  ORIGINAL[2]: link -> dst -> outputs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: frame
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772398
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064771247
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buf[16]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 16 ]
  ORIGINAL[1]: buf[16]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 16 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772431
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (link -> type) == AVMEDIA_TYPE_AUDIO && link -> min_samples && (link -> partial_buf || frame -> audio -> nb_samples < link -> min_samples || frame -> audio -> nb_samples > link -> max_samples)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == VAR3 && VAR1 -> VAR4 && ( VAR1 -> VAR5 || VAR6 -> VAR7 -> VAR8 < VAR1 -> VAR4 || VAR6 -> VAR7 -> VAR8 > VAR1 -> VAR9 )
  ORIGINAL[1]: ff_filter_frame_needs_framing(link,frame)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: link
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: frame
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771792
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772194
FRAGMENT_COUNT: 20
  ORIGINAL[0]: filter -> filter -> init_opaque
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[1]: filter -> filter
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR1
  ORIGINAL[2]: ret = ((filter -> filter -> init_opaque)(filter,args,opaque))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( VAR2 -> VAR2 -> VAR3 ) ( VAR2 , VAR4 , VAR5 ) )
  ORIGINAL[3]: (filter -> filter -> init_opaque)(filter,args,opaque)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 -> VAR1 -> VAR2 ) ( VAR1 , VAR3 , VAR4 )
  ORIGINAL[4]: filter -> filter -> init_opaque
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[5]: filter -> filter
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR1
  ORIGINAL[6]: filter -> filter -> init
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[7]: filter -> filter
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR1
  ORIGINAL[8]: init_opaque
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: filter
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: init_opaque
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: filter
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: init
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: ret
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: filter
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: filter
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: args
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: opaque
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: filter
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: ret
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064771553
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> channels
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: channels
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: link
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640429
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477311
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memset(registered_avfilters,0,sizeof(registered_avfilters))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , sizeof ( VAR1 ) )
  ORIGINAL[1]: sizeof(registered_avfilters)
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: <global> registered_avfilters
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> registered_avfilters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719476848
FRAGMENT_COUNT: 9
  ORIGINAL[0]: src[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: i == 0 || src[i-1] != '\\\\'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[2]: i == 0 || src[i-1] != '\\\\'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[3]: src[i] == '&'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] == '&'
  ORIGINAL[4]: i == 0 || src[i-1] != '\\\\'
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: src
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771954
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ctx -> name?(ctx -> name) : ctx -> filter -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> name? ( VAR1 -> VAR2 ) : VAR1 -> VAR3 -> VAR2
  ORIGINAL[1]: ctx -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ctx -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: name
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640289
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771418
FRAGMENT_COUNT: 5
  ORIGINAL[0]: av_realloc(( *links),sizeof(AVFilterLink *) * ( *count + 1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( *links ) , sizeof ( VAR1 * ) * ( *count + 1 ) )
  ORIGINAL[1]: *links
  TYPE[1]: CALL
  TOKENIZED[1]: *links
  ORIGINAL[2]: sizeof(AVFilterLink *) * ( *count + 1)
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 * ) * ( *count + 1 )
  ORIGINAL[3]: sizeof(AVFilterLink *)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 * )
  ORIGINAL[4]: *count + 1
  TYPE[4]: CALL
  TOKENIZED[4]: *count + 1

CENTER_NODE: 47244640428
FRAGMENT_COUNT: 1
  ORIGINAL[0]: pbuf -> audio -> nb_samples >= link -> min_samples
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 >= VAR4 -> VAR5

CENTER_NODE: 47244640299
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !(103 >= 100)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( 103 >= 100 )

CENTER_NODE: 30064772442
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .item_name = default_filter_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476771
FRAGMENT_COUNT: 6
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: sprintf(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: filepath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771844
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret == -((int )(('E' | 'O' << 8 | 'F' << 16) | ((unsigned int )32) << 24)) && link -> partial_buf
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == - ( ( int ) ( ( 'E' | 'O' << 8 | 'F' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) && VAR2 -> VAR3
  ORIGINAL[1]: 'E' | 'O' << 8 | 'F' << 16
  TYPE[1]: CALL
  TOKENIZED[1]: 'E' | 'O' << 8 | 'F' << 16
  ORIGINAL[2]: 'E' | 'O' << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 'E' | 'O' << 8
  ORIGINAL[3]: 'F' << 16
  TYPE[3]: CALL
  TOKENIZED[3]: 'F' << 16

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *stonesoup_s != (char)0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_s != ( char ) 0
  ORIGINAL[1]: *stonesoup_s
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_s
  ORIGINAL[2]: (*stonesoup_tainted_buff)[stonesoup_s - stonesoup_shm]
  TYPE[2]: CALL
  TOKENIZED[2]: ( *stonesoup_tainted_buff ) [ VAR1 - VAR2 ]
  ORIGINAL[3]: *stonesoup_s
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_s
  ORIGINAL[4]: stonesoup_s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640354
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771604
FRAGMENT_COUNT: 6
  ORIGINAL[0]: link -> out_samplerates
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: &filt -> outputs[filt_dstpad_idx] -> out_samplerates
  TYPE[1]: CALL
  TOKENIZED[1]: &filt -> VAR1 [ VAR2 ] -> VAR3
  ORIGINAL[2]: filt -> outputs[filt_dstpad_idx] -> out_samplerates
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] -> VAR4
  ORIGINAL[3]: filt -> outputs[filt_dstpad_idx]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: filt -> outputs[filt_dstpad_idx]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: out_samplerates
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477079
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> closed = closed
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: link -> closed
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: closed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640431
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640350
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771239
FRAGMENT_COUNT: 3
  ORIGINAL[0]: perms & 0x04?\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x04?\
  ORIGINAL[1]: perms & 0x04
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x04
  ORIGINAL[2]: perms
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771899
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: for (i = 0;registered_avfilters[i];i++)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( VAR1 = 0 ; VAR2 [ VAR1 ] ; i++ )
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> registered_avfilters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064772433
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: subtransversal_hepatopexia
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640385
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !filter
  TYPE[0]: CALL
  TOKENIZED[0]: !filter

CENTER_NODE: 30064771942
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &registered_avfilters[0]
  TYPE[0]: CALL
  TOKENIZED[0]: &registered_avfilters [ 0 ]
  ORIGINAL[1]: registered_avfilters[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: filter
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> registered_avfilters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 47244640355
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640297
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771388
FRAGMENT_COUNT: 2
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: sizeof(\
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( \

CENTER_NODE: 47244640295
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640432
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477201
FRAGMENT_COUNT: 9
  ORIGINAL[0]: link -> type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: link -> w
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: link -> h
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: link -> format
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: link -> src
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: link -> dst
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: w
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: link
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: link
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771251
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ref -> buf
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ref -> buf -> refcount
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: ref -> buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: refcount
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ref
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ref
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640379
FRAGMENT_COUNT: 2
  ORIGINAL[0]: prev &&  *(filter_ptr = av_filter_next(filter_ptr))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && * ( VAR2 = FUN1 ( VAR2 ) )
  ORIGINAL[1]: while (prev &&  *(filter_ptr = av_filter_next(filter_ptr)))
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( VAR1 && * ( VAR2 = FUN1 ( VAR2 ) ) )

CENTER_NODE: 30064772448
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .category = AV_CLASS_CATEGORY_FILTER
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: category
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: AV_CLASS_CATEGORY_FILTER
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771390
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *c = filter -> command_queue
  TYPE[0]: CALL
  TOKENIZED[0]: *c = VAR1 -> VAR2
  ORIGINAL[1]: filter -> command_queue
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: command_queue
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filter
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filter
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477639
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = filter_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477465
FRAGMENT_COUNT: 3
  ORIGINAL[0]: pads[pad_idx]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: pads
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pad_idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 5
  ORIGINAL[0]: a >= 'a'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 'a'
  ORIGINAL[1]: a -= 'a'-'A'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -= 'a'-'A'
  ORIGINAL[2]: 'a'-'A'
  TYPE[2]: CALL
  TOKENIZED[2]: 'a'-'A'
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: a
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477051
FRAGMENT_COUNT: 5
  ORIGINAL[0]: src -> output_pads[srcpad] . type != dst -> input_pads[dstpad] . type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] . VAR4 != VAR5 -> VAR6 [ VAR7 ] . VAR4
  ORIGINAL[1]: src -> outputs[srcpad]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: src -> outputs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: srcpad
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: srcpad
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640353
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771933
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(!input -> filter_frame || !input -> start_frame && !input -> end_frame)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( !input -> VAR1 || !input -> VAR2 && !input -> VAR3 )
  ORIGINAL[1]: av_log(((void *)0),0,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( void * ) 0 ) , 0 , \
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: abort()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )

CENTER_NODE: 47244640402
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i < filter -> nb_inputs
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2 -> VAR3
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: for (i = 0;i < filter -> nb_inputs;i++)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( VAR1 = 0 ; VAR1 < VAR2 -> VAR3 ; i++ )

CENTER_NODE: 30064771382
FRAGMENT_COUNT: 7
  ORIGINAL[0]: overemulate_eightling != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: organogel_contours != 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 0
  ORIGINAL[2]: free(((char *)organogel_contours))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( char * ) VAR1 ) )
  ORIGINAL[3]: (char *)organogel_contours
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) VAR1
  ORIGINAL[4]: stonesoup_close_printf_context()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )
  ORIGINAL[5]: organogel_contours
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: organogel_contours
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640452
FRAGMENT_COUNT: 1
  ORIGINAL[0]: (shmid = shmget(key, shmsz, IPC_CREAT | 0666)) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 | 0666 ) ) < 0

CENTER_NODE: 68719477315
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !pads
  TYPE[0]: CALL
  TOKENIZED[0]: !pads
  ORIGINAL[1]: count = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: count
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: count
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: count
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771873
FRAGMENT_COUNT: 18
  ORIGINAL[0]: pts == ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( VAR2 ) 0x8000000000000000UL )
  ORIGINAL[1]: (int64_t )0x8000000000000000UL
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[2]: link -> current_pts = av_rescale_q(pts,link -> time_base,((AVRational ){(1), (1000000)}))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = FUN1 ( VAR3 , VAR1 -> VAR4 , ( ( VAR5 ) { ( 1 ) , ( 1000000 ) } ) )
  ORIGINAL[3]: link -> current_pts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: av_rescale_q(pts,link -> time_base,((AVRational ){(1), (1000000)}))
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 -> VAR3 , ( ( VAR4 ) { ( 1 ) , ( 1000000 ) } ) )
  ORIGINAL[5]: link -> time_base
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: (AVRational ){(1), (1000000)}
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 ) { ( 1 ) , ( 1000000 ) }
  ORIGINAL[7]: {(1), (1000000)}
  TYPE[7]: CALL
  TOKENIZED[7]: { ( 1 ) , ( 1000000 ) }
  ORIGINAL[8]: link -> graph && link -> age_index >= 0
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 && VAR1 -> VAR3 >= 0
  ORIGINAL[9]: link -> graph
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: current_pts
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: time_base
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: graph
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: pts
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: link
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: pts
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: link
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: link
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 30064771861
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < link -> src -> nb_inputs
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3 -> VAR4
  ORIGINAL[1]: !link -> src -> inputs[i]
  TYPE[1]: CALL
  TOKENIZED[1]: !link -> VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: link -> src -> inputs[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[3]: link -> src -> inputs
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: link -> src -> inputs[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[5]: link -> src -> inputs
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ( *link) -> pool
  TYPE[0]: CALL
  TOKENIZED[0]: ( *link ) -> VAR1

CENTER_NODE: 47244640430
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772207
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pads[pad_idx] . name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[1]: pads[pad_idx]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pads
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pad_idx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772394
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !link -> h
  TYPE[0]: CALL
  TOKENIZED[0]: !link -> VAR1
  ORIGINAL[1]: link -> h = inlink -> h
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3 -> VAR2
  ORIGINAL[2]: !link -> w || !link -> h
  TYPE[2]: CALL
  TOKENIZED[2]: !link -> VAR1 || !link -> VAR2
  ORIGINAL[3]: break;
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: break ;
  ORIGINAL[4]: inlink
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: config_link
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

