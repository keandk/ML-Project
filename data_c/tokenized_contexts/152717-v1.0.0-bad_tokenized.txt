# Tokenized code fragments for 152717-v1.0.0-bad
# Total center nodes processed: 86
# Total code fragments found: 277

CENTER_NODE: 30064773085
FRAGMENT_COUNT: 13
  ORIGINAL[0]: !((buf -> flags) & 1 << 3)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) & 1 << 3 )
  ORIGINAL[1]: (buf -> flags) & 1 << 3
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 1 << 3
  ORIGINAL[2]: buf -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 1 << 3
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 3
  ORIGINAL[4]: buf -> flags
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf -> flags
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: flags
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719477940
FRAGMENT_COUNT: 10
  ORIGINAL[0]: buf -> buf_hdr_lock
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: clear_dirty && !((buf -> flags) & 1 << 5)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 && ! ( ( VAR2 -> VAR3 ) & 1 << 5 )
  ORIGINAL[4]: buf -> flags
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf -> flags &= ~(1 << 0 | 1 << 7)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 &= ~ ( 1 << 0 | 1 << 7 )
  ORIGINAL[6]: buf -> flags
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf -> flags
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: flags
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640373
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772854
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !((((void )((bool )1)) , buffer != 0))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( ( void ) ( ( VAR1 ) 1 ) ) , VAR2 != 0 ) )
  ORIGINAL[1]: elog_finish(20,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 20 , \
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477611
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buffer - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BufferDescriptors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772838
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ReleaseBuffer(buffer)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771926
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tas(&buf -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &buf -> VAR1 )
  ORIGINAL[1]: s_lock(&buf -> buf_hdr_lock,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &buf -> VAR1 , \
  ORIGINAL[2]: &buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &buf -> VAR1

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 13
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: strcmp(getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( FUN2 ( \
  ORIGINAL[3]: *stonesoup_server = mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_server = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: mg_set_option(stonesoup_server, \
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , \
  ORIGINAL[6]: mg_destroy_server(&stonesoup_server)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( &stonesoup_server )
  ORIGINAL[7]: &stonesoup_server
  TYPE[7]: CALL
  TOKENIZED[7]: &stonesoup_server
  ORIGINAL[8]: if (getenv(\
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: if ( FUN1 ( \
  ORIGINAL[9]: stonesoup_server
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: NULL
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stonesoup_server
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: stonesoup_server
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 47244640389
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640497
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640441
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772248
FRAGMENT_COUNT: 3
  ORIGINAL[0]: AbortBufferIO()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: UnlockBuffers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: AtProcExit_LocalBuffers()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 68719477849
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: BufferDescriptors[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BufferDescriptors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772246
FRAGMENT_COUNT: 1
  ORIGINAL[0]: on_shmem_exit(AtProcExit_Buffers,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )

CENTER_NODE: 68719478001
FRAGMENT_COUNT: 4
  ORIGINAL[0]: acadialite_subtotalled != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: (void *)acadialite_subtotalled
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) VAR1
  ORIGINAL[2]: acadialite_subtotalled
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: acadialite_subtotalled
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ReadBuffer_common(smgr,'p',forkNum,blockNum,mode,strategy,&hit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 'p' , VAR2 , VAR3 , VAR4 , VAR5 , &hit )
  ORIGINAL[1]: &hit
  TYPE[1]: CALL
  TOKENIZED[1]: &hit
  ORIGINAL[2]: smgr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: forkNum
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: blockNum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mode
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strategy
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772288
FRAGMENT_COUNT: 6
  ORIGINAL[0]: CheckpointStats . ckpt_sync_t = GetCurrentTimestamp()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: CheckpointStats . ckpt_sync_t
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: GetCurrentTimestamp()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: ckpt_sync_t
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: CheckpointStats
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: CheckpointStats
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640437
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477692
FRAGMENT_COUNT: 7
  ORIGINAL[0]: rel -> rd_smgr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: rel -> rd_smgr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: rel -> rd_node
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: rel -> rd_backend
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: rel -> rd_rel
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: rd_rel
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: rel
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477121
FRAGMENT_COUNT: 20
  ORIGINAL[0]: buf -> content_lock
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: buf -> content_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf -> content_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf -> buf_id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf -> refcount == 1 && !(oldFlags & 1 << 0)
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 == 1 && ! ( VAR3 & 1 << 0 )
  ORIGINAL[7]: buf -> refcount
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: buf -> buf_hdr_lock
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: buf -> tag
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: relpersistence == 'p'
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 == 'p'
  ORIGINAL[11]: buf -> flags |= 1 << 2 | 1 << 8
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 |= 1 << 2 | 1 << 8
  ORIGINAL[12]: buf -> flags
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: buf -> flags |= 1 << 2
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2 |= 1 << 2
  ORIGINAL[14]: buf -> flags
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: buf -> usage_count
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2
  ORIGINAL[16]: usage_count
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buf
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: buf
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: buf
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 47244640323
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719477799
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ResourceOwnerRememberBuffer(CurrentResourceOwner,buffer)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: buffer < 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 0
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772280
FRAGMENT_COUNT: 12
  ORIGINAL[0]: elog_finish(19,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 19 , \
  ORIGINAL[1]: buf -> tag . blockNum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: buf -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf -> refcount
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: flags
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buffer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: path
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: loccount
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640299
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477673
FRAGMENT_COUNT: 3
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773040
FRAGMENT_COUNT: 21
  ORIGINAL[0]: !ConditionalLockBuffer(buffer)
  TYPE[0]: CALL
  TOKENIZED[0]: !ConditionalLockBuffer ( VAR1 )
  ORIGINAL[1]: bufHdr -> refcount == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 == 1
  ORIGINAL[2]: bufHdr -> refcount
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock)) = 0
  TYPE[3]: CALL
  TOKENIZED[3]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) ) = 0
  ORIGINAL[4]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock))
  TYPE[4]: CALL
  TOKENIZED[4]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) )
  ORIGINAL[5]: (volatile slock_t *)(&bufHdr -> buf_hdr_lock)
  TYPE[5]: CALL
  TOKENIZED[5]: ( volatile VAR1 * ) ( &bufHdr -> VAR2 )
  ORIGINAL[6]: &bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &bufHdr -> VAR1
  ORIGINAL[7]: bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: (bool )1
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 ) 1
  ORIGINAL[9]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock)) = 0
  TYPE[9]: CALL
  TOKENIZED[9]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) ) = 0
  ORIGINAL[10]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock))
  TYPE[10]: CALL
  TOKENIZED[10]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) )
  ORIGINAL[11]: (volatile slock_t *)(&bufHdr -> buf_hdr_lock)
  TYPE[11]: CALL
  TOKENIZED[11]: ( volatile VAR1 * ) ( &bufHdr -> VAR2 )
  ORIGINAL[12]: &bufHdr -> buf_hdr_lock
  TYPE[12]: CALL
  TOKENIZED[12]: &bufHdr -> VAR1
  ORIGINAL[13]: bufHdr -> buf_hdr_lock
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: LockBuffer(buffer,0)
  TYPE[14]: CALL
  TOKENIZED[14]: FUN1 ( VAR1 , 0 )
  ORIGINAL[15]: (bool )0
  TYPE[15]: CALL
  TOKENIZED[15]: ( VAR1 ) 0
  ORIGINAL[16]: buf_hdr_lock
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buf_hdr_lock
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: bufHdr
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: bufHdr
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: buffer
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 47244640516
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640532
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640433
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640341
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772205
FRAGMENT_COUNT: 9
  ORIGINAL[0]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[1]: &bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &bufHdr -> VAR1
  ORIGINAL[2]: bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &bufHdr -> VAR1
  ORIGINAL[4]: bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &bufHdr -> VAR1
  ORIGINAL[6]: bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: &bufHdr -> VAR1
  ORIGINAL[8]: bufHdr -> buf_hdr_lock
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ev == MG_REQUEST
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: strcmp(ifmatch_header, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: strcmp(ifmatch_header, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: stonesoup_printf_context = conn
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2
  ORIGINAL[4]: stonesoup_handle_taint(stonesoup_tainted_buff)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: if (strcmp(ifmatch_header, \
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: if ( FUN1 ( VAR1 , \
  ORIGINAL[6]: <global> stonesoup_printf_context
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: conn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stonesoup_tainted_buff
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: MG_TRUE
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640533
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477266
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PrivateRefCount[b]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: PrivateRefCount
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640465
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476780
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ReadBufferExtended(reln,MAIN_FORKNUM,blockNum,RBM_NORMAL,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: MAIN_FORKNUM
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: blockNum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: RBM_NORMAL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640469
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640537
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064773069
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(sv_flags & 1 << 3)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 & 1 << 3 )
  ORIGINAL[1]: sv_flags & 1 << 3
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 1 << 3
  ORIGINAL[2]: 1 << 3
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << 3
  ORIGINAL[3]: sv_flags
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773243
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: errcontext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: bufHdr -> tag . blockNum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773229
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: errcontext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: bufHdr -> tag . blockNum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477607
FRAGMENT_COUNT: 3
  ORIGINAL[0]: smgrnblocks(relation -> rd_smgr,forkNum)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: relation -> rd_smgr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: forkNum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640484
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640449
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640383
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640529
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640538
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771137
FRAGMENT_COUNT: 5
  ORIGINAL[0]: errstart(20,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 20 , \
  ORIGINAL[1]: errfinish(errcode((48 - 48 & 0x3F) + ((65 - 48 & 0x3F) << 6) + ((48 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + ((48 - 48 & 0x3F) << 24)),errmsg(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( ( 48 - 48 & 0x3F ) + ( ( 65 - 48 & 0x3F ) << 6 ) + ( ( 48 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( 48 - 48 & 0x3F ) << 24 ) ) , FUN3 ( \
  ORIGINAL[2]: errcode((48 - 48 & 0x3F) + ((65 - 48 & 0x3F) << 6) + ((48 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + ((48 - 48 & 0x3F) << 24))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( 48 - 48 & 0x3F ) + ( ( 65 - 48 & 0x3F ) << 6 ) + ( ( 48 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( 48 - 48 & 0x3F ) << 24 ) )
  ORIGINAL[3]: (48 - 48 & 0x3F) + ((65 - 48 & 0x3F) << 6) + ((48 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + ((48 - 48 & 0x3F) << 24)
  TYPE[3]: CALL
  TOKENIZED[3]: ( 48 - 48 & 0x3F ) + ( ( 65 - 48 & 0x3F ) << 6 ) + ( ( 48 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( 48 - 48 & 0x3F ) << 24 )
  ORIGINAL[4]: errmsg(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( \

CENTER_NODE: 30064772821
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: LocalRefCount[-buffer - 1]--
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ -buffer - 1 ] --
  ORIGINAL[2]: LocalRefCount[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ -buffer - 1 ]

CENTER_NODE: 47244640502
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640543
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640439
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771801
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 68719477846
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mode == 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 2
  ORIGINAL[1]: elog_finish(20,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 20 , \
  ORIGINAL[2]: mode
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: mode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477515
FRAGMENT_COUNT: 2
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640367
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772300
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: bufHdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772369
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !StartBufferIO(buf,((bool )0))
  TYPE[0]: CALL
  TOKENIZED[0]: !StartBufferIO ( VAR1 , ( ( VAR2 ) 0 ) )
  ORIGINAL[1]: &buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &buf -> VAR1
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &buf -> VAR1
  ORIGINAL[4]: buf -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[5]: CALL
  TOKENIZED[5]: ( volatile VAR1 * ) ( &buf -> VAR2 )
  ORIGINAL[6]: &buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &buf -> VAR1
  ORIGINAL[7]: buf -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772312
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: bufHdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rnode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772522
FRAGMENT_COUNT: 4
  ORIGINAL[0]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode && bufHdr -> tag . forkNum == forkNum && bufHdr -> tag . blockNum >= firstDelBlock
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7 && VAR1 -> VAR2 . VAR8 == VAR8 && VAR1 -> VAR2 . VAR9 >= VAR10
  ORIGINAL[1]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock)) = 0
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) ) = 0
  ORIGINAL[2]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) )
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772956
FRAGMENT_COUNT: 6
  ORIGINAL[0]: PrivateRefCount[buffer - 1] != 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 - 1 ] != 1
  ORIGINAL[1]: PrivateRefCount[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[2]: elog_finish(20,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 20 , \
  ORIGINAL[3]: PrivateRefCount[buffer - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[4]: buffer - 1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 - 1
  ORIGINAL[5]: PrivateRefCount
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 2
  ORIGINAL[0]: num_to_scan-- > 0
  TYPE[0]: CALL
  TOKENIZED[0]: num_to_scan-- > 0
  ORIGINAL[1]: while (num_to_scan-- > 0)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( num_to_scan-- > 0 )

CENTER_NODE: 47244640458
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640477
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771993
FRAGMENT_COUNT: 11
  ORIGINAL[0]: PrivateRefCount[b] == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 0
  ORIGINAL[1]: (buf -> flags) & 1 << 6
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 1 << 6
  ORIGINAL[2]: buf -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 1 << 6
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 6
  ORIGINAL[4]: buf -> flags
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: flags
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477494
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AtEOXact_LocalBuffers(isCommit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: isCommit
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772558
FRAGMENT_COUNT: 7
  ORIGINAL[0]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6
  ORIGINAL[1]: bufHdr -> tag . rnode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: bufHdr -> tag
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tag
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rnode
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bufHdr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477890
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bufid < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: PrivateRefCount[bufid]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: bufid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: PrivateRefCount
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772773
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < NBuffers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: for (i = 0;i < NBuffers;i++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = 0 ; VAR1 < VAR2 ; i++ )
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640547
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477164
FRAGMENT_COUNT: 3
  ORIGINAL[0]: PrivateRefCount[buf -> buf_id] != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 -> VAR3 ] != 0
  ORIGINAL[1]: elog_start(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __func__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

