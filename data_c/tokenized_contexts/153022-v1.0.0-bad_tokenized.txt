# Tokenized code fragments for 153022-v1.0.0-bad
# Total center nodes processed: 95
# Total code fragments found: 418

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064772170
FRAGMENT_COUNT: 3
  ORIGINAL[0]: flags = (av_get_cpu_flags())
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( ) )
  ORIGINAL[1]: av_get_cpu_flags()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: flags
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640437
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478012
FRAGMENT_COUNT: 7
  ORIGINAL[0]: par = strchr(topic,'=')
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , '=' )
  ORIGINAL[1]: *(par++) = 0
  TYPE[1]: CALL
  TOKENIZED[1]: * ( par++ ) = 0
  ORIGINAL[2]: *(par++)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( par++ )
  ORIGINAL[3]: par++
  TYPE[3]: CALL
  TOKENIZED[3]: par++
  ORIGINAL[4]: par
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: par
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: topic
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719478512
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < sizeof(frame -> data) / sizeof(frame -> data[0])
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < sizeof ( VAR2 -> VAR3 ) / sizeof ( VAR2 -> VAR3 [ 0 ] )
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: frame -> data[i] = ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] = ( ( void * ) 0 )
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640412
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772718
FRAGMENT_COUNT: 1
  ORIGINAL[0]: printf(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *stonesoup_s != (char)0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_s != ( char ) 0
  ORIGINAL[1]: *stonesoup_s
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_s
  ORIGINAL[2]: (*stonesoup_tainted_buff)[stonesoup_s - stonesoup_shm]
  TYPE[2]: CALL
  TOKENIZED[2]: ( *stonesoup_tainted_buff ) [ VAR1 - VAR2 ]
  ORIGINAL[3]: *stonesoup_s
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_s
  ORIGINAL[4]: stonesoup_s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640477
FRAGMENT_COUNT: 3
  ORIGINAL[0]: codec = next_codec_for_id(id,codec,encoder)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR1 , VAR3 )
  ORIGINAL[1]: printf(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: while (codec = next_codec_for_id(id,codec,encoder))
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( VAR1 = FUN1 ( VAR2 , VAR1 , VAR3 ) )

CENTER_NODE: 68719477458
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *filename_template = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *filename_template = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: filename_template
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename_template
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filename_template
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478136
FRAGMENT_COUNT: 6
  ORIGINAL[0]: s -> oformat
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> oformat
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: check_stream_specifier(s,st,(p + 1))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , ( VAR3 + 1 ) )
  ORIGINAL[3]: p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: st
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640427
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477436
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i < sizeof(log_levels) / sizeof(log_levels[0])
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < sizeof ( VAR2 ) / sizeof ( VAR2 [ 0 ] )
  ORIGINAL[1]: log_levels[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: log_levels[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: log_levels
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: log_levels
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772364
FRAGMENT_COUNT: 1
  ORIGINAL[0]: print_program_info(0,32)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 0 , 32 )

CENTER_NODE: 30064773523
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_free(fb)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: fb
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772396
FRAGMENT_COUNT: 14
  ORIGINAL[0]: ifmt = av_iformat_next(ifmt)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[1]: av_iformat_next(ifmt)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (name == ((void *)0) || strcmp(ifmt -> name,name) < 0) && strcmp(ifmt -> name,last_name) > 0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 == ( ( void * ) 0 ) || FUN1 ( VAR2 -> VAR1 , VAR1 ) < 0 ) && FUN1 ( VAR2 -> VAR1 , VAR3 ) > 0
  ORIGINAL[3]: name == ((void *)0) || strcmp(ifmt -> name,name) < 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == ( ( void * ) 0 ) || FUN1 ( VAR2 -> VAR1 , VAR1 ) < 0
  ORIGINAL[4]: name == ((void *)0)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[5]: (void *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) 0
  ORIGINAL[6]: name && strcmp(ifmt -> name,name) == 0
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 && FUN1 ( VAR2 -> VAR1 , VAR1 ) == 0
  ORIGINAL[7]: name == ((void *)0)
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[8]: while (ifmt = av_iformat_next(ifmt))
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: while ( VAR1 = FUN1 ( VAR1 ) )
  ORIGINAL[9]: ifmt
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ifmt
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: name
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: name
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: name
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064772431
FRAGMENT_COUNT: 21
  ORIGINAL[0]: c -> long_name?c -> long_name : \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> long_name?c -> VAR2 : \
  ORIGINAL[1]: c -> long_name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: c -> long_name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: long_name
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: long_name
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: c
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: c
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: c
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: c
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: c
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: c
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: c
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: c
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: c
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: c
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: c
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: c
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: c
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: c
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: c
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 30064771258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: printf(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \

CENTER_NODE: 68719477925
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !name
  TYPE[0]: CALL
  TOKENIZED[0]: !name
  ORIGINAL[1]: printf(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: descr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: name
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: name
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640577
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640580
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772721
FRAGMENT_COUNT: 2
  ORIGINAL[0]: printf(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: pix_desc
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771716
FRAGMENT_COUNT: 8
  ORIGINAL[0]: l -> groups
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *l -> groups
  TYPE[1]: CALL
  TOKENIZED[1]: *l -> VAR1
  ORIGINAL[2]: l -> groups[l -> nb_groups - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR1 -> VAR3 - 1 ]
  ORIGINAL[3]: l -> groups
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: groups
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: l
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: l
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: l
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640475
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477507
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *tail
  TYPE[0]: CALL
  TOKENIZED[0]: *tail
  ORIGINAL[1]: exit(1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 1 )
  ORIGINAL[2]: av_max_alloc(max)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: max
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: max
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773484
FRAGMENT_COUNT: 6
  ORIGINAL[0]: buf -> refcount > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > 0
  ORIGINAL[1]: buf -> refcount
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf -> refcount
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: refcount
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772365
FRAGMENT_COUNT: 1
  ORIGINAL[0]: print_all_libs_info(2,32)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 , 32 )

CENTER_NODE: 47244640407
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 1
  ORIGINAL[0]: po -> flags & 0x00002
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 & 0x00002

CENTER_NODE: 30064771484
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < g -> nb_opts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: ret = write_option(optctx,o -> opt,o -> key,o -> val)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 , VAR3 -> VAR5 , VAR3 -> VAR6 )
  ORIGINAL[2]: write_option(optctx,o -> opt,o -> key,o -> val)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR2 -> VAR4 , VAR2 -> VAR5 )
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477082
FRAGMENT_COUNT: 8
  ORIGINAL[0]: i < argc
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: *cur_opt = argv[i]
  TYPE[1]: CALL
  TOKENIZED[1]: *cur_opt = VAR1 [ VAR2 ]
  ORIGINAL[2]: cur_opt++
  TYPE[2]: CALL
  TOKENIZED[2]: cur_opt++
  ORIGINAL[3]: cur_opt[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ]
  ORIGINAL[4]: cur_opt[1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 1 ]
  ORIGINAL[5]: cur_opt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cur_opt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cur_opt
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719478354
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *size < new_size
  TYPE[0]: CALL
  TOKENIZED[0]: *size < VAR1
  ORIGINAL[1]: *size
  TYPE[1]: CALL
  TOKENIZED[1]: *size
  ORIGINAL[2]: *size
  TYPE[2]: CALL
  TOKENIZED[2]: *size
  ORIGINAL[3]: new_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476771
FRAGMENT_COUNT: 6
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: sprintf(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: filepath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772715
FRAGMENT_COUNT: 3
  ORIGINAL[0]: **filter __attribute__((unused))  = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: **filter FUN1 ( ( VAR1 ) ) = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: filter
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772515
FRAGMENT_COUNT: 10
  ORIGINAL[0]: prev = (av_codec_next(prev))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR1 ) )
  ORIGINAL[1]: (prev -> id) == id
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) == VAR2
  ORIGINAL[2]: prev -> id
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: id
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: prev
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: prev
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: id
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: prev
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: prev
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: prev
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771171
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]

CENTER_NODE: 30064773656
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *apiculturist_helaine)))))))))))))))))))))))))))))))))))))))))))
  TYPE[0]: CALL
  TOKENIZED[0]: * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *apiculturist_helaine ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
  ORIGINAL[1]: *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *apiculturist_helaine))))))))))))))))))))))))))))))))))))))))))
  TYPE[1]: CALL
  TOKENIZED[1]: * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *apiculturist_helaine ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
  ORIGINAL[2]: *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *apiculturist_helaine)))))))))))))))))))))))))))))))))))))))))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *apiculturist_helaine ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )

CENTER_NODE: 47244640502
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064773531
FRAGMENT_COUNT: 5
  ORIGINAL[0]: av_freep((&buf -> base[0]))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( &buf -> VAR1 [ 0 ] ) )
  ORIGINAL[1]: &buf -> base[0]
  TYPE[1]: CALL
  TOKENIZED[1]: &buf -> VAR1 [ 0 ]
  ORIGINAL[2]: buf -> base[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ 0 ]
  ORIGINAL[3]: buf -> base
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773191
FRAGMENT_COUNT: 5
  ORIGINAL[0]: okinawan_josephson != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: monellin_herniary = &passymeasure_humber
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = &passymeasure_humber
  ORIGINAL[2]: &passymeasure_humber
  TYPE[2]: CALL
  TOKENIZED[2]: &passymeasure_humber
  ORIGINAL[3]: monellin_herniary
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: replate_gawish
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477216
FRAGMENT_COUNT: 9
  ORIGINAL[0]: i < nb_groups
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: *p = &groups[i]
  TYPE[1]: CALL
  TOKENIZED[1]: *p = &groups [ VAR1 ]
  ORIGINAL[2]: &groups[i]
  TYPE[2]: CALL
  TOKENIZED[2]: &groups [ VAR1 ]
  ORIGINAL[3]: p -> sep
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: p -> sep
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: groups
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: p
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: p
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771268
FRAGMENT_COUNT: 6
  ORIGINAL[0]: child = av_opt_child_class_next(class,child)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR1 )
  ORIGINAL[1]: show_help_children(child,flags)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: while (child = av_opt_child_class_next(class,child))
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( VAR1 = FUN1 ( VAR2 , VAR1 ) )
  ORIGINAL[3]: child
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: child
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: flags
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 4
  ORIGINAL[0]: type == 0x0400 && ((int64_t )d) != d
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0x0400 && ( ( VAR2 ) VAR3 ) != VAR3
  ORIGINAL[1]: error = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = \
  ORIGINAL[2]: error
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: error
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771239
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (po -> flags & req_flags) != req_flags || alt_flags && !(po -> flags & alt_flags)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 & VAR3 ) != VAR3 || VAR4 && ! ( VAR1 -> VAR2 & VAR4 )
  ORIGINAL[1]: (po -> flags & req_flags) != req_flags
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 & VAR3 ) != VAR3
  ORIGINAL[2]: alt_flags && !(po -> flags & alt_flags)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 && ! ( VAR2 -> VAR3 & VAR1 )
  ORIGINAL[3]: !(po -> flags & alt_flags)
  TYPE[3]: CALL
  TOKENIZED[3]: ! ( VAR1 -> VAR2 & VAR3 )
  ORIGINAL[4]: alt_flags
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772692
FRAGMENT_COUNT: 1
  ORIGINAL[0]: print_codecs(0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 0 )

CENTER_NODE: 30064773758
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *out_filename = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: *out_filename = VAR1
  ORIGINAL[1]: out_filename
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: out_file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478105
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ret = avformat_match_stream_specifier(s,st,spec)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: ret < 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 0
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772743
FRAGMENT_COUNT: 2
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772713
FRAGMENT_COUNT: 5
  ORIGINAL[0]: name = avio_enum_protocols(&opaque,1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &opaque , 1 )
  ORIGINAL[1]: printf(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: while (name = avio_enum_protocols(&opaque,1))
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( VAR1 = FUN1 ( &opaque , 1 ) )
  ORIGINAL[3]: name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: name
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477943
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fmt_str[128]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 128 ]
  ORIGINAL[1]: i = - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = - 1
  ORIGINAL[2]: - 1
  TYPE[2]: CALL
  TOKENIZED[2]: - 1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476824
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772546
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(codecs = (av_calloc(nb_codecs,sizeof(( *codecs)))))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 = ( FUN1 ( VAR2 , sizeof ( ( *codecs ) ) ) ) )
  ORIGINAL[1]: codecs = (av_calloc(nb_codecs,sizeof(( *codecs))))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 , sizeof ( ( *codecs ) ) ) )
  ORIGINAL[2]: av_calloc(nb_codecs,sizeof(( *codecs)))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , sizeof ( ( *codecs ) ) )
  ORIGINAL[3]: codecs
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772701
FRAGMENT_COUNT: 1
  ORIGINAL[0]: printf(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_dict_free(&codec_opts)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &codec_opts )
  ORIGINAL[1]: &codec_opts
  TYPE[1]: CALL
  TOKENIZED[1]: &codec_opts
  ORIGINAL[2]: <global> resample_opts
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064772361
FRAGMENT_COUNT: 3
  ORIGINAL[0]: print_all_libs_info(1 | 2,32)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1 | 2 , 32 )
  ORIGINAL[1]: 1 | 2
  TYPE[1]: CALL
  TOKENIZED[1]: 1 | 2
  ORIGINAL[2]: idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477277
FRAGMENT_COUNT: 6
  ORIGINAL[0]: memset(octx,0,sizeof(( *octx)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , sizeof ( ( *octx ) ) )
  ORIGINAL[1]: *octx
  TYPE[1]: CALL
  TOKENIZED[1]: *octx
  ORIGINAL[2]: octx -> nb_groups
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: nb_groups
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: octx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: octx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771775
FRAGMENT_COUNT: 8
  ORIGINAL[0]: g -> opts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *g -> opts
  TYPE[1]: CALL
  TOKENIZED[1]: *g -> VAR1
  ORIGINAL[2]: g -> opts[g -> nb_opts - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR1 -> VAR3 - 1 ]
  ORIGINAL[3]: g -> opts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: opts
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: g
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: g
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: g
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477895
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bsf = av_bitstream_filter_next(bsf)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[1]: bsf -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bsf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bsf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771873
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_freep((&octx -> global_opts . opts))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( &octx -> VAR1 . VAR2 ) )
  ORIGINAL[1]: &octx -> global_opts . opts
  TYPE[1]: CALL
  TOKENIZED[1]: &octx -> VAR1 . VAR2
  ORIGINAL[2]: uninit_opts()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 30064772948
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *bufptr
  TYPE[0]: CALL
  TOKENIZED[0]: *bufptr
  ORIGINAL[1]: ret <  *size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < *size
  ORIGINAL[2]: av_free(( *bufptr))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( *bufptr ) )
  ORIGINAL[3]: *bufptr
  TYPE[3]: CALL
  TOKENIZED[3]: *bufptr
  ORIGINAL[4]: bufptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773452
FRAGMENT_COUNT: 11
  ORIGINAL[0]: buf -> w != s -> width || buf -> h != s -> height || (buf -> pix_fmt) != (s -> pix_fmt)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != VAR3 -> VAR4 || VAR1 -> VAR5 != VAR3 -> VAR6 || ( VAR1 -> VAR7 ) != ( VAR3 -> VAR7 )
  ORIGINAL[1]: (ret = alloc_buffer(pool,s,&buf)) < 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , &buf ) ) < 0
  ORIGINAL[2]: frame -> type = 2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = 2
  ORIGINAL[3]: frame -> type
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: type
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: frame
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: frame
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: frame
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: frame
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: frame
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: frame
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772894
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_toupper(c) == 'Y'
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) == 'Y'
  ORIGINAL[1]: av_toupper(c)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477514
FRAGMENT_COUNT: 4
  ORIGINAL[0]: errbuf[128]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 128 ]
  ORIGINAL[1]: errbuf[128]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 128 ]
  ORIGINAL[2]: errbuf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: errbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476848
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sizeof(line)
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( VAR1 )
  ORIGINAL[1]: line
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: line
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772363
FRAGMENT_COUNT: 1
  ORIGINAL[0]: av_log_set_callback(log_callback_help)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )

CENTER_NODE: 68719477970
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *fmt = (av_find_input_format(name))
  TYPE[0]: CALL
  TOKENIZED[0]: *fmt = ( FUN1 ( VAR1 ) )
  ORIGINAL[1]: av_find_input_format(name)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fmt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477625
FRAGMENT_COUNT: 5
  ORIGINAL[0]: flags & 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 2
  ORIGINAL[1]: version >> 16
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >> 16
  ORIGINAL[2]: version
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: version
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: version
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476933
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !strncmp(name,po -> name,len)
  TYPE[0]: CALL
  TOKENIZED[0]: !strncmp ( VAR1 , VAR2 -> VAR1 , VAR3 )
  ORIGINAL[1]: po -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: po -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: name
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: po
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: po
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772578
FRAGMENT_COUNT: 1
  ORIGINAL[0]: printf(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \

CENTER_NODE: 68719477102
FRAGMENT_COUNT: 5
  ORIGINAL[0]: p = a
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: p
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: a
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772524
FRAGMENT_COUNT: 9
  ORIGINAL[0]: (( *da) -> type) != (( *db) -> type)
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( *da ) -> VAR1 ) != ( ( *db ) -> VAR1 )
  ORIGINAL[1]: ( *da) -> type
  TYPE[1]: CALL
  TOKENIZED[1]: ( *da ) -> VAR1
  ORIGINAL[2]: *da
  TYPE[2]: CALL
  TOKENIZED[2]: *da
  ORIGINAL[3]: ( *db) -> type
  TYPE[3]: CALL
  TOKENIZED[3]: ( *db ) -> VAR1
  ORIGINAL[4]: ( *da) -> type
  TYPE[4]: CALL
  TOKENIZED[4]: ( *da ) -> VAR1
  ORIGINAL[5]: *da
  TYPE[5]: CALL
  TOKENIZED[5]: *da
  ORIGINAL[6]: *da
  TYPE[6]: CALL
  TOKENIZED[6]: *da
  ORIGINAL[7]: type
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: db
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477777
FRAGMENT_COUNT: 6
  ORIGINAL[0]: type
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: AVMEDIA_TYPE_VIDEO
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: AVMEDIA_TYPE_AUDIO
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: AVMEDIA_TYPE_DATA
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: AVMEDIA_TYPE_SUBTITLE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: AVMEDIA_TYPE_ATTACHMENT
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478090
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !f && codec_name
  TYPE[0]: CALL
  TOKENIZED[0]: !f && VAR1
  ORIGINAL[1]: !f
  TYPE[1]: CALL
  TOKENIZED[1]: !f
  ORIGINAL[2]: codec_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: codec_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771223
FRAGMENT_COUNT: 6
  ORIGINAL[0]: av_parse_time(&us,timestr,is_duration) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &us , VAR1 , VAR2 ) < 0
  ORIGINAL[1]: av_log(((void *)0),8,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( void * ) 0 ) , 8 , \
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: is_duration?\
  TYPE[3]: CALL
  TOKENIZED[3]: is_duration?\
  ORIGINAL[4]: context
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: timestr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640487
FRAGMENT_COUNT: 1
  ORIGINAL[0]: strcmp(codec -> name,desc -> name)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 -> VAR2 )

CENTER_NODE: 68719477675
FRAGMENT_COUNT: 4
  ORIGINAL[0]: printf(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: program_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: program_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: program_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772855
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (fmt -> subtitle_codec) != AV_CODEC_ID_NONE && (desc = avcodec_descriptor_get(fmt -> subtitle_codec))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) != VAR3 && ( VAR4 = FUN1 ( VAR1 -> VAR2 ) )
  ORIGINAL[1]: (fmt -> subtitle_codec) != AV_CODEC_ID_NONE
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) != VAR3
  ORIGINAL[2]: desc = avcodec_descriptor_get(fmt -> subtitle_codec)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 -> VAR3 )
  ORIGINAL[3]: avcodec_descriptor_get(fmt -> subtitle_codec)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[4]: desc
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476832
FRAGMENT_COUNT: 4
  ORIGINAL[0]: vfprintf(stdout,fmt,vl)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: stdout
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: vl
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640385
FRAGMENT_COUNT: 2
  ORIGINAL[0]: c = ( *(template++))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( * ( template++ ) )
  ORIGINAL[1]: while (c = ( *(template++)))
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( VAR1 = ( * ( template++ ) ) )

CENTER_NODE: 30064771649
FRAGMENT_COUNT: 4
  ORIGINAL[0]: opt[0] == 'v' || opt[0] == 'a'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 'v' || VAR1 [ 0 ] == 'a'
  ORIGINAL[1]: opt[0] == 'v'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 'v'
  ORIGINAL[2]: opt[0] == 'a'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 'a'
  ORIGINAL[3]: opt[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ]

CENTER_NODE: 47244640362
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773299
FRAGMENT_COUNT: 14
  ORIGINAL[0]: h = s -> height
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: s -> height
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> height
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: height
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: h
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: s
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064771173
FRAGMENT_COUNT: 8
  ORIGINAL[0]: sws_opts = sws_getContext(16,16,AV_PIX_FMT_YUV420P,16,16,AV_PIX_FMT_YUV420P,4,((void *)0),((void *)0),((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( 16 , 16 , VAR2 , 16 , 16 , VAR2 , 4 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[1]: sws_getContext(16,16,AV_PIX_FMT_YUV420P,16,16,AV_PIX_FMT_YUV420P,4,((void *)0),((void *)0),((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 16 , 16 , VAR1 , 16 , 16 , VAR1 , 4 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: <global> sws_opts
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: AV_PIX_FMT_YUV420P
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: AV_PIX_FMT_YUV420P
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640432
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771954
FRAGMENT_COUNT: 21
  ORIGINAL[0]: po -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: argv[optindex]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: ret = opt_default(((void *)0),opt,argv[optindex])
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( ( ( void * ) 0 ) , VAR2 , VAR3 [ VAR4 ] )
  ORIGINAL[3]: opt_default(((void *)0),opt,argv[optindex])
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ( ( void * ) 0 ) , VAR1 , VAR2 [ VAR3 ] )
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: argv[optindex]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ VAR2 ]
  ORIGINAL[6]: ret >= 0
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 >= 0
  ORIGINAL[7]: opt[0] == 'n' && opt[1] == 'o' && (po = find_option(options,opt + 2)) && po -> name && po -> flags & 0x00002
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 [ 0 ] == 'n' && VAR1 [ 1 ] == 'o' && ( VAR2 = FUN1 ( VAR3 , VAR1 + 2 ) ) && VAR2 -> VAR4 && VAR2 -> VAR5 & 0x00002
  ORIGINAL[8]: opt[0] == 'n' && opt[1] == 'o' && (po = find_option(options,opt + 2)) && po -> name
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 [ 0 ] == 'n' && VAR1 [ 1 ] == 'o' && ( VAR2 = FUN1 ( VAR3 , VAR1 + 2 ) ) && VAR2 -> VAR4
  ORIGINAL[9]: opt[0] == 'n' && opt[1] == 'o' && (po = find_option(options,opt + 2))
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 [ 0 ] == 'n' && VAR1 [ 1 ] == 'o' && ( VAR2 = FUN1 ( VAR3 , VAR1 + 2 ) )
  ORIGINAL[10]: opt[0] == 'n' && opt[1] == 'o'
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 [ 0 ] == 'n' && VAR1 [ 1 ] == 'o'
  ORIGINAL[11]: opt[0] == 'n'
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 [ 0 ] == 'n'
  ORIGINAL[12]: opt[0]
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 [ 0 ]
  ORIGINAL[13]: argv
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: optindex
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ret
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: opt
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: argv
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: optindex
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: ret
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: opt
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 30064772621
FRAGMENT_COUNT: 20
  ORIGINAL[0]: desc -> long_name?desc -> long_name : \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> long_name?desc -> VAR2 : \
  ORIGINAL[1]: desc -> long_name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: desc -> long_name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: long_name
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: desc
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: desc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: desc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: desc
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: desc
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: desc
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: desc
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: desc
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: desc
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: desc
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: desc
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: desc
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: desc
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: desc
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: desc
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: desc
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064771449
FRAGMENT_COUNT: 4
  ORIGINAL[0]: handleoptions && opt[0] == '-' && opt[1] != '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR2 [ 0 ] == '-' && VAR2 [ 1 ] != '\\0'
  ORIGINAL[1]: handleoptions && opt[0] == '-'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 && VAR2 [ 0 ] == '-'
  ORIGINAL[2]: opt[1] != '\\0'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ] != '\\0'
  ORIGINAL[3]: opt[1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 1 ]

CENTER_NODE: 30064771382
FRAGMENT_COUNT: 5
  ORIGINAL[0]: po -> u . func_arg
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: ret = po -> u . func_arg(optctx,opt,arg)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3 . FUN1 ( VAR4 , VAR5 , VAR6 )
  ORIGINAL[2]: po -> u . func_arg(optctx,opt,arg)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . FUN1 ( VAR3 , VAR4 , VAR5 )
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640369
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772160
FRAGMENT_COUNT: 2
  ORIGINAL[0]: init_report(((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 1
  ORIGINAL[0]: <global> report_file
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: <global> VAR1

CENTER_NODE: 30064772693
FRAGMENT_COUNT: 1
  ORIGINAL[0]: print_codecs(1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1 )

