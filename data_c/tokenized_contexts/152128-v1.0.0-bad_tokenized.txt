# Tokenized code fragments for 152128-v1.0.0-bad
# Total center nodes processed: 49
# Total code fragments found: 139

CENTER_NODE: 30064771302
FRAGMENT_COUNT: 4
  ORIGINAL[0]: message = (apr_pvsprintf(pool,fmt,ap))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , VAR3 , VAR4 ) )
  ORIGINAL[1]: apr_pvsprintf(pool,fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: message
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640376
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640377
FRAGMENT_COUNT: 1
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771522
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_error_wrap_apr(apr_err,(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( FUN2 ( \
  ORIGINAL[1]: dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771759
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0
  ORIGINAL[1]: force_interactive
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771912
FRAGMENT_COUNT: 5
  ORIGINAL[0]: err = svn_path_cstring_from_utf8(&tmpfile_apr,tmpfile_name,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &tmpfile_apr , VAR2 , VAR3 )
  ORIGINAL[1]: svn_path_cstring_from_utf8(&tmpfile_apr,tmpfile_name,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &tmpfile_apr , VAR1 , VAR2 )
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640378
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640424
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640333
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771803
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *svn_err__temp = find_editor_binary(&editor,editor_cmd,config)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( &editor , VAR1 , VAR2 )
  ORIGINAL[1]: find_editor_binary(&editor,editor_cmd,config)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &editor , VAR1 , VAR2 )
  ORIGINAL[2]: &editor
  TYPE[2]: CALL
  TOKENIZED[2]: &editor
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: editor_cmd
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: config
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477655
FRAGMENT_COUNT: 7
  ORIGINAL[0]: fscanf(stonesoup_files,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: stonesoup_ssi < 1020
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 1020
  ORIGINAL[2]: stonesoup_ssi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_ssi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_ssi
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_ssi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_ssi
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771676
FRAGMENT_COUNT: 14
  ORIGINAL[0]: line = next_line(&str,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &str , VAR2 )
  ORIGINAL[1]: next_line(&str,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &str , VAR1 )
  ORIGINAL[2]: &str
  TYPE[2]: CALL
  TOKENIZED[2]: &str
  ORIGINAL[3]: svn_stringbuf_appendcstr(out,indent)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: svn_stringbuf_appendcstr(out,line)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: while (line = next_line(&str,pool))
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: while ( VAR1 = FUN1 ( &str , VAR2 ) )
  ORIGINAL[6]: line
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: str
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pool
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: out
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: indent
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: out
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: line
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: out
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477188
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (equals_sign = (strchr(second_colon + 1,'='))) && equals_sign != second_colon + 1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = ( FUN1 ( VAR2 + 1 , '=' ) ) ) && VAR1 != VAR2 + 1
  ORIGINAL[1]: first_colon + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: first_colon
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: first_colon
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: first_colon
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476935
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_cmdline_cstring_from_utf8(dest,svn_dirent_local_style(src,pool),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR2 , VAR3 ) , VAR3 )
  ORIGINAL[1]: svn_dirent_local_style(src,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771364
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_error_clear(err)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: err
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771654
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ( *p) == 13 || ( *p) == 10
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) == 13 || ( *p ) == 10
  ORIGINAL[1]: c =  *(p++)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = * ( p++ )
  ORIGINAL[2]: *(p++)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( p++ )
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: * stonesoup_tainted_file = 0
  TYPE[1]: CALL
  TOKENIZED[1]: * VAR1 = 0
  ORIGINAL[2]: stonesoup_tainted_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477158
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *outstr
  TYPE[0]: CALL
  TOKENIZED[0]: *outstr
  ORIGINAL[1]: *outstr
  TYPE[1]: CALL
  TOKENIZED[1]: *outstr
  ORIGINAL[2]: svn_xml_make_open_tag(outstr,pool,svn_xml_protect_pcdata,(inherited_prop?\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 , ( inherited_prop?\
  ORIGINAL[3]: svn_xml_make_open_tag(outstr,pool,svn_xml_protect_pcdata,(inherited_prop?\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 , VAR3 , ( inherited_prop?\
  ORIGINAL[4]: *outstr
  TYPE[4]: CALL
  TOKENIZED[4]: *outstr
  ORIGINAL[5]: encoding
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: outstr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: outstr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: outstr
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771205
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fstat(0,&st) == - 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 0 , &st ) == - 1
  ORIGINAL[1]: fstat(0,&st)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 0 , &st )
  ORIGINAL[2]: - 1
  TYPE[2]: CALL
  TOKENIZED[2]: - 1

CENTER_NODE: 68719476969
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *__errno_location() = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *__errno_location ( ) = 0
  ORIGINAL[1]: fflush(stream)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640406
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477012
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pb -> config_dir = config_dir
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: !non_interactive
  TYPE[1]: CALL
  TOKENIZED[1]: !non_interactive
  ORIGINAL[2]: cancel_func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: non_interactive
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: non_interactive
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476956
FRAGMENT_COUNT: 5
  ORIGINAL[0]: err = svn_cmdline_cstring_from_utf8(&out,string,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &out , VAR2 , VAR3 )
  ORIGINAL[1]: svn_cmdline_cstring_from_utf8(&out,string,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &out , VAR1 , VAR2 )
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: out
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771306
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_start(ap,fmt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: message
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771716
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !names_only
  TYPE[0]: CALL
  TOKENIZED[0]: !names_only
  ORIGINAL[1]: apr_psprintf(pool,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: propval -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: data
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: propval
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: propval
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: propval
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: propval
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640398
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771378
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *cred_p
  TYPE[0]: CALL
  TOKENIZED[0]: *cred_p
  ORIGINAL[1]: failures == 0 || failures == 0x00000008
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0 || VAR1 == 0x00000008
  ORIGINAL[2]: *( *cred_p)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( *cred_p )
  ORIGINAL[3]: *cred_p
  TYPE[3]: CALL
  TOKENIZED[3]: *cred_p
  ORIGINAL[4]: cred_p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640418
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476921
FRAGMENT_COUNT: 6
  ORIGINAL[0]: output_encoding == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_utf_cstring_from_utf8_ex2(dest,src,output_encoding,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: dest
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> output_encoding
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476922
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_cmdline_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640358
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640321
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476745
FRAGMENT_COUNT: 3
  ORIGINAL[0]: size_filepath = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: retval = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: retval
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640356
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771619
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i < config_options -> nelts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: *arg = ((svn_cmdline__config_argument_t **)(config_options -> elts))[i]
  TYPE[1]: CALL
  TOKENIZED[1]: *arg = ( ( VAR1 ** ) ( VAR2 -> VAR3 ) ) [ VAR4 ]
  ORIGINAL[2]: ((svn_cmdline__config_argument_t **)(config_options -> elts))[i]
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 ** ) ( VAR2 -> VAR3 ) ) [ VAR4 ]
  ORIGINAL[3]: (svn_cmdline__config_argument_t **)(config_options -> elts)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ** ) ( VAR2 -> VAR3 )
  ORIGINAL[4]: arg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640412
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640409
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771169
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: for (i = 0;i < size;i++)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( VAR1 = 0 ; VAR1 < VAR2 ; i++ )
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477384
FRAGMENT_COUNT: 9
  ORIGINAL[0]: c = e
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: *c
  TYPE[1]: CALL
  TOKENIZED[1]: *c
  ORIGINAL[2]: c++
  TYPE[2]: CALL
  TOKENIZED[2]: c++
  ORIGINAL[3]: !(0 != (svn_ctype_table[(unsigned char )( *c)] & 0x0002))
  TYPE[3]: CALL
  TOKENIZED[3]: ! ( 0 != ( VAR1 [ ( unsigned char ) ( *c ) ] & 0x0002 ) )
  ORIGINAL[4]: *c
  TYPE[4]: CALL
  TOKENIZED[4]: *c
  ORIGINAL[5]: e
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: c
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: c
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: c
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

