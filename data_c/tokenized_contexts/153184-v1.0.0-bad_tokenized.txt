# Tokenized code fragments for 153184-v1.0.0-bad
# Total center nodes processed: 25
# Total code fragments found: 87

CENTER_NODE: 68719477040
FRAGMENT_COUNT: 4
  ORIGINAL[0]: OPENSSL_showfatal(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: file
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: line
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: assertion
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771421
FRAGMENT_COUNT: 3
  ORIGINAL[0]: id -> val
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: val
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: id
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771359
FRAGMENT_COUNT: 3
  ORIGINAL[0]: add_lock_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> add_lock_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771558
FRAGMENT_COUNT: 1
  ORIGINAL[0]: OPENSSL_ia32cap_P[2]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 2 ]

CENTER_NODE: 68719477100
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (*dynlock_lock_callback)(int , struct CRYPTO_dynlock_value *, const char *, int ) = 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *dynlock_lock_callback ) ( int , struct VAR1 * , const char * , int ) = 0
  ORIGINAL[1]: (*dynlock_destroy_callback)(struct CRYPTO_dynlock_value *, const char *, int ) = 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( *dynlock_destroy_callback ) ( struct VAR1 * , const char * , int ) = 0
  ORIGINAL[2]: <global> dynlock_destroy_callback
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: 
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: 

CENTER_NODE: 68719477034
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_start(ap,fmta)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmta
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmta
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771511
FRAGMENT_COUNT: 5
  ORIGINAL[0]: spoutiness_heptachord > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: belched_ektenes = ((char *)( *oxybenzyl_mislikers))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( char * ) ( *oxybenzyl_mislikers ) )
  ORIGINAL[2]: (char *)( *oxybenzyl_mislikers)
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) ( *oxybenzyl_mislikers )
  ORIGINAL[3]: *oxybenzyl_mislikers
  TYPE[3]: CALL
  TOKENIZED[3]: *oxybenzyl_mislikers
  ORIGINAL[4]: belched_ektenes
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771142
FRAGMENT_COUNT: 5
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: stonesoup_tainted_file = fopen(stonesoup_tainted_file_name,\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(stonesoup_tainted_file_name,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: stonesoup_tainted_file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_tainted_file_name
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476936
FRAGMENT_COUNT: 6
  ORIGINAL[0]: dnum--
  TYPE[0]: CALL
  TOKENIZED[0]: dnum--
  ORIGINAL[1]: *src = ((void *)(&id -> ptr))
  TYPE[1]: CALL
  TOKENIZED[1]: *src = ( ( void * ) ( &id -> VAR1 ) )
  ORIGINAL[2]: snum = (sizeof(id -> ptr))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( sizeof ( VAR2 -> VAR3 ) )
  ORIGINAL[3]: snum
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: id
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: snum
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476764
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size_filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476969
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ret = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: ret
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477045
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *a = in_a
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: *b = in_b
  TYPE[1]: CALL
  TOKENIZED[1]: *b = VAR1
  ORIGINAL[2]: b[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: in_b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771168
FRAGMENT_COUNT: 4
  ORIGINAL[0]: first_char = buffer_param[0] - 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 [ 0 ] - 97
  ORIGINAL[1]: buffer_param[0] - 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] - 97
  ORIGINAL[2]: first_char
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer_param
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476906
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dynlock_lock_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> dynlock_lock_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476968
FRAGMENT_COUNT: 3
  ORIGINAL[0]: id_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> id_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771358
FRAGMENT_COUNT: 3
  ORIGINAL[0]: locking_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> locking_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477042
FRAGMENT_COUNT: 1
  ORIGINAL[0]: stderr
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719476905
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dynlock_create_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> dynlock_create_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476962
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memcpy(dest,src,sizeof(( *src)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , sizeof ( ( *src ) ) )
  ORIGINAL[1]: sizeof(( *src))
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( ( *src ) )
  ORIGINAL[2]: dest
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476951
FRAGMENT_COUNT: 1
  ORIGINAL[0]: <global> threadid_callback
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: <global> VAR1

CENTER_NODE: 30064771415
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memcmp(a,b,sizeof(( *a)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , sizeof ( ( *a ) ) )
  ORIGINAL[1]: sizeof(( *a))
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( ( *a ) )
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476909
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dynlock_destroy_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> dynlock_destroy_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771363
FRAGMENT_COUNT: 3
  ORIGINAL[0]: id -> val = val
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: id -> val
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477105
FRAGMENT_COUNT: 2
  ORIGINAL[0]: OPENSSL_NONPIC_relocated = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: OPENSSL_NONPIC_relocated
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771408
FRAGMENT_COUNT: 4
  ORIGINAL[0]: threadid_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> threadid_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: <global> threadid_callback
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: func
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

