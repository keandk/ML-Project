# Tokenized code fragments for 152158-v1.0.0-bad
# Total center nodes processed: 156
# Total code fragments found: 493

CENTER_NODE: 68719477449
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *len
  TYPE[0]: CALL
  TOKENIZED[0]: *len
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: apr_size_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640476
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477724
FRAGMENT_COUNT: 5
  ORIGINAL[0]: read_checksum == ((void *)0) && write_checksum == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 ) && VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: baton -> read_checksum = read_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: baton -> read_checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: read_checksum
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: read_checksum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771319
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (stream -> read_fn)(stream -> baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: stream -> read_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477303
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_create(stream,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640378
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477666
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> write_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> write_ctx
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn -> proxy
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: baton
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: btn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: btn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477700
FRAGMENT_COUNT: 6
  ORIGINAL[0]: btn -> write_ctx
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *svn_err__temp = svn_checksum_final(btn -> write_checksum,(btn -> write_ctx),btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , ( VAR1 -> VAR3 ) , VAR1 -> VAR4 )
  ORIGINAL[2]: svn_checksum_final(btn -> write_checksum,(btn -> write_ctx),btn -> pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , ( VAR1 -> VAR3 ) , VAR1 -> VAR4 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772298
FRAGMENT_COUNT: 5
  ORIGINAL[0]: marker = (apr_palloc(pool,sizeof(( *marker))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , sizeof ( ( *marker ) ) ) )
  ORIGINAL[1]: apr_palloc(pool,sizeof(( *marker)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( ( *marker ) ) )
  ORIGINAL[2]: sizeof(( *marker))
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( ( *marker ) )
  ORIGINAL[3]: marker
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640324
FRAGMENT_COUNT: 1
  ORIGINAL[0]: eol_pos == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )

CENTER_NODE: 30064771116
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[1]: memset(s, 0, shmsz)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: shmsz
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: shm
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640389
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476974
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> write_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: stream -> write_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: baton
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477250
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_write(bt -> out1,data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: bt -> out1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477013
FRAGMENT_COUNT: 6
  ORIGINAL[0]: apr_pvsprintf(pool,fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: message
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640316
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640441
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477389
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_io_file_open(&file,path,0x00001 | 0x00080,0x0FFF,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &file , VAR1 , 0x00001 | 0x00080 , 0x0FFF , VAR2 )
  ORIGINAL[1]: &file
  TYPE[1]: CALL
  TOKENIZED[1]: &file
  ORIGINAL[2]: 0x00001 | 0x00080
  TYPE[2]: CALL
  TOKENIZED[2]: 0x00001 | 0x00080
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: result_pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477297
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_mark(baton,mark,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: mark
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477645
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_set_close(zstream,close_handler_gz)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: zstream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: zstream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640355
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640482
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771327
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> skip_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: skip_default_handler(stream -> baton,len,stream -> read_fn)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR1 -> VAR4 )
  ORIGINAL[2]: stream -> read_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: read_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771640
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: *len == 1
  ORIGINAL[1]: err = svn_io_file_getc(buffer,btn -> file,btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 , VAR3 -> VAR5 )
  ORIGINAL[2]: svn_io_file_getc(buffer,btn -> file,btn -> pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR2 -> VAR4 )
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771178
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719477439
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> file
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: file
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477368
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *svn_err__temp = svn_io_file_seek(btn -> file,1,&mark_apr -> off,btn -> pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , 1 , &mark_apr -> VAR3 , VAR1 -> VAR4 )
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771579
FRAGMENT_COUNT: 4
  ORIGINAL[0]: to_read -= bytes_read
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -= VAR2
  ORIGINAL[1]: to_read
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: to_read
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bytes_read
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771709
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_io_file_seek(btn -> file,0,&offset,btn -> pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , 0 , &offset , VAR1 -> VAR3 )
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &offset
  TYPE[2]: CALL
  TOKENIZED[2]: &offset
  ORIGINAL[3]: btn -> pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477354
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477658
FRAGMENT_COUNT: 7
  ORIGINAL[0]: btn -> proxy
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: btn -> read_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> read_ctx
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: read_ctx
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477951
FRAGMENT_COUNT: 8
  ORIGINAL[0]: *work = svn_stringbuf_create_ensure(16384,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *work = FUN1 ( 16384 , VAR1 )
  ORIGINAL[1]: svn_stringbuf_create_ensure(16384,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 16384 , VAR1 )
  ORIGINAL[2]: work -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: work -> len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: work
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: work
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: work
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: work
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477292
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_write(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476998
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(str)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: svn_stream_write(stream,str,&len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , &len )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772241
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stringbuf_stream_mark -> pos = btn -> amt_read
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3 -> VAR4
  ORIGINAL[1]: stringbuf_stream_mark -> pos
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> amt_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pos
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stringbuf_stream_mark
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stringbuf_stream_mark
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640490
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640462
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719478065
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !b -> real_stream
  TYPE[0]: CALL
  TOKENIZED[0]: !b -> VAR1
  ORIGINAL[1]: b -> real_stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b -> real_stream
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: real_stream
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640376
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477416
FRAGMENT_COUNT: 4
  ORIGINAL[0]: file == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771308
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> seek_fn = seek_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> seek_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: seek_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640488
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640424
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640494
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771979
FRAGMENT_COUNT: 10
  ORIGINAL[0]: btn -> out
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: btn -> out -> next_out
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: btn -> out
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn -> out
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: btn -> out -> avail_out
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[6]: out
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: next_out
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: btn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: btn
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771603
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_stream_close(bt -> out1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[1]: bt -> out1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: out1
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477442
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *pool = opaque
  TYPE[0]: CALL
  TOKENIZED[0]: *pool = VAR1
  ORIGINAL[1]: apr_palloc(pool,(items * size))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( VAR2 * VAR3 ) )
  ORIGINAL[2]: items * size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 * VAR2
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: items
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640472
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640431
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640470
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640357
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771583
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *mark = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *mark = ( ( void * ) 0 )
  ORIGINAL[1]: *mark
  TYPE[1]: CALL
  TOKENIZED[1]: *mark
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: mark
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640492
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640407
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640478
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640295
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771357
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> seek_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> seek_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 68719477008
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_end(ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: svn_stream_puts(stream,message)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: message
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476918
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> write_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: write_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477154
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_supports_mark(stream) && svn_stream__is_buffered(stream)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) && FUN2 ( VAR1 )
  ORIGINAL[1]: stream_readline_bytewise(stringbuf,eof,eol,stream,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: eof
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: eol
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771307
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> mark_fn = mark_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> mark_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: mark_fn
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mark_fn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640401
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640372
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772256
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 30064771343
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> mark_fn != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: stream -> mark_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 47244640463
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640334
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640410
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771951
FRAGMENT_COUNT: 15
  ORIGINAL[0]: btn -> out -> zalloc
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: btn -> out -> zfree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: btn -> out -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: btn -> out -> next_in
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: btn -> out -> avail_in
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: btn -> out -> next_out
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[6]: btn -> out -> avail_out
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[7]: btn -> out
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: btn -> out -> msg
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[9]: btn -> out -> avail_out
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[10]: btn -> out
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: out
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: avail_out
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: btn
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: btn
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 30064771373
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stream -> close_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> close_fn)(stream -> baton)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 )
  ORIGINAL[2]: stream -> close_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: stream -> baton
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2

CENTER_NODE: 68719477415
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_from_aprfile2(file,0,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: result_pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: result_pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772323
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = (len > left_to_read?left_to_read : len)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( VAR1 > left_to_read?left_to_read : VAR1 )
  ORIGINAL[1]: len > left_to_read?left_to_read : len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > left_to_read?left_to_read : VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476981
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> mark_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> mark_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> mark_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: mark_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478056
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771216
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *stonesoup_s != (char)0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_s != ( char ) 0
  ORIGINAL[1]: stonesoup_s++
  TYPE[1]: CALL
  TOKENIZED[1]: stonesoup_s++
  ORIGINAL[2]: for (stonesoup_s = stonesoup_shm;*stonesoup_s != (char)0;stonesoup_s++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = VAR2 ; *stonesoup_s != ( char ) 0 ; stonesoup_s++ )
  ORIGINAL[3]: stonesoup_s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640435
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771398
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *match
  TYPE[0]: CALL
  TOKENIZED[0]: *match
  ORIGINAL[1]: *svn_err__temp = svn_stream_read(stream,&c,&numbytes)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 , &c , &numbytes )
  ORIGINAL[2]: svn_stream_read(stream,&c,&numbytes)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , &c , &numbytes )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477950
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_from_aprfile2(stderr_file,!0,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477236
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *len
  TYPE[0]: CALL
  TOKENIZED[0]: *len
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772227
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len = (len > left_to_read?left_to_read : len)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( VAR1 > left_to_read?left_to_read : VAR1 )
  ORIGINAL[1]: len > left_to_read?left_to_read : len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > left_to_read?left_to_read : VAR1
  ORIGINAL[2]: len > left_to_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > VAR2
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: left_to_read
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772214
FRAGMENT_COUNT: 7
  ORIGINAL[0]: btn -> str -> len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: btn -> str -> data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: btn -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: str
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: data
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772265
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: baton -> amt_read = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = 0
  ORIGINAL[2]: baton -> amt_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640311
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640485
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772184
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !read_digest && !write_digest
  TYPE[0]: CALL
  TOKENIZED[0]: !read_digest && !write_digest
  ORIGINAL[1]: baton -> proxy = svn_stream_checksummed2(stream,(read_digest?&baton -> read_checksum : ((void *)0)),(write_digest?&baton -> write_checksum : ((void *)0)),svn_checksum_md5,read_all,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = FUN1 ( VAR3 , ( read_digest?&baton -> VAR4 : ( ( void * ) 0 ) ) , ( write_digest?&baton -> VAR5 : ( ( void * ) 0 ) ) , VAR6 , VAR7 , VAR8 )
  ORIGINAL[2]: baton -> proxy
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: svn_stream_checksummed2(stream,(read_digest?&baton -> read_checksum : ((void *)0)),(write_digest?&baton -> write_checksum : ((void *)0)),svn_checksum_md5,read_all,pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ( read_digest?&baton -> VAR2 : ( ( void * ) 0 ) ) , ( write_digest?&baton -> VAR3 : ( ( void * ) 0 ) ) , VAR4 , VAR5 , VAR6 )
  ORIGINAL[4]: read_digest?&baton -> read_checksum : ((void *)0)
  TYPE[4]: CALL
  TOKENIZED[4]: read_digest?&baton -> VAR1 : ( ( void * ) 0 )
  ORIGINAL[5]: write_digest?&baton -> write_checksum : ((void *)0)
  TYPE[5]: CALL
  TOKENIZED[5]: write_digest?&baton -> VAR1 : ( ( void * ) 0 )
  ORIGINAL[6]: stream
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: svn_checksum_md5
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: read_all
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pool
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640467
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640438
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477291
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_skip(baton,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771556
FRAGMENT_COUNT: 9
  ORIGINAL[0]: bytes_read1 != bytes_read2 || memcmp(buf1,buf2,bytes_read1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2 || FUN1 ( VAR3 , VAR4 , VAR1 )
  ORIGINAL[1]: bytes_read1 != bytes_read2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: memcmp(buf1,buf2,bytes_read1)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bytes_read1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bytes_read2
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf1
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf2
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: bytes_read1
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771259
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> is_buffered_fn = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: stream -> is_buffered_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 68719477878
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *len
  TYPE[0]: CALL
  TOKENIZED[0]: *len
  ORIGINAL[1]: btn -> str -> data + btn -> amt_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 + VAR1 -> VAR4
  ORIGINAL[2]: *len
  TYPE[2]: CALL
  TOKENIZED[2]: *len
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772328
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 68719476912
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> baton
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: baton
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771311
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> is_buffered_fn = is_buffered_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> is_buffered_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: is_buffered_fn
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: is_buffered_fn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640379
FRAGMENT_COUNT: 1
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719477289
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_read(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478006
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[2]: lazyopen_if_unopened(b)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640359
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477933
FRAGMENT_COUNT: 6
  ORIGINAL[0]: &stdin_file
  TYPE[0]: CALL
  TOKENIZED[0]: &stdin_file
  ORIGINAL[1]: *in
  TYPE[1]: CALL
  TOKENIZED[1]: *in
  ORIGINAL[2]: svn_stream_from_aprfile2(stdin_file,!0,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[3]: stdin_file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: apr_err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stdin_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771712
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (apr_file_flags_get(btn -> file) & 0x00080) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( FUN1 ( VAR1 -> VAR2 ) & 0x00080 ) != 0
  ORIGINAL[1]: apr_file_flags_get(btn -> file) & 0x00080
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 ) & 0x00080

CENTER_NODE: 30064772336
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: baton -> str = str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: baton -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: str
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: str
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: baton
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476991
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> is_buffered_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> is_buffered_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> is_buffered_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: is_buffered_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640380
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478033
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478084
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_set_skip(stream,skip_handler_lazyopen)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: svn_stream_set_write(stream,write_handler_lazyopen)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772483
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *stonesoup_file = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_file = 0
  ORIGINAL[1]: stonesoup_file
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stonesoup_ssi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640328
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640353
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477942
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_from_aprfile2(stdout_file,!0,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476835
FRAGMENT_COUNT: 7
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: filepath != NULL
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != VAR2
  ORIGINAL[3]: filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NULL
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: filepath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640336
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477335
FRAGMENT_COUNT: 5
  ORIGINAL[0]: offset = len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: file
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477299
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_seek(baton,mark)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771268
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> skip_fn = skip_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> skip_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: skip_fn
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: skip_fn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640416
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772234
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stringbuf_appendbytes(btn -> str,data, *len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , *len )
  ORIGINAL[1]: btn -> str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: *len
  TYPE[2]: CALL
  TOKENIZED[2]: *len
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477747
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: proxy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640427
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476977
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream_seek(stream,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477245
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream__set_is_buffered(stream,is_buffered_handler_empty)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477300
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__is_buffered(baton)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: ptrs[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: ptrs[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: ptrs
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772166
FRAGMENT_COUNT: 9
  ORIGINAL[0]: btn -> pool
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: btn -> write_digest
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: apr_pmemdup(btn -> pool,(btn -> write_checksum -> digest),16)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , ( VAR1 -> VAR3 -> VAR4 ) , 16 )
  ORIGINAL[3]: btn -> pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn -> write_checksum -> digest
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: pool
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: btn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: btn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771668
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: *len == 1
  ORIGINAL[1]: err = svn_io_file_putc( *data,btn -> file,btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( *data , VAR2 -> VAR3 , VAR2 -> VAR4 )
  ORIGINAL[2]: svn_io_file_putc( *data,btn -> file,btn -> pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( *data , VAR1 -> VAR2 , VAR1 -> VAR3 )
  ORIGINAL[3]: *data
  TYPE[3]: CALL
  TOKENIZED[3]: *data
  ORIGINAL[4]: btn -> file
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: btn -> pool
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640302
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477844
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mark != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: stringbuf_stream_mark = ((const struct stringbuf_stream_mark *)mark)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( const struct VAR1 * ) VAR2 )
  ORIGINAL[2]: btn -> amt_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: amt_read
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640297
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640448
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477162
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stream_readline(stringbuf,eof,eol,stream,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: eol
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772396
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__from_spillbuf(1024,100000,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1024 , 100000 , VAR1 )
  ORIGINAL[1]: result_pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772140
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640474
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771617
FRAGMENT_COUNT: 5
  ORIGINAL[0]: out2 == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: baton -> out2 = out2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: baton -> out2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: out2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477749
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: baton
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477502
FRAGMENT_COUNT: 18
  ORIGINAL[0]: btn -> in
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: btn -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn -> subbaton
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn -> read_buffer
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: btn -> read_flush
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: btn -> in
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: btn -> in -> avail_in <= 0
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 -> VAR3 <= 0
  ORIGINAL[8]: btn -> in -> next_in
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[9]: btn -> read_buffer
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: btn -> read
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: btn -> subbaton
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: btn -> read_buffer
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: btn -> in
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: btn -> read_flush
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: read_buffer
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: btn
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: btn
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771265
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> read_fn = read_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> read_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: read_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640480
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477171
FRAGMENT_COUNT: 8
  ORIGINAL[0]: err = svn_stream_read(from,buf,&len)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , &len )
  ORIGINAL[1]: svn_stream_read(from,buf,&len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , &len )
  ORIGINAL[2]: cancel_func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: from
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: err
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640384
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477999
FRAGMENT_COUNT: 5
  ORIGINAL[0]: b -> real_stream
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: real_stream
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772404
FRAGMENT_COUNT: 5
  ORIGINAL[0]: b -> real_stream == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: *svn_err__temp = (b -> open_func)(&stream,b -> open_baton,b -> pool,scratch_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = ( VAR1 -> VAR2 ) ( &stream , VAR1 -> VAR3 , VAR1 -> VAR4 , VAR5 )
  ORIGINAL[2]: (b -> open_func)(&stream,b -> open_baton,b -> pool,scratch_pool)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) ( &stream , VAR1 -> VAR3 , VAR1 -> VAR4 , VAR5 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772310
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mark != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: marker = ((const struct string_stream_mark *)mark)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( const struct VAR2 * ) VAR3 )
  ORIGINAL[2]: (const struct string_stream_mark *)mark
  TYPE[2]: CALL
  TOKENIZED[2]: ( const struct VAR1 * ) VAR2
  ORIGINAL[3]: marker
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772426
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[1]: lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478041
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[2]: lazyopen_if_unopened(b)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640496
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640404
FRAGMENT_COUNT: 0

