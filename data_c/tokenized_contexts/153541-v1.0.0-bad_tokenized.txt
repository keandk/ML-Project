# Tokenized code fragments for 153541-v1.0.0-bad
# Total center nodes processed: 143
# Total code fragments found: 723

CENTER_NODE: 30064772863
FRAGMENT_COUNT: 2
  ORIGINAL[0]: heap_beginscan_internal(relation,snapshot,nkeys,key,((bool )0),((bool )0),((bool )1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( VAR5 ) 0 ) , ( ( VAR5 ) 0 ) , ( ( VAR5 ) 1 ) )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064777222
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640425
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719477820
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (lp -> lp_flags) == 2 && at_chain_start
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == 2 && VAR3
  ORIGINAL[1]: offnum = (lp -> lp_off)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR2 -> VAR3 )
  ORIGINAL[2]: lp -> lp_off
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: offnum
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offnum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: lp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064773786
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((tup -> t_data -> t_infomask) & 0x0004) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 -> VAR2 -> VAR3 ) & 0x0004 ) != 0
  ORIGINAL[1]: (8192 - (((intptr_t )(((size_t )(&((PageHeaderData *)0) -> pd_linp)) + 4 * sizeof(ItemIdData ))) + (8 - 1) & ~((intptr_t )(8 - 1)))) / 4
  TYPE[1]: CALL
  TOKENIZED[1]: ( 8192 - ( ( ( VAR1 ) ( ( ( VAR2 ) ( & ( ( VAR3 * ) 0 ) -> VAR4 ) ) + 4 * sizeof ( VAR5 ) ) ) + ( 8 - 1 ) & ~ ( ( VAR1 ) ( 8 - 1 ) ) ) ) / 4
  ORIGINAL[2]: 8192 - (((intptr_t )(((size_t )(&((PageHeaderData *)0) -> pd_linp)) + 4 * sizeof(ItemIdData ))) + (8 - 1) & ~((intptr_t )(8 - 1)))
  TYPE[2]: CALL
  TOKENIZED[2]: 8192 - ( ( ( VAR1 ) ( ( ( VAR2 ) ( & ( ( VAR3 * ) 0 ) -> VAR4 ) ) + 4 * sizeof ( VAR5 ) ) ) + ( 8 - 1 ) & ~ ( ( VAR1 ) ( 8 - 1 ) ) )
  ORIGINAL[3]: ((intptr_t )(((size_t )(&((PageHeaderData *)0) -> pd_linp)) + 4 * sizeof(ItemIdData ))) + (8 - 1) & ~((intptr_t )(8 - 1))
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( VAR1 ) ( ( ( VAR2 ) ( & ( ( VAR3 * ) 0 ) -> VAR4 ) ) + 4 * sizeof ( VAR5 ) ) ) + ( 8 - 1 ) & ~ ( ( VAR1 ) ( 8 - 1 ) )

CENTER_NODE: 47244640781
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640687
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479654
FRAGMENT_COUNT: 5
  ORIGINAL[0]: rdata[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]
  ORIGINAL[1]: rdata[1] . buffer = oldbuf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ] . VAR2 = VAR3
  ORIGINAL[2]: rdata[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ]
  ORIGINAL[3]: rdata
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rdata
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772657
FRAGMENT_COUNT: 5
  ORIGINAL[0]: relation -> rd_lockInfo . lockRelId
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: relation -> rd_lockInfo
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: rd_lockInfo
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: lockRelId
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: relation
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772643
FRAGMENT_COUNT: 3
  ORIGINAL[0]: lockmode != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: AcceptInvalidationMessages()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: relOid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773432
FRAGMENT_COUNT: 4
  ORIGINAL[0]: MemoryContextAlloc(CurrentMemoryContext,sizeof(BulkInsertStateData ))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , sizeof ( VAR2 ) )
  ORIGINAL[1]: sizeof(BulkInsertStateData )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: CurrentMemoryContext
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BulkInsertStateData
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064775482
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064776499
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ((size_t )(&((xl_heap_visible *)0) -> cutoff_xid)) + sizeof(TransactionId )
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 ) ) + sizeof ( VAR4 )
  ORIGINAL[1]: sizeof(TransactionId )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: TransactionId
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773438
FRAGMENT_COUNT: 7
  ORIGINAL[0]: bistate -> current_buf != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != 0
  ORIGINAL[1]: bistate -> current_buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ReleaseBuffer(bistate -> current_buf)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[3]: bistate -> current_buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: current_buf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bistate
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bistate
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772701
FRAGMENT_COUNT: 5
  ORIGINAL[0]: errstart(20,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 20 , \
  ORIGINAL[1]: errstart(20,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 20 , \
  ORIGINAL[2]: errfinish(errcode(('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24)),errmsg(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( FUN2 ( ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 ) ) , FUN3 ( \
  ORIGINAL[3]: errcode(('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 ) )
  ORIGINAL[4]: errmsg(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( \

CENTER_NODE: 68719480864
FRAGMENT_COUNT: 5
  ORIGINAL[0]: record -> xl_info
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: info & 0x70
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x70
  ORIGINAL[2]: heap_xlog_multi_insert(lsn,record)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: lsn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: record
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064779266
FRAGMENT_COUNT: 10
  ORIGINAL[0]: info == 0x0040
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0x0040
  ORIGINAL[1]: appendStringInfo(buf,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: xlrec -> node . spcNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: xlrec -> node
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: xlrec -> node . dbNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: xlrec -> node . relNode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3
  ORIGINAL[6]: xlrec -> block
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: spcNode
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: xlrec
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771263
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064775918
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640469
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773597
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(options & 0x0001) && (relation -> rd_rel -> relpersistence) == 'p'
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 & 0x0001 ) && ( VAR2 -> VAR3 -> VAR4 ) == 'p'
  ORIGINAL[1]: rdata[1] . buffer = buffer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ] . VAR2 = VAR2
  ORIGINAL[2]: rdata[1] . buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ] . VAR2
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rdata
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640549
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772621
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !SearchSysCacheExists(RELOID,((Datum )(((Datum )relationId) & 0xFFFFFFFF)),0,0,0)
  TYPE[0]: CALL
  TOKENIZED[0]: !SearchSysCacheExists ( VAR1 , ( ( VAR2 ) ( ( ( VAR2 ) VAR3 ) & 0xFFFFFFFF ) ) , 0 , 0 , 0 )
  ORIGINAL[1]: !(((const void *)r) != ((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( ( ( const void * ) VAR1 ) != ( ( void * ) 0 ) )
  ORIGINAL[2]: ((const void *)r) != ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( const void * ) VAR1 ) != ( ( void * ) 0 )
  ORIGINAL[3]: elog_start(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: elog_finish(20,\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( 20 , \
  ORIGINAL[5]: <global> __func__
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: relationId
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: r
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064779369
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *( *frayne_palladiumized) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: * ( *frayne_palladiumized ) != 0
  ORIGINAL[1]: *( *frayne_palladiumized)
  TYPE[1]: CALL
  TOKENIZED[1]: * ( *frayne_palladiumized )
  ORIGINAL[2]: (char *)( *( *frayne_palladiumized))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) ( * ( *frayne_palladiumized ) )
  ORIGINAL[3]: *( *frayne_palladiumized)
  TYPE[3]: CALL
  TOKENIZED[3]: * ( *frayne_palladiumized )
  ORIGINAL[4]: *frayne_palladiumized
  TYPE[4]: CALL
  TOKENIZED[4]: *frayne_palladiumized

CENTER_NODE: 68719478551
FRAGMENT_COUNT: 3
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: result
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> __func__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064774445
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640513
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640779
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774495
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640800
FRAGMENT_COUNT: 0

CENTER_NODE: 30064779100
FRAGMENT_COUNT: 7
  ORIGINAL[0]: (&(&target -> tid) -> ip_blkid) -> bi_hi
  TYPE[0]: CALL
  TOKENIZED[0]: ( & ( &target -> VAR1 ) -> VAR2 ) -> VAR3
  ORIGINAL[1]: &(&target -> tid) -> ip_blkid
  TYPE[1]: CALL
  TOKENIZED[1]: & ( &target -> VAR1 ) -> VAR2
  ORIGINAL[2]: (&target -> tid) -> ip_blkid
  TYPE[2]: CALL
  TOKENIZED[2]: ( &target -> VAR1 ) -> VAR2
  ORIGINAL[3]: (&(&target -> tid) -> ip_blkid) -> bi_lo
  TYPE[3]: CALL
  TOKENIZED[3]: ( & ( &target -> VAR1 ) -> VAR2 ) -> VAR3
  ORIGINAL[4]: &(&target -> tid) -> ip_blkid
  TYPE[4]: CALL
  TOKENIZED[4]: & ( &target -> VAR1 ) -> VAR2
  ORIGINAL[5]: (&target -> tid) -> ip_blkid
  TYPE[5]: CALL
  TOKENIZED[5]: ( &target -> VAR1 ) -> VAR2
  ORIGINAL[6]: bi_lo
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640765
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640748
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640462
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479711
FRAGMENT_COUNT: 4
  ORIGINAL[0]: rdata[0] . next
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] . VAR2
  ORIGINAL[1]: rdata[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ]
  ORIGINAL[2]: rdata
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: rdata
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064777363
FRAGMENT_COUNT: 3
  ORIGINAL[0]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[1]: (void )((bool )1)
  TYPE[1]: CALL
  TOKENIZED[1]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[2]: (bool )1
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 1

CENTER_NODE: 47244640568
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640744
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477682
FRAGMENT_COUNT: 7
  ORIGINAL[0]: scan -> rs_cbuf != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != 0
  ORIGINAL[1]: scan -> rs_cbuf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ReleaseBuffer(scan -> rs_cbuf)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[3]: scan -> rs_cbuf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: initscan(scan,key,((bool )1))
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 , ( ( VAR3 ) 1 ) )
  ORIGINAL[5]: scan
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: key
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !scan -> rs_pageatatime
  TYPE[0]: CALL
  TOKENIZED[0]: !scan -> VAR1
  ORIGINAL[1]: LockBuffer(buffer,1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 1 )
  ORIGINAL[2]: dp = ((Page )((Page )((((void )((bool )1)) , (buffer < 0?LocalBufferBlockPointers[-buffer - 1] : ((Block )(BufferBlocks + ((Size )(buffer - 1)) * 8192)))))))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( VAR2 ) ( ( VAR2 ) ( ( ( ( void ) ( ( VAR3 ) 1 ) ) , ( VAR4 < 0?LocalBufferBlockPointers [ -buffer - 1 ] : ( ( VAR5 ) ( VAR6 + ( ( VAR7 ) ( VAR4 - 1 ) ) * 8192 ) ) ) ) ) ) )
  ORIGINAL[3]: (Page )((Page )((((void )((bool )1)) , (buffer < 0?LocalBufferBlockPointers[-buffer - 1] : ((Block )(BufferBlocks + ((Size )(buffer - 1)) * 8192))))))
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) ( ( VAR1 ) ( ( ( ( void ) ( ( VAR2 ) 1 ) ) , ( VAR3 < 0?LocalBufferBlockPointers [ -buffer - 1 ] : ( ( VAR4 ) ( VAR5 + ( ( VAR6 ) ( VAR3 - 1 ) ) * 8192 ) ) ) ) ) )
  ORIGINAL[4]: dp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: Page
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640555
FRAGMENT_COUNT: 0

CENTER_NODE: 30064778765
FRAGMENT_COUNT: 13
  ORIGINAL[0]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[1]: ((PageHeader )page) -> pd_lower
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[2]: ((PageHeader )page) -> pd_lower
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[3]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[4]: ((PageHeader )page) -> pd_lower
  TYPE[4]: CALL
  TOKENIZED[4]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[5]: (PageHeader )page
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 ) VAR2
  ORIGINAL[6]: (size_t )(&((PageHeaderData *)0) -> pd_linp)
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[7]: ((PageHeader )page) -> pd_lower
  TYPE[7]: CALL
  TOKENIZED[7]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[8]: (PageHeader )page
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 ) VAR2
  ORIGINAL[9]: (PageHeader )page
  TYPE[9]: CALL
  TOKENIZED[9]: ( VAR1 ) VAR2
  ORIGINAL[10]: (PageHeader )page
  TYPE[10]: CALL
  TOKENIZED[10]: ( VAR1 ) VAR2
  ORIGINAL[11]: pd_lower
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: size_t
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 47244640409
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477659
FRAGMENT_COUNT: 3
  ORIGINAL[0]: scan -> rs_allow_strat = allow_strat
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3
  ORIGINAL[1]: scan -> rs_allow_strat
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: allow_strat
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640700
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640551
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640729
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640657
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479462
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !((bool )(((const void *)(&scan -> rs_mctid)) != ((void *)0) && ((&scan -> rs_mctid) -> ip_posid) != 0))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 ) ( ( ( const void * ) ( &scan -> VAR2 ) ) != ( ( void * ) 0 ) && ( ( &scan -> VAR2 ) -> VAR3 ) != 0 ) )
  ORIGINAL[1]: scan -> rs_mctid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: scan -> rs_mctid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: scan -> rs_inited = ((bool )1)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = ( ( VAR3 ) 1 )
  ORIGINAL[4]: scan -> rs_inited
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: scan -> rs_ctup
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: rs_ctup
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: scan
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064776106
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tuple -> t_choice . t_heap . t_field3 . t_xvac
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5
  ORIGINAL[1]: (tuple -> t_infomask) & 0x4000
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 0x4000
  ORIGINAL[2]: tuple -> t_choice . t_heap . t_field3 . t_xvac
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5
  ORIGINAL[3]: tuple -> t_choice . t_heap . t_field3
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[4]: tuple -> t_choice . t_heap
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: t_field3
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: t_xvac
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640783
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774092
FRAGMENT_COUNT: 2
  ORIGINAL[0]: heap_insert(relation,tup,GetCurrentCommandId(((bool )1)),0,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , FUN2 ( ( ( VAR3 ) 1 ) ) , 0 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064778030
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064775852
FRAGMENT_COUNT: 17
  ORIGINAL[0]: buffer < 0?LocalBufferBlockPointers[-buffer - 1] : ((Block )(BufferBlocks + ((Size )(buffer - 1)) * 8192))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0?LocalBufferBlockPointers [ -buffer - 1 ] : ( ( VAR2 ) ( VAR3 + ( ( VAR4 ) ( VAR1 - 1 ) ) * 8192 ) )
  ORIGINAL[1]: buffer < 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 0
  ORIGINAL[2]: LocalBufferBlockPointers[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ -buffer - 1 ]
  ORIGINAL[3]: -buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: -buffer - 1
  ORIGINAL[4]: -buffer
  TYPE[4]: CALL
  TOKENIZED[4]: -buffer
  ORIGINAL[5]: (Block )(BufferBlocks + ((Size )(buffer - 1)) * 8192)
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 ) ( VAR2 + ( ( VAR3 ) ( VAR4 - 1 ) ) * 8192 )
  ORIGINAL[6]: BufferBlocks + ((Size )(buffer - 1)) * 8192
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 + ( ( VAR2 ) ( VAR3 - 1 ) ) * 8192
  ORIGINAL[7]: ((Size )(buffer - 1)) * 8192
  TYPE[7]: CALL
  TOKENIZED[7]: ( ( VAR1 ) ( VAR2 - 1 ) ) * 8192
  ORIGINAL[8]: (Size )(buffer - 1)
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 ) ( VAR2 - 1 )
  ORIGINAL[9]: buffer - 1
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 - 1
  ORIGINAL[10]: buffer
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: LocalBufferBlockPointers
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buffer
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: Block
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: BufferBlocks
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: Size
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: buffer
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 30064773387
FRAGMENT_COUNT: 12
  ORIGINAL[0]: tp . t_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: priorXmax != ((TransactionId )0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( VAR2 ) 0 )
  ORIGINAL[2]: tp . t_data -> t_choice
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 -> VAR3
  ORIGINAL[3]: tp . t_data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: (&tp) -> t_data
  TYPE[4]: CALL
  TOKENIZED[4]: ( &tp ) -> VAR1
  ORIGINAL[5]: tp . t_data -> t_infomask
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2 -> VAR3
  ORIGINAL[6]: tp . t_data -> t_ctid
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . VAR2 -> VAR3
  ORIGINAL[7]: t_data
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: t_choice
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: tp
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: tp
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: tp
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640725
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773106
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1
  ORIGINAL[2]: tid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064777442
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 68719480867
FRAGMENT_COUNT: 5
  ORIGINAL[0]: appendStringInfo(buf,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: target -> node . spcNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: target -> node . dbNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: target -> node . relNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479857
FRAGMENT_COUNT: 7
  ORIGINAL[0]: offsets < offsets_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: lp = (ItemId )(&((PageHeader )page) -> pd_linp[( *offsets) - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR2 ) ( & ( ( VAR3 ) VAR4 ) -> VAR5 [ ( *offsets ) - 1 ] )
  ORIGINAL[2]: (ItemId )(&((PageHeader )page) -> pd_linp[( *offsets) - 1])
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( & ( ( VAR2 ) VAR3 ) -> VAR4 [ ( *offsets ) - 1 ] )
  ORIGINAL[3]: lp -> lp_off
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: lp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ItemId
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: lp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064773422
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !((tuple -> t_infomask) & (0x0400 | 0x0800))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) & ( 0x0400 | 0x0800 ) )
  ORIGINAL[1]: (tuple -> t_infomask) & (0x0400 | 0x0800)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & ( 0x0400 | 0x0800 )
  ORIGINAL[2]: tuple -> t_infomask
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 0x0400 | 0x0800
  TYPE[3]: CALL
  TOKENIZED[3]: 0x0400 | 0x0800

CENTER_NODE: 47244640467
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774162
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064772763
FRAGMENT_COUNT: 34
  ORIGINAL[0]: (r -> rd_rel -> relkind) == 'c'
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 -> VAR3 ) == 'c'
  ORIGINAL[1]: errstart(20,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 20 , \
  ORIGINAL[2]: errstart(20,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 20 , \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: errfinish(errcode(('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24)),errmsg(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( FUN2 ( ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 ) ) , FUN3 ( \
  ORIGINAL[5]: errcode(('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24))
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 ) )
  ORIGINAL[6]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24)
  TYPE[6]: CALL
  TOKENIZED[6]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 )
  ORIGINAL[7]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18)
  TYPE[7]: CALL
  TOKENIZED[7]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 )
  ORIGINAL[8]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12)
  TYPE[8]: CALL
  TOKENIZED[8]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 )
  ORIGINAL[9]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6)
  TYPE[9]: CALL
  TOKENIZED[9]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 )
  ORIGINAL[10]: '4' - 48 & 0x3F
  TYPE[10]: CALL
  TOKENIZED[10]: '4' - 48 & 0x3F
  ORIGINAL[11]: '4' - 48
  TYPE[11]: CALL
  TOKENIZED[11]: '4' - 48
  ORIGINAL[12]: ('2' - 48 & 0x3F) << 6
  TYPE[12]: CALL
  TOKENIZED[12]: ( '2' - 48 & 0x3F ) << 6
  ORIGINAL[13]: '2' - 48 & 0x3F
  TYPE[13]: CALL
  TOKENIZED[13]: '2' - 48 & 0x3F
  ORIGINAL[14]: '2' - 48
  TYPE[14]: CALL
  TOKENIZED[14]: '2' - 48
  ORIGINAL[15]: (56 - 48 & 0x3F) << 12
  TYPE[15]: CALL
  TOKENIZED[15]: ( 56 - 48 & 0x3F ) << 12
  ORIGINAL[16]: 56 - 48 & 0x3F
  TYPE[16]: CALL
  TOKENIZED[16]: 56 - 48 & 0x3F
  ORIGINAL[17]: 56 - 48
  TYPE[17]: CALL
  TOKENIZED[17]: 56 - 48
  ORIGINAL[18]: (48 - 48 & 0x3F) << 18
  TYPE[18]: CALL
  TOKENIZED[18]: ( 48 - 48 & 0x3F ) << 18
  ORIGINAL[19]: 48 - 48 & 0x3F
  TYPE[19]: CALL
  TOKENIZED[19]: 48 - 48 & 0x3F
  ORIGINAL[20]: 48 - 48
  TYPE[20]: CALL
  TOKENIZED[20]: 48 - 48
  ORIGINAL[21]: ('9' - 48 & 0x3F) << 24
  TYPE[21]: CALL
  TOKENIZED[21]: ( '9' - 48 & 0x3F ) << 24
  ORIGINAL[22]: '9' - 48 & 0x3F
  TYPE[22]: CALL
  TOKENIZED[22]: '9' - 48 & 0x3F
  ORIGINAL[23]: '9' - 48
  TYPE[23]: CALL
  TOKENIZED[23]: '9' - 48
  ORIGINAL[24]: errmsg(\
  TYPE[24]: CALL
  TOKENIZED[24]: FUN1 ( \
  ORIGINAL[25]: r -> rd_rel -> relname . data
  TYPE[25]: CALL
  TOKENIZED[25]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[26]: r -> rd_rel -> relname
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[27]: r -> rd_rel
  TYPE[27]: CALL
  TOKENIZED[27]: VAR1 -> VAR2
  ORIGINAL[28]: (void )0
  TYPE[28]: CALL
  TOKENIZED[28]: ( void ) 0
  ORIGINAL[29]: rd_rel
  TYPE[29]: FIELD_IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: relname
  TYPE[30]: FIELD_IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: data
  TYPE[31]: FIELD_IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: <global> __func__
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: <global> VAR1
  ORIGINAL[33]: r
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1

CENTER_NODE: 30064776447
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ((size_t )(&((xl_heap_freeze *)0) -> cutoff_xid)) + sizeof(TransactionId )
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 ) ) + sizeof ( VAR4 )
  ORIGINAL[1]: sizeof(TransactionId )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: TransactionId
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719480229
FRAGMENT_COUNT: 7
  ORIGINAL[0]: freespace < (8192 / 5)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < ( 8192 / 5 )
  ORIGINAL[1]: XLogRecordPageWithFreeSpace(xlrec -> target . node,blkno,freespace)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 . VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: xlrec -> target . node
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: blkno
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: blkno
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: blkno
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: freespace
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719479944
FRAGMENT_COUNT: 8
  ORIGINAL[0]: &vmbuffer
  TYPE[0]: CALL
  TOKENIZED[0]: &vmbuffer
  ORIGINAL[1]: vmbuffer < 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 0
  ORIGINAL[2]: -vmbuffer
  TYPE[2]: CALL
  TOKENIZED[2]: -vmbuffer
  ORIGINAL[3]: vmbuffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: LocalBufferBlockPointers
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: vmbuffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: vmbuffer
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: vmbuffer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640787
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479980
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (size_t )(&((xl_heap_newpage *)0) -> blkno)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[1]: sizeof(BlockNumber )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: BlockNumber
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640317
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640581
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477635
FRAGMENT_COUNT: 4
  ORIGINAL[0]: heap_beginscan_internal(relation,snapshot,nkeys,key,allow_strat,allow_sync,((bool )0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 , ( ( VAR7 ) 0 ) )
  ORIGINAL[1]: relation
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: snapshot
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: nkeys
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773236
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buffer = ReadBuffer(relation,((((void )((bool )1)) , ((((void )((bool )1)) , ((BlockNumber )(((&tid -> ip_blkid) -> bi_hi) << 16 | ((uint16 )((&tid -> ip_blkid) -> bi_lo)))))))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , ( ( ( ( void ) ( ( VAR3 ) 1 ) ) , ( ( ( ( void ) ( ( VAR3 ) 1 ) ) , ( ( VAR4 ) ( ( ( &tid -> VAR5 ) -> VAR6 ) << 16 | ( ( VAR7 ) ( ( &tid -> VAR5 ) -> VAR8 ) ) ) ) ) ) ) ) )
  ORIGINAL[1]: ReadBuffer(relation,((((void )((bool )1)) , ((((void )((bool )1)) , ((BlockNumber )(((&tid -> ip_blkid) -> bi_hi) << 16 | ((uint16 )((&tid -> ip_blkid) -> bi_lo)))))))))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( ( ( void ) ( ( VAR2 ) 1 ) ) , ( ( ( ( void ) ( ( VAR2 ) 1 ) ) , ( ( VAR3 ) ( ( ( &tid -> VAR4 ) -> VAR5 ) << 16 | ( ( VAR6 ) ( ( &tid -> VAR4 ) -> VAR7 ) ) ) ) ) ) ) ) )
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relation
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640313
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640445
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064778048
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 68719479081
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (attrnum = bms_first_member(hot_attrs)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 ) ) >= 0
  ORIGINAL[1]: heap_tuple_attr_equals(relation -> rd_att,attrnum,oldtup,newtup)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: oldtup
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: newtup
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640584
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640775
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476798
FRAGMENT_COUNT: 7
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: stonesoup_lsize = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: stonesoup_tainted_file_name = getenv(stonesoup_env_var_name)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[3]: getenv(stonesoup_env_var_name)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: stonesoup_tainted_file_name
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_env_var_name
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_tainted_file_name
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640648
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640486
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477559
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (r -> rd_rel -> relpersistence) == 't'
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 -> VAR3 ) == 't'
  ORIGINAL[1]: MyXactAccessedTempRel = ((bool )1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 ) 1 )
  ORIGINAL[2]: pgstat_initstats(r)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: r
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: r
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: r
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640334
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640356
FRAGMENT_COUNT: 0

CENTER_NODE: 30064779086
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 68719479802
FRAGMENT_COUNT: 7
  ORIGINAL[0]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[1]: lsn . xlogid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: lsn . xlogid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: lsn . xrecoff
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: ((PageHeader )page) -> pd_lsn = lsn
  TYPE[4]: CALL
  TOKENIZED[4]: ( ( VAR1 ) VAR2 ) -> VAR3 = VAR4
  ORIGINAL[5]: ((PageHeader )page) -> pd_lsn
  TYPE[5]: CALL
  TOKENIZED[5]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[6]: lsn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477632
FRAGMENT_COUNT: 4
  ORIGINAL[0]: heap_beginscan_internal(relation,snapshot,nkeys,key,((bool )1),((bool )1),((bool )0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( VAR5 ) 1 ) , ( ( VAR5 ) 1 ) , ( ( VAR5 ) 0 ) )
  ORIGINAL[1]: snapshot
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: nkeys
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064774101
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640715
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640402
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640642
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640410
FRAGMENT_COUNT: 1
  ORIGINAL[0]: scan -> rs_rd -> pgstat_info != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 != ( ( void * ) 0 )

CENTER_NODE: 30064776272
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !((tuple -> t_infomask) & 0x0100) && !((tuple -> t_infomask) & 0x0200) && TransactionIdDidCommit(xmin)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) & 0x0100 ) && ! ( ( VAR1 -> VAR2 ) & 0x0200 ) && FUN1 ( VAR3 )
  ORIGINAL[1]: !((tuple -> t_infomask) & 0x0100) && !((tuple -> t_infomask) & 0x0200)
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( ( VAR1 -> VAR2 ) & 0x0100 ) && ! ( ( VAR1 -> VAR2 ) & 0x0200 )
  ORIGINAL[2]: TransactionIdDidCommit(xmin)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: xmin
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477579
FRAGMENT_COUNT: 3
  ORIGINAL[0]: lockmode != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: lockmode
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: lockmode
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064774160
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064779202
FRAGMENT_COUNT: 7
  ORIGINAL[0]: info == 0x50
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0x50
  ORIGINAL[1]: xlrec -> node . dbNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: xlrec -> node
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: node
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dbNode
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: xlrec
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: xlrec
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064775801
FRAGMENT_COUNT: 8
  ORIGINAL[0]: *buffer
  TYPE[0]: CALL
  TOKENIZED[0]: *buffer
  ORIGINAL[1]: (relation -> rd_rel -> relpersistence) == 'p'
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 -> VAR3 ) == 'p'
  ORIGINAL[2]: rdata[1] . buffer =  *buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ] . VAR2 = *buffer
  ORIGINAL[3]: rdata[1] . buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 1 ] . VAR2
  ORIGINAL[4]: *buffer
  TYPE[4]: CALL
  TOKENIZED[4]: *buffer
  ORIGINAL[5]: *buffer
  TYPE[5]: CALL
  TOKENIZED[5]: *buffer
  ORIGINAL[6]: buffer
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buffer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640585
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773237
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771229
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064776779
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (intptr_t )(8 - 1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( 8 - 1 )
  ORIGINAL[1]: 8 - 1
  TYPE[1]: CALL
  TOKENIZED[1]: 8 - 1

CENTER_NODE: 30064774496
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064776293
FRAGMENT_COUNT: 6
  ORIGINAL[0]: rdata . next = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: rdata . next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: next
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rdata
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: rdata
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719479541
FRAGMENT_COUNT: 7
  ORIGINAL[0]: rdata[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]
  ORIGINAL[1]: rdata[2]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 2 ]
  ORIGINAL[2]: ndead > 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > 0
  ORIGINAL[3]: rdata[2] . data = ((char *)nowdead)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 2 ] . VAR2 = ( ( char * ) VAR3 )
  ORIGINAL[4]: rdata[2]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 2 ]
  ORIGINAL[5]: rdata
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: rdata
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477688
FRAGMENT_COUNT: 7
  ORIGINAL[0]: scan -> rs_cbuf
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: scan -> rs_cbuf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: scan -> rs_rd
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: scan -> rs_key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: scan -> rs_key
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: rs_key
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: scan
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640510
FRAGMENT_COUNT: 0

CENTER_NODE: 30064778975
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[1]: (size_t )(&((PageHeaderData *)0) -> pd_linp)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[2]: &((PageHeaderData *)0) -> pd_linp
  TYPE[2]: CALL
  TOKENIZED[2]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[3]: ((PageHeaderData *)0) -> pd_linp
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( VAR1 * ) 0 ) -> VAR2

CENTER_NODE: 68719479093
FRAGMENT_COUNT: 2
  ORIGINAL[0]: result
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: HeapTupleUpdated
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719480851
FRAGMENT_COUNT: 4
  ORIGINAL[0]: info & 0x70
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x70
  ORIGINAL[1]: elog_finish(22,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 22 , \
  ORIGINAL[2]: info
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: info
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640669
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777840
FRAGMENT_COUNT: 209
  ORIGINAL[0]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[1]: i < (xlrec -> ntuples)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < ( VAR2 -> VAR3 )
  ORIGINAL[2]: xlrec -> ntuples
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i++
  TYPE[3]: CALL
  TOKENIZED[3]: i++
  ORIGINAL[4]: (((((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))?0 : ((((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))) / sizeof(ItemIdData ))) + 1 < offnum
  TYPE[4]: CALL
  TOKENIZED[4]: ( ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ?0 : ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ) / sizeof ( VAR7 ) ) ) + 1 < VAR8
  ORIGINAL[5]: (((((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))?0 : ((((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))) / sizeof(ItemIdData ))) + 1
  TYPE[5]: CALL
  TOKENIZED[5]: ( ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ?0 : ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ) / sizeof ( VAR7 ) ) ) + 1
  ORIGINAL[6]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))?0 : ((((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))) / sizeof(ItemIdData )
  TYPE[6]: CALL
  TOKENIZED[6]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ?0 : ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ) / sizeof ( VAR7 )
  ORIGINAL[7]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[7]: CALL
  TOKENIZED[7]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[8]: ((PageHeader )page) -> pd_lower
  TYPE[8]: CALL
  TOKENIZED[8]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[9]: (PageHeader )page
  TYPE[9]: CALL
  TOKENIZED[9]: ( VAR1 ) VAR2
  ORIGINAL[10]: (size_t )(&((PageHeaderData *)0) -> pd_linp)
  TYPE[10]: CALL
  TOKENIZED[10]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[11]: &((PageHeaderData *)0) -> pd_linp
  TYPE[11]: CALL
  TOKENIZED[11]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[12]: ((PageHeaderData *)0) -> pd_linp
  TYPE[12]: CALL
  TOKENIZED[12]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[13]: (PageHeaderData *)0
  TYPE[13]: CALL
  TOKENIZED[13]: ( VAR1 * ) 0
  ORIGINAL[14]: xlhdr = ((xl_multi_insert_tuple *)(((intptr_t )recdata) + (2 - 1) & ~((intptr_t )(2 - 1))))
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 = ( ( VAR2 * ) ( ( ( VAR3 ) VAR4 ) + ( 2 - 1 ) & ~ ( ( VAR3 ) ( 2 - 1 ) ) ) )
  ORIGINAL[15]: (xl_multi_insert_tuple *)(((intptr_t )recdata) + (2 - 1) & ~((intptr_t )(2 - 1)))
  TYPE[15]: CALL
  TOKENIZED[15]: ( VAR1 * ) ( ( ( VAR2 ) VAR3 ) + ( 2 - 1 ) & ~ ( ( VAR2 ) ( 2 - 1 ) ) )
  ORIGINAL[16]: ((intptr_t )recdata) + (2 - 1) & ~((intptr_t )(2 - 1))
  TYPE[16]: CALL
  TOKENIZED[16]: ( ( VAR1 ) VAR2 ) + ( 2 - 1 ) & ~ ( ( VAR1 ) ( 2 - 1 ) )
  ORIGINAL[17]: ((intptr_t )recdata) + (2 - 1)
  TYPE[17]: CALL
  TOKENIZED[17]: ( ( VAR1 ) VAR2 ) + ( 2 - 1 )
  ORIGINAL[18]: (intptr_t )recdata
  TYPE[18]: CALL
  TOKENIZED[18]: ( VAR1 ) VAR2
  ORIGINAL[19]: 2 - 1
  TYPE[19]: CALL
  TOKENIZED[19]: 2 - 1
  ORIGINAL[20]: ~((intptr_t )(2 - 1))
  TYPE[20]: CALL
  TOKENIZED[20]: ~ ( ( VAR1 ) ( 2 - 1 ) )
  ORIGINAL[21]: (intptr_t )(2 - 1)
  TYPE[21]: CALL
  TOKENIZED[21]: ( VAR1 ) ( 2 - 1 )
  ORIGINAL[22]: 2 - 1
  TYPE[22]: CALL
  TOKENIZED[22]: 2 - 1
  ORIGINAL[23]: recdata = ((char *)xlhdr) + (((size_t )(&((xl_multi_insert_tuple *)0) -> t_hoff)) + sizeof(uint8 ))
  TYPE[23]: CALL
  TOKENIZED[23]: VAR1 = ( ( char * ) VAR2 ) + ( ( ( VAR3 ) ( & ( ( VAR4 * ) 0 ) -> VAR5 ) ) + sizeof ( VAR6 ) )
  ORIGINAL[24]: ((char *)xlhdr) + (((size_t )(&((xl_multi_insert_tuple *)0) -> t_hoff)) + sizeof(uint8 ))
  TYPE[24]: CALL
  TOKENIZED[24]: ( ( char * ) VAR1 ) + ( ( ( VAR2 ) ( & ( ( VAR3 * ) 0 ) -> VAR4 ) ) + sizeof ( VAR5 ) )
  ORIGINAL[25]: (char *)xlhdr
  TYPE[25]: CALL
  TOKENIZED[25]: ( char * ) VAR1
  ORIGINAL[26]: ((size_t )(&((xl_multi_insert_tuple *)0) -> t_hoff)) + sizeof(uint8 )
  TYPE[26]: CALL
  TOKENIZED[26]: ( ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 ) ) + sizeof ( VAR4 )
  ORIGINAL[27]: (size_t )(&((xl_multi_insert_tuple *)0) -> t_hoff)
  TYPE[27]: CALL
  TOKENIZED[27]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[28]: &((xl_multi_insert_tuple *)0) -> t_hoff
  TYPE[28]: CALL
  TOKENIZED[28]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[29]: ((xl_multi_insert_tuple *)0) -> t_hoff
  TYPE[29]: CALL
  TOKENIZED[29]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[30]: (xl_multi_insert_tuple *)0
  TYPE[30]: CALL
  TOKENIZED[30]: ( VAR1 * ) 0
  ORIGINAL[31]: sizeof(uint8 )
  TYPE[31]: CALL
  TOKENIZED[31]: sizeof ( VAR1 )
  ORIGINAL[32]: newlen = (xlhdr -> datalen)
  TYPE[32]: CALL
  TOKENIZED[32]: VAR1 = ( VAR2 -> VAR3 )
  ORIGINAL[33]: xlhdr -> datalen
  TYPE[33]: CALL
  TOKENIZED[33]: VAR1 -> VAR2
  ORIGINAL[34]: htup = &tbuf . hdr
  TYPE[34]: CALL
  TOKENIZED[34]: VAR1 = &tbuf . VAR2
  ORIGINAL[35]: &tbuf . hdr
  TYPE[35]: CALL
  TOKENIZED[35]: &tbuf . VAR1
  ORIGINAL[36]: tbuf . hdr
  TYPE[36]: CALL
  TOKENIZED[36]: VAR1 . VAR2
  ORIGINAL[37]: *_vstart = (void *)((char *)htup)
  TYPE[37]: CALL
  TOKENIZED[37]: *_vstart = ( void * ) ( ( char * ) VAR1 )
  ORIGINAL[38]: (void *)((char *)htup)
  TYPE[38]: CALL
  TOKENIZED[38]: ( void * ) ( ( char * ) VAR1 )
  ORIGINAL[39]: (char *)htup
  TYPE[39]: CALL
  TOKENIZED[39]: ( char * ) VAR1
  ORIGINAL[40]: _val = 0
  TYPE[40]: CALL
  TOKENIZED[40]: VAR1 = 0
  ORIGINAL[41]: _len = sizeof(HeapTupleHeaderData )
  TYPE[41]: CALL
  TOKENIZED[41]: VAR1 = sizeof ( VAR2 )
  ORIGINAL[42]: sizeof(HeapTupleHeaderData )
  TYPE[42]: CALL
  TOKENIZED[42]: sizeof ( VAR1 )
  ORIGINAL[43]: (((intptr_t )_vstart) & sizeof(long ) - 1) == 0 && (_len & sizeof(long ) - 1) == 0 && _val == 0 && _len <= 1024 && 1024 != 0
  TYPE[43]: CALL
  TOKENIZED[43]: ( ( ( VAR1 ) VAR2 ) & sizeof ( long ) - 1 ) == 0 && ( VAR3 & sizeof ( long ) - 1 ) == 0 && VAR4 == 0 && VAR3 <= 1024 && 1024 != 0
  ORIGINAL[44]: (((intptr_t )_vstart) & sizeof(long ) - 1) == 0 && (_len & sizeof(long ) - 1) == 0 && _val == 0 && _len <= 1024
  TYPE[44]: CALL
  TOKENIZED[44]: ( ( ( VAR1 ) VAR2 ) & sizeof ( long ) - 1 ) == 0 && ( VAR3 & sizeof ( long ) - 1 ) == 0 && VAR4 == 0 && VAR3 <= 1024
  ORIGINAL[45]: (((intptr_t )_vstart) & sizeof(long ) - 1) == 0 && (_len & sizeof(long ) - 1) == 0 && _val == 0
  TYPE[45]: CALL
  TOKENIZED[45]: ( ( ( VAR1 ) VAR2 ) & sizeof ( long ) - 1 ) == 0 && ( VAR3 & sizeof ( long ) - 1 ) == 0 && VAR4 == 0
  ORIGINAL[46]: (((intptr_t )_vstart) & sizeof(long ) - 1) == 0 && (_len & sizeof(long ) - 1) == 0
  TYPE[46]: CALL
  TOKENIZED[46]: ( ( ( VAR1 ) VAR2 ) & sizeof ( long ) - 1 ) == 0 && ( VAR3 & sizeof ( long ) - 1 ) == 0
  ORIGINAL[47]: (((intptr_t )_vstart) & sizeof(long ) - 1) == 0
  TYPE[47]: CALL
  TOKENIZED[47]: ( ( ( VAR1 ) VAR2 ) & sizeof ( long ) - 1 ) == 0
  ORIGINAL[48]: ((intptr_t )_vstart) & sizeof(long ) - 1
  TYPE[48]: CALL
  TOKENIZED[48]: ( ( VAR1 ) VAR2 ) & sizeof ( long ) - 1
  ORIGINAL[49]: (intptr_t )_vstart
  TYPE[49]: CALL
  TOKENIZED[49]: ( VAR1 ) VAR2
  ORIGINAL[50]: sizeof(long ) - 1
  TYPE[50]: CALL
  TOKENIZED[50]: sizeof ( long ) - 1
  ORIGINAL[51]: sizeof(long )
  TYPE[51]: CALL
  TOKENIZED[51]: sizeof ( long )
  ORIGINAL[52]: memcpy((((char *)htup) + ((size_t )(&((HeapTupleHeaderData *)0) -> t_bits))),((char *)recdata),newlen)
  TYPE[52]: CALL
  TOKENIZED[52]: FUN1 ( ( ( ( char * ) VAR1 ) + ( ( VAR2 ) ( & ( ( VAR3 * ) 0 ) -> VAR4 ) ) ) , ( ( char * ) VAR5 ) , VAR6 )
  ORIGINAL[53]: ((char *)htup) + ((size_t )(&((HeapTupleHeaderData *)0) -> t_bits))
  TYPE[53]: CALL
  TOKENIZED[53]: ( ( char * ) VAR1 ) + ( ( VAR2 ) ( & ( ( VAR3 * ) 0 ) -> VAR4 ) )
  ORIGINAL[54]: (char *)htup
  TYPE[54]: CALL
  TOKENIZED[54]: ( char * ) VAR1
  ORIGINAL[55]: (size_t )(&((HeapTupleHeaderData *)0) -> t_bits)
  TYPE[55]: CALL
  TOKENIZED[55]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[56]: &((HeapTupleHeaderData *)0) -> t_bits
  TYPE[56]: CALL
  TOKENIZED[56]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[57]: ((HeapTupleHeaderData *)0) -> t_bits
  TYPE[57]: CALL
  TOKENIZED[57]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[58]: (HeapTupleHeaderData *)0
  TYPE[58]: CALL
  TOKENIZED[58]: ( VAR1 * ) 0
  ORIGINAL[59]: (char *)recdata
  TYPE[59]: CALL
  TOKENIZED[59]: ( char * ) VAR1
  ORIGINAL[60]: recdata += newlen
  TYPE[60]: CALL
  TOKENIZED[60]: VAR1 += VAR2
  ORIGINAL[61]: newlen += ((size_t )(&((HeapTupleHeaderData *)0) -> t_bits))
  TYPE[61]: CALL
  TOKENIZED[61]: VAR1 += ( ( VAR2 ) ( & ( ( VAR3 * ) 0 ) -> VAR4 ) )
  ORIGINAL[62]: (size_t )(&((HeapTupleHeaderData *)0) -> t_bits)
  TYPE[62]: CALL
  TOKENIZED[62]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[63]: &((HeapTupleHeaderData *)0) -> t_bits
  TYPE[63]: CALL
  TOKENIZED[63]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[64]: ((HeapTupleHeaderData *)0) -> t_bits
  TYPE[64]: CALL
  TOKENIZED[64]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[65]: (HeapTupleHeaderData *)0
  TYPE[65]: CALL
  TOKENIZED[65]: ( VAR1 * ) 0
  ORIGINAL[66]: htup -> t_infomask2 = xlhdr -> t_infomask2
  TYPE[66]: CALL
  TOKENIZED[66]: VAR1 -> VAR2 = VAR3 -> VAR2
  ORIGINAL[67]: htup -> t_infomask2
  TYPE[67]: CALL
  TOKENIZED[67]: VAR1 -> VAR2
  ORIGINAL[68]: xlhdr -> t_infomask2
  TYPE[68]: CALL
  TOKENIZED[68]: VAR1 -> VAR2
  ORIGINAL[69]: htup -> t_infomask = xlhdr -> t_infomask
  TYPE[69]: CALL
  TOKENIZED[69]: VAR1 -> VAR2 = VAR3 -> VAR2
  ORIGINAL[70]: htup -> t_infomask
  TYPE[70]: CALL
  TOKENIZED[70]: VAR1 -> VAR2
  ORIGINAL[71]: xlhdr -> t_infomask
  TYPE[71]: CALL
  TOKENIZED[71]: VAR1 -> VAR2
  ORIGINAL[72]: htup -> t_hoff = xlhdr -> t_hoff
  TYPE[72]: CALL
  TOKENIZED[72]: VAR1 -> VAR2 = VAR3 -> VAR2
  ORIGINAL[73]: htup -> t_hoff
  TYPE[73]: CALL
  TOKENIZED[73]: VAR1 -> VAR2
  ORIGINAL[74]: xlhdr -> t_hoff
  TYPE[74]: CALL
  TOKENIZED[74]: VAR1 -> VAR2
  ORIGINAL[75]: htup -> t_choice . t_heap . t_xmin = record -> xl_xid
  TYPE[75]: CALL
  TOKENIZED[75]: VAR1 -> VAR2 . VAR3 . VAR4 = VAR5 -> VAR6
  ORIGINAL[76]: htup -> t_choice . t_heap . t_xmin
  TYPE[76]: CALL
  TOKENIZED[76]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[77]: htup -> t_choice . t_heap
  TYPE[77]: CALL
  TOKENIZED[77]: VAR1 -> VAR2 . VAR3
  ORIGINAL[78]: htup -> t_choice
  TYPE[78]: CALL
  TOKENIZED[78]: VAR1 -> VAR2
  ORIGINAL[79]: record -> xl_xid
  TYPE[79]: CALL
  TOKENIZED[79]: VAR1 -> VAR2
  ORIGINAL[80]: htup -> t_choice . t_heap . t_field3 . t_cid = ((CommandId )0)
  TYPE[80]: CALL
  TOKENIZED[80]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5 = ( ( VAR6 ) 0 )
  ORIGINAL[81]: htup -> t_choice . t_heap . t_field3 . t_cid
  TYPE[81]: CALL
  TOKENIZED[81]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5
  ORIGINAL[82]: htup -> t_choice . t_heap . t_field3
  TYPE[82]: CALL
  TOKENIZED[82]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[83]: htup -> t_choice . t_heap
  TYPE[83]: CALL
  TOKENIZED[83]: VAR1 -> VAR2 . VAR3
  ORIGINAL[84]: htup -> t_choice
  TYPE[84]: CALL
  TOKENIZED[84]: VAR1 -> VAR2
  ORIGINAL[85]: (CommandId )0
  TYPE[85]: CALL
  TOKENIZED[85]: ( VAR1 ) 0
  ORIGINAL[86]: htup -> t_infomask &= ~0x0020
  TYPE[86]: CALL
  TOKENIZED[86]: VAR1 -> VAR2 &= ~0x0020
  ORIGINAL[87]: htup -> t_infomask
  TYPE[87]: CALL
  TOKENIZED[87]: VAR1 -> VAR2
  ORIGINAL[88]: ~0x0020
  TYPE[88]: CALL
  TOKENIZED[88]: ~0x0020
  ORIGINAL[89]: (void )((bool )1)
  TYPE[89]: CALL
  TOKENIZED[89]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[90]: (bool )1
  TYPE[90]: CALL
  TOKENIZED[90]: ( VAR1 ) 1
  ORIGINAL[91]: (void )((bool )1)
  TYPE[91]: CALL
  TOKENIZED[91]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[92]: (bool )1
  TYPE[92]: CALL
  TOKENIZED[92]: ( VAR1 ) 1
  ORIGINAL[93]: (&(&htup -> t_ctid) -> ip_blkid) -> bi_hi = (blkno >> 16)
  TYPE[93]: CALL
  TOKENIZED[93]: ( & ( &htup -> VAR1 ) -> VAR2 ) -> VAR3 = ( VAR4 >> 16 )
  ORIGINAL[94]: (&(&htup -> t_ctid) -> ip_blkid) -> bi_hi
  TYPE[94]: CALL
  TOKENIZED[94]: ( & ( &htup -> VAR1 ) -> VAR2 ) -> VAR3
  ORIGINAL[95]: &(&htup -> t_ctid) -> ip_blkid
  TYPE[95]: CALL
  TOKENIZED[95]: & ( &htup -> VAR1 ) -> VAR2
  ORIGINAL[96]: (&htup -> t_ctid) -> ip_blkid
  TYPE[96]: CALL
  TOKENIZED[96]: ( &htup -> VAR1 ) -> VAR2
  ORIGINAL[97]: &htup -> t_ctid
  TYPE[97]: CALL
  TOKENIZED[97]: &htup -> VAR1
  ORIGINAL[98]: htup -> t_ctid
  TYPE[98]: CALL
  TOKENIZED[98]: VAR1 -> VAR2
  ORIGINAL[99]: blkno >> 16
  TYPE[99]: CALL
  TOKENIZED[99]: VAR1 >> 16
  ORIGINAL[100]: (&(&htup -> t_ctid) -> ip_blkid) -> bi_lo = (blkno & 0xffff)
  TYPE[100]: CALL
  TOKENIZED[100]: ( & ( &htup -> VAR1 ) -> VAR2 ) -> VAR3 = ( VAR4 & 0xffff )
  ORIGINAL[101]: (&(&htup -> t_ctid) -> ip_blkid) -> bi_lo
  TYPE[101]: CALL
  TOKENIZED[101]: ( & ( &htup -> VAR1 ) -> VAR2 ) -> VAR3
  ORIGINAL[102]: &(&htup -> t_ctid) -> ip_blkid
  TYPE[102]: CALL
  TOKENIZED[102]: & ( &htup -> VAR1 ) -> VAR2
  ORIGINAL[103]: (&htup -> t_ctid) -> ip_blkid
  TYPE[103]: CALL
  TOKENIZED[103]: ( &htup -> VAR1 ) -> VAR2
  ORIGINAL[104]: &htup -> t_ctid
  TYPE[104]: CALL
  TOKENIZED[104]: &htup -> VAR1
  ORIGINAL[105]: htup -> t_ctid
  TYPE[105]: CALL
  TOKENIZED[105]: VAR1 -> VAR2
  ORIGINAL[106]: blkno & 0xffff
  TYPE[106]: CALL
  TOKENIZED[106]: VAR1 & 0xffff
  ORIGINAL[107]: (void )((bool )1)
  TYPE[107]: CALL
  TOKENIZED[107]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[108]: (bool )1
  TYPE[108]: CALL
  TOKENIZED[108]: ( VAR1 ) 1
  ORIGINAL[109]: (&htup -> t_ctid) -> ip_posid = offnum
  TYPE[109]: CALL
  TOKENIZED[109]: ( &htup -> VAR1 ) -> VAR2 = VAR3
  ORIGINAL[110]: (&htup -> t_ctid) -> ip_posid
  TYPE[110]: CALL
  TOKENIZED[110]: ( &htup -> VAR1 ) -> VAR2
  ORIGINAL[111]: &htup -> t_ctid
  TYPE[111]: CALL
  TOKENIZED[111]: &htup -> VAR1
  ORIGINAL[112]: htup -> t_ctid
  TYPE[112]: CALL
  TOKENIZED[112]: VAR1 -> VAR2
  ORIGINAL[113]: offnum = PageAddItem(page,((Item )htup),newlen,offnum,((bool )1),((bool )1))
  TYPE[113]: CALL
  TOKENIZED[113]: VAR1 = FUN1 ( VAR2 , ( ( VAR3 ) VAR4 ) , VAR5 , VAR1 , ( ( VAR6 ) 1 ) , ( ( VAR6 ) 1 ) )
  ORIGINAL[114]: PageAddItem(page,((Item )htup),newlen,offnum,((bool )1),((bool )1))
  TYPE[114]: CALL
  TOKENIZED[114]: FUN1 ( VAR1 , ( ( VAR2 ) VAR3 ) , VAR4 , VAR5 , ( ( VAR6 ) 1 ) , ( ( VAR6 ) 1 ) )
  ORIGINAL[115]: (Item )htup
  TYPE[115]: CALL
  TOKENIZED[115]: ( VAR1 ) VAR2
  ORIGINAL[116]: (bool )1
  TYPE[116]: CALL
  TOKENIZED[116]: ( VAR1 ) 1
  ORIGINAL[117]: (bool )1
  TYPE[117]: CALL
  TOKENIZED[117]: ( VAR1 ) 1
  ORIGINAL[118]: offnum == ((OffsetNumber )0)
  TYPE[118]: CALL
  TOKENIZED[118]: VAR1 == ( ( VAR2 ) 0 )
  ORIGINAL[119]: (OffsetNumber )0
  TYPE[119]: CALL
  TOKENIZED[119]: ( VAR1 ) 0
  ORIGINAL[120]: for (i = 0;i < (xlrec -> ntuples);i++)
  TYPE[120]: CONTROL_STRUCTURE
  TOKENIZED[120]: for ( VAR1 = 0 ; VAR1 < ( VAR2 -> VAR3 ) ; i++ )
  ORIGINAL[121]: ntuples
  TYPE[121]: FIELD_IDENTIFIER
  TOKENIZED[121]: VAR1
  ORIGINAL[122]: pd_lower
  TYPE[122]: FIELD_IDENTIFIER
  TOKENIZED[122]: VAR1
  ORIGINAL[123]: pd_linp
  TYPE[123]: FIELD_IDENTIFIER
  TOKENIZED[123]: VAR1
  ORIGINAL[124]: t_hoff
  TYPE[124]: FIELD_IDENTIFIER
  TOKENIZED[124]: VAR1
  ORIGINAL[125]: datalen
  TYPE[125]: FIELD_IDENTIFIER
  TOKENIZED[125]: VAR1
  ORIGINAL[126]: hdr
  TYPE[126]: FIELD_IDENTIFIER
  TOKENIZED[126]: VAR1
  ORIGINAL[127]: t_bits
  TYPE[127]: FIELD_IDENTIFIER
  TOKENIZED[127]: VAR1
  ORIGINAL[128]: t_bits
  TYPE[128]: FIELD_IDENTIFIER
  TOKENIZED[128]: VAR1
  ORIGINAL[129]: t_infomask2
  TYPE[129]: FIELD_IDENTIFIER
  TOKENIZED[129]: VAR1
  ORIGINAL[130]: t_infomask2
  TYPE[130]: FIELD_IDENTIFIER
  TOKENIZED[130]: VAR1
  ORIGINAL[131]: t_infomask
  TYPE[131]: FIELD_IDENTIFIER
  TOKENIZED[131]: VAR1
  ORIGINAL[132]: t_infomask
  TYPE[132]: FIELD_IDENTIFIER
  TOKENIZED[132]: VAR1
  ORIGINAL[133]: t_hoff
  TYPE[133]: FIELD_IDENTIFIER
  TOKENIZED[133]: VAR1
  ORIGINAL[134]: t_hoff
  TYPE[134]: FIELD_IDENTIFIER
  TOKENIZED[134]: VAR1
  ORIGINAL[135]: t_choice
  TYPE[135]: FIELD_IDENTIFIER
  TOKENIZED[135]: VAR1
  ORIGINAL[136]: t_heap
  TYPE[136]: FIELD_IDENTIFIER
  TOKENIZED[136]: VAR1
  ORIGINAL[137]: t_xmin
  TYPE[137]: FIELD_IDENTIFIER
  TOKENIZED[137]: VAR1
  ORIGINAL[138]: xl_xid
  TYPE[138]: FIELD_IDENTIFIER
  TOKENIZED[138]: VAR1
  ORIGINAL[139]: t_choice
  TYPE[139]: FIELD_IDENTIFIER
  TOKENIZED[139]: VAR1
  ORIGINAL[140]: t_heap
  TYPE[140]: FIELD_IDENTIFIER
  TOKENIZED[140]: VAR1
  ORIGINAL[141]: t_field3
  TYPE[141]: FIELD_IDENTIFIER
  TOKENIZED[141]: VAR1
  ORIGINAL[142]: t_cid
  TYPE[142]: FIELD_IDENTIFIER
  TOKENIZED[142]: VAR1
  ORIGINAL[143]: t_infomask
  TYPE[143]: FIELD_IDENTIFIER
  TOKENIZED[143]: VAR1
  ORIGINAL[144]: t_ctid
  TYPE[144]: FIELD_IDENTIFIER
  TOKENIZED[144]: VAR1
  ORIGINAL[145]: ip_blkid
  TYPE[145]: FIELD_IDENTIFIER
  TOKENIZED[145]: VAR1
  ORIGINAL[146]: bi_hi
  TYPE[146]: FIELD_IDENTIFIER
  TOKENIZED[146]: VAR1
  ORIGINAL[147]: t_ctid
  TYPE[147]: FIELD_IDENTIFIER
  TOKENIZED[147]: VAR1
  ORIGINAL[148]: ip_blkid
  TYPE[148]: FIELD_IDENTIFIER
  TOKENIZED[148]: VAR1
  ORIGINAL[149]: bi_lo
  TYPE[149]: FIELD_IDENTIFIER
  TOKENIZED[149]: VAR1
  ORIGINAL[150]: t_ctid
  TYPE[150]: FIELD_IDENTIFIER
  TOKENIZED[150]: VAR1
  ORIGINAL[151]: ip_posid
  TYPE[151]: FIELD_IDENTIFIER
  TOKENIZED[151]: VAR1
  ORIGINAL[152]: isinit
  TYPE[152]: IDENTIFIER
  TOKENIZED[152]: VAR1
  ORIGINAL[153]: i
  TYPE[153]: IDENTIFIER
  TOKENIZED[153]: VAR1
  ORIGINAL[154]: xlrec
  TYPE[154]: IDENTIFIER
  TOKENIZED[154]: VAR1
  ORIGINAL[155]: i
  TYPE[155]: IDENTIFIER
  TOKENIZED[155]: VAR1
  ORIGINAL[156]: isinit
  TYPE[156]: IDENTIFIER
  TOKENIZED[156]: VAR1
  ORIGINAL[157]: page
  TYPE[157]: IDENTIFIER
  TOKENIZED[157]: VAR1
  ORIGINAL[158]: size_t
  TYPE[158]: IDENTIFIER
  TOKENIZED[158]: VAR1
  ORIGINAL[159]: offnum
  TYPE[159]: IDENTIFIER
  TOKENIZED[159]: VAR1
  ORIGINAL[160]: xlhdr
  TYPE[160]: IDENTIFIER
  TOKENIZED[160]: VAR1
  ORIGINAL[161]: recdata
  TYPE[161]: IDENTIFIER
  TOKENIZED[161]: VAR1
  ORIGINAL[162]: intptr_t
  TYPE[162]: IDENTIFIER
  TOKENIZED[162]: VAR1
  ORIGINAL[163]: recdata
  TYPE[163]: IDENTIFIER
  TOKENIZED[163]: VAR1
  ORIGINAL[164]: xlhdr
  TYPE[164]: IDENTIFIER
  TOKENIZED[164]: VAR1
  ORIGINAL[165]: size_t
  TYPE[165]: IDENTIFIER
  TOKENIZED[165]: VAR1
  ORIGINAL[166]: uint8
  TYPE[166]: IDENTIFIER
  TOKENIZED[166]: VAR1
  ORIGINAL[167]: newlen
  TYPE[167]: IDENTIFIER
  TOKENIZED[167]: VAR1
  ORIGINAL[168]: xlhdr
  TYPE[168]: IDENTIFIER
  TOKENIZED[168]: VAR1
  ORIGINAL[169]: htup
  TYPE[169]: IDENTIFIER
  TOKENIZED[169]: VAR1
  ORIGINAL[170]: tbuf
  TYPE[170]: IDENTIFIER
  TOKENIZED[170]: VAR1
  ORIGINAL[171]: _vstart
  TYPE[171]: IDENTIFIER
  TOKENIZED[171]: VAR1
  ORIGINAL[172]: htup
  TYPE[172]: IDENTIFIER
  TOKENIZED[172]: VAR1
  ORIGINAL[173]: _val
  TYPE[173]: IDENTIFIER
  TOKENIZED[173]: VAR1
  ORIGINAL[174]: _len
  TYPE[174]: IDENTIFIER
  TOKENIZED[174]: VAR1
  ORIGINAL[175]: HeapTupleHeaderData
  TYPE[175]: IDENTIFIER
  TOKENIZED[175]: VAR1
  ORIGINAL[176]: _vstart
  TYPE[176]: IDENTIFIER
  TOKENIZED[176]: VAR1
  ORIGINAL[177]: long
  TYPE[177]: IDENTIFIER
  TOKENIZED[177]: long
  ORIGINAL[178]: htup
  TYPE[178]: IDENTIFIER
  TOKENIZED[178]: VAR1
  ORIGINAL[179]: size_t
  TYPE[179]: IDENTIFIER
  TOKENIZED[179]: VAR1
  ORIGINAL[180]: recdata
  TYPE[180]: IDENTIFIER
  TOKENIZED[180]: VAR1
  ORIGINAL[181]: newlen
  TYPE[181]: IDENTIFIER
  TOKENIZED[181]: VAR1
  ORIGINAL[182]: recdata
  TYPE[182]: IDENTIFIER
  TOKENIZED[182]: VAR1
  ORIGINAL[183]: newlen
  TYPE[183]: IDENTIFIER
  TOKENIZED[183]: VAR1
  ORIGINAL[184]: newlen
  TYPE[184]: IDENTIFIER
  TOKENIZED[184]: VAR1
  ORIGINAL[185]: size_t
  TYPE[185]: IDENTIFIER
  TOKENIZED[185]: VAR1
  ORIGINAL[186]: htup
  TYPE[186]: IDENTIFIER
  TOKENIZED[186]: VAR1
  ORIGINAL[187]: xlhdr
  TYPE[187]: IDENTIFIER
  TOKENIZED[187]: VAR1
  ORIGINAL[188]: htup
  TYPE[188]: IDENTIFIER
  TOKENIZED[188]: VAR1
  ORIGINAL[189]: xlhdr
  TYPE[189]: IDENTIFIER
  TOKENIZED[189]: VAR1
  ORIGINAL[190]: htup
  TYPE[190]: IDENTIFIER
  TOKENIZED[190]: VAR1
  ORIGINAL[191]: xlhdr
  TYPE[191]: IDENTIFIER
  TOKENIZED[191]: VAR1
  ORIGINAL[192]: htup
  TYPE[192]: IDENTIFIER
  TOKENIZED[192]: VAR1
  ORIGINAL[193]: record
  TYPE[193]: IDENTIFIER
  TOKENIZED[193]: VAR1
  ORIGINAL[194]: htup
  TYPE[194]: IDENTIFIER
  TOKENIZED[194]: VAR1
  ORIGINAL[195]: htup
  TYPE[195]: IDENTIFIER
  TOKENIZED[195]: VAR1
  ORIGINAL[196]: htup
  TYPE[196]: IDENTIFIER
  TOKENIZED[196]: VAR1
  ORIGINAL[197]: blkno
  TYPE[197]: IDENTIFIER
  TOKENIZED[197]: VAR1
  ORIGINAL[198]: htup
  TYPE[198]: IDENTIFIER
  TOKENIZED[198]: VAR1
  ORIGINAL[199]: blkno
  TYPE[199]: IDENTIFIER
  TOKENIZED[199]: VAR1
  ORIGINAL[200]: htup
  TYPE[200]: IDENTIFIER
  TOKENIZED[200]: VAR1
  ORIGINAL[201]: offnum
  TYPE[201]: IDENTIFIER
  TOKENIZED[201]: VAR1
  ORIGINAL[202]: offnum
  TYPE[202]: IDENTIFIER
  TOKENIZED[202]: VAR1
  ORIGINAL[203]: page
  TYPE[203]: IDENTIFIER
  TOKENIZED[203]: VAR1
  ORIGINAL[204]: htup
  TYPE[204]: IDENTIFIER
  TOKENIZED[204]: VAR1
  ORIGINAL[205]: newlen
  TYPE[205]: IDENTIFIER
  TOKENIZED[205]: VAR1
  ORIGINAL[206]: offnum
  TYPE[206]: IDENTIFIER
  TOKENIZED[206]: VAR1
  ORIGINAL[207]: offnum
  TYPE[207]: IDENTIFIER
  TOKENIZED[207]: VAR1
  ORIGINAL[208]: freespace
  TYPE[208]: IDENTIFIER
  TOKENIZED[208]: VAR1

CENTER_NODE: 30064774812
FRAGMENT_COUNT: 4
  ORIGINAL[0]: HeapSatisfiesHOTUpdate(relation,hot_attrs,&oldtup,heaptup)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , &oldtup , VAR3 )
  ORIGINAL[1]: use_hot_update = ((bool )1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 ) 1 )
  ORIGINAL[2]: (bool )1
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 1
  ORIGINAL[3]: use_hot_update
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064776160
FRAGMENT_COUNT: 6
  ORIGINAL[0]: scan -> rs_ctup . t_data != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 != ( ( void * ) 0 )
  ORIGINAL[1]: scan -> rs_mctid = scan -> rs_ctup . t_self
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR1 -> VAR3 . VAR4
  ORIGINAL[2]: scan -> rs_mctid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: scan -> rs_ctup . t_self
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: scan -> rs_ctup
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: t_self
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476822
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97
  ORIGINAL[1]: c <= 122
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 122
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477781
FRAGMENT_COUNT: 11
  ORIGINAL[0]: *userbuf = buffer
  TYPE[0]: CALL
  TOKENIZED[0]: *userbuf = VAR1
  ORIGINAL[1]: *userbuf
  TYPE[1]: CALL
  TOKENIZED[1]: *userbuf
  ORIGINAL[2]: ReleaseBuffer(buffer)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: *userbuf = 0
  TYPE[3]: CALL
  TOKENIZED[3]: *userbuf = 0
  ORIGINAL[4]: *userbuf
  TYPE[4]: CALL
  TOKENIZED[4]: *userbuf
  ORIGINAL[5]: valid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: keep_buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: userbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buffer
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buffer
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: userbuf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064775435
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064775828
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064772960
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064775920
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064779301
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (bool )(rel -> rd_rel -> reltoastrelid != ((Oid )0))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( VAR2 -> VAR3 -> VAR4 != ( ( VAR5 ) 0 ) )
  ORIGINAL[1]: toastrel = heap_open(rel -> rd_rel -> reltoastrelid,1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 -> VAR3 -> VAR4 , 1 )
  ORIGINAL[2]: heap_open(rel -> rd_rel -> reltoastrelid,1)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 -> VAR3 , 1 )
  ORIGINAL[3]: toastrel
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: toastrel
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640712
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772472
FRAGMENT_COUNT: 21
  ORIGINAL[0]: tuple -> t_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: tuple -> t_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: scan -> rs_rd -> rd_att -> attrs[(__cur_keys -> sk_attno) - 1] -> attbyval
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 -> VAR4 [ ( VAR5 -> VAR6 ) - 1 ] -> VAR7
  ORIGINAL[3]: tuple -> t_data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tuple -> t_data -> t_hoff
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: tuple -> t_data
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: tuple -> t_data
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: tuple -> t_data -> t_hoff
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[8]: tuple -> t_data
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: tuple -> t_data
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: tuple -> t_data -> t_hoff
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[11]: tuple -> t_data
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: tuple -> t_data
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: tuple -> t_data -> t_hoff
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[14]: tuple -> t_data
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: ((char *)(tuple -> t_data)) + tuple -> t_data -> t_hoff
  TYPE[15]: CALL
  TOKENIZED[15]: ( ( char * ) ( VAR1 -> VAR2 ) ) + VAR1 -> VAR2 -> VAR3
  ORIGINAL[16]: tuple -> t_data
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: tuple -> t_data -> t_hoff
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[18]: tuple -> t_data
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 -> VAR2
  ORIGINAL[19]: tuple -> t_data
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 -> VAR2
  ORIGINAL[20]: t_hoff
  TYPE[20]: FIELD_IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 30064772796
FRAGMENT_COUNT: 34
  ORIGINAL[0]: (r -> rd_rel -> relkind) == 'i'
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 -> VAR3 ) == 'i'
  ORIGINAL[1]: errstart(20,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 20 , \
  ORIGINAL[2]: errstart(20,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 20 , \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: errfinish(errcode(('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24)),errmsg(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( FUN2 ( ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 ) ) , FUN3 ( \
  ORIGINAL[5]: errcode(('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24))
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 ) )
  ORIGINAL[6]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24)
  TYPE[6]: CALL
  TOKENIZED[6]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 )
  ORIGINAL[7]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18)
  TYPE[7]: CALL
  TOKENIZED[7]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 )
  ORIGINAL[8]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12)
  TYPE[8]: CALL
  TOKENIZED[8]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 )
  ORIGINAL[9]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6)
  TYPE[9]: CALL
  TOKENIZED[9]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 )
  ORIGINAL[10]: '4' - 48 & 0x3F
  TYPE[10]: CALL
  TOKENIZED[10]: '4' - 48 & 0x3F
  ORIGINAL[11]: '4' - 48
  TYPE[11]: CALL
  TOKENIZED[11]: '4' - 48
  ORIGINAL[12]: ('2' - 48 & 0x3F) << 6
  TYPE[12]: CALL
  TOKENIZED[12]: ( '2' - 48 & 0x3F ) << 6
  ORIGINAL[13]: '2' - 48 & 0x3F
  TYPE[13]: CALL
  TOKENIZED[13]: '2' - 48 & 0x3F
  ORIGINAL[14]: '2' - 48
  TYPE[14]: CALL
  TOKENIZED[14]: '2' - 48
  ORIGINAL[15]: (56 - 48 & 0x3F) << 12
  TYPE[15]: CALL
  TOKENIZED[15]: ( 56 - 48 & 0x3F ) << 12
  ORIGINAL[16]: 56 - 48 & 0x3F
  TYPE[16]: CALL
  TOKENIZED[16]: 56 - 48 & 0x3F
  ORIGINAL[17]: 56 - 48
  TYPE[17]: CALL
  TOKENIZED[17]: 56 - 48
  ORIGINAL[18]: (48 - 48 & 0x3F) << 18
  TYPE[18]: CALL
  TOKENIZED[18]: ( 48 - 48 & 0x3F ) << 18
  ORIGINAL[19]: 48 - 48 & 0x3F
  TYPE[19]: CALL
  TOKENIZED[19]: 48 - 48 & 0x3F
  ORIGINAL[20]: 48 - 48
  TYPE[20]: CALL
  TOKENIZED[20]: 48 - 48
  ORIGINAL[21]: ('9' - 48 & 0x3F) << 24
  TYPE[21]: CALL
  TOKENIZED[21]: ( '9' - 48 & 0x3F ) << 24
  ORIGINAL[22]: '9' - 48 & 0x3F
  TYPE[22]: CALL
  TOKENIZED[22]: '9' - 48 & 0x3F
  ORIGINAL[23]: '9' - 48
  TYPE[23]: CALL
  TOKENIZED[23]: '9' - 48
  ORIGINAL[24]: errmsg(\
  TYPE[24]: CALL
  TOKENIZED[24]: FUN1 ( \
  ORIGINAL[25]: r -> rd_rel -> relname . data
  TYPE[25]: CALL
  TOKENIZED[25]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[26]: r -> rd_rel -> relname
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[27]: r -> rd_rel
  TYPE[27]: CALL
  TOKENIZED[27]: VAR1 -> VAR2
  ORIGINAL[28]: (void )0
  TYPE[28]: CALL
  TOKENIZED[28]: ( void ) 0
  ORIGINAL[29]: rd_rel
  TYPE[29]: FIELD_IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: relname
  TYPE[30]: FIELD_IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: data
  TYPE[31]: FIELD_IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: <global> __func__
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: <global> VAR1
  ORIGINAL[33]: r
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 0

CENTER_NODE: 30064775480
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640659
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640573
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478382
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (((PageHeader )page) -> pd_flags) & 0x0004
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) & 0x0004
  ORIGINAL[1]: &vmbuffer
  TYPE[1]: CALL
  TOKENIZED[1]: &vmbuffer
  ORIGINAL[2]: vmbuffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: block
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: vmbuffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: vmbuffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771527
FRAGMENT_COUNT: 4
  ORIGINAL[0]: scan -> rs_cbuf < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 < 0
  ORIGINAL[1]: BufferBlocks + ((Size )(scan -> rs_cbuf - 1)) * 8192
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + ( ( VAR2 ) ( VAR3 -> VAR4 - 1 ) ) * 8192
  ORIGINAL[2]: ((Size )(scan -> rs_cbuf - 1)) * 8192
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 ) ( VAR2 -> VAR3 - 1 ) ) * 8192
  ORIGINAL[3]: (Size )(scan -> rs_cbuf - 1)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) ( VAR2 -> VAR3 - 1 )

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 0

CENTER_NODE: 30064778615
FRAGMENT_COUNT: 9
  ORIGINAL[0]: (record -> xl_info) & 0x0080
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) & 0x0080
  ORIGINAL[1]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[2]: ((((void )((bool )1)) , obuffer != 0)) && obuffer != nbuffer
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( ( ( void ) ( ( VAR1 ) 1 ) ) , VAR2 != 0 ) ) && VAR2 != VAR3
  ORIGINAL[3]: obuffer != 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 != 0
  ORIGINAL[4]: obuffer != nbuffer
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 != VAR2
  ORIGINAL[5]: UnlockReleaseBuffer(obuffer)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 )
  ORIGINAL[6]: samepage
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: obuffer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: hot_update
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064773962
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < nthispage
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: heaptuples[ndone + i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 + VAR3 ]
  ORIGINAL[2]: ndone + i
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2
  ORIGINAL[3]: ndone
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640768
FRAGMENT_COUNT: 0

CENTER_NODE: 30064775189
FRAGMENT_COUNT: 9
  ORIGINAL[0]: tup1 -> t_data -> t_infomask2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: tup1 -> t_data -> t_infomask
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: (tupdesc -> attrs[attrnum - 1] -> attlen) == ((int )(sizeof(int16 )))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 [ VAR3 - 1 ] -> VAR4 ) == ( ( int ) ( sizeof ( VAR5 ) ) )
  ORIGINAL[3]: tup1 -> t_data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tup1 -> t_data -> t_hoff
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: tup1 -> t_data
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: t_data
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: t_hoff
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tup1
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064776131
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !((tuple -> t_infomask) & 0x1000)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) & 0x1000 )
  ORIGINAL[1]: xid >= ((TransactionId )3) && TransactionIdPrecedes(xid,cutoff_xid)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= ( ( VAR2 ) 3 ) && FUN1 ( VAR1 , VAR3 )
  ORIGINAL[2]: xid >= ((TransactionId )3)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >= ( ( VAR2 ) 3 )
  ORIGINAL[3]: (TransactionId )3
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) 3
  ORIGINAL[4]: TransactionIdPrecedes(xid,cutoff_xid)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: xid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: xid
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cutoff_xid
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640353
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

