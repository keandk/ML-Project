# Tokenized code fragments for 152083-v1.0.0-bad
# Total center nodes processed: 145
# Total code fragments found: 668

CENTER_NODE: 30064775653
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tuple -> t_data -> t_choice . t_heap . t_xmax
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 . VAR4 . VAR5
  ORIGINAL[1]: !(old_infomask & (0x0800 | 0x0400 | 0x1000)) && ((mode == LockTupleShared?old_infomask & (0x0040 | 0x0080) : old_infomask & 0x0040)) && TransactionIdIsCurrentTransactionId(xmax)
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( VAR1 & ( 0x0800 | 0x0400 | 0x1000 ) ) && ( ( VAR2 == LockTupleShared?old_infomask & ( 0x0040 | 0x0080 ) : VAR1 & 0x0040 ) ) && FUN1 ( VAR3 )
  ORIGINAL[2]: tuple -> t_data -> t_choice . t_heap . t_xmax
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 . VAR4 . VAR5
  ORIGINAL[3]: tuple -> t_data -> t_choice . t_heap
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[4]: tuple -> t_data -> t_choice
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: t_heap
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: t_xmax
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064777964
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064773345
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bistate = ((BulkInsertState )(MemoryContextAlloc(CurrentMemoryContext,sizeof(BulkInsertStateData ))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( VAR2 ) ( FUN1 ( VAR3 , sizeof ( VAR4 ) ) ) )
  ORIGINAL[1]: (BulkInsertState )(MemoryContextAlloc(CurrentMemoryContext,sizeof(BulkInsertStateData )))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( FUN1 ( VAR2 , sizeof ( VAR3 ) ) )
  ORIGINAL[2]: MemoryContextAlloc(CurrentMemoryContext,sizeof(BulkInsertStateData ))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , sizeof ( VAR2 ) )
  ORIGINAL[3]: bistate
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: BulkInsertState
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772854
FRAGMENT_COUNT: 6
  ORIGINAL[0]: scan -> rs_ctup . t_data == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 == ( ( void * ) 0 )
  ORIGINAL[1]: scan -> rs_ctup . t_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: scan -> rs_ctup
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: scan -> rs_ctup
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: t_data
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640638
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640683
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 13
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: strcmp(getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( FUN2 ( \
  ORIGINAL[3]: *stonesoup_server = mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_server = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: mg_set_option(stonesoup_server, \
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , \
  ORIGINAL[6]: mg_destroy_server(&stonesoup_server)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( &stonesoup_server )
  ORIGINAL[7]: &stonesoup_server
  TYPE[7]: CALL
  TOKENIZED[7]: &stonesoup_server
  ORIGINAL[8]: if (getenv(\
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: if ( FUN1 ( \
  ORIGINAL[9]: stonesoup_server
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: NULL
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stonesoup_server
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: stonesoup_server
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064772513
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(((const void *)r) != ((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( const void * ) VAR1 ) != ( ( void * ) 0 ) )
  ORIGINAL[1]: ((const void *)r) != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( const void * ) VAR1 ) != ( ( void * ) 0 )
  ORIGINAL[2]: (const void *)r
  TYPE[2]: CALL
  TOKENIZED[2]: ( const void * ) VAR1
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 30064778338
FRAGMENT_COUNT: 5
  ORIGINAL[0]: nbuffer < 0?LocalBufferBlockPointers[-nbuffer - 1] : ((Block )(BufferBlocks + ((Size )(nbuffer - 1)) * 8192))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0?LocalBufferBlockPointers [ -nbuffer - 1 ] : ( ( VAR2 ) ( VAR3 + ( ( VAR4 ) ( VAR1 - 1 ) ) * 8192 ) )
  ORIGINAL[1]: nbuffer < 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 0
  ORIGINAL[2]: LocalBufferBlockPointers[-nbuffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ -nbuffer - 1 ]
  ORIGINAL[3]: -nbuffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: -nbuffer - 1
  ORIGINAL[4]: LocalBufferBlockPointers
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064775334
FRAGMENT_COUNT: 3
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: result
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> __func__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640441
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064779012
FRAGMENT_COUNT: 10
  ORIGINAL[0]: &target -> tid
  TYPE[0]: CALL
  TOKENIZED[0]: &target -> VAR1
  ORIGINAL[1]: target -> tid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &target -> tid
  TYPE[2]: CALL
  TOKENIZED[2]: &target -> VAR1
  ORIGINAL[3]: target -> tid
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: &target -> tid
  TYPE[4]: CALL
  TOKENIZED[4]: &target -> VAR1
  ORIGINAL[5]: target -> tid
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: tid
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: target
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: target
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: target
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477557
FRAGMENT_COUNT: 3
  ORIGINAL[0]: heap_beginscan_internal(relation,snapshot,nkeys,key,((bool )1),((bool )1),((bool )0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( VAR5 ) 1 ) , ( ( VAR5 ) 1 ) , ( ( VAR5 ) 0 ) )
  ORIGINAL[1]: relation
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: snapshot
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478443
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (relation -> rd_rel -> relpersistence) == 'p'
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 -> VAR3 ) == 'p'
  ORIGINAL[1]: rdata[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ]
  ORIGINAL[2]: rdata[1] . buffer = buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ] . VAR2 = VAR2
  ORIGINAL[3]: rdata[1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 1 ]
  ORIGINAL[4]: rdata
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: rdata
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477883
FRAGMENT_COUNT: 9
  ORIGINAL[0]: priorXmax != ((TransactionId )0) && !(priorXmax == tp . t_data -> t_choice . t_heap . t_xmin)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( VAR2 ) 0 ) && ! ( VAR1 == VAR3 . VAR4 -> VAR5 . VAR6 . VAR7 )
  ORIGINAL[1]: CheckForSerializableConflictOut(valid,relation,&tp,buffer,snapshot)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , &tp , VAR3 , VAR4 )
  ORIGINAL[2]: &tp
  TYPE[2]: CALL
  TOKENIZED[2]: &tp
  ORIGINAL[3]: relation
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: valid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: relation
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buffer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: snapshot
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064779001
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640482
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773164
FRAGMENT_COUNT: 7
  ORIGINAL[0]: (&tid -> ip_blkid) -> bi_hi
  TYPE[0]: CALL
  TOKENIZED[0]: ( &tid -> VAR1 ) -> VAR2
  ORIGINAL[1]: &tid -> ip_blkid
  TYPE[1]: CALL
  TOKENIZED[1]: &tid -> VAR1
  ORIGINAL[2]: tid -> ip_blkid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (&tid -> ip_blkid) -> bi_lo
  TYPE[3]: CALL
  TOKENIZED[3]: ( &tid -> VAR1 ) -> VAR2
  ORIGINAL[4]: &tid -> ip_blkid
  TYPE[4]: CALL
  TOKENIZED[4]: &tid -> VAR1
  ORIGINAL[5]: tid -> ip_blkid
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: bi_lo
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640506
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640309
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064778990
FRAGMENT_COUNT: 5
  ORIGINAL[0]: info & 0x70
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x70
  ORIGINAL[1]: heap_xlog_visible(lsn,record)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: lsn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: record
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640761
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640771
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774075
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 68719480647
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[1]: (((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[2]: sizeof(ItemIdData )
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: ItemIdData
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064774077
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064775876
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (relation -> rd_rel -> relpersistence) == 'p'
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 -> VAR3 ) == 'p'
  ORIGINAL[1]: xlrec . target . node
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . VAR3
  ORIGINAL[2]: xlrec . target
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: target
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: xlrec
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640696
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774017
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640349
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719479508
FRAGMENT_COUNT: 4
  ORIGINAL[0]: rdata[0] . buffer = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] . VAR2 = 0
  ORIGINAL[1]: rdata[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: rdata
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: rdata
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773104
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !skip
  TYPE[0]: CALL
  TOKENIZED[0]: !skip
  ORIGINAL[1]: CheckForSerializableConflictOut(valid,relation,heapTuple,buffer,snapshot)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: valid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relation
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: heapTuple
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: snapshot
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: valid
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772151
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !scan -> rs_inited
  TYPE[0]: CALL
  TOKENIZED[0]: !scan -> VAR1
  ORIGINAL[1]: lpp = ((ItemId )(&((PageHeader )dp) -> pd_linp[lineoff - 1]))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 ) ( & ( ( VAR3 ) VAR4 ) -> VAR5 [ VAR6 - 1 ] ) )
  ORIGINAL[2]: (ItemId )(&((PageHeader )dp) -> pd_linp[lineoff - 1])
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( & ( ( VAR2 ) VAR3 ) -> VAR4 [ VAR5 - 1 ] )
  ORIGINAL[3]: &((PageHeader )dp) -> pd_linp[lineoff - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: & ( ( VAR1 ) VAR2 ) -> VAR3 [ VAR4 - 1 ]
  ORIGINAL[4]: lpp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ItemId
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640280
FRAGMENT_COUNT: 0

CENTER_NODE: 30064775396
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064774335
FRAGMENT_COUNT: 2
  ORIGINAL[0]: GetCurrentCommandId(((bool )1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( VAR1 ) 1 ) )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640282
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640577
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777587
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (record -> xl_info) & 0x0080
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) & 0x0080
  ORIGINAL[1]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[2]: htup -> t_infomask2 = xlhdr . t_infomask2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = VAR3 . VAR2
  ORIGINAL[3]: htup -> t_infomask2
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: xlhdr . t_infomask2
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: htup
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064776632
FRAGMENT_COUNT: 6
  ORIGINAL[0]: xlrec . blkno = blkno
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = VAR2
  ORIGINAL[1]: xlrec . blkno
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: blkno
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: xlrec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: blkno
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: xlrec
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640708
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776114
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((const void *)(&scan -> rs_mctid)) != ((void *)0) && ((&scan -> rs_mctid) -> ip_posid) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( const void * ) ( &scan -> VAR1 ) ) != ( ( void * ) 0 ) && ( ( &scan -> VAR1 ) -> VAR2 ) != 0
  ORIGINAL[1]: ((const void *)(&scan -> rs_mctid)) != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( const void * ) ( &scan -> VAR1 ) ) != ( ( void * ) 0 )
  ORIGINAL[2]: ((&scan -> rs_mctid) -> ip_posid) != 0
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( &scan -> VAR1 ) -> VAR2 ) != 0
  ORIGINAL[3]: (&scan -> rs_mctid) -> ip_posid
  TYPE[3]: CALL
  TOKENIZED[3]: ( &scan -> VAR1 ) -> VAR2

CENTER_NODE: 30064779063
FRAGMENT_COUNT: 9
  ORIGINAL[0]: info == 0x0020
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0x0020
  ORIGINAL[1]: &(&xlrec -> newtid) -> ip_blkid
  TYPE[1]: CALL
  TOKENIZED[1]: & ( &xlrec -> VAR1 ) -> VAR2
  ORIGINAL[2]: (&xlrec -> newtid) -> ip_blkid
  TYPE[2]: CALL
  TOKENIZED[2]: ( &xlrec -> VAR1 ) -> VAR2
  ORIGINAL[3]: &xlrec -> newtid
  TYPE[3]: CALL
  TOKENIZED[3]: &xlrec -> VAR1
  ORIGINAL[4]: &(&xlrec -> newtid) -> ip_blkid
  TYPE[4]: CALL
  TOKENIZED[4]: & ( &xlrec -> VAR1 ) -> VAR2
  ORIGINAL[5]: (&xlrec -> newtid) -> ip_blkid
  TYPE[5]: CALL
  TOKENIZED[5]: ( &xlrec -> VAR1 ) -> VAR2
  ORIGINAL[6]: &xlrec -> newtid
  TYPE[6]: CALL
  TOKENIZED[6]: &xlrec -> VAR1
  ORIGINAL[7]: &xlrec -> newtid
  TYPE[7]: CALL
  TOKENIZED[7]: &xlrec -> VAR1
  ORIGINAL[8]: ip_blkid
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640313
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774360
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640744
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773358
FRAGMENT_COUNT: 5
  ORIGINAL[0]: FreeAccessStrategy(bistate -> strategy)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[1]: bistate -> strategy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: strategy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bistate
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bistate
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773021
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1
  ORIGINAL[2]: tid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064775834
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064777358
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776694
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (intptr_t )(8 - 1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( 8 - 1 )
  ORIGINAL[1]: 8 - 1
  TYPE[1]: CALL
  TOKENIZED[1]: 8 - 1

CENTER_NODE: 30064772574
FRAGMENT_COUNT: 6
  ORIGINAL[0]: lockmode != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: UnlockRelationId(&relid,lockmode)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &relid , VAR1 )
  ORIGINAL[2]: &relid
  TYPE[2]: CALL
  TOKENIZED[2]: &relid
  ORIGINAL[3]: lockmode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: relid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: lockmode
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640463
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ev == MG_REQUEST
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: strcmp(ifmatch_header, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: strcmp(ifmatch_header, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: stonesoup_printf_context = conn
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2
  ORIGINAL[4]: stonesoup_handle_taint(stonesoup_tainted_buff)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: if (strcmp(ifmatch_header, \
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: if ( FUN1 ( VAR1 , \
  ORIGINAL[6]: <global> stonesoup_printf_context
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: conn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stonesoup_tainted_buff
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: MG_TRUE
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064776399
FRAGMENT_COUNT: 4
  ORIGINAL[0]: xlrec . cutoff_xid = cutoff_xid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = VAR2
  ORIGINAL[1]: xlrec . cutoff_xid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: cutoff_xid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: rdata
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476845
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !scan -> rs_pageatatime
  TYPE[0]: CALL
  TOKENIZED[0]: !scan -> VAR1
  ORIGINAL[1]: heap_page_prune_opt(scan -> rs_rd,buffer,RecentGlobalXmin)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: scan -> rs_rd
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: RecentGlobalXmin
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buffer
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640796
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773932
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < nthispage
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: tuphdr -> datalen = datalen
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: tuphdr -> datalen
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: datalen
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: scratchptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640465
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640545
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777836
FRAGMENT_COUNT: 9
  ORIGINAL[0]: (((intptr_t )_vstart) & sizeof(long ) - 1) == 0 && (_len & sizeof(long ) - 1) == 0 && _val == 0 && _len <= 1024 && 1024 != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( ( VAR1 ) VAR2 ) & sizeof ( long ) - 1 ) == 0 && ( VAR3 & sizeof ( long ) - 1 ) == 0 && VAR4 == 0 && VAR3 <= 1024 && 1024 != 0
  ORIGINAL[1]: _start < _stop
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: *(_start++) = 0
  TYPE[2]: CALL
  TOKENIZED[2]: * ( _start++ ) = 0
  ORIGINAL[3]: *(_start++)
  TYPE[3]: CALL
  TOKENIZED[3]: * ( _start++ )
  ORIGINAL[4]: _start++
  TYPE[4]: CALL
  TOKENIZED[4]: _start++
  ORIGINAL[5]: while (_start < _stop)
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: while ( VAR1 < VAR2 )
  ORIGINAL[6]: _start
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: _stop
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: _start
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064776161
FRAGMENT_COUNT: 14
  ORIGINAL[0]: (tuple -> t_infomask) & (0x4000 | 0x8000)?tuple -> t_choice . t_heap . t_field3 . t_xvac : ((TransactionId )0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) & ( 0x4000 | 0x8000 ) ?tuple -> VAR3 . VAR4 . VAR5 . VAR6 : ( ( VAR7 ) 0 )
  ORIGINAL[1]: (tuple -> t_infomask) & (0x4000 | 0x8000)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & ( 0x4000 | 0x8000 )
  ORIGINAL[2]: tuple -> t_infomask
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 0x4000 | 0x8000
  TYPE[3]: CALL
  TOKENIZED[3]: 0x4000 | 0x8000
  ORIGINAL[4]: tuple -> t_choice . t_heap . t_field3 . t_xvac
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5
  ORIGINAL[5]: tuple -> t_choice . t_heap . t_field3
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[6]: tuple -> t_choice . t_heap
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: tuple -> t_choice
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: (TransactionId )0
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 ) 0
  ORIGINAL[9]: t_choice
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: t_heap
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: t_field3
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: t_xvac
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: tuple
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 47244640779
FRAGMENT_COUNT: 0

CENTER_NODE: 68719480932
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (bool )(rel -> rd_rel -> reltoastrelid != ((Oid )0))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( VAR2 -> VAR3 -> VAR4 != ( ( VAR5 ) 0 ) )
  ORIGINAL[1]: toastrel = heap_open(rel -> rd_rel -> reltoastrelid,1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 -> VAR3 -> VAR4 , 1 )
  ORIGINAL[2]: FlushRelationBuffers(toastrel)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: toastrel -> rd_smgr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: toastrel
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: toastrel
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: toastrel
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: toastrel
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064774410
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064778997
FRAGMENT_COUNT: 8
  ORIGINAL[0]: appendStringInfo(buf,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: target -> node . spcNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: target -> node . dbNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: target -> node
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: target -> node . relNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: dbNode
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: target
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477607
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: scan -> rs_cbuf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: rs_cbuf
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: scan
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640564
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640421
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064775349
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640725
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777199
FRAGMENT_COUNT: 139
  ORIGINAL[0]: !((((void )((bool )1)) , buffer != 0))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( ( void ) ( ( VAR1 ) 1 ) ) , VAR2 != 0 ) )
  ORIGINAL[1]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[2]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2
  ORIGINAL[3]: lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[4]: UnlockReleaseBuffer(buffer)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: offnum = ((((void )((bool )1)) , (&xlrec -> target . tid) -> ip_posid))
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = ( ( ( ( void ) ( ( VAR2 ) 1 ) ) , ( &xlrec -> VAR3 . VAR4 ) -> VAR5 ) )
  ORIGINAL[6]: (void )((bool )1)
  TYPE[6]: CALL
  TOKENIZED[6]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[7]: (bool )1
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 ) 1
  ORIGINAL[8]: (&xlrec -> target . tid) -> ip_posid
  TYPE[8]: CALL
  TOKENIZED[8]: ( &xlrec -> VAR1 . VAR2 ) -> VAR3
  ORIGINAL[9]: &xlrec -> target . tid
  TYPE[9]: CALL
  TOKENIZED[9]: &xlrec -> VAR1 . VAR2
  ORIGINAL[10]: xlrec -> target . tid
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2 . VAR3
  ORIGINAL[11]: xlrec -> target
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: (((((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))?0 : ((((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))) / sizeof(ItemIdData ))) >= offnum
  TYPE[12]: CALL
  TOKENIZED[12]: ( ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ?0 : ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ) / sizeof ( VAR7 ) ) ) >= VAR8
  ORIGINAL[13]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))?0 : ((((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))) / sizeof(ItemIdData )
  TYPE[13]: CALL
  TOKENIZED[13]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ?0 : ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ) / sizeof ( VAR7 )
  ORIGINAL[14]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[14]: CALL
  TOKENIZED[14]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[15]: ((PageHeader )page) -> pd_lower
  TYPE[15]: CALL
  TOKENIZED[15]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[16]: (PageHeader )page
  TYPE[16]: CALL
  TOKENIZED[16]: ( VAR1 ) VAR2
  ORIGINAL[17]: (size_t )(&((PageHeaderData *)0) -> pd_linp)
  TYPE[17]: CALL
  TOKENIZED[17]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[18]: &((PageHeaderData *)0) -> pd_linp
  TYPE[18]: CALL
  TOKENIZED[18]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[19]: ((PageHeaderData *)0) -> pd_linp
  TYPE[19]: CALL
  TOKENIZED[19]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[20]: (PageHeaderData *)0
  TYPE[20]: CALL
  TOKENIZED[20]: ( VAR1 * ) 0
  ORIGINAL[21]: (((((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))?0 : ((((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))) / sizeof(ItemIdData ))) < offnum || !((lp -> lp_flags) == 1)
  TYPE[21]: CALL
  TOKENIZED[21]: ( ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ?0 : ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ) / sizeof ( VAR7 ) ) ) < VAR8 || ! ( ( VAR9 -> VAR10 ) == 1 )
  ORIGINAL[22]: (((((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))?0 : ((((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))) / sizeof(ItemIdData ))) < offnum
  TYPE[22]: CALL
  TOKENIZED[22]: ( ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ?0 : ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ) / sizeof ( VAR7 ) ) ) < VAR8
  ORIGINAL[23]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))?0 : ((((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))) / sizeof(ItemIdData )
  TYPE[23]: CALL
  TOKENIZED[23]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ?0 : ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ) / sizeof ( VAR7 )
  ORIGINAL[24]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[24]: CALL
  TOKENIZED[24]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[25]: ((PageHeader )page) -> pd_lower
  TYPE[25]: CALL
  TOKENIZED[25]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[26]: (PageHeader )page
  TYPE[26]: CALL
  TOKENIZED[26]: ( VAR1 ) VAR2
  ORIGINAL[27]: (size_t )(&((PageHeaderData *)0) -> pd_linp)
  TYPE[27]: CALL
  TOKENIZED[27]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[28]: &((PageHeaderData *)0) -> pd_linp
  TYPE[28]: CALL
  TOKENIZED[28]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[29]: ((PageHeaderData *)0) -> pd_linp
  TYPE[29]: CALL
  TOKENIZED[29]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[30]: (PageHeaderData *)0
  TYPE[30]: CALL
  TOKENIZED[30]: ( VAR1 * ) 0
  ORIGINAL[31]: htup = ((HeapTupleHeader )(((((void )((bool )1)) , ((void )((bool )1))) , ((Item )(((char *)page) + lp -> lp_off)))))
  TYPE[31]: CALL
  TOKENIZED[31]: VAR1 = ( ( VAR2 ) ( ( ( ( ( void ) ( ( VAR3 ) 1 ) ) , ( ( void ) ( ( VAR3 ) 1 ) ) ) , ( ( VAR4 ) ( ( ( char * ) VAR5 ) + VAR6 -> VAR7 ) ) ) ) )
  ORIGINAL[32]: (HeapTupleHeader )(((((void )((bool )1)) , ((void )((bool )1))) , ((Item )(((char *)page) + lp -> lp_off))))
  TYPE[32]: CALL
  TOKENIZED[32]: ( VAR1 ) ( ( ( ( ( void ) ( ( VAR2 ) 1 ) ) , ( ( void ) ( ( VAR2 ) 1 ) ) ) , ( ( VAR3 ) ( ( ( char * ) VAR4 ) + VAR5 -> VAR6 ) ) ) )
  ORIGINAL[33]: (void )((bool )1)
  TYPE[33]: CALL
  TOKENIZED[33]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[34]: (bool )1
  TYPE[34]: CALL
  TOKENIZED[34]: ( VAR1 ) 1
  ORIGINAL[35]: (void )((bool )1)
  TYPE[35]: CALL
  TOKENIZED[35]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[36]: (bool )1
  TYPE[36]: CALL
  TOKENIZED[36]: ( VAR1 ) 1
  ORIGINAL[37]: (Item )(((char *)page) + lp -> lp_off)
  TYPE[37]: CALL
  TOKENIZED[37]: ( VAR1 ) ( ( ( char * ) VAR2 ) + VAR3 -> VAR4 )
  ORIGINAL[38]: ((char *)page) + lp -> lp_off
  TYPE[38]: CALL
  TOKENIZED[38]: ( ( char * ) VAR1 ) + VAR2 -> VAR3
  ORIGINAL[39]: (char *)page
  TYPE[39]: CALL
  TOKENIZED[39]: ( char * ) VAR1
  ORIGINAL[40]: lp -> lp_off
  TYPE[40]: CALL
  TOKENIZED[40]: VAR1 -> VAR2
  ORIGINAL[41]: htup -> t_infomask &= ~(0x0400 | 0x0800 | 0x1000 | (0x0040 | 0x0080) | (0x4000 | 0x8000))
  TYPE[41]: CALL
  TOKENIZED[41]: VAR1 -> VAR2 &= ~ ( 0x0400 | 0x0800 | 0x1000 | ( 0x0040 | 0x0080 ) | ( 0x4000 | 0x8000 ) )
  ORIGINAL[42]: htup -> t_infomask
  TYPE[42]: CALL
  TOKENIZED[42]: VAR1 -> VAR2
  ORIGINAL[43]: ~(0x0400 | 0x0800 | 0x1000 | (0x0040 | 0x0080) | (0x4000 | 0x8000))
  TYPE[43]: CALL
  TOKENIZED[43]: ~ ( 0x0400 | 0x0800 | 0x1000 | ( 0x0040 | 0x0080 ) | ( 0x4000 | 0x8000 ) )
  ORIGINAL[44]: 0x0400 | 0x0800 | 0x1000 | (0x0040 | 0x0080) | (0x4000 | 0x8000)
  TYPE[44]: CALL
  TOKENIZED[44]: 0x0400 | 0x0800 | 0x1000 | ( 0x0040 | 0x0080 ) | ( 0x4000 | 0x8000 )
  ORIGINAL[45]: 0x0400 | 0x0800 | 0x1000 | (0x0040 | 0x0080)
  TYPE[45]: CALL
  TOKENIZED[45]: 0x0400 | 0x0800 | 0x1000 | ( 0x0040 | 0x0080 )
  ORIGINAL[46]: 0x0400 | 0x0800 | 0x1000
  TYPE[46]: CALL
  TOKENIZED[46]: 0x0400 | 0x0800 | 0x1000
  ORIGINAL[47]: 0x0400 | 0x0800
  TYPE[47]: CALL
  TOKENIZED[47]: 0x0400 | 0x0800
  ORIGINAL[48]: 0x0040 | 0x0080
  TYPE[48]: CALL
  TOKENIZED[48]: 0x0040 | 0x0080
  ORIGINAL[49]: 0x4000 | 0x8000
  TYPE[49]: CALL
  TOKENIZED[49]: 0x4000 | 0x8000
  ORIGINAL[50]: htup -> t_infomask2 &= ~0x4000
  TYPE[50]: CALL
  TOKENIZED[50]: VAR1 -> VAR2 &= ~0x4000
  ORIGINAL[51]: htup -> t_infomask2
  TYPE[51]: CALL
  TOKENIZED[51]: VAR1 -> VAR2
  ORIGINAL[52]: ~0x4000
  TYPE[52]: CALL
  TOKENIZED[52]: ~0x4000
  ORIGINAL[53]: htup -> t_choice . t_heap . t_xmax = record -> xl_xid
  TYPE[53]: CALL
  TOKENIZED[53]: VAR1 -> VAR2 . VAR3 . VAR4 = VAR5 -> VAR6
  ORIGINAL[54]: htup -> t_choice . t_heap . t_xmax
  TYPE[54]: CALL
  TOKENIZED[54]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[55]: htup -> t_choice . t_heap
  TYPE[55]: CALL
  TOKENIZED[55]: VAR1 -> VAR2 . VAR3
  ORIGINAL[56]: htup -> t_choice
  TYPE[56]: CALL
  TOKENIZED[56]: VAR1 -> VAR2
  ORIGINAL[57]: record -> xl_xid
  TYPE[57]: CALL
  TOKENIZED[57]: VAR1 -> VAR2
  ORIGINAL[58]: htup -> t_choice . t_heap . t_field3 . t_cid = ((CommandId )0)
  TYPE[58]: CALL
  TOKENIZED[58]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5 = ( ( VAR6 ) 0 )
  ORIGINAL[59]: htup -> t_choice . t_heap . t_field3 . t_cid
  TYPE[59]: CALL
  TOKENIZED[59]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5
  ORIGINAL[60]: htup -> t_choice . t_heap . t_field3
  TYPE[60]: CALL
  TOKENIZED[60]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[61]: htup -> t_choice . t_heap
  TYPE[61]: CALL
  TOKENIZED[61]: VAR1 -> VAR2 . VAR3
  ORIGINAL[62]: htup -> t_choice
  TYPE[62]: CALL
  TOKENIZED[62]: VAR1 -> VAR2
  ORIGINAL[63]: (CommandId )0
  TYPE[63]: CALL
  TOKENIZED[63]: ( VAR1 ) 0
  ORIGINAL[64]: (bool )0
  TYPE[64]: CALL
  TOKENIZED[64]: ( VAR1 ) 0
  ORIGINAL[65]: !(((PageHeader )page) -> pd_prune_xid != ((TransactionId )0)) || TransactionIdPrecedes(record -> xl_xid,((PageHeader )page) -> pd_prune_xid)
  TYPE[65]: CALL
  TOKENIZED[65]: ! ( ( ( VAR1 ) VAR2 ) -> VAR3 != ( ( VAR4 ) 0 ) ) || FUN1 ( VAR5 -> VAR6 , ( ( VAR1 ) VAR2 ) -> VAR3 )
  ORIGINAL[66]: !(((PageHeader )page) -> pd_prune_xid != ((TransactionId )0))
  TYPE[66]: CALL
  TOKENIZED[66]: ! ( ( ( VAR1 ) VAR2 ) -> VAR3 != ( ( VAR4 ) 0 ) )
  ORIGINAL[67]: ((PageHeader )page) -> pd_prune_xid != ((TransactionId )0)
  TYPE[67]: CALL
  TOKENIZED[67]: ( ( VAR1 ) VAR2 ) -> VAR3 != ( ( VAR4 ) 0 )
  ORIGINAL[68]: ((PageHeader )page) -> pd_prune_xid
  TYPE[68]: CALL
  TOKENIZED[68]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[69]: (PageHeader )page
  TYPE[69]: CALL
  TOKENIZED[69]: ( VAR1 ) VAR2
  ORIGINAL[70]: (TransactionId )0
  TYPE[70]: CALL
  TOKENIZED[70]: ( VAR1 ) 0
  ORIGINAL[71]: xlrec -> all_visible_cleared
  TYPE[71]: CALL
  TOKENIZED[71]: VAR1 -> VAR2
  ORIGINAL[72]: htup -> t_ctid = xlrec -> target . tid
  TYPE[72]: CALL
  TOKENIZED[72]: VAR1 -> VAR2 = VAR3 -> VAR4 . VAR5
  ORIGINAL[73]: htup -> t_ctid
  TYPE[73]: CALL
  TOKENIZED[73]: VAR1 -> VAR2
  ORIGINAL[74]: xlrec -> target . tid
  TYPE[74]: CALL
  TOKENIZED[74]: VAR1 -> VAR2 . VAR3
  ORIGINAL[75]: xlrec -> target
  TYPE[75]: CALL
  TOKENIZED[75]: VAR1 -> VAR2
  ORIGINAL[76]: ((PageHeader )page) -> pd_lsn = lsn
  TYPE[76]: CALL
  TOKENIZED[76]: ( ( VAR1 ) VAR2 ) -> VAR3 = VAR4
  ORIGINAL[77]: ((PageHeader )page) -> pd_lsn
  TYPE[77]: CALL
  TOKENIZED[77]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[78]: (PageHeader )page
  TYPE[78]: CALL
  TOKENIZED[78]: ( VAR1 ) VAR2
  ORIGINAL[79]: ((PageHeader )page) -> pd_tli = ((uint16 )ThisTimeLineID)
  TYPE[79]: CALL
  TOKENIZED[79]: ( ( VAR1 ) VAR2 ) -> VAR3 = ( ( VAR4 ) VAR5 )
  ORIGINAL[80]: ((PageHeader )page) -> pd_tli
  TYPE[80]: CALL
  TOKENIZED[80]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[81]: (PageHeader )page
  TYPE[81]: CALL
  TOKENIZED[81]: ( VAR1 ) VAR2
  ORIGINAL[82]: (uint16 )ThisTimeLineID
  TYPE[82]: CALL
  TOKENIZED[82]: ( VAR1 ) VAR2
  ORIGINAL[83]: MarkBufferDirty(buffer)
  TYPE[83]: CALL
  TOKENIZED[83]: FUN1 ( VAR1 )
  ORIGINAL[84]: UnlockReleaseBuffer(buffer)
  TYPE[84]: CALL
  TOKENIZED[84]: FUN1 ( VAR1 )
  ORIGINAL[85]: target
  TYPE[85]: FIELD_IDENTIFIER
  TOKENIZED[85]: VAR1
  ORIGINAL[86]: tid
  TYPE[86]: FIELD_IDENTIFIER
  TOKENIZED[86]: VAR1
  ORIGINAL[87]: ip_posid
  TYPE[87]: FIELD_IDENTIFIER
  TOKENIZED[87]: VAR1
  ORIGINAL[88]: pd_lower
  TYPE[88]: FIELD_IDENTIFIER
  TOKENIZED[88]: VAR1
  ORIGINAL[89]: pd_linp
  TYPE[89]: FIELD_IDENTIFIER
  TOKENIZED[89]: VAR1
  ORIGINAL[90]: pd_lower
  TYPE[90]: FIELD_IDENTIFIER
  TOKENIZED[90]: VAR1
  ORIGINAL[91]: pd_linp
  TYPE[91]: FIELD_IDENTIFIER
  TOKENIZED[91]: VAR1
  ORIGINAL[92]: lp_off
  TYPE[92]: FIELD_IDENTIFIER
  TOKENIZED[92]: VAR1
  ORIGINAL[93]: t_infomask
  TYPE[93]: FIELD_IDENTIFIER
  TOKENIZED[93]: VAR1
  ORIGINAL[94]: t_infomask2
  TYPE[94]: FIELD_IDENTIFIER
  TOKENIZED[94]: VAR1
  ORIGINAL[95]: t_choice
  TYPE[95]: FIELD_IDENTIFIER
  TOKENIZED[95]: VAR1
  ORIGINAL[96]: t_heap
  TYPE[96]: FIELD_IDENTIFIER
  TOKENIZED[96]: VAR1
  ORIGINAL[97]: t_xmax
  TYPE[97]: FIELD_IDENTIFIER
  TOKENIZED[97]: VAR1
  ORIGINAL[98]: xl_xid
  TYPE[98]: FIELD_IDENTIFIER
  TOKENIZED[98]: VAR1
  ORIGINAL[99]: t_choice
  TYPE[99]: FIELD_IDENTIFIER
  TOKENIZED[99]: VAR1
  ORIGINAL[100]: t_heap
  TYPE[100]: FIELD_IDENTIFIER
  TOKENIZED[100]: VAR1
  ORIGINAL[101]: t_field3
  TYPE[101]: FIELD_IDENTIFIER
  TOKENIZED[101]: VAR1
  ORIGINAL[102]: t_cid
  TYPE[102]: FIELD_IDENTIFIER
  TOKENIZED[102]: VAR1
  ORIGINAL[103]: pd_prune_xid
  TYPE[103]: FIELD_IDENTIFIER
  TOKENIZED[103]: VAR1
  ORIGINAL[104]: all_visible_cleared
  TYPE[104]: FIELD_IDENTIFIER
  TOKENIZED[104]: VAR1
  ORIGINAL[105]: t_ctid
  TYPE[105]: FIELD_IDENTIFIER
  TOKENIZED[105]: VAR1
  ORIGINAL[106]: target
  TYPE[106]: FIELD_IDENTIFIER
  TOKENIZED[106]: VAR1
  ORIGINAL[107]: tid
  TYPE[107]: FIELD_IDENTIFIER
  TOKENIZED[107]: VAR1
  ORIGINAL[108]: pd_lsn
  TYPE[108]: FIELD_IDENTIFIER
  TOKENIZED[108]: VAR1
  ORIGINAL[109]: pd_tli
  TYPE[109]: FIELD_IDENTIFIER
  TOKENIZED[109]: VAR1
  ORIGINAL[110]: buffer
  TYPE[110]: IDENTIFIER
  TOKENIZED[110]: VAR1
  ORIGINAL[111]: offnum
  TYPE[111]: IDENTIFIER
  TOKENIZED[111]: VAR1
  ORIGINAL[112]: xlrec
  TYPE[112]: IDENTIFIER
  TOKENIZED[112]: VAR1
  ORIGINAL[113]: page
  TYPE[113]: IDENTIFIER
  TOKENIZED[113]: VAR1
  ORIGINAL[114]: size_t
  TYPE[114]: IDENTIFIER
  TOKENIZED[114]: VAR1
  ORIGINAL[115]: offnum
  TYPE[115]: IDENTIFIER
  TOKENIZED[115]: VAR1
  ORIGINAL[116]: page
  TYPE[116]: IDENTIFIER
  TOKENIZED[116]: VAR1
  ORIGINAL[117]: size_t
  TYPE[117]: IDENTIFIER
  TOKENIZED[117]: VAR1
  ORIGINAL[118]: offnum
  TYPE[118]: IDENTIFIER
  TOKENIZED[118]: VAR1
  ORIGINAL[119]: htup
  TYPE[119]: IDENTIFIER
  TOKENIZED[119]: VAR1
  ORIGINAL[120]: HeapTupleHeader
  TYPE[120]: IDENTIFIER
  TOKENIZED[120]: VAR1
  ORIGINAL[121]: Item
  TYPE[121]: IDENTIFIER
  TOKENIZED[121]: VAR1
  ORIGINAL[122]: page
  TYPE[122]: IDENTIFIER
  TOKENIZED[122]: VAR1
  ORIGINAL[123]: lp
  TYPE[123]: IDENTIFIER
  TOKENIZED[123]: VAR1
  ORIGINAL[124]: htup
  TYPE[124]: IDENTIFIER
  TOKENIZED[124]: VAR1
  ORIGINAL[125]: htup
  TYPE[125]: IDENTIFIER
  TOKENIZED[125]: VAR1
  ORIGINAL[126]: htup
  TYPE[126]: IDENTIFIER
  TOKENIZED[126]: VAR1
  ORIGINAL[127]: record
  TYPE[127]: IDENTIFIER
  TOKENIZED[127]: VAR1
  ORIGINAL[128]: htup
  TYPE[128]: IDENTIFIER
  TOKENIZED[128]: VAR1
  ORIGINAL[129]: page
  TYPE[129]: IDENTIFIER
  TOKENIZED[129]: VAR1
  ORIGINAL[130]: xlrec
  TYPE[130]: IDENTIFIER
  TOKENIZED[130]: VAR1
  ORIGINAL[131]: htup
  TYPE[131]: IDENTIFIER
  TOKENIZED[131]: VAR1
  ORIGINAL[132]: xlrec
  TYPE[132]: IDENTIFIER
  TOKENIZED[132]: VAR1
  ORIGINAL[133]: page
  TYPE[133]: IDENTIFIER
  TOKENIZED[133]: VAR1
  ORIGINAL[134]: lsn
  TYPE[134]: IDENTIFIER
  TOKENIZED[134]: VAR1
  ORIGINAL[135]: page
  TYPE[135]: IDENTIFIER
  TOKENIZED[135]: VAR1
  ORIGINAL[136]: ThisTimeLineID
  TYPE[136]: IDENTIFIER
  TOKENIZED[136]: VAR1
  ORIGINAL[137]: buffer
  TYPE[137]: IDENTIFIER
  TOKENIZED[137]: VAR1
  ORIGINAL[138]: buffer
  TYPE[138]: IDENTIFIER
  TOKENIZED[138]: VAR1

CENTER_NODE: 30064774768
FRAGMENT_COUNT: 42
  ORIGINAL[0]: vmbuffer == 0 && (((PageHeader )page) -> pd_flags) & 0x0004
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 && ( ( ( VAR2 ) VAR3 ) -> VAR4 ) & 0x0004
  ORIGINAL[1]: !already_marked
  TYPE[1]: CALL
  TOKENIZED[1]: !already_marked
  ORIGINAL[2]: oldtup . t_data -> t_infomask &= ~(0x0400 | 0x0800 | 0x1000 | (0x0040 | 0x0080) | (0x4000 | 0x8000))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 -> VAR3 &= ~ ( 0x0400 | 0x0800 | 0x1000 | ( 0x0040 | 0x0080 ) | ( 0x4000 | 0x8000 ) )
  ORIGINAL[3]: oldtup . t_data -> t_infomask
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2 -> VAR3
  ORIGINAL[4]: oldtup . t_data
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: ~(0x0400 | 0x0800 | 0x1000 | (0x0040 | 0x0080) | (0x4000 | 0x8000))
  TYPE[5]: CALL
  TOKENIZED[5]: ~ ( 0x0400 | 0x0800 | 0x1000 | ( 0x0040 | 0x0080 ) | ( 0x4000 | 0x8000 ) )
  ORIGINAL[6]: 0x0400 | 0x0800 | 0x1000 | (0x0040 | 0x0080) | (0x4000 | 0x8000)
  TYPE[6]: CALL
  TOKENIZED[6]: 0x0400 | 0x0800 | 0x1000 | ( 0x0040 | 0x0080 ) | ( 0x4000 | 0x8000 )
  ORIGINAL[7]: 0x0400 | 0x0800 | 0x1000 | (0x0040 | 0x0080)
  TYPE[7]: CALL
  TOKENIZED[7]: 0x0400 | 0x0800 | 0x1000 | ( 0x0040 | 0x0080 )
  ORIGINAL[8]: 0x0400 | 0x0800 | 0x1000
  TYPE[8]: CALL
  TOKENIZED[8]: 0x0400 | 0x0800 | 0x1000
  ORIGINAL[9]: 0x0400 | 0x0800
  TYPE[9]: CALL
  TOKENIZED[9]: 0x0400 | 0x0800
  ORIGINAL[10]: 0x0040 | 0x0080
  TYPE[10]: CALL
  TOKENIZED[10]: 0x0040 | 0x0080
  ORIGINAL[11]: 0x4000 | 0x8000
  TYPE[11]: CALL
  TOKENIZED[11]: 0x4000 | 0x8000
  ORIGINAL[12]: oldtup . t_data -> t_choice . t_heap . t_xmax = xid
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 . VAR2 -> VAR3 . VAR4 . VAR5 = VAR6
  ORIGINAL[13]: oldtup . t_data -> t_choice . t_heap . t_xmax
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 . VAR2 -> VAR3 . VAR4 . VAR5
  ORIGINAL[14]: oldtup . t_data -> t_choice . t_heap
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 . VAR2 -> VAR3 . VAR4
  ORIGINAL[15]: oldtup . t_data -> t_choice
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 . VAR2 -> VAR3
  ORIGINAL[16]: oldtup . t_data
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 . VAR2
  ORIGINAL[17]: oldtup . t_data -> t_choice . t_heap . t_field3 . t_cid = cid
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 . VAR2 -> VAR3 . VAR4 . VAR5 . VAR6 = VAR7
  ORIGINAL[18]: oldtup . t_data -> t_choice . t_heap . t_field3 . t_cid
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 . VAR2 -> VAR3 . VAR4 . VAR5 . VAR6
  ORIGINAL[19]: oldtup . t_data -> t_choice . t_heap . t_field3
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 . VAR2 -> VAR3 . VAR4 . VAR5
  ORIGINAL[20]: oldtup . t_data -> t_choice . t_heap
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 . VAR2 -> VAR3 . VAR4
  ORIGINAL[21]: oldtup . t_data -> t_choice
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 . VAR2 -> VAR3
  ORIGINAL[22]: oldtup . t_data
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 . VAR2
  ORIGINAL[23]: t_data
  TYPE[23]: FIELD_IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: t_infomask
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: t_data
  TYPE[25]: FIELD_IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: t_choice
  TYPE[26]: FIELD_IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: t_heap
  TYPE[27]: FIELD_IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: t_xmax
  TYPE[28]: FIELD_IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: t_data
  TYPE[29]: FIELD_IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: t_choice
  TYPE[30]: FIELD_IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: t_heap
  TYPE[31]: FIELD_IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: t_field3
  TYPE[32]: FIELD_IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: t_cid
  TYPE[33]: FIELD_IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: already_marked
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: oldtup
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: oldtup
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: xid
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: oldtup
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: cid
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: iscombo
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: oldtup
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1

CENTER_NODE: 47244640665
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774005
FRAGMENT_COUNT: 3
  ORIGINAL[0]: heap_insert(relation,tup,GetCurrentCommandId(((bool )1)),0,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , FUN2 ( ( ( VAR3 ) 1 ) ) , 0 , ( ( void * ) 0 ) )
  ORIGINAL[1]: GetCurrentCommandId(((bool )1))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 ) 1 ) )
  ORIGINAL[2]: (bool )1
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 1

CENTER_NODE: 30064774412
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064772875
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640775
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772539
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !SearchSysCacheExists(RELOID,((Datum )(((Datum )relationId) & 0xFFFFFFFF)),0,0,0)
  TYPE[0]: CALL
  TOKENIZED[0]: !SearchSysCacheExists ( VAR1 , ( ( VAR2 ) ( ( ( VAR2 ) VAR3 ) & 0xFFFFFFFF ) ) , 0 , 0 , 0 )
  ORIGINAL[1]: ((const void *)r) != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( const void * ) VAR1 ) != ( ( void * ) 0 )
  ORIGINAL[2]: (const void *)r
  TYPE[2]: CALL
  TOKENIZED[2]: ( const void * ) VAR1
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 47244640370
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773153
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640451
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !((tuple -> t_infomask) & (0x0400 | 0x0800))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) & ( 0x0400 | 0x0800 ) )

CENTER_NODE: 30064775743
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064776233
FRAGMENT_COUNT: 8
  ORIGINAL[0]: rdata[0] . len = (((size_t )(&((xl_heap_clean *)0) -> ndead)) + sizeof(uint16 ))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] . VAR2 = ( ( ( VAR3 ) ( & ( ( VAR4 * ) 0 ) -> VAR5 ) ) + sizeof ( VAR6 ) )
  ORIGINAL[1]: rdata[0] . len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] . VAR2
  ORIGINAL[2]: rdata[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: ((size_t )(&((xl_heap_clean *)0) -> ndead)) + sizeof(uint16 )
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 ) ) + sizeof ( VAR4 )
  ORIGINAL[4]: rdata[0]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 0 ]
  ORIGINAL[5]: rdata[0]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ 0 ]
  ORIGINAL[6]: len
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: size_t
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640398
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640551
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772809
FRAGMENT_COUNT: 20
  ORIGINAL[0]: nkeys > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: scan -> rs_key = ((ScanKey )(MemoryContextAlloc(CurrentMemoryContext,sizeof(ScanKeyData ) * nkeys)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( VAR3 ) ( FUN1 ( VAR4 , sizeof ( VAR5 ) * VAR6 ) ) )
  ORIGINAL[2]: scan -> rs_key
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (ScanKey )(MemoryContextAlloc(CurrentMemoryContext,sizeof(ScanKeyData ) * nkeys))
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) ( FUN1 ( VAR2 , sizeof ( VAR3 ) * VAR4 ) )
  ORIGINAL[4]: MemoryContextAlloc(CurrentMemoryContext,sizeof(ScanKeyData ) * nkeys)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , sizeof ( VAR2 ) * VAR3 )
  ORIGINAL[5]: sizeof(ScanKeyData ) * nkeys
  TYPE[5]: CALL
  TOKENIZED[5]: sizeof ( VAR1 ) * VAR2
  ORIGINAL[6]: sizeof(ScanKeyData )
  TYPE[6]: CALL
  TOKENIZED[6]: sizeof ( VAR1 )
  ORIGINAL[7]: scan -> rs_key = ((void *)0)
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[8]: scan -> rs_key
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: (void *)0
  TYPE[9]: CALL
  TOKENIZED[9]: ( void * ) 0
  ORIGINAL[10]: rs_key
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: rs_key
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: nkeys
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: scan
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: ScanKey
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: CurrentMemoryContext
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: ScanKeyData
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: nkeys
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: scan
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: scan
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064775241
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tupdesc -> attrs[attrnum - 1] -> attcacheoff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 - 1 ] -> VAR4
  ORIGINAL[1]: (tupdesc -> attrs[attrnum - 1] -> attlen) == ((int )(sizeof(int16 )))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 [ VAR3 - 1 ] -> VAR4 ) == ( ( int ) ( sizeof ( VAR5 ) ) )
  ORIGINAL[2]: ((char *)(tup2 -> t_data)) + tup2 -> t_data -> t_hoff + tupdesc -> attrs[attrnum - 1] -> attcacheoff
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( char * ) ( VAR1 -> VAR2 ) ) + VAR1 -> VAR2 -> VAR3 + VAR4 -> VAR5 [ VAR6 - 1 ] -> VAR7
  ORIGINAL[3]: tupdesc -> attrs[attrnum - 1] -> attcacheoff
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 - 1 ] -> VAR4
  ORIGINAL[4]: tupdesc -> attrs[attrnum - 1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 - 1 ]
  ORIGINAL[5]: tupdesc -> attrs[attrnum - 1]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 - 1 ]
  ORIGINAL[6]: attcacheoff
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771175
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640580
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772606
FRAGMENT_COUNT: 5
  ORIGINAL[0]: errstart(20,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 20 , \
  ORIGINAL[1]: errmsg(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: r -> rd_rel -> relname . data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[3]: r -> rd_rel -> relname
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: data
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776198
FRAGMENT_COUNT: 4
  ORIGINAL[0]: rdata . data = ((char *)(&xlrec))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = ( ( char * ) ( &xlrec ) )
  ORIGINAL[1]: rdata . data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: (char *)(&xlrec)
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) ( &xlrec )
  ORIGINAL[3]: rdata
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640644
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777067
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *xlrec = (xl_heap_newpage *)(((char *)record) + (((intptr_t )(sizeof(XLogRecord ))) + (8 - 1) & ~((intptr_t )(8 - 1))))
  TYPE[0]: CALL
  TOKENIZED[0]: *xlrec = ( VAR1 * ) ( ( ( char * ) VAR2 ) + ( ( ( VAR3 ) ( sizeof ( VAR4 ) ) ) + ( 8 - 1 ) & ~ ( ( VAR3 ) ( 8 - 1 ) ) ) )
  ORIGINAL[1]: (xl_heap_newpage *)(((char *)record) + (((intptr_t )(sizeof(XLogRecord ))) + (8 - 1) & ~((intptr_t )(8 - 1))))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( ( ( char * ) VAR2 ) + ( ( ( VAR3 ) ( sizeof ( VAR4 ) ) ) + ( 8 - 1 ) & ~ ( ( VAR3 ) ( 8 - 1 ) ) ) )
  ORIGINAL[2]: xlrec
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064779257
FRAGMENT_COUNT: 28
  ORIGINAL[0]: euctemon_semiconvert != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: stonesoup_in_val > 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 1
  ORIGINAL[2]: stonesoup_printf(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[4]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[5]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[6]: &stonesoup_in_val
  TYPE[6]: CALL
  TOKENIZED[6]: &stonesoup_in_val
  ORIGINAL[7]: stonesoup_check_val <= stonesoup_in_val - 1
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 <= VAR2 - 1
  ORIGINAL[8]: stonesoup_in_val - 1
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 - 1
  ORIGINAL[9]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[10]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[11]: stonesoup_printf(\
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( \
  ORIGINAL[12]: stonesoup_in_val
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: stonesoup_trace
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: trace_point
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: stonesoup_trace
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: trace_point
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: stonesoup_trace
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: variable_signed_integral
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: stonesoup_in_val
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: stonesoup_in_val
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: stonesoup_check_val
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: stonesoup_in_val
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: stonesoup_trace
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: trace_point
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: stonesoup_trace
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: trace_point
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: prime
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1

CENTER_NODE: 30064772689
FRAGMENT_COUNT: 4
  ORIGINAL[0]: errstart(20,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 20 , \
  ORIGINAL[1]: ('2' - 48 & 0x3F) << 6
  TYPE[1]: CALL
  TOKENIZED[1]: ( '2' - 48 & 0x3F ) << 6
  ORIGINAL[2]: '2' - 48 & 0x3F
  TYPE[2]: CALL
  TOKENIZED[2]: '2' - 48 & 0x3F
  ORIGINAL[3]: '2' - 48
  TYPE[3]: CALL
  TOKENIZED[3]: '2' - 48

CENTER_NODE: 47244640777
FRAGMENT_COUNT: 0

CENTER_NODE: 30064778778
FRAGMENT_COUNT: 7
  ORIGINAL[0]: (record -> xl_info) & 0x0008 >> 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) & 0x0008 >> 0
  ORIGINAL[1]: (void )(RestoreBackupBlock(lsn,record,0,((bool )0),((bool )0)))
  TYPE[1]: CALL
  TOKENIZED[1]: ( void ) ( FUN1 ( VAR1 , VAR2 , 0 , ( ( VAR3 ) 0 ) , ( ( VAR3 ) 0 ) ) )
  ORIGINAL[2]: RestoreBackupBlock(lsn,record,0,((bool )0),((bool )0))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , 0 , ( ( VAR3 ) 0 ) , ( ( VAR3 ) 0 ) )
  ORIGINAL[3]: (bool )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) 0
  ORIGINAL[4]: (bool )0
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 ) 0
  ORIGINAL[5]: lsn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: record
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640416
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776775
FRAGMENT_COUNT: 5
  ORIGINAL[0]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[1]: ((char *)xlrec) + record -> xl_len
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( char * ) VAR1 ) + VAR2 -> VAR3
  ORIGINAL[2]: (char *)xlrec
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) VAR1
  ORIGINAL[3]: xlrec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: record
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640711
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477509
FRAGMENT_COUNT: 8
  ORIGINAL[0]: RangeVarGetRelidExtended(relation,lockmode,((bool )0),((bool )0),((void *)0),((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( ( VAR3 ) 0 ) , ( ( VAR3 ) 0 ) , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[1]: (bool )0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 0
  ORIGINAL[2]: (bool )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: lockmode
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: relation
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: lockmode
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771243
FRAGMENT_COUNT: 8
  ORIGINAL[0]: scan -> rs_rd
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: scan -> rs_rd
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !scan -> rs_bitmapscan
  TYPE[2]: CALL
  TOKENIZED[2]: !scan -> VAR1
  ORIGINAL[3]: scan -> rs_rd -> pgstat_info
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: scan -> rs_rd
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: rs_rd
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pgstat_info
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: scan
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064775314
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (attrnum = bms_first_member(hot_attrs)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 ) ) >= 0
  ORIGINAL[1]: attrnum = bms_first_member(hot_attrs)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[2]: bms_first_member(hot_attrs)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: !heap_tuple_attr_equals(relation -> rd_att,attrnum,oldtup,newtup)
  TYPE[3]: CALL
  TOKENIZED[3]: !heap_tuple_attr_equals ( VAR1 -> VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[4]: attrnum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719480906
FRAGMENT_COUNT: 8
  ORIGINAL[0]: info == 0x0040
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0x0040
  ORIGINAL[1]: *xlrec = (xl_heap_visible *)rec
  TYPE[1]: CALL
  TOKENIZED[1]: *xlrec = ( VAR1 * ) VAR2
  ORIGINAL[2]: appendStringInfo(buf,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: xlrec -> node . spcNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: xlrec -> node . dbNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: xlrec -> node . relNode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3
  ORIGINAL[6]: xlrec -> block
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640783
FRAGMENT_COUNT: 0

CENTER_NODE: 30064775836
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064772778
FRAGMENT_COUNT: 2
  ORIGINAL[0]: heap_beginscan_internal(relation,snapshot,nkeys,key,((bool )0),((bool )0),((bool )1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( VAR5 ) 0 ) , ( ( VAR5 ) 0 ) , ( ( VAR5 ) 1 ) )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064777946
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772956
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !((lp -> lp_flags) == 1)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) == 1 )
  ORIGINAL[1]: tuple -> t_data = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: tuple -> t_data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719478022
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[1]: (((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[2]: sizeof(ItemIdData )
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: ItemIdData
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771207
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064776607
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[1]: ((PageHeader )page) -> pd_lower
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[2]: ((PageHeader )page) -> pd_lower
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[3]: (PageHeader )page
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) VAR2
  ORIGINAL[4]: pd_lower
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: page
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640458
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640509
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640581
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776015
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tuple -> t_choice . t_heap . t_field3 . t_xvac
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5
  ORIGINAL[1]: (tuple -> t_infomask) & 0x4000
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 0x4000
  ORIGINAL[2]: tuple -> t_choice . t_heap . t_field3 . t_xvac
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5
  ORIGINAL[3]: tuple -> t_choice . t_heap . t_field3
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[4]: tuple -> t_choice . t_heap
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: t_field3
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: t_xvac
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719480768
FRAGMENT_COUNT: 5
  ORIGINAL[0]: record -> xl_info
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: info & 0x70
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x70
  ORIGINAL[2]: heap_xlog_update(lsn,record,((bool )0))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , ( ( VAR3 ) 0 ) )
  ORIGINAL[3]: lsn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: record
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064775397
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064777138
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640721
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479355
FRAGMENT_COUNT: 5
  ORIGINAL[0]: xid >= ((TransactionId )3)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= ( ( VAR2 ) 3 )
  ORIGINAL[1]: TransactionIdPrecedes(xid,cutoff_xid)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: xid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: xid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cutoff_xid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772558
FRAGMENT_COUNT: 3
  ORIGINAL[0]: lockmode != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: AcceptInvalidationMessages()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: relOid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773645
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !((bool )((((tup -> t_data -> t_infomask) & 0x0008? *((Oid *)(((char *)(tup -> t_data)) + tup -> t_data -> t_hoff - sizeof(Oid ))) : ((Oid )0))) != ((Oid )0)))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 ) ( ( ( ( VAR2 -> VAR3 -> VAR4 ) & 0x0008? * ( ( VAR5 * ) ( ( ( char * ) ( VAR2 -> VAR3 ) ) + VAR2 -> VAR3 -> VAR6 - sizeof ( VAR5 ) ) ) : ( ( VAR5 ) 0 ) ) ) != ( ( VAR5 ) 0 ) ) )
  ORIGINAL[1]: *((Oid *)(((char *)(tup -> t_data)) + tup -> t_data -> t_hoff - sizeof(Oid )))
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( VAR1 * ) ( ( ( char * ) ( VAR2 -> VAR3 ) ) + VAR2 -> VAR3 -> VAR4 - sizeof ( VAR1 ) ) )
  ORIGINAL[2]: *((Oid *)(((char *)(tup -> t_data)) + tup -> t_data -> t_hoff - sizeof(Oid )))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( ( VAR1 * ) ( ( ( char * ) ( VAR2 -> VAR3 ) ) + VAR2 -> VAR3 -> VAR4 - sizeof ( VAR1 ) ) )
  ORIGINAL[3]: (Oid *)(((char *)(tup -> t_data)) + tup -> t_data -> t_hoff - sizeof(Oid ))
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 * ) ( ( ( char * ) ( VAR2 -> VAR3 ) ) + VAR2 -> VAR3 -> VAR4 - sizeof ( VAR1 ) )
  ORIGINAL[4]: ((char *)(tup -> t_data)) + tup -> t_data -> t_hoff - sizeof(Oid )
  TYPE[4]: CALL
  TOKENIZED[4]: ( ( char * ) ( VAR1 -> VAR2 ) ) + VAR1 -> VAR2 -> VAR3 - sizeof ( VAR4 )

CENTER_NODE: 47244640513
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640569
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479759
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: LocalBufferBlockPointers[-buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ -buffer - 1 ]
  ORIGINAL[2]: LocalBufferBlockPointers
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640655
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772773
FRAGMENT_COUNT: 8
  ORIGINAL[0]: heap_beginscan_internal(relation,snapshot,nkeys,key,allow_strat,allow_sync,((bool )0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 , ( ( VAR7 ) 0 ) )
  ORIGINAL[1]: (bool )0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 0
  ORIGINAL[2]: relation
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: snapshot
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: nkeys
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: key
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: allow_strat
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: allow_sync
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640547
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776971
FRAGMENT_COUNT: 11
  ORIGINAL[0]: buffer != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2
  ORIGINAL[2]: lsn . xlogid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: ((PageHeader )page) -> pd_lsn . xlogid
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( VAR1 ) VAR2 ) -> VAR3 . VAR4
  ORIGINAL[4]: lsn . xlogid
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: lsn . xlogid
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: xlogid
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: lsn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: lsn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: lsn
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: lsn
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640653
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776077
FRAGMENT_COUNT: 11
  ORIGINAL[0]: scan -> rs_ctup . t_data != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 != ( ( void * ) 0 )
  ORIGINAL[1]: scan -> rs_pageatatime
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: scan -> rs_mindex = scan -> rs_cindex
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[3]: scan -> rs_mindex
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: scan -> rs_cindex
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: rs_pageatatime
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: rs_mindex
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: rs_cindex
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: scan
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: scan
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: scan
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640764
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640399
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772831
FRAGMENT_COUNT: 7
  ORIGINAL[0]: scan -> rs_cbuf != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != 0
  ORIGINAL[1]: scan -> rs_cbuf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ReleaseBuffer(scan -> rs_cbuf)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[3]: scan -> rs_cbuf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: rs_cbuf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: scan
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: scan
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640405
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640740
FRAGMENT_COUNT: 0

