# Tokenized code fragments for 153817-v1.0.0-bad
# Total center nodes processed: 70
# Total code fragments found: 291

CENTER_NODE: 30064771836
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !prev && ctx -> filter && ctx -> filter -> priv_class
  TYPE[0]: CALL
  TOKENIZED[0]: !prev && VAR1 -> VAR2 && VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: !prev && ctx -> filter
  TYPE[1]: CALL
  TOKENIZED[1]: !prev && VAR1 -> VAR2
  ORIGINAL[2]: ctx -> filter -> priv_class
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: ctx -> priv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: priv
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772087
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pads[pad_idx] . type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[1]: pads[pad_idx]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: type
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pads
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pad_idx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771780
FRAGMENT_COUNT: 10
  ORIGINAL[0]: registered_avfilters[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: !strcmp(registered_avfilters[i] -> name,name)
  TYPE[2]: CALL
  TOKENIZED[2]: !strcmp ( VAR1 [ VAR2 ] -> VAR3 , VAR3 )
  ORIGINAL[3]: strcmp(registered_avfilters[i] -> name,name)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 [ VAR2 ] -> VAR3 , VAR3 )
  ORIGINAL[4]: registered_avfilters[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ]
  ORIGINAL[5]: <global> registered_avfilters
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: <global> registered_avfilters
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: <global> VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064772272
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640402
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640286
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477340
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < filter -> nb_outputs
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: filter -> outputs[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: filter -> outputs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771327
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ( *links)[idx] = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( *links ) [ VAR1 ] = ( ( void * ) 0 )
  ORIGINAL[1]: ( *links)[idx]
  TYPE[1]: CALL
  TOKENIZED[1]: ( *links ) [ VAR1 ]
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 47244640400
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640401
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771527
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> src -> nb_inputs != 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 != 1
  ORIGINAL[1]: av_log((link -> src),16,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 -> VAR2 ) , 16 , \
  ORIGINAL[2]: link -> src
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

CENTER_NODE: 68719477582
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = filter_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771670
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064771433
FRAGMENT_COUNT: 5
  ORIGINAL[0]: link -> closed = closed
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: link -> closed
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: closed
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: link
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: closed
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477560
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_oc_i < stonesoup_buffer_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_buffer[stonesoup_oc_i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: stonesoup_buffer[stonesoup_oc_i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: stonesoup_buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_oc_i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771771
FRAGMENT_COUNT: 17
  ORIGINAL[0]: !strcmp(cmd,\
  TYPE[0]: CALL
  TOKENIZED[0]: !strcmp ( VAR1 , \
  ORIGINAL[1]: filter -> filter -> process_command
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[2]: filter -> filter
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR1
  ORIGINAL[3]: (filter -> filter -> process_command)(filter,cmd,arg,res,res_len,flags)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 -> VAR1 -> VAR2 ) ( VAR1 , VAR3 , VAR4 , VAR5 , VAR6 , VAR7 )
  ORIGINAL[4]: filter -> filter -> process_command
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[5]: filter -> filter
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR1
  ORIGINAL[6]: - 38
  TYPE[6]: CALL
  TOKENIZED[6]: - 38
  ORIGINAL[7]: process_command
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: filter
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: process_command
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: filter
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: filter
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: cmd
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: arg
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: res
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: res_len
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: flags
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 68719477577
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .class_name = \
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = \
  ORIGINAL[1]: avfilter_class
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: class_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771160
FRAGMENT_COUNT: 10
  ORIGINAL[0]: snprintf(buf,buf_size,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: perms & 0x1?\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x1?\
  ORIGINAL[2]: perms & 0x02?\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 & 0x02?\
  ORIGINAL[3]: perms & 0x04?\
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 & 0x04?\
  ORIGINAL[4]: perms & 0x08?\
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 & 0x08?\
  ORIGINAL[5]: perms & 0x10?\
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 & 0x10?\
  ORIGINAL[6]: perms & 0x20?\
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 & 0x20?\
  ORIGINAL[7]: perms & 0x20
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 & 0x20
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf_size
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640267
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640276
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640278
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !(103 >= 100)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( 103 >= 100 )

CENTER_NODE: 30064771265
FRAGMENT_COUNT: 3
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: sizeof(\
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( \

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477532
FRAGMENT_COUNT: 8
  ORIGINAL[0]: link -> type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: link -> min_samples
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: link -> partial_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: frame -> audio -> nb_samples
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: link -> min_samples
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: min_samples
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: link
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: link
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640345
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476981
FRAGMENT_COUNT: 5
  ORIGINAL[0]: src -> output_pads[srcpad] . type != dst -> input_pads[dstpad] . type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] . VAR4 != VAR5 -> VAR6 [ VAR7 ] . VAR4
  ORIGINAL[1]: link -> type = src -> output_pads[srcpad] . type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3 -> VAR4 [ VAR5 ] . VAR2
  ORIGINAL[2]: AV_PIX_FMT_NONE == - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == - 1
  ORIGINAL[3]: - 1
  TYPE[3]: CALL
  TOKENIZED[3]: - 1
  ORIGINAL[4]: AV_PIX_FMT_NONE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771225
FRAGMENT_COUNT: 3
  ORIGINAL[0]: 3 << 16 | 42 << 8
  TYPE[0]: CALL
  TOKENIZED[0]: 3 << 16 | 42 << 8
  ORIGINAL[1]: 3 << 16
  TYPE[1]: CALL
  TOKENIZED[1]: 3 << 16
  ORIGINAL[2]: 42 << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 42 << 8

CENTER_NODE: 30064771274
FRAGMENT_COUNT: 7
  ORIGINAL[0]: &c -> command
  TYPE[0]: CALL
  TOKENIZED[0]: &c -> VAR1
  ORIGINAL[1]: c -> command
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: command
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: c
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640321
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772355
FRAGMENT_COUNT: 4
  ORIGINAL[0]: 52 << 16 | 18 << 8 | 100
  TYPE[0]: CALL
  TOKENIZED[0]: 52 << 16 | 18 << 8 | 100
  ORIGINAL[1]: 52 << 16 | 18 << 8
  TYPE[1]: CALL
  TOKENIZED[1]: 52 << 16 | 18 << 8
  ORIGINAL[2]: 52 << 16
  TYPE[2]: CALL
  TOKENIZED[2]: 52 << 16
  ORIGINAL[3]: 18 << 8
  TYPE[3]: CALL
  TOKENIZED[3]: 18 << 8

CENTER_NODE: 30064771469
FRAGMENT_COUNT: 18
  ORIGINAL[0]: (ret = avfilter_link(filt,filt_dstpad_idx,link -> dst,dstpad_idx)) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 -> VAR5 , VAR6 ) ) < 0
  ORIGINAL[1]: link -> out_formats
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ff_formats_changeref(&link -> out_formats,&filt -> outputs[filt_dstpad_idx] -> out_formats)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &link -> VAR1 , &filt -> VAR2 [ VAR3 ] -> VAR1 )
  ORIGINAL[3]: &link -> out_formats
  TYPE[3]: CALL
  TOKENIZED[3]: &link -> VAR1
  ORIGINAL[4]: link -> out_formats
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &filt -> outputs[filt_dstpad_idx] -> out_formats
  TYPE[5]: CALL
  TOKENIZED[5]: &filt -> VAR1 [ VAR2 ] -> VAR3
  ORIGINAL[6]: filt -> outputs[filt_dstpad_idx] -> out_formats
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 [ VAR3 ] -> VAR4
  ORIGINAL[7]: filt -> outputs[filt_dstpad_idx]
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[8]: filt -> outputs
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: out_formats
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: out_formats
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: outputs
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: out_formats
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: link
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: link
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: filt
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: filt_dstpad_idx
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: link
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 68719477580
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .category = AV_CLASS_CATEGORY_FILTER
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: category
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: AV_CLASS_CATEGORY_FILTER
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771827
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pads -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: count++
  TYPE[1]: CALL
  TOKENIZED[1]: count++
  ORIGINAL[2]: for (count = 0;pads -> name;count++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = 0 ; VAR2 -> VAR3 ; count++ )
  ORIGINAL[3]: pads
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: count
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 1
  ORIGINAL[0]: *str_param == c_param
  TYPE[0]: CALL
  TOKENIZED[0]: *str_param == VAR1

CENTER_NODE: 30064772210
FRAGMENT_COUNT: 17
  ORIGINAL[0]: *pbuf = link -> partial_buf
  TYPE[0]: CALL
  TOKENIZED[0]: *pbuf = VAR1 -> VAR2
  ORIGINAL[1]: link -> partial_buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: partial_buf
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: link
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: link
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: link
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: link
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: link
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: link
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: link
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: link
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: link
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: link
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: link
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: link
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: link
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 30064771147
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476843
FRAGMENT_COUNT: 9
  ORIGINAL[0]: ref -> buf
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ref -> perms
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ref -> linesize[2]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ 2 ]
  ORIGINAL[3]: ref -> linesize
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ref -> pts
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: ref -> pos
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: linesize
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ref
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: ref
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771821
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memset(registered_avfilters,0,sizeof(registered_avfilters))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , sizeof ( VAR1 ) )
  ORIGINAL[1]: sizeof(registered_avfilters)
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: <global> registered_avfilters
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> next_registered_avfilter_idx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064772276
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640320
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771627
FRAGMENT_COUNT: 14
  ORIGINAL[0]: (link -> type) == AVMEDIA_TYPE_VIDEO
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == VAR3
  ORIGINAL[1]: link -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf[128]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 128 ]
  ORIGINAL[3]: buf[128]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 128 ]
  ORIGINAL[4]: av_get_channel_layout_string(buf,(sizeof(buf)),- 1,link -> channel_layout)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , ( sizeof ( VAR1 ) ) , - 1 , VAR2 -> VAR3 )
  ORIGINAL[5]: sizeof(buf)
  TYPE[5]: CALL
  TOKENIZED[5]: sizeof ( VAR1 )
  ORIGINAL[6]: - 1
  TYPE[6]: CALL
  TOKENIZED[6]: - 1
  ORIGINAL[7]: link -> channel_layout
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: channel_layout
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: AVMEDIA_TYPE_VIDEO
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: link
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064771820
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &registered_avfilters[0]
  TYPE[0]: CALL
  TOKENIZED[0]: &registered_avfilters [ 0 ]
  ORIGINAL[1]: registered_avfilters[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: filter
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> registered_avfilters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719477235
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ctx -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ctx -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ctx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640326
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772138
FRAGMENT_COUNT: 36
  ORIGINAL[0]: (dst -> min_perms & perms) != dst -> min_perms || dst -> rej_perms & perms
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 & VAR3 ) != VAR1 -> VAR2 || VAR1 -> VAR4 & VAR3
  ORIGINAL[1]: link -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: out = ff_get_video_buffer(link,dst -> min_perms,link -> w,link -> h)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 , VAR2 -> VAR5 , VAR2 -> VAR6 )
  ORIGINAL[3]: ff_get_video_buffer(link,dst -> min_perms,link -> w,link -> h)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR1 -> VAR4 , VAR1 -> VAR5 )
  ORIGINAL[4]: dst -> min_perms
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: link -> w
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: link -> h
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: out = ff_get_audio_buffer(link,dst -> min_perms,frame -> audio -> nb_samples)
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 , VAR5 -> VAR6 -> VAR7 )
  ORIGINAL[8]: ff_get_audio_buffer(link,dst -> min_perms,frame -> audio -> nb_samples)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR4 -> VAR5 -> VAR6 )
  ORIGINAL[9]: dst -> min_perms
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: frame -> audio -> nb_samples
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[11]: frame -> audio
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: - 22
  TYPE[12]: CALL
  TOKENIZED[12]: - 22
  ORIGINAL[13]: !out
  TYPE[13]: CALL
  TOKENIZED[13]: !out
  ORIGINAL[14]: break;
  TYPE[14]: CONTROL_STRUCTURE
  TOKENIZED[14]: break ;
  ORIGINAL[15]: break;
  TYPE[15]: CONTROL_STRUCTURE
  TOKENIZED[15]: break ;
  ORIGINAL[16]: type
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: min_perms
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: w
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: h
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: min_perms
  TYPE[20]: FIELD_IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: audio
  TYPE[21]: FIELD_IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: nb_samples
  TYPE[22]: FIELD_IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: link
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: AVMEDIA_TYPE_VIDEO
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: out
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: link
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: dst
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: link
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: link
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: AVMEDIA_TYPE_AUDIO
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: out
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: link
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: dst
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: frame
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: out
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1

CENTER_NODE: 30064772352
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .item_name = default_filter_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771712
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ret == -((int )(('E' | 'O' << 8 | 'F' << 16) | ((unsigned int )32) << 24)) && link -> partial_buf
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == - ( ( int ) ( ( 'E' | 'O' << 8 | 'F' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) && VAR2 -> VAR3
  ORIGINAL[1]: link -> partial_buf = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: link -> partial_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: partial_buf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: link
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: link
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772346
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *registered_avfilters[256 + 1]
  TYPE[0]: CALL
  TOKENIZED[0]: *registered_avfilters [ 256 + 1 ]
  ORIGINAL[1]: 256 + 1
  TYPE[1]: CALL
  TOKENIZED[1]: 256 + 1
  ORIGINAL[2]: next_registered_avfilter_idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477362
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: filter -> filter
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR1
  ORIGINAL[2]: filter
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filter
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772084
FRAGMENT_COUNT: 3
  ORIGINAL[0]: pads[pad_idx] . name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[1]: pads[pad_idx]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772088
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ff_filter_frame(link -> dst -> outputs[0],frame)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 -> VAR3 [ 0 ] , VAR4 )
  ORIGINAL[1]: link -> dst -> outputs[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 [ 0 ]
  ORIGINAL[2]: frame
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640336
FRAGMENT_COUNT: 1
  ORIGINAL[0]: pts == ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( VAR2 ) 0x8000000000000000UL )

CENTER_NODE: 47244640323
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477583
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = filter_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771729
FRAGMENT_COUNT: 5
  ORIGINAL[0]: link -> srcpad -> poll_frame
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: link -> srcpad
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: srcpad
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: poll_frame
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: link
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476986
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *link
  TYPE[0]: CALL
  TOKENIZED[0]: *link
  ORIGINAL[1]: ( *link) -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: ( *link ) -> VAR1
  ORIGINAL[2]: *link
  TYPE[2]: CALL
  TOKENIZED[2]: *link
  ORIGINAL[3]: link
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771162
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buf[16]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 16 ]
  ORIGINAL[1]: buf[16]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 16 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476884
FRAGMENT_COUNT: 6
  ORIGINAL[0]: upsprinkle_bankruptly != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: kilogramme_hirudinal[62]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 62 ]
  ORIGINAL[2]: alchemise_herniotomist[ *( *sovranties_gascoyne)] = kilogramme_hirudinal
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ * ( *sovranties_gascoyne ) ] = VAR2
  ORIGINAL[3]: alchemise_herniotomist[ *( *sovranties_gascoyne)]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ * ( *sovranties_gascoyne ) ]
  ORIGINAL[4]: kilogramme_hirudinal
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: kilogramme_hirudinal
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640324
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476989
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> channels
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: channels
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: link
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477254
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *filter_ptr
  TYPE[0]: CALL
  TOKENIZED[0]: *filter_ptr
  ORIGINAL[1]: ( *filter_ptr) -> priv_class
  TYPE[1]: CALL
  TOKENIZED[1]: ( *filter_ptr ) -> VAR1
  ORIGINAL[2]: *filter_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: *filter_ptr
  ORIGINAL[3]: filter_ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filter_ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476762
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stat(dirpath, &st) == -1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &st ) == -1
  ORIGINAL[1]: mkdir(dirpath, 0700)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 0700 )
  ORIGINAL[2]: dirpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: retval
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dirpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dirpath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

