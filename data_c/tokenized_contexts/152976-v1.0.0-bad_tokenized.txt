# Tokenized code fragments for 152976-v1.0.0-bad
# Total center nodes processed: 74
# Total code fragments found: 348

CENTER_NODE: 30064772956
FRAGMENT_COUNT: 8
  ORIGINAL[0]: pinfo -> ptype
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: guint32_to_str_buf(port,pinfo -> cinfo -> col_expr . col_expr_val[col],256)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 -> VAR4 . VAR5 [ VAR6 ] , 256 )
  ORIGINAL[2]: pinfo -> cinfo -> col_expr . col_expr_val[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 . VAR4 [ VAR5 ]
  ORIGINAL[3]: pinfo -> cinfo -> col_expr . col_expr_val
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[4]: pinfo -> cinfo -> col_expr . col_expr_val[col]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3 . VAR4 [ VAR5 ]
  ORIGINAL[5]: pinfo -> cinfo -> col_expr . col_expr_val
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[6]: port
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: col
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640613
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772743
FRAGMENT_COUNT: 16
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: ts -> secs
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ts -> secs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ts -> secs
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ts -> secs
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: ts -> secs
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: (gint32 )(ts -> secs)
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 ) ( VAR2 -> VAR3 )
  ORIGINAL[7]: ts -> secs
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: secs
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ts
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ts
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ts
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: ts
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: ts
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: ts
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ts
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 47244640414
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772773
FRAGMENT_COUNT: 6
  ORIGINAL[0]: pinfo -> cinfo -> col_data[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: pinfo -> cinfo -> col_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: pinfo -> cinfo
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_data
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: res
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: col
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640493
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478324
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> col_fmt[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_fmt
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: col
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stat(dirpath, &st) == -1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &st ) == -1
  ORIGINAL[1]: retval = mkdir(dirpath, 0700)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , 0700 )
  ORIGINAL[2]: mkdir(dirpath, 0700)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0700 )
  ORIGINAL[3]: retval
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640428
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771314
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[1]: cinfo?cinfo -> writable : 0
  TYPE[1]: CALL
  TOKENIZED[1]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[2]: cinfo -> writable
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cinfo -> col_first[el] >= 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[4]: cinfo -> col_first[el]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: cinfo -> col_first
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: col_first
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cinfo
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: el
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477883
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo -> col_expr . col_expr_val[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[1]: cinfo -> col_expr . col_expr_val
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: col
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640505
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771720
FRAGMENT_COUNT: 9
  ORIGINAL[0]: fence != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: cinfo -> col_data[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cinfo -> col_data[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: cinfo -> col_data[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: col_data
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len < 10
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 10
  ORIGINAL[1]: *modulus_function = stonesoup_modulus_function2
  TYPE[1]: CALL
  TOKENIZED[1]: *modulus_function = VAR1
  ORIGINAL[2]: *modulus_function
  TYPE[2]: CALL
  TOKENIZED[2]: *modulus_function
  ORIGINAL[3]: modulus_function
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772402
FRAGMENT_COUNT: 6
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: cinfo -> col_expr . col_expr[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_expr . col_expr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR2
  ORIGINAL[3]: cinfo -> col_expr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_expr
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: col
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640482
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 47244640624
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640451
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477097
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo -> writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: i <= cinfo -> col_last[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: cinfo -> fmt_matx
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: fmt_matx
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476896
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !cinfo
  TYPE[0]: CALL
  TOKENIZED[0]: !cinfo
  ORIGINAL[1]: i < cinfo -> num_cols
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2 -> VAR3
  ORIGINAL[2]: cinfo -> num_cols
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: num_cols
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772053
FRAGMENT_COUNT: 5
  ORIGINAL[0]: set_abs_date_time(fd,cinfo -> col_buf[col],!0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 [ VAR4 ] , !0 )
  ORIGINAL[1]: cinfo -> col_buf[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: !0
  TYPE[2]: CALL
  TOKENIZED[2]: !0
  ORIGINAL[3]: fd
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477865
FRAGMENT_COUNT: 6
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: tmp -> tm_hour
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tmp -> tm_min
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tm_min
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tmp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478001
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (const char *)__func__
  TYPE[0]: CALL
  TOKENIZED[0]: ( const char * ) VAR1
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064771763
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: abort()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 68719477378
FRAGMENT_COUNT: 7
  ORIGINAL[0]: cinfo -> writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cinfo -> fmt_matx[i][el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[2]: __builtin_va_start(ap,format)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: cinfo -> col_buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_buf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719478395
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_fmt[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_expr . col_expr[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_expr . col_expr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR2
  ORIGINAL[3]: col
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0
  ORIGINAL[1]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[2]: stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 )
  ORIGINAL[3]: (char *) -1
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) -1
  ORIGINAL[4]: -1
  TYPE[4]: CALL
  TOKENIZED[4]: -1

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640480
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476944
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: cinfo -> col_first[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_first
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: el
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772312
FRAGMENT_COUNT: 6
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: cinfo -> col_buf[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: col
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771167
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepoint(stonesoup_trace, trace_location, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: stonesoup_trace
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: trace_location
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: modulus_param_str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477459
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> fmt_matx[col][COL_CLS_TIME] || cinfo -> fmt_matx[col][COL_ABS_TIME] || cinfo -> fmt_matx[col][COL_ABS_DATE_TIME] || cinfo -> fmt_matx[col][COL_UTC_TIME] || cinfo -> fmt_matx[col][COL_UTC_DATE_TIME]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR5 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR6 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR7 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR8 ]
  ORIGINAL[1]: cinfo -> fmt_matx[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> fmt_matx
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771911
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[1]: cinfo?cinfo -> writable : 0
  TYPE[1]: CALL
  TOKENIZED[1]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[2]: cinfo -> col_first[el] >= 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[3]: cinfo -> col_first[el]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]

CENTER_NODE: 47244640348
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = cinfo -> col_first[el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: i <= cinfo -> col_last[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: for (i = cinfo -> col_first[el];i <= cinfo -> col_last[el];i++)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( VAR1 = VAR2 -> VAR3 [ VAR4 ] ; VAR1 <= VAR2 -> VAR5 [ VAR4 ] ; i++ )

CENTER_NODE: 47244640441
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772356
FRAGMENT_COUNT: 6
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: cinfo -> col_expr . col_expr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2
  ORIGINAL[2]: cinfo -> col_expr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_expr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col_expr
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640627
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771389
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo -> col_first[COL_CUSTOM]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_first
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col_first
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: COL_CUSTOM
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477164
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: g_strlcpy(orig_buf,cinfo -> col_buf[i],max_len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 [ VAR4 ] , VAR5 )
  ORIGINAL[2]: orig = orig_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2
  ORIGINAL[3]: orig
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: orig_buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: orig
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640467
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640574
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640460
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640474
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771243
FRAGMENT_COUNT: 9
  ORIGINAL[0]: cinfo -> col_fence = ((int *)(g_malloc_n(num_cols,sizeof(int ))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( int * ) ( FUN1 ( VAR3 , sizeof ( int ) ) ) )
  ORIGINAL[1]: cinfo -> col_fence
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (int *)(g_malloc_n(num_cols,sizeof(int )))
  TYPE[2]: CALL
  TOKENIZED[2]: ( int * ) ( FUN1 ( VAR1 , sizeof ( int ) ) )
  ORIGINAL[3]: col_fence
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cinfo
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476826
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tracepoint(stonesoup_trace, trace_location, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: modulus_param_str[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ]
  ORIGINAL[2]: modulus_param_str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478543
FRAGMENT_COUNT: 7
  ORIGINAL[0]: col_fill_in_frame_data(fdata,cinfo,i,fill_col_exprs)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fill_fd_colums
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: fill_col_exprs
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772151
FRAGMENT_COUNT: 44
  ORIGINAL[0]: nsecs < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: negative = !0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = !0
  ORIGINAL[2]: timestamp_get_precision()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: secs >= (60 * 60)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 >= ( 60 * 60 )
  ORIGINAL[4]: 60 * 60
  TYPE[4]: CALL
  TOKENIZED[4]: 60 * 60
  ORIGINAL[5]: secs >= (60 * 60)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 >= ( 60 * 60 )
  ORIGINAL[6]: 60 * 60
  TYPE[6]: CALL
  TOKENIZED[6]: 60 * 60
  ORIGINAL[7]: secs >= (60 * 60)
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 >= ( 60 * 60 )
  ORIGINAL[8]: 60 * 60
  TYPE[8]: CALL
  TOKENIZED[8]: 60 * 60
  ORIGINAL[9]: secs >= (60 * 60)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 >= ( 60 * 60 )
  ORIGINAL[10]: 60 * 60
  TYPE[10]: CALL
  TOKENIZED[10]: 60 * 60
  ORIGINAL[11]: secs >= (60 * 60)
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 >= ( 60 * 60 )
  ORIGINAL[12]: 60 * 60
  TYPE[12]: CALL
  TOKENIZED[12]: 60 * 60
  ORIGINAL[13]: secs >= (60 * 60)
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 >= ( 60 * 60 )
  ORIGINAL[14]: 60 * 60
  TYPE[14]: CALL
  TOKENIZED[14]: 60 * 60
  ORIGINAL[15]: g_assertion_message_expr(((gchar *)0),\
  TYPE[15]: CALL
  TOKENIZED[15]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[16]: (gchar *)0
  TYPE[16]: CALL
  TOKENIZED[16]: ( VAR1 * ) 0
  ORIGINAL[17]: (const char *)__func__
  TYPE[17]: CALL
  TOKENIZED[17]: ( const char * ) VAR1
  ORIGINAL[18]: (void *)0
  TYPE[18]: CALL
  TOKENIZED[18]: ( void * ) 0
  ORIGINAL[19]: break;
  TYPE[19]: CONTROL_STRUCTURE
  TOKENIZED[19]: break ;
  ORIGINAL[20]: break;
  TYPE[20]: CONTROL_STRUCTURE
  TOKENIZED[20]: break ;
  ORIGINAL[21]: break;
  TYPE[21]: CONTROL_STRUCTURE
  TOKENIZED[21]: break ;
  ORIGINAL[22]: break;
  TYPE[22]: CONTROL_STRUCTURE
  TOKENIZED[22]: break ;
  ORIGINAL[23]: break;
  TYPE[23]: CONTROL_STRUCTURE
  TOKENIZED[23]: break ;
  ORIGINAL[24]: break;
  TYPE[24]: CONTROL_STRUCTURE
  TOKENIZED[24]: break ;
  ORIGINAL[25]: TS_PREC_FIXED_SEC
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: TS_PREC_AUTO_SEC
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: secs
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: TS_PREC_FIXED_DSEC
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: TS_PREC_AUTO_DSEC
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: secs
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: TS_PREC_FIXED_CSEC
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: TS_PREC_AUTO_CSEC
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: secs
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: TS_PREC_FIXED_MSEC
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: TS_PREC_AUTO_MSEC
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: secs
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: TS_PREC_FIXED_USEC
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: TS_PREC_AUTO_USEC
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: secs
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: TS_PREC_FIXED_NSEC
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: TS_PREC_AUTO_NSEC
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: secs
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: <global> __func__
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: <global> VAR1

CENTER_NODE: 68719476911
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: writable
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477020
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i <= cinfo -> col_last[COL_CUSTOM]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: cinfo -> fmt_matx[i][COL_CUSTOM]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[2]: cinfo -> fmt_matx[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: COL_CUSTOM
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771463
FRAGMENT_COUNT: 19
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[2]: el == COL_INFO
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == VAR2
  ORIGINAL[3]: i = cinfo -> col_first[el]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[4]: cinfo -> col_first[el]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: cinfo -> col_first
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: i <= cinfo -> col_last[el]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[7]: cinfo -> col_last[el]
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[8]: cinfo -> col_last
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: col_first
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: col_last
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: el
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: COL_INFO
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: i
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: cinfo
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: el
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: i
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: cinfo
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: el
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 30064772558
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: fd -> abs_ts . nsecs / 10000000
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 / 10000000
  ORIGINAL[2]: fd -> abs_ts . nsecs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: fd -> abs_ts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: nsecs
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640380
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772118
FRAGMENT_COUNT: 9
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: display_signed_time(buf,256,((gint32 )(ts -> secs)),ts -> nsecs / 1000000,TO_STR_TIME_RES_T_MSECS)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 256 , ( ( VAR2 ) ( VAR3 -> VAR4 ) ) , VAR3 -> VAR5 / 1000000 , VAR6 )
  ORIGINAL[2]: (gint32 )(ts -> secs)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( VAR2 -> VAR3 )
  ORIGINAL[3]: ts -> secs
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ts -> nsecs / 1000000
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 / 1000000
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: gint32
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ts
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: TO_STR_TIME_RES_T_MSECS
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719478068
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fmt
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: COL_UTC_DATE_TIME
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477946
FRAGMENT_COUNT: 4
  ORIGINAL[0]: set_epoch_time(fd,cinfo -> col_buf[col])
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 [ VAR4 ] )
  ORIGINAL[1]: cinfo -> col_expr . col_expr[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_expr . col_expr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR2
  ORIGINAL[3]: col
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477988
FRAGMENT_COUNT: 4
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: set_time_hour_min_sec((&fd -> del_dis_ts),buf)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &fd -> VAR1 ) , VAR2 )
  ORIGINAL[2]: &fd -> del_dis_ts
  TYPE[2]: CALL
  TOKENIZED[2]: &fd -> VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640423
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478022
FRAGMENT_COUNT: 3
  ORIGINAL[0]: timestamp_get_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: TS_EPOCH
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477510
FRAGMENT_COUNT: 7
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: tmp -> tm_year + 1900
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 + 1900
  ORIGINAL[2]: tmp -> tm_year
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tmp -> tm_mon
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tm_mon
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tmp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719478462
FRAGMENT_COUNT: 19
  ORIGINAL[0]: pinfo -> cinfo -> col_fmt[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: col_set_addr(pinfo,i,(&pinfo -> dst),0,fill_col_exprs,!0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , ( &pinfo -> VAR3 ) , 0 , VAR4 , !0 )
  ORIGINAL[2]: fill_col_exprs
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fill_col_exprs
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fill_col_exprs
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: fill_col_exprs
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: fill_col_exprs
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: fill_col_exprs
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: fill_col_exprs
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: fill_col_exprs
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: fill_col_exprs
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: fill_col_exprs
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: fill_col_exprs
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: fill_col_exprs
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: fill_col_exprs
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: fill_col_exprs
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: fill_col_exprs
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: fill_col_exprs
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: fill_col_exprs
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 30064771926
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: col_do_append_str(cinfo,el,separator,str)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: el
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: separator
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: str
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771381
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo && cinfo -> col_first[COL_CUSTOM] >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[1]: cinfo -> col_first[COL_CUSTOM] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640643
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (shmsz = atoi(optarg)) <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 ) ) <= 0
  ORIGINAL[1]: errors++
  TYPE[1]: CALL
  TOKENIZED[1]: errors++
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_data[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: orig = cinfo -> col_data[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[3]: cinfo -> col_data[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: cinfo -> col_data
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cinfo -> col_data
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: orig
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477890
FRAGMENT_COUNT: 3
  ORIGINAL[0]: set_abs_time(fd,cinfo -> col_buf[col],0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 [ VAR4 ] , 0 )
  ORIGINAL[1]: fd
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476915
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> writable = writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: writable
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640616
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771308
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: writable
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477555
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo -> col_expr . col_expr[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_expr . col_expr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2
  ORIGINAL[2]: col
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773260
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ((char *)irradiations_personhood) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( char * ) VAR1 ) != 0
  ORIGINAL[1]: (char *)irradiations_personhood
  TYPE[1]: CALL
  TOKENIZED[1]: ( char * ) VAR1
  ORIGINAL[2]: irradiations_personhood
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640571
FRAGMENT_COUNT: 0

