# Tokenized code fragments for 152870-v1.0.0-bad
# Total center nodes processed: 155
# Total code fragments found: 473

CENTER_NODE: 30064771495
FRAGMENT_COUNT: 8
  ORIGINAL[0]: to_read > 0 && bytes_read > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0 && VAR2 > 0
  ORIGINAL[1]: read_fn(baton,buffer,&bytes_read)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , &bytes_read )
  ORIGINAL[2]: &bytes_read
  TYPE[2]: CALL
  TOKENIZED[2]: &bytes_read
  ORIGINAL[3]: bytes_read
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bytes_read
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: bytes_read
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477218
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_set_mark(s,mark_handler_disown)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: svn_stream_set_seek(s,seek_handler_disown)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478033
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: variable_buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: variable_buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_stack_buffer_64
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: variable_buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771291
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stream -> close_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> close_fn)(stream -> baton)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 )
  ORIGINAL[2]: stream -> close_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: close_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640412
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640313
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771541
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_skip(baton,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640408
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771234
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(stream -> read_fn != ((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 -> VAR2 != ( ( void * ) 0 ) )
  ORIGINAL[1]: *svn_err__temp = svn_error__malfunction(!0,\
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( !0 , \
  ORIGINAL[2]: svn_error__malfunction(!0,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( !0 , \
  ORIGINAL[3]: !0
  TYPE[3]: CALL
  TOKENIZED[3]: !0
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772298
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len < 16384
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 16384
  ORIGINAL[1]: *svn_err__temp = svn_stream_close(stream)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[2]: svn_stream_close(stream)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477368
FRAGMENT_COUNT: 5
  ORIGINAL[0]: &apr_len
  TYPE[0]: CALL
  TOKENIZED[0]: &apr_len
  ORIGINAL[1]: (uInt )apr_len
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: apr_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: apr_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477266
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: file
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476844
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> skip_fn = skip_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> skip_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: skip_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640302
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771116
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context = fopen(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(filepath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771793
FRAGMENT_COUNT: 17
  ORIGINAL[0]: btn -> in -> zalloc
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: btn -> in -> zfree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: btn -> in -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: btn -> in -> next_in
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: btn -> in -> msg
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: btn -> in -> next_out
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[6]: btn -> in -> avail_out
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[7]: btn -> in -> next_in
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[8]: btn -> in -> avail_in
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[9]: btn -> in
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: zerr != 0
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 != 0
  ORIGINAL[11]: btn -> in -> msg
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[12]: btn -> in
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: in
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: msg
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: btn
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: btn
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 30064771640
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *svn_err__temp = svn_io_file_open(&file,path,0x00002 | 0x00080 | 0x00004 | 0x00040,0x0FFF,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( &file , VAR1 , 0x00002 | 0x00080 | 0x00004 | 0x00040 , 0x0FFF , VAR2 )
  ORIGINAL[1]: svn_io_file_open(&file,path,0x00002 | 0x00080 | 0x00004 | 0x00040,0x0FFF,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &file , VAR1 , 0x00002 | 0x00080 | 0x00004 | 0x00040 , 0x0FFF , VAR2 )
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477724
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771201
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> baton = baton
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> baton
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640473
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772265
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_file_open_stdin(&stdin_file,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &stdin_file , VAR1 )
  ORIGINAL[1]: &stdin_file
  TYPE[1]: CALL
  TOKENIZED[1]: &stdin_file
  ORIGINAL[2]: stdin_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stdin_file
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640285
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772371
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !b -> real_stream
  TYPE[0]: CALL
  TOKENIZED[0]: !b -> VAR1
  ORIGINAL[1]: svn_stream__is_buffered(b -> real_stream)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: b -> real_stream
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

CENTER_NODE: 68719476841
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> read_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: read_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477747
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stringbuf_stream_mark -> pos = btn -> amt_read
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3 -> VAR4
  ORIGINAL[1]: *mark
  TYPE[1]: CALL
  TOKENIZED[1]: *mark
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772149
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stringbuf_appendbytes(btn -> str,data, *len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , *len )
  ORIGINAL[1]: btn -> str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: *len
  TYPE[2]: CALL
  TOKENIZED[2]: *len
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772058
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_read(btn -> proxy,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771498
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *len = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *len = 0
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640378
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477645
FRAGMENT_COUNT: 5
  ORIGINAL[0]: read_checksum == ((void *)0) && write_checksum == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 ) && VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_stream_create(baton,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: baton
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772394
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_set_skip(stream,skip_handler_lazyopen)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771668
FRAGMENT_COUNT: 4
  ORIGINAL[0]: file == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_stream_set_read(stream,read_handler_apr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640397
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640366
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640334
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477887
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__from_spillbuf(1024,100000,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1024 , 100000 , VAR1 )
  ORIGINAL[1]: result_pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771257
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (stream -> write_fn)(stream -> baton,data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: stream -> baton
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: baton
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477911
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_read(b -> real_stream,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771293
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(str)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(str)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477293
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: baton
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477209
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_seek(baton,mark)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772184
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: stream = svn_stream_create(baton,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[2]: svn_stream_create(baton,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771216
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mkdir(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: stonesoup_read_taint(&concentration_bottega,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &concentration_bottega , \
  ORIGINAL[2]: &concentration_bottega
  TYPE[2]: CALL
  TOKENIZED[2]: &concentration_bottega
  ORIGINAL[3]: concentration_bottega
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640451
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640469
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477502
FRAGMENT_COUNT: 12
  ORIGINAL[0]: btn -> in
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: btn -> in
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> out
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn -> pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: !0
  TYPE[4]: CALL
  TOKENIZED[4]: !0
  ORIGINAL[5]: btn -> out -> next_out = buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3 = VAR4
  ORIGINAL[6]: btn -> out
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: btn -> out
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: btn -> subbaton
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: out
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: btn
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: btn
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719476835
FRAGMENT_COUNT: 12
  ORIGINAL[0]: *stream
  TYPE[0]: CALL
  TOKENIZED[0]: *stream
  ORIGINAL[1]: stream -> baton
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> read_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: stream -> skip_fn
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: stream -> write_fn
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: stream -> close_fn
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: stream -> mark_fn = ((void *)0)
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[7]: stream -> mark_fn
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: stream -> seek_fn
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: seek_fn
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: stream
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stream
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640453
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476861
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> seek_fn = seek_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> seek_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: seek_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771973
FRAGMENT_COUNT: 9
  ORIGINAL[0]: saved_len =  *len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = *len
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: *len
  TYPE[2]: CALL
  TOKENIZED[2]: *len
  ORIGINAL[3]: *len
  TYPE[3]: CALL
  TOKENIZED[3]: *len
  ORIGINAL[4]: saved_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771508
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_set_seek(stream,seek_handler_empty)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476858
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> mark_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: mark_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477190
FRAGMENT_COUNT: 5
  ORIGINAL[0]: out2 == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: baton -> out2 = out2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: baton -> out2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: out2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: out2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772259
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: svn_stream_set_mark(stream,mark_handler_string)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771207
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> write_fn = write_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> write_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: write_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640425
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477711
FRAGMENT_COUNT: 5
  ORIGINAL[0]: btn -> str -> len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: btn -> amt_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: amt_read
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640338
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640357
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640449
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771260
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> mark_fn != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: stream -> mark_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 68719477610
FRAGMENT_COUNT: 6
  ORIGINAL[0]: btn -> write_ctx
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *svn_err__temp = svn_checksum_final(btn -> write_checksum,(btn -> write_ctx),btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , ( VAR1 -> VAR3 ) , VAR1 -> VAR4 )
  ORIGINAL[2]: svn_checksum_final(btn -> write_checksum,(btn -> write_ctx),btn -> pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , ( VAR1 -> VAR3 ) , VAR1 -> VAR4 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640276
FRAGMENT_COUNT: 1
  ORIGINAL[0]: stream -> skip_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )

CENTER_NODE: 30064771556
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: *len == 1
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: *len
  TYPE[2]: CALL
  TOKENIZED[2]: *len
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477245
FRAGMENT_COUNT: 5
  ORIGINAL[0]: offset = len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: file
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476862
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> is_buffered_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: is_buffered_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640336
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477785
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *len = ( *len > left_to_read?left_to_read :  *len)
  TYPE[0]: CALL
  TOKENIZED[0]: *len = ( *len > left_to_read?left_to_read : *len )
  ORIGINAL[1]: memcpy(buffer,(btn -> str -> data + btn -> amt_read), *len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( VAR2 -> VAR3 -> VAR4 + VAR2 -> VAR5 ) , *len )
  ORIGINAL[2]: btn -> str -> data + btn -> amt_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 + VAR1 -> VAR4
  ORIGINAL[3]: *len
  TYPE[3]: CALL
  TOKENIZED[3]: *len
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771283
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> is_buffered_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> is_buffered_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 30064771280
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stream -> seek_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> seek_fn)(stream -> baton,mark)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 )
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: baton
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mark
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476916
FRAGMENT_COUNT: 6
  ORIGINAL[0]: apr_pvsprintf(pool,fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ap
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772165
FRAGMENT_COUNT: 3
  ORIGINAL[0]: mark != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640459
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640349
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640299
FRAGMENT_COUNT: 2
  ORIGINAL[0]: numbytes < 80
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 80
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 47244640324
FRAGMENT_COUNT: 3
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;
  ORIGINAL[1]: err
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477250
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771603
FRAGMENT_COUNT: 4
  ORIGINAL[0]: apr_palloc(pool,sizeof(( *mark_apr)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , sizeof ( ( *mark_apr ) ) )
  ORIGINAL[1]: sizeof(( *mark_apr))
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( ( *mark_apr ) )
  ORIGINAL[2]: *mark_apr
  TYPE[2]: CALL
  TOKENIZED[2]: *mark_apr
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640381
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771988
FRAGMENT_COUNT: 10
  ORIGINAL[0]: btn -> write_checksum &&  *len > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && *len > 0
  ORIGINAL[1]: btn -> write_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: *len > 0
  TYPE[2]: CALL
  TOKENIZED[2]: *len > 0
  ORIGINAL[3]: *len
  TYPE[3]: CALL
  TOKENIZED[3]: *len
  ORIGINAL[4]: write_checksum
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: btn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: btn
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771951
FRAGMENT_COUNT: 12
  ORIGINAL[0]: baton -> write = stream -> write_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3 -> VAR4
  ORIGINAL[1]: baton -> write
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> write_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: write
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: baton
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: baton
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: baton
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: baton
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: baton
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640439
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> mark_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> mark_fn)(stream -> baton,mark,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: mark
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771259
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream_seek(stream,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640355
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640332
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771161
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *stonesoup_tainted_buff != 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_tainted_buff != 0
  ORIGINAL[1]: (*stonesoup_tainted_buff)[stonesoup_lsize] = '\\0'
  TYPE[1]: CALL
  TOKENIZED[1]: ( *stonesoup_tainted_buff ) [ VAR1 ] = '\\0'
  ORIGINAL[2]: (*stonesoup_tainted_buff)[stonesoup_lsize]
  TYPE[2]: CALL
  TOKENIZED[2]: ( *stonesoup_tainted_buff ) [ VAR1 ]
  ORIGINAL[3]: *stonesoup_tainted_buff
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_tainted_buff
  ORIGINAL[4]: stonesoup_lsize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640370
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772098
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !read_digest && !write_digest
  TYPE[0]: CALL
  TOKENIZED[0]: !read_digest && !write_digest
  ORIGINAL[1]: baton -> pool = pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: baton -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pool
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: baton
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: baton
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: baton
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477205
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_mark(baton,mark,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772173
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 30064771678
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> file
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: file
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477942
FRAGMENT_COUNT: 4
  ORIGINAL[0]: b -> open_on_close
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771617
FRAGMENT_COUNT: 4
  ORIGINAL[0]: offset = mark != ((void *)0)?((const struct mark_apr *)mark) -> off : 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 != ( ( void * ) 0 ) ? ( ( const struct VAR3 * ) VAR2 ) -> VAR4 : 0
  ORIGINAL[1]: mark != ((void *)0)?((const struct mark_apr *)mark) -> off : 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 ) ? ( ( const struct VAR2 * ) VAR1 ) -> VAR3 : 0
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477073
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream_readline(stringbuf,eof,eol,stream,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476951
FRAGMENT_COUNT: 6
  ORIGINAL[0]: numbytes != 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 1
  ORIGINAL[1]: *stringbuf = str
  TYPE[1]: CALL
  TOKENIZED[1]: *stringbuf = VAR1
  ORIGINAL[2]: *stringbuf
  TYPE[2]: CALL
  TOKENIZED[2]: *stringbuf
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: str
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: str
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771545
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__is_buffered(baton)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477171
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *bt = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *bt = VAR1
  ORIGINAL[1]: bt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772241
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len = (len > left_to_read?left_to_read : len)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( VAR1 > left_to_read?left_to_read : VAR1 )
  ORIGINAL[1]: len > left_to_read?left_to_read : len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > left_to_read?left_to_read : VAR1
  ORIGINAL[2]: len > left_to_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > VAR2
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: left_to_read
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477064
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_supports_mark(stream) && svn_stream__is_buffered(stream)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) && FUN2 ( VAR1 )
  ORIGINAL[1]: stream_readline_bytewise(stringbuf,eof,eol,stream,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: eof
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: eol
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477322
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640465
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477968
FRAGMENT_COUNT: 5
  ORIGINAL[0]: b -> real_stream
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: real_stream
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772245
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 30064771515
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *svn_err__temp = svn_stream_write(bt -> out2,data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: svn_stream_write(bt -> out2,data,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: bt -> out2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477793
FRAGMENT_COUNT: 7
  ORIGINAL[0]: btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: marker = (apr_palloc(pool,sizeof(( *marker))))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 , sizeof ( ( *marker ) ) ) )
  ORIGINAL[2]: apr_palloc(pool,sizeof(( *marker)))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , sizeof ( ( *marker ) ) )
  ORIGINAL[3]: marker
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: marker
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: marker
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640311
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477147
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *mark
  TYPE[0]: CALL
  TOKENIZED[0]: *mark
  ORIGINAL[1]: mark
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640415
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640440
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477354
FRAGMENT_COUNT: 3
  ORIGINAL[0]: items * size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 * VAR2
  ORIGINAL[1]: items
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640404
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477951
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[2]: lazyopen_if_unopened(b)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477933
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_write(b -> real_stream,data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: b -> real_stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640364
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772227
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mark != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: marker = ((const struct string_stream_mark *)mark)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( const struct VAR2 * ) VAR3 )
  ORIGINAL[2]: (const struct string_stream_mark *)mark
  TYPE[2]: CALL
  TOKENIZED[2]: ( const struct VAR1 * ) VAR2
  ORIGINAL[3]: marker
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640384
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477859
FRAGMENT_COUNT: 6
  ORIGINAL[0]: &stderr_file
  TYPE[0]: CALL
  TOKENIZED[0]: &stderr_file
  ORIGINAL[1]: *err
  TYPE[1]: CALL
  TOKENIZED[1]: *err
  ORIGINAL[2]: svn_stream_from_aprfile2(stderr_file,!0,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[3]: stderr_file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: apr_err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stderr_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640462
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640418
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772275
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *out = svn_stream_from_aprfile2(stdout_file,!0,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *out = FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[1]: *out
  TYPE[1]: CALL
  TOKENIZED[1]: *out
  ORIGINAL[2]: svn_stream_from_aprfile2(stdout_file,!0,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476822
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97
  ORIGINAL[1]: c <= 122
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 122
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772060
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640455
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771540
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_read(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477083
FRAGMENT_COUNT: 8
  ORIGINAL[0]: svn_stream_read(from,buf,&len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , &len )
  ORIGINAL[1]: buf
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cancel_func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: from
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772323
FRAGMENT_COUNT: 6
  ORIGINAL[0]: b -> real_stream == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (b -> open_func)(&stream,b -> open_baton,b -> pool,scratch_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( &stream , VAR1 -> VAR3 , VAR1 -> VAR4 , VAR5 )
  ORIGINAL[2]: b -> open_func
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: open_func
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772336
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640353
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477303
FRAGMENT_COUNT: 5
  ORIGINAL[0]: &file
  TYPE[0]: CALL
  TOKENIZED[0]: &file
  ORIGINAL[1]: *stream
  TYPE[1]: CALL
  TOKENIZED[1]: *stream
  ORIGINAL[2]: svn_stream_from_aprfile2(file,0,result_pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[3]: file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: file
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477204
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_write(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640471
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640447
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477661
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: proxy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640457
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640401
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640467
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640351
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477666
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: *svn_err__temp = svn_stream_close(btn -> proxy)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: svn_stream_close(btn -> proxy)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477442
FRAGMENT_COUNT: 7
  ORIGINAL[0]: btn -> out == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: btn -> out -> opaque = (btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 = ( VAR1 -> VAR4 )
  ORIGINAL[2]: zerr = deflateInit_(btn -> out,- 1,\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 -> VAR3 , - 1 , \
  ORIGINAL[3]: deflateInit_(btn -> out,- 1,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , - 1 , \
  ORIGINAL[4]: zerr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: zerr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476924
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_pvsprintf(pool,fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640295
FRAGMENT_COUNT: 0

