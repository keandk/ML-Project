# Tokenized code fragments for 152195-v1.0.0-bad
# Total center nodes processed: 95
# Total code fragments found: 453

CENTER_NODE: 30064771549
FRAGMENT_COUNT: 3
  ORIGINAL[0]: memset(sl_alloc(mem_chunk),'\\0',(mem_chunk -> item_size))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , ( VAR1 -> VAR2 ) )
  ORIGINAL[1]: sl_alloc(mem_chunk)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: mem_chunk -> item_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

CENTER_NODE: 68719477108
FRAGMENT_COUNT: 3
  ORIGINAL[0]: se_alloc(len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i < sep_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: s[i] = '\\0'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] = '\\0'
  ORIGINAL[4]: for (i = 0;i < sep_len;i++)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: for ( VAR1 = 0 ; VAR1 < VAR2 ; i++ )

CENTER_NODE: 30064772431
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cur_key -> length > 100
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > 100
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: abort()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: except_throw(1,4,(ep_strdup_printf(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( 1 , 4 , ( FUN2 ( \
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478090
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sizeof(emem_strbuf_t )
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( VAR1 )
  ORIGINAL[1]: strbuf
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: emem_strbuf_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772718
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !node
  TYPE[0]: CALL
  TOKENIZED[0]: !node
  ORIGINAL[1]: node -> u . rb_color?\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . rb_color?\
  ORIGINAL[2]: node -> u . rb_color
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: node -> u
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: node -> u
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: node -> u
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: rb_color
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476771
FRAGMENT_COUNT: 6
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: sprintf(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: filepath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *stonesoup_s != (char)0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_s != ( char ) 0
  ORIGINAL[1]: *stonesoup_s
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_s
  ORIGINAL[2]: (*stonesoup_tainted_buff)[stonesoup_s - stonesoup_shm]
  TYPE[2]: CALL
  TOKENIZED[2]: ( *stonesoup_tainted_buff ) [ VAR1 - VAR2 ]
  ORIGINAL[3]: *stonesoup_s
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_s
  ORIGINAL[4]: stonesoup_s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772894
FRAGMENT_COUNT: 6
  ORIGINAL[0]: full_len < add_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: add_len - 1 < full_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 1 < VAR2
  ORIGINAL[2]: add_len - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: add_len - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 1
  ORIGINAL[4]: add_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: full_len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772077
FRAGMENT_COUNT: 5
  ORIGINAL[0]: node -> parent -> left == node
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 == VAR1
  ORIGINAL[1]: node -> parent -> right = node -> left
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 = VAR1 -> VAR4
  ORIGINAL[2]: node -> parent -> right
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: node -> left
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771775
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *head =  *stack
  TYPE[0]: CALL
  TOKENIZED[0]: *head = *stack
  ORIGINAL[1]: *stack
  TYPE[1]: CALL
  TOKENIZED[1]: *stack
  ORIGINAL[2]: head
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stack
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stack
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771507
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mem_chunk -> freed != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: memcpy((&mem_chunk -> freed),ptr,sizeof(void *))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &mem_chunk -> VAR1 ) , VAR2 , sizeof ( void * ) )
  ORIGINAL[2]: &mem_chunk -> freed
  TYPE[2]: CALL
  TOKENIZED[2]: &mem_chunk -> VAR1
  ORIGINAL[3]: sizeof(void *)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( void * )
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: void
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: void

CENTER_NODE: 68719476886
FRAGMENT_COUNT: 14
  ORIGINAL[0]: chunk = chunk_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: chunk = (chunk -> next)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR1 -> VAR2 )
  ORIGINAL[2]: cptr >= (chunk -> buf + chunk -> free_offset_init) && cptr < (chunk -> buf + chunk -> free_offset)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >= ( VAR2 -> VAR3 + VAR2 -> VAR4 ) && VAR1 < ( VAR2 -> VAR3 + VAR2 -> VAR5 )
  ORIGINAL[3]: cptr >= (chunk -> buf + chunk -> free_offset_init)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 >= ( VAR2 -> VAR3 + VAR2 -> VAR4 )
  ORIGINAL[4]: chunk -> buf + chunk -> free_offset_init
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 + VAR1 -> VAR3
  ORIGINAL[5]: chunk -> buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: chunk -> free_offset_init
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: for (chunk = chunk_list;chunk;chunk = (chunk -> next))
  TYPE[7]: CONTROL_STRUCTURE
  TOKENIZED[7]: for ( VAR1 = VAR2 ; VAR1 ; VAR1 = ( VAR1 -> VAR3 ) )
  ORIGINAL[8]: buf
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: free_offset_init
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: chunk
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: cptr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: chunk
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: chunk
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064772830
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !init
  TYPE[0]: CALL
  TOKENIZED[0]: !init
  ORIGINAL[1]: full_len = g_strlcpy(strbuf -> str,init,strbuf -> alloc_len)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 -> VAR3 , VAR4 , VAR2 -> VAR5 )
  ORIGINAL[2]: g_strlcpy(strbuf -> str,init,strbuf -> alloc_len)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR1 -> VAR4 )
  ORIGINAL[3]: full_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: full_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < 8 * 2 - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 8 * 2 - 1
  ORIGINAL[1]: canary[i] = ((guint8 )(g_rand_int_range(rand_state,1,0x100)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = ( ( VAR3 ) ( FUN1 ( VAR4 , 1 , 0x100 ) ) )
  ORIGINAL[2]: canary[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: (guint8 )(g_rand_int_range(rand_state,1,0x100))
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) ( FUN1 ( VAR2 , 1 , 0x100 ) )
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771382
FRAGMENT_COUNT: 4
  ORIGINAL[0]: use_canary = mem -> debug_use_canary
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: mem -> debug_use_canary
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: use_canary
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: use_canary
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771932
FRAGMENT_COUNT: 6
  ORIGINAL[0]: achorion_pomerol != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: variable_buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_dbuser
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_trace
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771578
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memcpy(ep_alloc(len),src,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR1 )
  ORIGINAL[1]: ep_alloc(len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478058
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_print_subtree(emem_tree,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: emem_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772103
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_parent(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772169
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_parent(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771599
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dst = se_strdup_vprintf(fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: se_strdup_vprintf(fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772703
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !emem_tree -> tree
  TYPE[0]: CALL
  TOKENIZED[0]: !emem_tree -> VAR1
  ORIGINAL[1]: emem_tree -> tree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: emem_tree_foreach_nodes(emem_tree -> tree,callback,user_data)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[3]: emem_tree -> tree
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tree
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: emem_tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: emem_tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: callback
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772948
FRAGMENT_COUNT: 13
  ORIGINAL[0]: !strbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf
  ORIGINAL[1]: strbuf -> alloc_len < strbuf -> len + 1 + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 < VAR1 -> VAR3 + 1 + 1
  ORIGINAL[2]: strbuf -> alloc_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: strbuf -> len + 1 + 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 + 1 + 1
  ORIGINAL[4]: strbuf -> alloc_len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: alloc_len
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: strbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: strbuf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: strbuf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: strbuf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: strbuf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: strbuf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771495
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_alloc(size,&ep_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &ep_packet_mem )
  ORIGINAL[1]: &ep_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &ep_packet_mem
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477855
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < cur_key -> length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: !lookup_tree
  TYPE[1]: CALL
  TOKENIZED[1]: !lookup_tree
  ORIGINAL[2]: lookup_tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: lookup_tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: lookup_tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: lookup_tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: lookup_tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477627
FRAGMENT_COUNT: 5
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: parent -> u
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: u
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: parent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771794
FRAGMENT_COUNT: 17
  ORIGINAL[0]: ( *stack) -> below
  TYPE[0]: CALL
  TOKENIZED[0]: ( *stack ) -> VAR1
  ORIGINAL[1]: *stack
  TYPE[1]: CALL
  TOKENIZED[1]: *stack
  ORIGINAL[2]: *stack = ( *stack) -> below
  TYPE[2]: CALL
  TOKENIZED[2]: *stack = ( *stack ) -> VAR1
  ORIGINAL[3]: *stack
  TYPE[3]: CALL
  TOKENIZED[3]: *stack
  ORIGINAL[4]: ( *stack) -> below
  TYPE[4]: CALL
  TOKENIZED[4]: ( *stack ) -> VAR1
  ORIGINAL[5]: *stack
  TYPE[5]: CALL
  TOKENIZED[5]: *stack
  ORIGINAL[6]: ( *stack) -> above -> payload
  TYPE[6]: CALL
  TOKENIZED[6]: ( *stack ) -> VAR1 -> VAR2
  ORIGINAL[7]: ( *stack) -> above
  TYPE[7]: CALL
  TOKENIZED[7]: ( *stack ) -> VAR1
  ORIGINAL[8]: *stack
  TYPE[8]: CALL
  TOKENIZED[8]: *stack
  ORIGINAL[9]: (void *)0
  TYPE[9]: CALL
  TOKENIZED[9]: ( void * ) 0
  ORIGINAL[10]: below
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: below
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: above
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: payload
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: stack
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: stack
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: stack
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 47244640428
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !node -> right
  TYPE[0]: CALL
  TOKENIZED[0]: !node -> VAR1

CENTER_NODE: 68719477082
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !src
  TYPE[0]: CALL
  TOKENIZED[0]: !src
  ORIGINAL[1]: dst = (memcpy(allocator((len + 1)),src,(len + 1)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( FUN2 ( ( VAR2 + 1 ) ) , VAR3 , ( VAR2 + 1 ) ) )
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dst
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771583
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = g_printf_string_upper_bound(fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: g_printf_string_upper_bound(fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dst
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772368
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tree_list = (se_alloc(sizeof(emem_tree_t )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( sizeof ( VAR2 ) ) )
  ORIGINAL[1]: se_alloc(sizeof(emem_tree_t ))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( sizeof ( VAR1 ) )
  ORIGINAL[2]: sizeof(emem_tree_t )
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: tree_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477127
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477522
FRAGMENT_COUNT: 5
  ORIGINAL[0]: parent -> parent
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR1
  ORIGINAL[1]: parent
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: parent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476860
FRAGMENT_COUNT: 3
  ORIGINAL[0]: mem -> debug_use_canary
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: debug_use_canary
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477275
FRAGMENT_COUNT: 5
  ORIGINAL[0]: npc = next
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: use_chunks
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: next
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: npc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: next
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772515
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cur_key -> length > 100
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > 100
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 68719476901
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ep_packet_mem . debug_verify_pointers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: emem_verify_pointer((&ep_packet_mem),ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &ep_packet_mem ) , VAR1 )
  ORIGINAL[2]: &ep_packet_mem
  TYPE[2]: CALL
  TOKENIZED[2]: &ep_packet_mem
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772546
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = (guint32 )(strlen(k))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( VAR2 ) ( FUN1 ( VAR3 ) )
  ORIGINAL[1]: (guint32 )(strlen(k))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( FUN1 ( VAR2 ) )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: divx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771561
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476950
FRAGMENT_COUNT: 7
  ORIGINAL[0]: npc -> amount_free = npc -> amount_free_init
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[1]: npc -> amount_free
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: npc -> amount_free_init
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: npc -> free_offset
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: free_offset
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: npc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: npc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477103
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478082
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !strbuf || wanted_alloc_len <= strbuf -> alloc_len || strbuf -> alloc_len >= strbuf -> max_alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 <= VAR2 -> VAR3 || VAR2 -> VAR3 >= VAR2 -> VAR4
  ORIGINAL[1]: new_str = (ep_alloc(new_alloc_len))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 ) )
  ORIGINAL[2]: g_strlcpy(new_str,(strbuf -> str),new_alloc_len)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( VAR2 -> VAR3 ) , VAR4 )
  ORIGINAL[3]: strbuf -> str
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: new_str
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: new_str
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: new_alloc_len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: new_str
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ep_packet_mem . free_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: ep_packet_mem . used_list = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: ep_packet_mem . used_list
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: ep_packet_mem . trees
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: trees
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> ep_packet_mem
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 68719478253
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !strbuf || len >= strbuf -> len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 >= VAR2 -> VAR1
  ORIGINAL[1]: strbuf -> len = len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: strbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: strbuf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476855
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pad = (8 - allocation % 8)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( 8 - VAR2 % 8 )
  ORIGINAL[1]: 8 - allocation % 8
  TYPE[1]: CALL
  TOKENIZED[1]: 8 - VAR1 % 8
  ORIGINAL[2]: pad
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pad
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478221
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ep_strbuf_append_vprintf(strbuf,format,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: __builtin_va_end(ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640421
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771545
FRAGMENT_COUNT: 3
  ORIGINAL[0]: memset(ep_alloc(size),'\\0',size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , VAR1 )
  ORIGINAL[1]: ep_alloc(size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771576
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477812
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *se_tree = d
  TYPE[0]: CALL
  TOKENIZED[0]: *se_tree = VAR1
  ORIGINAL[1]: se_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: d
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: se_tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477006
FRAGMENT_COUNT: 7
  ORIGINAL[0]: npc = ((emem_chunk_t *)(g_malloc_n(1,sizeof(emem_chunk_t ))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( VAR2 * ) ( FUN1 ( 1 , sizeof ( VAR2 ) ) ) )
  ORIGINAL[1]: (emem_chunk_t *)(g_malloc_n(1,sizeof(emem_chunk_t )))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( FUN1 ( 1 , sizeof ( VAR1 ) ) )
  ORIGINAL[2]: npc
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: npc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: npc
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: npc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: npc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772621
FRAGMENT_COUNT: 4
  ORIGINAL[0]: aligned = (g_malloc(divx * sizeof(guint32 )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 * sizeof ( VAR3 ) ) )
  ORIGINAL[1]: g_malloc(divx * sizeof(guint32 ))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 * sizeof ( VAR2 ) )
  ORIGINAL[2]: divx * sizeof(guint32 )
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 * sizeof ( VAR2 )
  ORIGINAL[3]: aligned
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771288
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ep_init_chunk()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: se_init_chunk()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 30064772270
FRAGMENT_COUNT: 12
  ORIGINAL[0]: node = se_tree -> tree
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: se_tree -> tree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tree
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: se_tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: se_tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: se_tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: se_tree
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: se_tree
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: se_tree
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: se_tree
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: se_tree
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771306
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_verify_pointer_list((hdr -> free_list),ptr) || emem_verify_pointer_list((hdr -> used_list),ptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 ) || FUN1 ( ( VAR1 -> VAR4 ) , VAR3 )
  ORIGINAL[1]: emem_verify_pointer_list((hdr -> free_list),ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 )
  ORIGINAL[2]: emem_verify_pointer_list((hdr -> used_list),ptr)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 )

CENTER_NODE: 68719477618
FRAGMENT_COUNT: 9
  ORIGINAL[0]: uncle && uncle -> u . rb_color == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 . VAR3 == 0
  ORIGINAL[1]: uncle -> u . rb_color = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 = 1
  ORIGINAL[2]: grandparent = emem_tree_grandparent(node)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[3]: emem_tree_grandparent(node)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: grandparent -> u
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: grandparent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: node
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: grandparent
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: grandparent
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477135
FRAGMENT_COUNT: 3
  ORIGINAL[0]: __builtin_va_end(ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: dst
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476945
FRAGMENT_COUNT: 2
  ORIGINAL[0]: g_free(npc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: npc
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771290
FRAGMENT_COUNT: 4
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: debug_use_memory_scrubber = !0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = !0
  ORIGINAL[2]: !0
  TYPE[2]: CALL
  TOKENIZED[2]: !0
  ORIGINAL[3]: <global> debug_use_memory_scrubber
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771757
FRAGMENT_COUNT: 3
  ORIGINAL[0]: mem_chunk -> chunk_list = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: mem_chunk -> chunk_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 68719477284
FRAGMENT_COUNT: 2
  ORIGINAL[0]: &ep_packet_mem
  TYPE[0]: CALL
  TOKENIZED[0]: &ep_packet_mem
  ORIGINAL[1]: <global> ep_packet_mem
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772035
FRAGMENT_COUNT: 6
  ORIGINAL[0]: parent == grandparent -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 -> VAR3
  ORIGINAL[1]: grandparent -> left
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: grandparent -> left
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: left
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: grandparent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: grandparent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478121
FRAGMENT_COUNT: 7
  ORIGINAL[0]: strbuf -> str
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: full_len < strbuf -> alloc_len - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2 -> VAR3 - 1
  ORIGINAL[2]: strbuf -> alloc_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: strbuf -> alloc_len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: alloc_len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477216
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !string1
  TYPE[0]: CALL
  TOKENIZED[0]: !string1
  ORIGINAL[1]: l = 1 + strlen(string1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1 + FUN1 ( VAR2 )
  ORIGINAL[2]: __builtin_va_start(args,string1)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: args
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: string1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: args
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477322
FRAGMENT_COUNT: 10
  ORIGINAL[0]: tree_list = (g_malloc(sizeof(emem_tree_t )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( sizeof ( VAR2 ) ) )
  ORIGINAL[1]: g_malloc(sizeof(emem_tree_t ))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( sizeof ( VAR1 ) )
  ORIGINAL[2]: tree_list
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: emem_tree_t
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tree_list
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree_list
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tree_list
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tree_list
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tree_list
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: tree_list
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064772400
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tree_list = ((parent_tree -> malloc)(sizeof(emem_tree_t )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( VAR2 -> VAR3 ) ( sizeof ( VAR4 ) ) )
  ORIGINAL[1]: (parent_tree -> malloc)(sizeof(emem_tree_t ))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( sizeof ( VAR3 ) )
  ORIGINAL[2]: parent_tree -> malloc
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: sizeof(emem_tree_t )
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 )
  ORIGINAL[4]: tree_list
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771821
FRAGMENT_COUNT: 4
  ORIGINAL[0]: node = se_tree -> tree
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: se_tree -> tree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: node
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771547
FRAGMENT_COUNT: 3
  ORIGINAL[0]: memset(se_alloc(size),'\\0',size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , VAR1 )
  ORIGINAL[1]: se_alloc(size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771873
FRAGMENT_COUNT: 11
  ORIGINAL[0]: node -> key32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: node -> key32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: node -> parent -> left == node
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 == VAR1
  ORIGINAL[3]: node -> key32 < key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 < VAR3
  ORIGINAL[4]: node -> key32
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: key32
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: node
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: key
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640328
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640411
FRAGMENT_COUNT: 2
  ORIGINAL[0]: node == parent -> right && parent == grandparent -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 -> VAR3 && VAR2 == VAR4 -> VAR5
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719478225
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !strbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf
  ORIGINAL[1]: __builtin_va_start(ap,format)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: format
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477088
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *dst = (allocator(len + 1))
  TYPE[0]: CALL
  TOKENIZED[0]: *dst = ( FUN1 ( VAR1 + 1 ) )
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640436
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477299
FRAGMENT_COUNT: 2
  ORIGINAL[0]: sizeof(struct _ep_stack_frame_t )
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( struct VAR1 )
  ORIGINAL[1]: struct _ep_stack_frame_t
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: struct VAR1

CENTER_NODE: 30064772043
FRAGMENT_COUNT: 13
  ORIGINAL[0]: node -> parent -> left == node
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 == VAR1
  ORIGINAL[1]: node -> parent -> left = node -> right
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 = VAR1 -> VAR4
  ORIGINAL[2]: node -> parent -> left
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: node -> right
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: node -> right
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: node -> right
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: right
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: node
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: node
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: node
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771268
FRAGMENT_COUNT: 4
  ORIGINAL[0]: se_packet_mem . debug_use_chunks = getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = FUN1 ( \
  ORIGINAL[1]: se_packet_mem . debug_use_chunks
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: <global> se_packet_mem
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771073
FRAGMENT_COUNT: 3
  ORIGINAL[0]: canary[8 * 2 - 1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 8 * 2 - 1 ]
  ORIGINAL[1]: 8 * 2 - 1
  TYPE[1]: CALL
  TOKENIZED[1]: 8 * 2 - 1
  ORIGINAL[2]: 8 * 2
  TYPE[2]: CALL
  TOKENIZED[2]: 8 * 2

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 1
  ORIGINAL[0]: mem_canary[i] != canary[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] != VAR3 [ VAR2 ]

CENTER_NODE: 68719477024
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (mem -> memory_alloc)(size,mem)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR3 , VAR1 )
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771539
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ptr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: memcpy(ptr,(&mem_chunk -> freed),sizeof(void *))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( &mem_chunk -> VAR2 ) , sizeof ( void * ) )
  ORIGINAL[2]: &mem_chunk -> freed
  TYPE[2]: CALL
  TOKENIZED[2]: &mem_chunk -> VAR1
  ORIGINAL[3]: sizeof(void *)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( void * )
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mem_chunk
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477285
FRAGMENT_COUNT: 2
  ORIGINAL[0]: &se_packet_mem
  TYPE[0]: CALL
  TOKENIZED[0]: &se_packet_mem
  ORIGINAL[1]: <global> se_packet_mem
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772915
FRAGMENT_COUNT: 5
  ORIGINAL[0]: full_len < add_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: ep_strbuf_grow(strbuf,strbuf -> len + full_len + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR1 -> VAR2 + VAR3 + 1 )
  ORIGINAL[2]: strbuf -> len + full_len + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 + VAR3 + 1
  ORIGINAL[3]: strbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: add_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477126
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772396
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tree_list -> malloc = ((void *(*)(size_t ))g_malloc)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ( * ) ( VAR3 ) ) VAR4 )
  ORIGINAL[1]: tree_list -> malloc
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *(*)(size_t ))g_malloc
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ( * ) ( VAR1 ) ) VAR2
  ORIGINAL[3]: tree_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640499
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i < level
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: for (i = 0;i < level;i++)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( VAR1 = 0 ; VAR1 < VAR2 ; i++ )

CENTER_NODE: 30064771498
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_alloc(size,&se_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &se_packet_mem )
  ORIGINAL[1]: &se_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &se_packet_mem
  ORIGINAL[2]: <global> se_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064773025
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[1]: fprintf(stderr, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: stderr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640329
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064771359
FRAGMENT_COUNT: 3
  ORIGINAL[0]: npc -> next = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: npc -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 30064772757
FRAGMENT_COUNT: 4
  ORIGINAL[0]: max_alloc_len < 1 || max_alloc_len > 65536
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 1 || VAR1 > 65536
  ORIGINAL[1]: max_alloc_len = 65536
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 65536
  ORIGINAL[2]: max_alloc_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cur_alloc_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771562
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719478012
FRAGMENT_COUNT: 8
  ORIGINAL[0]: node -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: node -> data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: node -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: node -> right
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: right
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stop_traverse
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771316
FRAGMENT_COUNT: 5
  ORIGINAL[0]: se_packet_mem . debug_verify_pointers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: emem_verify_pointer((&se_packet_mem),ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &se_packet_mem ) , VAR1 )
  ORIGINAL[2]: &se_packet_mem
  TYPE[2]: CALL
  TOKENIZED[2]: &se_packet_mem
  ORIGINAL[3]: <global> se_packet_mem
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

