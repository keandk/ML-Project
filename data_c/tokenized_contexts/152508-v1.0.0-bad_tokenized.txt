# Tokenized code fragments for 152508-v1.0.0-bad
# Total center nodes processed: 70
# Total code fragments found: 336

CENTER_NODE: 30064772716
FRAGMENT_COUNT: 16
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[2]: col = cinfo -> col_first[el]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[3]: cinfo -> col_first[el]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: cinfo -> col_first
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: col <= cinfo -> col_last[el]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[6]: cinfo -> col_last[el]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[7]: cinfo -> col_last
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: col_first
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: col_last
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: col
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: cinfo
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: el
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: col
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: cinfo
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: el
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 47244640476
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 47244640487
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476849
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < cinfo -> num_cols
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: cinfo -> col_expr . col_expr_val[i][0] = '\\0'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 [ VAR4 ] [ 0 ] = '\\0'
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640445
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771852
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[2]: col_do_append_str(cinfo,el,((void *)0),str)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , ( ( void * ) 0 ) , VAR3 )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: el
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: str
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771561
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cinfo -> col_fence[i] > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] > 0
  ORIGINAL[1]: cinfo -> col_fence[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_fence[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_fence
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_fence
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640543
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 47244640468
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771460
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[1]: cinfo?cinfo -> writable : 0
  TYPE[1]: CALL
  TOKENIZED[1]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[2]: cinfo -> col_first[el] >= 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[3]: cinfo -> col_first[el]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]

CENTER_NODE: 30064772459
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !fd -> flags . has_ts
  TYPE[0]: CALL
  TOKENIZED[0]: !fd -> VAR1 . VAR2
  ORIGINAL[1]: cinfo -> col_data[col] = cinfo -> col_buf[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] = VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_buf[col]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]

CENTER_NODE: 47244640511
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478597
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772532
FRAGMENT_COUNT: 2
  ORIGINAL[0]: set_abs_time(fd,cinfo -> col_buf[col],!0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 [ VAR4 ] , !0 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0

CENTER_NODE: 68719477820
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: cinfo -> col_expr . col_expr[col] = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2 [ VAR3 ] = \
  ORIGINAL[2]: cinfo -> col_expr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_expr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772568
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fd -> flags . has_ts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: fd -> flags
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: flags
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: has_ts
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fd
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477144
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> col_first[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_first
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: el
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477805
FRAGMENT_COUNT: 4
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: cinfo -> col_expr . col_expr[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_expr . col_expr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR2
  ORIGINAL[3]: col
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478113
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (const char *)__func__
  TYPE[0]: CALL
  TOKENIZED[0]: ( const char * ) VAR1
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> __func__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476924
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> col_first
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: col_first
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476785
FRAGMENT_COUNT: 6
  ORIGINAL[0]: vfprintf(stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: argptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477300
FRAGMENT_COUNT: 20
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: i = cinfo -> col_first[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: i <= cinfo -> col_last[el]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[3]: cinfo -> col_last[el]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: i++
  TYPE[4]: CALL
  TOKENIZED[4]: i++
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: i
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: i
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: i
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: i
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: i
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: i
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: i
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: i
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: i
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 47244640607
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640579
FRAGMENT_COUNT: 1
  ORIGINAL[0]: cinfo -> col_fmt[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo -> col_first
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_first
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771831
FRAGMENT_COUNT: 7
  ORIGINAL[0]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_buf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772514
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: (long )fd -> abs_ts . nsecs
  TYPE[1]: CALL
  TOKENIZED[1]: ( long ) VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: fd -> abs_ts . nsecs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: fd -> abs_ts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: nsecs
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773236
FRAGMENT_COUNT: 9
  ORIGINAL[0]: i < cinfo -> num_cols
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: cinfo -> col_fmt[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_fmt
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cinfo -> col_fmt[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: col_fmt
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cinfo
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476882
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i <= cinfo -> col_last[el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: cinfo -> fmt_matx[i][el]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[3]: cinfo -> col_fence[i] = ((int )(strlen(cinfo -> col_data[i])))
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] = ( ( int ) ( FUN1 ( VAR1 -> VAR4 [ VAR3 ] ) ) )
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771248
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: writable
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477720
FRAGMENT_COUNT: 4
  ORIGINAL[0]: secs >= 60
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 60
  ORIGINAL[1]: (gint32 )secs
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: secs
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: secs
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640461
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477993
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo -> col_data[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478376
FRAGMENT_COUNT: 2
  ORIGINAL[0]: cinfo -> col_fmt[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: COL_CUMULATIVE_BYTES
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640408
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640568
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478025
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: fd -> del_dis_ts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: del_dis_ts
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: TS_SECONDS_DEFAULT
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fd
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640618
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772014
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_data[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col_data
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772796
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pinfo -> cinfo -> col_data[col] = se_get_addr_name(addr)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 [ VAR4 ] = FUN1 ( VAR5 )
  ORIGINAL[1]: pinfo -> cinfo -> col_data[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: se_get_addr_name(addr)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: res
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fill_col_exprs
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478061
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: col_set_delta_time_dis(fd,cinfo,col)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: fd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640474
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640499
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772017
FRAGMENT_COUNT: 4
  ORIGINAL[0]: set_abs_date_time(fd,cinfo -> col_buf[col],0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 [ VAR4 ] , 0 )
  ORIGINAL[1]: cinfo -> col_buf[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: fd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477453
FRAGMENT_COUNT: 8
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: tmp -> tm_year
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tmp -> tm_mon + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 + 1
  ORIGINAL[3]: tmp -> tm_mon
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tmp -> tm_mday
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: tm_mday
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tmp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640413
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771739
FRAGMENT_COUNT: 8
  ORIGINAL[0]: fence != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cinfo -> col_buf[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: col_buf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640610
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476945
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo -> fmt_matx[i][COL_CUSTOM] && cinfo -> col_custom_field[i] && cinfo -> col_custom_field_id[i] != - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] && VAR1 -> VAR5 [ VAR3 ] && VAR1 -> VAR6 [ VAR3 ] != - 1
  ORIGINAL[1]: cinfo -> col_data[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640359
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771253
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: writable
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640621
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771651
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: cinfo -> col_first[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_first[el]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_first
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_first
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: el
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064773220
FRAGMENT_COUNT: 6
  ORIGINAL[0]: pinfo -> cinfo -> col_fmt[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: g_assertion_message_expr(((gchar *)0),\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[2]: (gchar *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) 0
  ORIGINAL[3]: (const char *)__func__
  TYPE[3]: CALL
  TOKENIZED[3]: ( const char * ) VAR1
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: <global> __func__
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 30064772556
FRAGMENT_COUNT: 6
  ORIGINAL[0]: g_strlcpy(cinfo -> col_expr . col_expr_val[col],cinfo -> col_buf[col],256)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 . VAR3 [ VAR4 ] , VAR1 -> VAR5 [ VAR4 ] , 256 )
  ORIGINAL[1]: cinfo -> col_expr . col_expr_val[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[2]: cinfo -> col_expr . col_expr_val
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: cinfo -> col_buf[col]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477417
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> fmt_matx[col][COL_CLS_TIME] || cinfo -> fmt_matx[col][COL_ABS_TIME] || cinfo -> fmt_matx[col][COL_ABS_DATE_TIME] || cinfo -> fmt_matx[col][COL_UTC_TIME] || cinfo -> fmt_matx[col][COL_UTC_DATE_TIME] || cinfo -> fmt_matx[col][COL_REL_TIME] || cinfo -> fmt_matx[col][COL_DELTA_TIME]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR5 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR6 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR7 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR8 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR9 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR10 ]
  ORIGINAL[1]: cinfo -> fmt_matx[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> fmt_matx
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640565
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 1
  ORIGINAL[0]: cinfo
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 66
  ORIGINAL[0]: compo_brightsome != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: dbhost != 0 && dbport != 0 && dbuser != 0 && dbpassword != 0 && dbdatabase != 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 0 && VAR2 != 0 && VAR3 != 0 && VAR4 != 0 && VAR5 != 0
  ORIGINAL[2]: dbhost != 0 && dbport != 0 && dbuser != 0 && dbpassword != 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != 0 && VAR2 != 0 && VAR3 != 0 && VAR4 != 0
  ORIGINAL[3]: dbdatabase != 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 != 0
  ORIGINAL[4]: snprintf(dbconn_str,150,\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , 150 , \
  ORIGINAL[5]: conn = PQconnectdb(dbconn_str)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[6]: PQconnectdb(dbconn_str)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 )
  ORIGINAL[7]: PQstatus(conn) != 0
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 ) != 0
  ORIGINAL[8]: PQstatus(conn)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 )
  ORIGINAL[9]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[10]: srand(time(NULL))
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( FUN2 ( VAR1 ) )
  ORIGINAL[11]: time(NULL)
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( VAR1 )
  ORIGINAL[12]: stonesoup_random_int = (rand() % 1000) + 100
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 = ( FUN1 ( ) % 1000 ) + 100
  ORIGINAL[13]: (rand() % 1000) + 100
  TYPE[13]: CALL
  TOKENIZED[13]: ( FUN1 ( ) % 1000 ) + 100
  ORIGINAL[14]: rand() % 1000
  TYPE[14]: CALL
  TOKENIZED[14]: FUN1 ( ) % 1000
  ORIGINAL[15]: rand()
  TYPE[15]: CALL
  TOKENIZED[15]: FUN1 ( )
  ORIGINAL[16]: snprintf(query,1000,\
  TYPE[16]: CALL
  TOKENIZED[16]: FUN1 ( VAR1 , 1000 , \
  ORIGINAL[17]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[17]: CALL
  TOKENIZED[17]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[18]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[18]: CALL
  TOKENIZED[18]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[19]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[19]: CALL
  TOKENIZED[19]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[20]: res = PQexec(conn,query)
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[21]: PQexec(conn,query)
  TYPE[21]: CALL
  TOKENIZED[21]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[22]: PQresultStatus(res) != PGRES_COMMAND_OK
  TYPE[22]: CALL
  TOKENIZED[22]: FUN1 ( VAR1 ) != VAR2
  ORIGINAL[23]: PQresultStatus(res)
  TYPE[23]: CALL
  TOKENIZED[23]: FUN1 ( VAR1 )
  ORIGINAL[24]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[24]: CALL
  TOKENIZED[24]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[25]: stonesoup_result = PQcmdTuples(res)
  TYPE[25]: CALL
  TOKENIZED[25]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[26]: PQcmdTuples(res)
  TYPE[26]: CALL
  TOKENIZED[26]: FUN1 ( VAR1 )
  ORIGINAL[27]: stonesoup_printf(\
  TYPE[27]: CALL
  TOKENIZED[27]: FUN1 ( \
  ORIGINAL[28]: PQclear(res)
  TYPE[28]: CALL
  TOKENIZED[28]: FUN1 ( VAR1 )
  ORIGINAL[29]: PQfinish(conn)
  TYPE[29]: CALL
  TOKENIZED[29]: FUN1 ( VAR1 )
  ORIGINAL[30]: dbconn_str
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: dbdatabase
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: dbhost
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: dbuser
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: dbpassword
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: dbport
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: conn
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: dbconn_str
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: conn
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: stonesoup_trace
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: trace_point
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: NULL
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: stonesoup_random_int
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: query
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: stonesoup_random_int
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: sterelminthous_endrin
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: stonesoup_trace
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: variable_buffer
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: VAR1
  ORIGINAL[48]: query
  TYPE[48]: IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: stonesoup_trace
  TYPE[49]: IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: trace_point
  TYPE[50]: IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: stonesoup_trace
  TYPE[51]: IDENTIFIER
  TOKENIZED[51]: VAR1
  ORIGINAL[52]: trace_point
  TYPE[52]: IDENTIFIER
  TOKENIZED[52]: VAR1
  ORIGINAL[53]: res
  TYPE[53]: IDENTIFIER
  TOKENIZED[53]: VAR1
  ORIGINAL[54]: conn
  TYPE[54]: IDENTIFIER
  TOKENIZED[54]: VAR1
  ORIGINAL[55]: query
  TYPE[55]: IDENTIFIER
  TOKENIZED[55]: VAR1
  ORIGINAL[56]: res
  TYPE[56]: IDENTIFIER
  TOKENIZED[56]: VAR1
  ORIGINAL[57]: PGRES_COMMAND_OK
  TYPE[57]: IDENTIFIER
  TOKENIZED[57]: VAR1
  ORIGINAL[58]: stonesoup_trace
  TYPE[58]: IDENTIFIER
  TOKENIZED[58]: VAR1
  ORIGINAL[59]: trace_point
  TYPE[59]: IDENTIFIER
  TOKENIZED[59]: VAR1
  ORIGINAL[60]: stonesoup_result
  TYPE[60]: IDENTIFIER
  TOKENIZED[60]: VAR1
  ORIGINAL[61]: res
  TYPE[61]: IDENTIFIER
  TOKENIZED[61]: VAR1
  ORIGINAL[62]: stonesoup_result
  TYPE[62]: IDENTIFIER
  TOKENIZED[62]: VAR1
  ORIGINAL[63]: res
  TYPE[63]: IDENTIFIER
  TOKENIZED[63]: VAR1
  ORIGINAL[64]: conn
  TYPE[64]: IDENTIFIER
  TOKENIZED[64]: VAR1
  ORIGINAL[65]: stonesoup_trace
  TYPE[65]: IDENTIFIER
  TOKENIZED[65]: VAR1

CENTER_NODE: 47244640435
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476964
FRAGMENT_COUNT: 15
  ORIGINAL[0]: !(cinfo && cinfo -> col_first[COL_CUSTOM] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 && VAR1 -> VAR2 [ VAR3 ] >= 0 )
  ORIGINAL[1]: i = cinfo -> col_first[COL_CUSTOM]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: i <= cinfo -> col_last[COL_CUSTOM]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[3]: cinfo -> col_last[COL_CUSTOM]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: i++
  TYPE[4]: CALL
  TOKENIZED[4]: i++
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: i
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: i
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: i
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: i
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 30064771861
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[2]: separator == ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: col_do_append_str(cinfo,el,separator,str)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[5]: separator
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: el
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: separator
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: str
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719478042
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (const char *)__func__
  TYPE[0]: CALL
  TOKENIZED[0]: ( const char * ) VAR1
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719476798
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo -> num_cols
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cinfo -> col_fmt = ((gint *)(g_malloc_n(num_cols,sizeof(gint ))))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( VAR3 * ) ( FUN1 ( VAR4 , sizeof ( VAR3 ) ) ) )
  ORIGINAL[2]: cinfo -> col_fmt
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cinfo -> fmt_matx
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: fmt_matx
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477007
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> fmt_matx[i][el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[1]: cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640454
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 0

