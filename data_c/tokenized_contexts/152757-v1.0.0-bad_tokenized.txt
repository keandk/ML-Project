# Tokenized code fragments for 152757-v1.0.0-bad
# Total center nodes processed: 53
# Total code fragments found: 172

CENTER_NODE: 68719476864
FRAGMENT_COUNT: 6
  ORIGINAL[0]: input_encoding == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_utf_cstring_to_utf8_ex2(dest,src,input_encoding,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: dest
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> input_encoding
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476751
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sizeof(char)
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( char )
  ORIGINAL[1]: buffer_size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: char
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: char

CENTER_NODE: 47244640327
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640334
FRAGMENT_COUNT: 1
  ORIGINAL[0]: *outstr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *outstr == ( ( void * ) 0 )

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: mg_set_option(stonesoup_server, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: stonesoup_server
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640400
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771224
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_cmdline_cstring_from_utf8(dest,svn_dirent_local_style(src,pool),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR2 , VAR3 ) , VAR3 )
  ORIGINAL[1]: svn_dirent_local_style(src,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: dest
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771753
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_error_wrap_apr(apr_err,(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( FUN2 ( \
  ORIGINAL[1]: dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476889
FRAGMENT_COUNT: 5
  ORIGINAL[0]: err = svn_cmdline_cstring_from_utf8(&out,string,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &out , VAR2 , VAR3 )
  ORIGINAL[1]: svn_cmdline_cstring_from_utf8(&out,string,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &out , VAR1 , VAR2 )
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: out
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476870
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_start(ap,fmt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477117
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (equals_sign = (strchr(second_colon + 1,'='))) && equals_sign != second_colon + 1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = ( FUN1 ( VAR2 + 1 , '=' ) ) ) && VAR1 != VAR2 + 1
  ORIGINAL[1]: first_colon - opt_arg
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2
  ORIGINAL[2]: first_colon
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: first_colon
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: opt_arg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: first_colon
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt_arg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: first_colon
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 1
  ORIGINAL[0]: pool
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719477597
FRAGMENT_COUNT: 5
  ORIGINAL[0]: proofreading_byelaws > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: isopentyl_joysome = ((char *)datagrams_reverify)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( char * ) VAR2 )
  ORIGINAL[2]: (char *)datagrams_reverify
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) VAR1
  ORIGINAL[3]: isopentyl_joysome
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: isopentyl_joysome
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771915
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ringing_cassioberry != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: retrolingual_magisteries(1,ringing_cassioberry)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 1 , VAR1 )
  ORIGINAL[2]: ringing_cassioberry
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640365
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477228
FRAGMENT_COUNT: 7
  ORIGINAL[0]: pname_stdout = (apr_psprintf(pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , \
  ORIGINAL[1]: *svn_err__temp = svn_subst_translate_cstring2(pname_stdout,&pname_stdout,\
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 , &pname_stdout , \
  ORIGINAL[2]: svn_subst_translate_cstring2(pname_stdout,&pname_stdout,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , &pname_stdout , \
  ORIGINAL[3]: out
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pname_stdout
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: svn_err__temp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640355
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477254
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *outstr
  TYPE[0]: CALL
  TOKENIZED[0]: *outstr
  ORIGINAL[1]: outstr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476855
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_cmdline_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477187
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stringbuf_create_empty(pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: out
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477575
FRAGMENT_COUNT: 5
  ORIGINAL[0]: titfer_triennias > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: __builtin_va_start(prodecoration_reviser,titfer_triennias)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: prodecoration_reviser
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: titfer_triennias
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: prodecoration_reviser
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640353
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771571
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ( *p) != 13 && ( *p) != 10 && ( *p) != '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 13 && ( *p ) != 10 && ( *p ) != '\\0'
  ORIGINAL[1]: ( *p) != 13 && ( *p) != 10
  TYPE[1]: CALL
  TOKENIZED[1]: ( *p ) != 13 && ( *p ) != 10
  ORIGINAL[2]: ( *p) != '\\0'
  TYPE[2]: CALL
  TOKENIZED[2]: ( *p ) != '\\0'
  ORIGINAL[3]: *p
  TYPE[3]: CALL
  TOKENIZED[3]: *p

CENTER_NODE: 47244640373
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640406
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640421
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771813
FRAGMENT_COUNT: 8
  ORIGINAL[0]: err && (err -> apr_err == 13 || err -> apr_err == 30)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && ( VAR1 -> VAR2 == 13 || VAR1 -> VAR2 == 30 )
  ORIGINAL[1]: svn_io_temp_dir(&base_dir,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &base_dir , VAR1 )
  ORIGINAL[2]: &base_dir
  TYPE[2]: CALL
  TOKENIZED[2]: &base_dir
  ORIGINAL[3]: base_dir
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: base_dir
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: base_dir
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: base_dir
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640360
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640358
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640409
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771264
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *__errno_location() = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *__errno_location ( ) = 0
  ORIGINAL[1]: *__errno_location()
  TYPE[1]: CALL
  TOKENIZED[1]: *__errno_location ( )
  ORIGINAL[2]: __errno_location()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: __errno_location()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )
  ORIGINAL[4]: __errno_location()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )

CENTER_NODE: 68719476882
FRAGMENT_COUNT: 6
  ORIGINAL[0]: apr_pvsprintf(pool,fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: message
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640395
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476738
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (struct mg_connection*) stonesoup_printf_context
  TYPE[0]: CALL
  TOKENIZED[0]: ( struct mg_connection* ) VAR1
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477149
FRAGMENT_COUNT: 28
  ORIGINAL[0]: i < config_options -> nelts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: cfg = (apr_hash_get(config,(arg -> file),(- 1)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 , ( VAR3 -> VAR4 ) , ( - 1 ) ) )
  ORIGINAL[2]: svn_config_set(cfg,arg -> section,arg -> option,arg -> value)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR2 -> VAR4 , VAR2 -> VAR5 )
  ORIGINAL[3]: arg -> section
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: arg -> option
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: arg -> value
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: *err = svn_error_createf(SVN_ERR_CL_ARG_PARSING_ERROR,((void *)0),(dgettext(\
  TYPE[6]: CALL
  TOKENIZED[6]: *err = FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[7]: svn_error_createf(SVN_ERR_CL_ARG_PARSING_ERROR,((void *)0),(dgettext(\
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[8]: (void *)0
  TYPE[8]: CALL
  TOKENIZED[8]: ( void * ) 0
  ORIGINAL[9]: dgettext(\
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( \
  ORIGINAL[10]: svn_handle_warning2(stderr,err,prefix)
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[11]: svn_error_clear(err)
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( VAR1 )
  ORIGINAL[12]: section
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: option
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: value
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: i
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: cfg
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: cfg
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: arg
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: arg
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: arg
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: err
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: SVN_ERR_CL_ARG_PARSING_ERROR
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: argument_name
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: stderr
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: err
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: prefix
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: err
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 13
  ORIGINAL[0]: pb -> config_dir = config_dir
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: pb -> config_dir
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: config_dir
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cancel_func
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: config_dir
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pb
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pb
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pb
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pb
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pb
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: pb
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: pb
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771124
FRAGMENT_COUNT: 17
  ORIGINAL[0]: fstat(0,&st) == - 1 && open(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 0 , &st ) == - 1 && FUN2 ( \
  ORIGINAL[1]: fstat(0,&st) == - 1 && open(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 0 , &st ) == - 1 && FUN2 ( \
  ORIGINAL[2]: fstat(2,&st) == - 1 && open(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 2 , &st ) == - 1 && FUN2 ( \
  ORIGINAL[3]: setvbuf(stdout,((void *)0),1,0)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ( ( void * ) 0 ) , 1 , 0 )
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: !setlocale(__LC_ALL,\
  TYPE[5]: CALL
  TOKENIZED[5]: !setlocale ( VAR1 , \
  ORIGINAL[6]: !setlocale(__LC_ALL,\
  TYPE[6]: CALL
  TOKENIZED[6]: !setlocale ( VAR1 , \
  ORIGINAL[7]: setlocale(__LC_ALL,\
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 , \
  ORIGINAL[8]: status = apr_initialize()
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 = FUN1 ( )
  ORIGINAL[9]: apr_initialize()
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( )
  ORIGINAL[10]: if (fstat(0,&st) == - 1 && open(\
  TYPE[10]: CONTROL_STRUCTURE
  TOKENIZED[10]: if ( FUN1 ( 0 , &st ) == - 1 && FUN2 ( \
  ORIGINAL[11]: error_stream
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: error_stream
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: stdout
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: __LC_ALL
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: status
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: status
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 30064772010
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: parasynaptist_woodblock
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771695
FRAGMENT_COUNT: 3
  ORIGINAL[0]: config?apr_hash_get(config,\
  TYPE[0]: CALL
  TOKENIZED[0]: config?apr_hash_get ( VAR1 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: config
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771445
FRAGMENT_COUNT: 7
  ORIGINAL[0]: apr_err = apr_getopt_init(os,pool,argc,argv)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: apr_getopt_init(os,pool,argc,argv)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: os
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: argc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: argv
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771296
FRAGMENT_COUNT: 4
  ORIGINAL[0]: failures == 0 || failures == 0x00000008
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 || VAR1 == 0x00000008
  ORIGINAL[1]: failures == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: failures == 0x00000008
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0x00000008
  ORIGINAL[3]: failures
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771684
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0
  ORIGINAL[1]: force_interactive
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640415
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

