# Tokenized code fragments for 153612-v1.0.0-bad
# Total center nodes processed: 29
# Total code fragments found: 124

CENTER_NODE: 47244640366
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771672
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (void )(((SwapFileGap *)0) == gap)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( ( VAR1 * ) 0 ) == VAR2 )
  ORIGINAL[1]: ((SwapFileGap *)0) == gap
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 * ) 0 ) == VAR2
  ORIGINAL[2]: (SwapFileGap *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) 0
  ORIGINAL[3]: gap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476845
FRAGMENT_COUNT: 10
  ORIGINAL[0]: dirpath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: retval == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: filepath != NULL
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != VAR2
  ORIGINAL[3]: free(filepath)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: free(dirpath)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: dirpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dirpath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dirpath
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: dirpath
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: dirpath
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771270
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gimp_swap_file -> swap_file_end = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 0
  ORIGINAL[1]: gimp_swap_file -> swap_file_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: <global> gimp_swap_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640301
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771585
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ftruncate(swap_file -> fd,new_size) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 ) != 0
  ORIGINAL[1]: g_strerror( *__errno_location())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( *__errno_location ( ) )
  ORIGINAL[2]: *__errno_location()
  TYPE[2]: CALL
  TOKENIZED[2]: *__errno_location ( )
  ORIGINAL[3]: __errno_location()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )

CENTER_NODE: 47244640304
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771691
FRAGMENT_COUNT: 48
  ORIGINAL[0]: stonesoup_data != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_input_string != 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 0
  ORIGINAL[2]: memset(stonesoup_data->buffer, 0, 128)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( stonesoup_data->buffer , 0 , 128 )
  ORIGINAL[3]: stonesoup_data->buffer
  TYPE[3]: CALL
  TOKENIZED[3]: stonesoup_data->buffer
  ORIGINAL[4]: stonesoup_i = 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = 0
  ORIGINAL[5]: stonesoup_i < 200
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 < 200
  ORIGINAL[6]: stonesoup_i = 0
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = 0
  ORIGINAL[7]: stonesoup_i < strlen((char *) stonesoup_input_string)
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 < FUN1 ( ( char * ) VAR2 )
  ORIGINAL[8]: strlen((char *) stonesoup_input_string)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( ( char * ) VAR1 )
  ORIGINAL[9]: (char *) stonesoup_input_string
  TYPE[9]: CALL
  TOKENIZED[9]: ( char * ) VAR1
  ORIGINAL[10]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[11]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[12]: stonesoup_i = 0
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 = 0
  ORIGINAL[13]: stonesoup_i < strlen(pichiciego_strengthy)
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 < FUN1 ( VAR2 )
  ORIGINAL[14]: strlen(pichiciego_strengthy)
  TYPE[14]: CALL
  TOKENIZED[14]: FUN1 ( VAR1 )
  ORIGINAL[15]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[15]: CALL
  TOKENIZED[15]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[16]: (int) pichiciego_strengthy[stonesoup_i]
  TYPE[16]: CALL
  TOKENIZED[16]: ( int ) VAR1 [ VAR2 ]
  ORIGINAL[17]: pichiciego_strengthy[stonesoup_i]
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 [ VAR2 ]
  ORIGINAL[18]: &(pichiciego_strengthy[stonesoup_i])
  TYPE[18]: CALL
  TOKENIZED[18]: & ( VAR1 [ VAR2 ] )
  ORIGINAL[19]: pichiciego_strengthy[stonesoup_i]
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 [ VAR2 ]
  ORIGINAL[20]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[20]: CALL
  TOKENIZED[20]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[21]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[21]: CALL
  TOKENIZED[21]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[22]: buffer
  TYPE[22]: FIELD_IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: stonesoup_input_string
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: stonesoup_data
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: stonesoup_i
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: stonesoup_i
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: stonesoup_i
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: stonesoup_i
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: stonesoup_input_string
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: stonesoup_trace
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: trace_point
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: stonesoup_trace
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: trace_point
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: stonesoup_i
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: stonesoup_i
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: pichiciego_strengthy
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: stonesoup_trace
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: variable_signed_integral
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: pichiciego_strengthy
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: stonesoup_i
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: pichiciego_strengthy
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: stonesoup_i
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: stonesoup_trace
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: trace_point
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: stonesoup_trace
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: trace_point
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: stonesoup_data
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: VAR1

CENTER_NODE: 30064771130
FRAGMENT_COUNT: 3
  ORIGINAL[0]: SWAP_OUT=2
  TYPE[0]: CALL
  TOKENIZED[0]: SWAP_OUT=2
  ORIGINAL[1]: SWAP_OUT
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_DELETE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 5
  ORIGINAL[0]: gap -> start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: gap -> end = end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: gap -> end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: gap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: gap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 4
  ORIGINAL[0]: strlen(str) >= shmsz
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) >= VAR2
  ORIGINAL[1]: fprintf(stderr, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: stderr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: errors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771565
FRAGMENT_COUNT: 8
  ORIGINAL[0]: swap_file -> fd = open((swap_file -> filename),0100 | 02 | 0 | 0,0400 | 0200)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = FUN1 ( ( VAR1 -> VAR3 ) , 0100 | 02 | 0 | 0 , 0400 | 0200 )
  ORIGINAL[1]: swap_file -> fd
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: open((swap_file -> filename),0100 | 02 | 0 | 0,0400 | 0200)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( VAR1 -> VAR2 ) , 0100 | 02 | 0 | 0 , 0400 | 0200 )
  ORIGINAL[3]: swap_file -> fd
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: fd
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: swap_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: swap_file
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: swap_file
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640365
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771324
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_OUT)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_OUT
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771669
FRAGMENT_COUNT: 3
  ORIGINAL[0]: g_slice_free1(sizeof(SwapFileGap ),gap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( sizeof ( VAR1 ) , VAR2 )
  ORIGINAL[1]: sizeof(SwapFileGap )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: gap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771227
FRAGMENT_COUNT: 1
  ORIGINAL[0]: before[200]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 200 ]

CENTER_NODE: 30064771228
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[128]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 128 ]

CENTER_NODE: 68719476919
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gimp_swap_file = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> gimp_swap_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719477097
FRAGMENT_COUNT: 9
  ORIGINAL[0]: tmp -> data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: !tmp -> next
  TYPE[1]: CALL
  TOKENIZED[1]: !tmp -> VAR1
  ORIGINAL[2]: tmp -> next = g_list_alloc()
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = FUN1 ( )
  ORIGINAL[3]: tmp -> next
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tmp -> next
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: next
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tmp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tmp
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771229
FRAGMENT_COUNT: 1
  ORIGINAL[0]: after[200]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 200 ]

CENTER_NODE: 47244640286
FRAGMENT_COUNT: 1
  ORIGINAL[0]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0

CENTER_NODE: 30064771325
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_DELETE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_DELETE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771320
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tile -> swap_offset == (- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( - 1 )
  ORIGINAL[1]: tile -> swap_offset
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: - 1
  TYPE[2]: CALL
  TOKENIZED[2]: - 1
  ORIGINAL[3]: swap_offset
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tile
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tile
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tile
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

