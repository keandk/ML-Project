# Tokenized code fragments for 153259-v1.0.0-bad
# Total center nodes processed: 97
# Total code fragments found: 508

CENTER_NODE: 68719476849
FRAGMENT_COUNT: 3
  ORIGINAL[0]: se_packet_mem . free_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: free_list
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> se_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064772781
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ep_strbuf_append_vprintf(strbuf,format,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: strbuf
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771283
FRAGMENT_COUNT: 5
  ORIGINAL[0]: se_packet_mem . debug_verify_pointers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: emem_verify_pointer((&se_packet_mem),ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &se_packet_mem ) , VAR1 )
  ORIGINAL[2]: &se_packet_mem
  TYPE[2]: CALL
  TOKENIZED[2]: &se_packet_mem
  ORIGINAL[3]: <global> se_packet_mem
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772547
FRAGMENT_COUNT: 52
  ORIGINAL[0]: !node
  TYPE[0]: CALL
  TOKENIZED[0]: !node
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: i < level
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 < VAR2
  ORIGINAL[3]: printf(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: (void *)node
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) VAR1
  ORIGINAL[5]: (void *)(node -> parent)
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) ( VAR1 -> VAR2 )
  ORIGINAL[6]: node -> parent
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: (void *)(node -> left)
  TYPE[7]: CALL
  TOKENIZED[7]: ( void * ) ( VAR1 -> VAR2 )
  ORIGINAL[8]: node -> left
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: (void *)(node -> right)
  TYPE[9]: CALL
  TOKENIZED[9]: ( void * ) ( VAR1 -> VAR2 )
  ORIGINAL[10]: node -> right
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: node -> u . rb_color?\
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 . rb_color?\
  ORIGINAL[12]: node -> u . rb_color
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2 . VAR3
  ORIGINAL[13]: node -> u
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: node -> key32
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: node -> u . is_subtree?\
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2 . is_subtree?\
  ORIGINAL[16]: node -> u . is_subtree
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2 . VAR3
  ORIGINAL[17]: node -> u
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 -> VAR2
  ORIGINAL[18]: node -> data
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 -> VAR2
  ORIGINAL[19]: node -> left
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 -> VAR2
  ORIGINAL[20]: node -> right
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 -> VAR2
  ORIGINAL[21]: node -> u . is_subtree
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 -> VAR2 . VAR3
  ORIGINAL[22]: node -> u
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 -> VAR2
  ORIGINAL[23]: parent
  TYPE[23]: FIELD_IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: left
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: right
  TYPE[25]: FIELD_IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: u
  TYPE[26]: FIELD_IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: rb_color
  TYPE[27]: FIELD_IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: key32
  TYPE[28]: FIELD_IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: u
  TYPE[29]: FIELD_IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: is_subtree
  TYPE[30]: FIELD_IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: data
  TYPE[31]: FIELD_IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: left
  TYPE[32]: FIELD_IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: right
  TYPE[33]: FIELD_IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: u
  TYPE[34]: FIELD_IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: is_subtree
  TYPE[35]: FIELD_IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: node
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: i
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: i
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: level
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: prefix
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: node
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: node
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: node
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: node
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: node
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: node
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: node
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: VAR1
  ORIGINAL[48]: node
  TYPE[48]: IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: node
  TYPE[49]: IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: node
  TYPE[50]: IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: node
  TYPE[51]: IDENTIFIER
  TOKENIZED[51]: VAR1

CENTER_NODE: 30064771667
FRAGMENT_COUNT: 25
  ORIGINAL[0]: npc -> canary_last != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: npc -> canary_last
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: npc -> canary_last
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: npc -> canary_last
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: canary_last
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: npc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: use_chunks
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: npc
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: npc
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: npc
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: npc
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: npc
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: npc
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: npc
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: npc
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: npc
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: npc
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: npc
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: npc
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: npc
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: npc
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: npc
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: npc
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: npc
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1

CENTER_NODE: 30064771550
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = g_printf_string_upper_bound(fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: g_printf_string_upper_bound(fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dst
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771136
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]

CENTER_NODE: 30064771255
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ep_init_chunk()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: se_init_chunk()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 47244640276
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (getenv(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 30064771558
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640335
FRAGMENT_COUNT: 4
  ORIGINAL[0]: key < node -> key32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: node = node -> left
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 -> VAR2
  ORIGINAL[2]: continue;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: continue ;
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476988
FRAGMENT_COUNT: 7
  ORIGINAL[0]: npc -> next
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: npc -> buf = (g_malloc(size))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( FUN1 ( VAR3 ) )
  ORIGINAL[2]: npc -> buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: npc -> canary_last
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: canary_last
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: npc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: npc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771529
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640408
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771149
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < 8 * 2 - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 8 * 2 - 1
  ORIGINAL[1]: canary[i] = ((guint8 )(g_rand_int_range(rand_state,1,0x100)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = ( ( VAR3 ) ( FUN1 ( VAR4 , 1 , 0x100 ) ) )
  ORIGINAL[2]: canary[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: (guint8 )(g_rand_int_range(rand_state,1,0x100))
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) ( FUN1 ( VAR2 , 1 , 0x100 ) )
  ORIGINAL[4]: canary
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: guint8
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771488
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(chunk = mem_chunk -> chunk_list) || chunk -> amount_free < ((guint )(mem_chunk -> item_size))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 = VAR2 -> VAR3 ) || VAR1 -> VAR4 < ( ( VAR5 ) ( VAR2 -> VAR6 ) )
  ORIGINAL[1]: chunk = emem_create_chunk(alloc_size)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[2]: emem_create_chunk(alloc_size)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: chunk
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: alloc_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476921
FRAGMENT_COUNT: 2
  ORIGINAL[0]: g_free(npc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: npc
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477469
FRAGMENT_COUNT: 7
  ORIGINAL[0]: uncle = emem_tree_uncle(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_uncle(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: uncle -> u
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: uncle
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: uncle
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: uncle
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640366
FRAGMENT_COUNT: 1
  ORIGINAL[0]: parent
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771199
FRAGMENT_COUNT: 12
  ORIGINAL[0]: ep_packet_mem . free_list = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: ep_packet_mem . free_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: free_list
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> ep_packet_mem
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> ep_packet_mem
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: <global> ep_packet_mem
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: <global> ep_packet_mem
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: <global> VAR1
  ORIGINAL[8]: <global> ep_packet_mem
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: <global> VAR1
  ORIGINAL[9]: <global> ep_packet_mem
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: <global> VAR1
  ORIGINAL[10]: <global> ep_packet_mem
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: <global> VAR1
  ORIGINAL[11]: <global> ep_packet_mem
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: <global> VAR1

CENTER_NODE: 47244640475
FRAGMENT_COUNT: 2
  ORIGINAL[0]: cur_alloc_len < wanted_alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: while (cur_alloc_len < wanted_alloc_len)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( VAR1 < VAR2 )

CENTER_NODE: 30064771736
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *s = ((struct _ep_stack_frame_t *)(ep_alloc0(sizeof(struct _ep_stack_frame_t ))))
  TYPE[0]: CALL
  TOKENIZED[0]: *s = ( ( struct VAR1 * ) ( FUN1 ( sizeof ( struct VAR1 ) ) ) )
  ORIGINAL[1]: *s
  TYPE[1]: CALL
  TOKENIZED[1]: *s
  ORIGINAL[2]: (struct _ep_stack_frame_t *)(ep_alloc0(sizeof(struct _ep_stack_frame_t )))
  TYPE[2]: CALL
  TOKENIZED[2]: ( struct VAR1 * ) ( FUN1 ( sizeof ( struct VAR1 ) ) )
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477263
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mem_chunk -> chunk_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: chunk_list
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: chunk_list
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: mem_chunk
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477079
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476927
FRAGMENT_COUNT: 7
  ORIGINAL[0]: npc -> amount_free
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: npc -> amount_free_init
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: npc -> free_offset
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: npc -> free_offset_init
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: free_offset_init
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: npc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: npc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771563
FRAGMENT_COUNT: 3
  ORIGINAL[0]: __builtin_va_end(ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477077
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477662
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tree_list = ((parent_tree -> malloc)(sizeof(emem_tree_t )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( VAR2 -> VAR3 ) ( sizeof ( VAR4 ) ) )
  ORIGINAL[1]: tree_list -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: next
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tree_list
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477085
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memcpy(se_alloc(len),src,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR1 )
  ORIGINAL[1]: se_alloc(len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771763
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ( *stack) -> below
  TYPE[0]: CALL
  TOKENIZED[0]: ( *stack ) -> VAR1
  ORIGINAL[1]: *stack = ( *stack) -> below
  TYPE[1]: CALL
  TOKENIZED[1]: *stack = ( *stack ) -> VAR1
  ORIGINAL[2]: *stack
  TYPE[2]: CALL
  TOKENIZED[2]: *stack
  ORIGINAL[3]: ( *stack) -> below
  TYPE[3]: CALL
  TOKENIZED[3]: ( *stack ) -> VAR1
  ORIGINAL[4]: stack
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477796
FRAGMENT_COUNT: 8
  ORIGINAL[0]: aligned[i / 4]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 / 4 ]
  ORIGINAL[1]: aligned[i / 4 - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 / 4 - 1 ]
  ORIGINAL[2]: aligned[divx - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[3]: key[0] . key = aligned
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ] . VAR1 = VAR2
  ORIGINAL[4]: key[0] . key
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 0 ] . VAR1
  ORIGINAL[5]: aligned
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: aligned
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: aligned
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772525
FRAGMENT_COUNT: 12
  ORIGINAL[0]: node -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: emem_tree_foreach_nodes(node -> left,callback,user_data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: node -> left
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: left
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: callback
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: node
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: node
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064772217
FRAGMENT_COUNT: 9
  ORIGINAL[0]: tree_list -> type = type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: tree_list -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: type
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: type
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree_list
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tree_list
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tree_list
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tree_list
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771565
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dst = se_strdup_vprintf(fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: se_strdup_vprintf(fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477103
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 2
  ORIGINAL[0]: node -> parent
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719478061
FRAGMENT_COUNT: 8
  ORIGINAL[0]: strbuf -> alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: full_len < add_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: strbuf -> alloc_len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: alloc_len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: add_len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: strbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772737
FRAGMENT_COUNT: 6
  ORIGINAL[0]: full_len < add_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: add_len - 1 < full_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 1 < VAR2
  ORIGINAL[2]: add_len - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: add_len - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 1
  ORIGINAL[4]: add_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: full_len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771278
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ep_packet_mem . debug_verify_pointers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: emem_verify_pointer((&ep_packet_mem),ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &ep_packet_mem ) , VAR1 )
  ORIGINAL[2]: &ep_packet_mem
  TYPE[2]: CALL
  TOKENIZED[2]: &ep_packet_mem
  ORIGINAL[3]: debug_verify_pointers
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> ep_packet_mem
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> ep_packet_mem
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772073
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !node -> left
  TYPE[0]: CALL
  TOKENIZED[0]: !node -> VAR1
  ORIGINAL[1]: new_node -> u . is_subtree = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 = 0
  ORIGINAL[2]: new_node -> u . is_subtree
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478110
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !strbuf || len >= strbuf -> len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 >= VAR2 -> VAR1
  ORIGINAL[1]: strbuf -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: strbuf -> str[len] = '\\0'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] = '\\0'
  ORIGINAL[3]: strbuf -> len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772482
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ( *__ctype_b_loc())[(int )ch] & ((unsigned short )_ISupper)
  TYPE[0]: CALL
  TOKENIZED[0]: ( *__ctype_b_loc ( ) ) [ ( int ) VAR1 ] & ( ( unsigned short ) VAR2 )
  ORIGINAL[1]: ch = (tolower(ch))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR1 ) )
  ORIGINAL[2]: tolower(ch)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: ch
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ch
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640490
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !strbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf

CENTER_NODE: 68719478163
FRAGMENT_COUNT: 8
  ORIGINAL[0]: stonesoup_data->before
  TYPE[0]: CALL
  TOKENIZED[0]: stonesoup_data->before
  ORIGINAL[1]: stonesoup_data->buffer
  TYPE[1]: CALL
  TOKENIZED[1]: stonesoup_data->buffer
  ORIGINAL[2]: stonesoup_data->after
  TYPE[2]: CALL
  TOKENIZED[2]: stonesoup_data->after
  ORIGINAL[3]: stonesoup_taint_len >= 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 >= 0
  ORIGINAL[4]: stonesoup_data->buffer
  TYPE[4]: CALL
  TOKENIZED[4]: stonesoup_data->buffer
  ORIGINAL[5]: buffer
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_data
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_data
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771462
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_alloc(size,&ep_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &ep_packet_mem )
  ORIGINAL[1]: &ep_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &ep_packet_mem
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478195
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: telergic_rethreaded(decupling_desiderable,foothills_sternwheeler)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: decupling_desiderable
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: foothills_sternwheeler
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771510
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ptr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: mem_chunk -> freed = ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: mem_chunk -> freed
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771903
FRAGMENT_COUNT: 6
  ORIGINAL[0]: node -> right = node -> right -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: node -> right
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: node -> right -> left
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: node -> right
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: node -> right
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: left
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477908
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !emem_tree
  TYPE[0]: CALL
  TOKENIZED[0]: !emem_tree
  ORIGINAL[1]: i < level
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: level
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: level
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477458
FRAGMENT_COUNT: 6
  ORIGINAL[0]: node == parent -> right && parent == grandparent -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 -> VAR3 && VAR2 == VAR4 -> VAR5
  ORIGINAL[1]: node -> left
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: left
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772628
FRAGMENT_COUNT: 4
  ORIGINAL[0]: strbuf = (ep_alloc(sizeof(emem_strbuf_t )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( sizeof ( VAR2 ) ) )
  ORIGINAL[1]: ep_alloc(sizeof(emem_strbuf_t ))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( sizeof ( VAR1 ) )
  ORIGINAL[2]: strbuf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: max_alloc_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771132
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c - 32
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 32
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771528
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640484
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719477081
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ep_alloc(len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !node -> right
  TYPE[0]: CALL
  TOKENIZED[0]: !node -> VAR1
  ORIGINAL[1]: node = node -> right
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 -> VAR2
  ORIGINAL[2]: continue;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: continue ;

CENTER_NODE: 68719476819
FRAGMENT_COUNT: 6
  ORIGINAL[0]: canary[i] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == '\\0'
  ORIGINAL[1]: canary[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: &ptr
  TYPE[2]: CALL
  TOKENIZED[2]: &ptr
  ORIGINAL[3]: canary[i + 1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 + 1 ]
  ORIGINAL[4]: canary
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772626
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !strbuf || wanted_alloc_len <= strbuf -> alloc_len || strbuf -> alloc_len >= strbuf -> max_alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 <= VAR2 -> VAR3 || VAR2 -> VAR3 >= VAR2 -> VAR4
  ORIGINAL[1]: strbuf -> str = new_str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: strbuf -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: new_str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477074
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i < len && src[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 && VAR3 [ VAR1 ]
  ORIGINAL[1]: dst[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: dst[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: dst
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dst
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771080
FRAGMENT_COUNT: 4
  ORIGINAL[0]: * filepath = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: filepath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771275
FRAGMENT_COUNT: 6
  ORIGINAL[0]: emem_verify_pointer_list((hdr -> free_list),ptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 )
  ORIGINAL[1]: hdr -> free_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: free_list
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hdr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771632
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !string1
  TYPE[0]: CALL
  TOKENIZED[0]: !string1
  ORIGINAL[1]: l = 1 + strlen(string1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1 + FUN1 ( VAR2 )
  ORIGINAL[2]: 1 + strlen(string1)
  TYPE[2]: CALL
  TOKENIZED[2]: 1 + FUN1 ( VAR1 )
  ORIGINAL[3]: l
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: args
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477672
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *se_tree = d
  TYPE[0]: CALL
  TOKENIZED[0]: *se_tree = VAR1
  ORIGINAL[1]: se_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: d
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771190
FRAGMENT_COUNT: 8
  ORIGINAL[0]: mem -> debug_use_canary
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: emem_canary_init(mem -> canary)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: mem -> canary
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: debug_use_canary
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: canary
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mem
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: mem
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: mem
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771460
FRAGMENT_COUNT: 5
  ORIGINAL[0]: emem_scrub_memory(buf,size,!0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , !0 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772005
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_parent(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477006
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_alloc(size,&se_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &se_packet_mem )
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> se_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064772307
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !se_tree || !key
  TYPE[0]: CALL
  TOKENIZED[0]: !se_tree || !key
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064772295
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !insert_tree
  TYPE[0]: CALL
  TOKENIZED[0]: !insert_tree
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 68719477043
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ep_alloc(size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772791
FRAGMENT_COUNT: 13
  ORIGINAL[0]: !strbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf
  ORIGINAL[1]: strbuf -> alloc_len < strbuf -> len + 1 + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 < VAR1 -> VAR3 + 1 + 1
  ORIGINAL[2]: strbuf -> alloc_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: strbuf -> len + 1 + 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 + 1 + 1
  ORIGINAL[4]: strbuf -> alloc_len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: alloc_len
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: strbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: strbuf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: strbuf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: strbuf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: strbuf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: strbuf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719477261
FRAGMENT_COUNT: 2
  ORIGINAL[0]: &se_packet_mem
  TYPE[0]: CALL
  TOKENIZED[0]: &se_packet_mem
  ORIGINAL[1]: <global> se_packet_mem
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719477288
FRAGMENT_COUNT: 7
  ORIGINAL[0]: head -> above
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: frame -> below = head
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: frame -> below
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: frame -> above
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: above
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: frame
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: frame
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771867
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_parent(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771303
FRAGMENT_COUNT: 5
  ORIGINAL[0]: offset < size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: *((guint8 *)(buf + offset)) = (scrubbed_value >> 24)
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( VAR1 * ) ( VAR2 + VAR3 ) ) = ( VAR4 >> 24 )
  ORIGINAL[2]: *((guint8 *)(buf + offset))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( ( VAR1 * ) ( VAR2 + VAR3 ) )
  ORIGINAL[3]: scrubbed_value >> 24
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 >> 24
  ORIGINAL[4]: scrubbed_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477740
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < cur_key -> length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: !lookup_tree
  TYPE[1]: CALL
  TOKENIZED[1]: !lookup_tree
  ORIGINAL[2]: lookup_tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: lookup_tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: lookup_tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: lookup_tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: lookup_tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771717
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_free_all(&ep_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &ep_packet_mem )
  ORIGINAL[1]: &ep_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &ep_packet_mem
  ORIGINAL[2]: <global> ep_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719477655
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tree_list -> name = name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: tree_list -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477490
FRAGMENT_COUNT: 6
  ORIGINAL[0]: emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: node -> u
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771516
FRAGMENT_COUNT: 3
  ORIGINAL[0]: memset(sl_alloc(mem_chunk),'\\0',(mem_chunk -> item_size))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , ( VAR1 -> VAR2 ) )
  ORIGINAL[1]: sl_alloc(mem_chunk)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: mem_chunk -> item_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

CENTER_NODE: 30064771515
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memset(se_alloc(size),'\\0',size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , VAR1 )
  ORIGINAL[1]: se_alloc(size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771272
FRAGMENT_COUNT: 2
  ORIGINAL[0]: cptr >= (chunk -> buf + chunk -> free_offset_init) && cptr < (chunk -> buf + chunk -> free_offset)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= ( VAR2 -> VAR3 + VAR2 -> VAR4 ) && VAR1 < ( VAR2 -> VAR3 + VAR2 -> VAR5 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0

CENTER_NODE: 47244640322
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771326
FRAGMENT_COUNT: 3
  ORIGINAL[0]: npc -> next = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: npc -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 68719477148
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tokens <= ((guint )max_tokens) && (s = strstr(s,sep))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= ( ( VAR2 ) VAR3 ) && ( VAR4 = FUN1 ( VAR4 , VAR5 ) )
  ORIGINAL[1]: s += sep_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += VAR2
  ORIGINAL[2]: sep_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sep_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477881
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !emem_tree -> tree
  TYPE[0]: CALL
  TOKENIZED[0]: !emem_tree -> VAR1
  ORIGINAL[1]: emem_tree_foreach_nodes(emem_tree -> tree,callback,user_data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: callback
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: user_data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772596
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_print_subtree(emem_tree,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: emem_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771396
FRAGMENT_COUNT: 10
  ORIGINAL[0]: asize > (mem -> free_list -> amount_free)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > ( VAR2 -> VAR3 -> VAR4 )
  ORIGINAL[1]: mem -> used_list = npc
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: mem -> used_list
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: used_list
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mem
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: npc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: mem
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: mem
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: mem
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: mem
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477337
FRAGMENT_COUNT: 10
  ORIGINAL[0]: key < node -> key32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: key > node -> key32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > VAR2 -> VAR3
  ORIGINAL[2]: node -> key32
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: key
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: key
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: node
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: key
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: key
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: key
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640323
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719477980
FRAGMENT_COUNT: 7
  ORIGINAL[0]: strbuf -> str
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: full_len < strbuf -> alloc_len - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2 -> VAR3 - 1
  ORIGINAL[2]: strbuf -> alloc_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: strbuf -> alloc_len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: alloc_len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771073
FRAGMENT_COUNT: 3
  ORIGINAL[0]: canary[8 * 2 - 1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 8 * 2 - 1 ]
  ORIGINAL[1]: 8 * 2 - 1
  TYPE[1]: CALL
  TOKENIZED[1]: 8 * 2 - 1
  ORIGINAL[2]: 8 * 2
  TYPE[2]: CALL
  TOKENIZED[2]: 8 * 2

CENTER_NODE: 68719477302
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tree_list -> next = se_packet_mem . trees
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3 . VAR4
  ORIGINAL[1]: tree_list -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tree_list -> type
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: type
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tree_list
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree_list
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477057
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !src
  TYPE[0]: CALL
  TOKENIZED[0]: !src
  ORIGINAL[1]: len + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771949
FRAGMENT_COUNT: 3
  ORIGINAL[0]: parent -> u . rb_color = 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 = 1
  ORIGINAL[1]: parent -> u . rb_color
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: grandparent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476835
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pad < 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 8
  ORIGINAL[1]: pad += 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += 8
  ORIGINAL[2]: pad
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pad
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pad
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

