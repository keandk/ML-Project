# Tokenized code fragments for 153312-v1.0.0-bad
# Total center nodes processed: 59
# Total code fragments found: 245

CENTER_NODE: 30064771915
FRAGMENT_COUNT: 7
  ORIGINAL[0]: cfg -> tmp_key
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: !cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: !cfg -> VAR1
  ORIGINAL[2]: cfg -> tmp_key -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: cfg -> tmp_key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tmp_key
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: data
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477377
FRAGMENT_COUNT: 5
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: ++count
  TYPE[1]: CALL
  TOKENIZED[1]: ++count
  ORIGINAL[2]: &temp_value
  TYPE[2]: CALL
  TOKENIZED[2]: &temp_value
  ORIGINAL[3]: temp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: temp_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771257
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *cfg = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg = ( ( void * ) 0 )
  ORIGINAL[1]: *cfg
  TYPE[1]: CALL
  TOKENIZED[1]: *cfg
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477005
FRAGMENT_COUNT: 6
  ORIGINAL[0]: &merge_cfg
  TYPE[0]: CALL
  TOKENIZED[0]: &merge_cfg
  ORIGINAL[1]: merge_cfg -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: merge_cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: merge_cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: merge_cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477539
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ( *end_pos) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *end_pos ) != 0
  ORIGINAL[1]: svn_error_createf(SVN_ERR_BAD_CONFIG_VALUE,((void *)0),(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: SVN_ERR_BAD_CONFIG_VALUE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tmp_value
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476994
FRAGMENT_COUNT: 6
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(opt_ndx,((void *)0),((void *)0),&opt_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , &opt_ptr )
  ORIGINAL[2]: opt = opt_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2
  ORIGINAL[3]: opt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: opt_ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: opt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771832
FRAGMENT_COUNT: 6
  ORIGINAL[0]: sectidx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: destsec = svn_config_addsection( *cfgp,srcsect -> name)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( *cfgp , VAR2 -> VAR3 )
  ORIGINAL[2]: svn_config_addsection( *cfgp,srcsect -> name)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( *cfgp , VAR1 -> VAR2 )
  ORIGINAL[3]: *cfgp
  TYPE[3]: CALL
  TOKENIZED[3]: *cfgp
  ORIGINAL[4]: srcsect -> name
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: destsec
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476766
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[3]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477168
FRAGMENT_COUNT: 7
  ORIGINAL[0]: o -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: apr_pstrdup(pool,option)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 5
  ORIGINAL[0]: err == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: *cfgp = cfg
  TYPE[1]: CALL
  TOKENIZED[1]: *cfgp = VAR1
  ORIGINAL[2]: *cfgp
  TYPE[2]: CALL
  TOKENIZED[2]: *cfgp
  ORIGINAL[3]: cfgp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640359
FRAGMENT_COUNT: 1
  ORIGINAL[0]: tmp_value
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771240
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *svn_err__temp = svn_config_merge( *cfgp,usr_file_path,0)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( *cfgp , VAR1 , 0 )
  ORIGINAL[1]: svn_config_merge( *cfgp,usr_file_path,0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( *cfgp , VAR1 , 0 )
  ORIGINAL[2]: red_config
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771794
FRAGMENT_COUNT: 7
  ORIGINAL[0]: gb . pool = pool
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = VAR2
  ORIGINAL[1]: gb . pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: pool
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: gb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: gb
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: gb
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477294
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tmp_value && 0 == svn_cstring_casecmp(tmp_value,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && 0 == FUN1 ( VAR1 , \
  ORIGINAL[1]: get_bool(&bool_val,tmp_value,0,section,option)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &bool_val , VAR1 , 0 , VAR2 , VAR3 )
  ORIGINAL[2]: option
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477558
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477139
FRAGMENT_COUNT: 5
  ORIGINAL[0]: name_end != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: parse_from = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: parse_from
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: parse_from
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477022
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !cfg -> x_values
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: cfg -> x_values
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: cfg -> x_pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: x_pool
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771334
FRAGMENT_COUNT: 5
  ORIGINAL[0]: option -> expanded && option -> x_value != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3 != ( ( void * ) 0 )
  ORIGINAL[1]: option -> x_value = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: option -> x_value
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 7
  ORIGINAL[0]: sscanf(stonesoup_envKey, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: &stonesoup_key
  TYPE[1]: CALL
  TOKENIZED[1]: &stonesoup_key
  ORIGINAL[2]: shmget(stonesoup_key, stonesoup_shmsz, 0666)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , 0666 )
  ORIGINAL[3]: stonesoup_key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_shmid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_key
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_shmsz
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771275
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *cfg_hash = apr_hash_make(pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg_hash = FUN1 ( VAR1 )
  ORIGINAL[1]: *cfg_hash
  TYPE[1]: CALL
  TOKENIZED[1]: *cfg_hash
  ORIGINAL[2]: apr_hash_make(pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640388
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640369
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477437
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_get(cfg,&retval,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &retval , \
  ORIGINAL[1]: option_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477249
FRAGMENT_COUNT: 8
  ORIGINAL[0]: svn_error_createf(SVN_ERR_BAD_CONFIG_VALUE,((void *)0),(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: dgettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: SVN_ERR_BAD_CONFIG_VALUE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: input
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: section
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: option
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477515
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cidx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(cidx,&ckey,&ckeyLength,&cval)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &ckey , &ckeyLength , &cval )
  ORIGINAL[2]: srcconfig = cval
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2
  ORIGINAL[3]: srcconfig
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cval
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: srcconfig
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771787
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_cstring_match_glob_list(b -> key,list)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771318
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_set(baton,section -> name,option -> name,option -> value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR4 -> VAR3 , VAR4 -> VAR5 )
  ORIGINAL[1]: section -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 4
  ORIGINAL[0]: sec_ndx = apr_hash_first(subpool,cfg -> sections)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 )
  ORIGINAL[1]: sec_ndx != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[2]: sec_ndx = apr_hash_next(sec_ndx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[3]: for (sec_ndx = apr_hash_first(subpool,cfg -> sections);sec_ndx != ((void *)0);sec_ndx = apr_hash_next(sec_ndx))
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 ) ; VAR1 != ( ( void * ) 0 ) ; VAR1 = FUN2 ( VAR1 ) )

CENTER_NODE: 68719477036
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: make_hash_key(cfg -> tmp_key -> data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 -> VAR3 )
  ORIGINAL[2]: sec_ptr = apr_hash_get(cfg -> sections,(cfg -> tmp_key -> data),(cfg -> tmp_key -> len))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 -> VAR3 , ( VAR2 -> VAR4 -> VAR5 ) , ( VAR2 -> VAR4 -> VAR6 ) )
  ORIGINAL[3]: apr_hash_get(cfg -> sections,(cfg -> tmp_key -> data),(cfg -> tmp_key -> len))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , ( VAR1 -> VAR3 -> VAR4 ) , ( VAR1 -> VAR3 -> VAR5 ) )
  ORIGINAL[4]: sec_ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: sec_ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: sec_ptr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477356
FRAGMENT_COUNT: 7
  ORIGINAL[0]: sec_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: callback(sec -> name,baton,iteration_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: sec -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: iteration_pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: iteration_pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: iteration_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477620
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stonesoup_input_string != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: tracepoint(stonesoup_trace, weakness_end)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_trace
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_trace
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: weakness_end
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477543
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: server_group
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: server_group
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477279
FRAGMENT_COUNT: 3
  ORIGINAL[0]: apr_psprintf(cfg -> pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , \
  ORIGINAL[1]: cfg -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771416
FRAGMENT_COUNT: 8
  ORIGINAL[0]: opt -> value && strchr(opt -> value,37)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && FUN1 ( VAR1 -> VAR2 , 37 )
  ORIGINAL[1]: expand_option_value(cfg,section,opt -> value,&opt -> x_value,tmp_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 -> VAR4 , &opt -> VAR5 , VAR6 )
  ORIGINAL[2]: opt -> value
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &opt -> x_value
  TYPE[3]: CALL
  TOKENIZED[3]: &opt -> VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: section
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: opt
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477298
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *valuep
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep
  ORIGINAL[1]: bool_val?\
  TYPE[1]: CALL
  TOKENIZED[1]: bool_val?\
  ORIGINAL[2]: bool_val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771751
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sec == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: sec
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477319
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bool_val?svn_tristate_true : svn_tristate_false
  TYPE[0]: CALL
  TOKENIZED[0]: bool_val?svn_tristate_true : VAR1
  ORIGINAL[1]: bool_val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_tristate_true
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477260
FRAGMENT_COUNT: 5
  ORIGINAL[0]: get_bool(valuep,tmp_value,default_value,section,option)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: section
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477223
FRAGMENT_COUNT: 6
  ORIGINAL[0]: opt != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: svn_config_create_option(&opt,option,value,cfg -> option_names_case_sensitive,cfg -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &opt , VAR1 , VAR2 , VAR3 -> VAR4 , VAR3 -> VAR5 )
  ORIGINAL[2]: &opt
  TYPE[2]: CALL
  TOKENIZED[2]: &opt
  ORIGINAL[3]: option
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: value
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771353
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ( *p) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 0
  ORIGINAL[1]: *p
  TYPE[1]: CALL
  TOKENIZED[1]: *p
  ORIGINAL[2]: *p = ((char )(tolower(((unsigned char )( *p)))))
  TYPE[2]: CALL
  TOKENIZED[2]: *p = ( ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) ) )
  ORIGINAL[3]: *p
  TYPE[3]: CALL
  TOKENIZED[3]: *p
  ORIGINAL[4]: (char )(tolower(((unsigned char )( *p))))
  TYPE[4]: CALL
  TOKENIZED[4]: ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) )
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: p
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: p
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477303
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_config_get(cfg,&tmp_value,section,option,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &tmp_value , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: &tmp_value
  TYPE[1]: CALL
  TOKENIZED[1]: &tmp_value
  ORIGINAL[2]: !tmp_value
  TYPE[2]: CALL
  TOKENIZED[2]: !tmp_value
  ORIGINAL[3]: tmp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tmp_value
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476826
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *cfg
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg
  ORIGINAL[1]: cfg -> sections = apr_hash_make(result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = FUN1 ( VAR3 )
  ORIGINAL[2]: cfg -> sections
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cfg -> pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pool
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771572
FRAGMENT_COUNT: 8
  ORIGINAL[0]: default_value && strchr(default_value,37)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && FUN1 ( VAR1 , 37 )
  ORIGINAL[1]: expand_option_value(cfg,sec,default_value,&x_default,tmp_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , &x_default , VAR4 )
  ORIGINAL[2]: &x_default
  TYPE[2]: CALL
  TOKENIZED[2]: &x_default
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sec
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: default_value
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: x_default
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477677
FRAGMENT_COUNT: 11
  ORIGINAL[0]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[1]: strcpy(shm, str)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: out_file = fopen(out_filename, \
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[3]: fopen(out_filename, \
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , \
  ORIGINAL[4]: fprintf(stdout, \
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , \
  ORIGINAL[5]: out_filename
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: out_file
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: out_filename
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stdout
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: shmid
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: stderr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640301
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477265
FRAGMENT_COUNT: 3
  ORIGINAL[0]: value?\
  TYPE[0]: CALL
  TOKENIZED[0]: value?\
  ORIGINAL[1]: option
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477158
FRAGMENT_COUNT: 9
  ORIGINAL[0]: s -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: hash_key = s -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 -> VAR3
  ORIGINAL[3]: s -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: hash_key = (make_hash_key(apr_pstrdup(cfg -> pool,section)))
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = ( FUN1 ( FUN2 ( VAR2 -> VAR3 , VAR4 ) ) )
  ORIGINAL[5]: s -> options
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: options
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

