# Tokenized code fragments for 152838-v1.0.0-bad
# Total center nodes processed: 59
# Total code fragments found: 283

CENTER_NODE: 47244640327
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477233
FRAGMENT_COUNT: 7
  ORIGINAL[0]: x_opt != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: parse_from = name_end + (sizeof(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 + ( sizeof ( \
  ORIGINAL[2]: copy_from = parse_from
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2
  ORIGINAL[3]: copy_from
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: copy_from
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: parse_from
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: copy_from
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477085
FRAGMENT_COUNT: 7
  ORIGINAL[0]: sec_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_first(pool,sec -> options)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 )
  ORIGINAL[2]: sec -> options
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: opt_ndx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: sec
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477527
FRAGMENT_COUNT: 4
  ORIGINAL[0]: gb . pool = pool
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = VAR2
  ORIGINAL[1]: gb . pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477121
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !cfg -> x_values
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: cfg -> x_values
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: for_each_option(cfg,((void *)0),cfg -> x_pool,rmex_callback)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( ( void * ) 0 ) , VAR1 -> VAR2 , VAR3 )
  ORIGINAL[3]: cfg -> x_pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cfg -> x_pool
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: x_pool
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cfg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640336
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771364
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *svn_err__temp = svn_config_merge( *cfgp,usr_file_path,0)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( *cfgp , VAR1 , 0 )
  ORIGINAL[1]: svn_config_merge( *cfgp,usr_file_path,0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( *cfgp , VAR1 , 0 )
  ORIGINAL[2]: red_config
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640412
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476812
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *stonesoup_tainted_buff != 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_tainted_buff != 0
  ORIGINAL[1]: *stonesoup_tainted_buff
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_tainted_buff
  ORIGINAL[2]: *stonesoup_tainted_buff
  TYPE[2]: CALL
  TOKENIZED[2]: *stonesoup_tainted_buff
  ORIGINAL[3]: stonesoup_result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_tainted_buff
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477361
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_set(cfg,section,option,(value?\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( value?\
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771720
FRAGMENT_COUNT: 7
  ORIGINAL[0]: opt != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: svn_config_create_option(&opt,option,value,cfg -> option_names_case_sensitive,cfg -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &opt , VAR1 , VAR2 , VAR3 -> VAR4 , VAR3 -> VAR5 )
  ORIGINAL[2]: cfg -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pool
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771770
FRAGMENT_COUNT: 16
  ORIGINAL[0]: tmp_value && 0 == svn_cstring_casecmp(tmp_value,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && 0 == FUN1 ( VAR1 , \
  ORIGINAL[1]: 0 == svn_cstring_casecmp(tmp_value,\
  TYPE[1]: CALL
  TOKENIZED[1]: 0 == FUN1 ( VAR1 , \
  ORIGINAL[2]: *valuep = \
  TYPE[2]: CALL
  TOKENIZED[2]: *valuep = \
  ORIGINAL[3]: *valuep
  TYPE[3]: CALL
  TOKENIZED[3]: *valuep
  ORIGINAL[4]: *svn_err__temp = get_bool(&bool_val,tmp_value,0,section,option)
  TYPE[4]: CALL
  TOKENIZED[4]: *svn_err__temp = FUN1 ( &bool_val , VAR1 , 0 , VAR2 , VAR3 )
  ORIGINAL[5]: get_bool(&bool_val,tmp_value,0,section,option)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( &bool_val , VAR1 , 0 , VAR2 , VAR3 )
  ORIGINAL[6]: &bool_val
  TYPE[6]: CALL
  TOKENIZED[6]: &bool_val
  ORIGINAL[7]: if (tmp_value && 0 == svn_cstring_casecmp(tmp_value,\
  TYPE[7]: CONTROL_STRUCTURE
  TOKENIZED[7]: if ( VAR1 && 0 == FUN1 ( VAR1 , \
  ORIGINAL[8]: tmp_value
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: valuep
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: svn_err__temp
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: bool_val
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: tmp_value
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: section
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: option
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: svn_err__temp
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477169
FRAGMENT_COUNT: 7
  ORIGINAL[0]: opt -> expanded
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: opt -> value && strchr(opt -> value,37)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 && FUN1 ( VAR1 -> VAR2 , 37 )
  ORIGINAL[2]: opt -> value
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: opt -> value
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: value
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: section
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477358
FRAGMENT_COUNT: 5
  ORIGINAL[0]: get_bool(valuep,tmp_value,default_value,section,option)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: section
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477602
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *cfg_hash
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg_hash
  ORIGINAL[1]: apr_hash_make(pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771244
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cfg -> x_pool = svn_pool_create_ex(result_pool,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = FUN1 ( VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: cfg -> x_pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: svn_pool_create_ex(result_pool,((void *)0))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: result_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771793
FRAGMENT_COUNT: 5
  ORIGINAL[0]: 0 == svn_cstring_casecmp(tmp_value,unknown_value)
  TYPE[0]: CALL
  TOKENIZED[0]: 0 == FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: get_bool(&bool_val,tmp_value,0,section,option)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &bool_val , VAR1 , 0 , VAR2 , VAR3 )
  ORIGINAL[2]: &bool_val
  TYPE[2]: CALL
  TOKENIZED[2]: &bool_val
  ORIGINAL[3]: bool_val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771735
FRAGMENT_COUNT: 10
  ORIGINAL[0]: value == svn_tristate_true
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: value == svn_tristate_false
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == VAR2
  ORIGINAL[2]: *boolp = 0
  TYPE[2]: CALL
  TOKENIZED[2]: *boolp = 0
  ORIGINAL[3]: *boolp
  TYPE[3]: CALL
  TOKENIZED[3]: *boolp
  ORIGINAL[4]: input == ((void *)0)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[5]: (void *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) 0
  ORIGINAL[6]: value
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: svn_tristate_false
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: boolp
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: input
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477650
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stringbuf_set(cfg -> tmp_key,section)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: cfg -> tmp_key
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cfg -> section_names_case_sensitive
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: section_names_case_sensitive
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477470
FRAGMENT_COUNT: 8
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(opt_ndx,((void *)0),((void *)0),&opt_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , &opt_ptr )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: &opt_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: &opt_ptr
  ORIGINAL[5]: opt_ndx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt_ndx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: opt_ndx
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640256
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2

CENTER_NODE: 30064771762
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_set(cfg,section,option,(apr_psprintf(cfg -> pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( FUN2 ( VAR1 -> VAR4 , \
  ORIGINAL[1]: apr_psprintf(cfg -> pool,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , \
  ORIGINAL[2]: cfg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477249
FRAGMENT_COUNT: 4
  ORIGINAL[0]: apr_pstrdup(cfg -> pool,section)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: cfg -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771957
FRAGMENT_COUNT: 12
  ORIGINAL[0]: *cfgp
  TYPE[0]: CALL
  TOKENIZED[0]: *cfgp
  ORIGINAL[1]: ( *cfgp) -> x_values
  TYPE[1]: CALL
  TOKENIZED[1]: ( *cfgp ) -> VAR1
  ORIGINAL[2]: ( *cfgp) -> section_names_case_sensitive
  TYPE[2]: CALL
  TOKENIZED[2]: ( *cfgp ) -> VAR1
  ORIGINAL[3]: ( *cfgp) -> option_names_case_sensitive
  TYPE[3]: CALL
  TOKENIZED[3]: ( *cfgp ) -> VAR1
  ORIGINAL[4]: sectidx != ((void *)0)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[5]: svn_config_addsection( *cfgp,srcsect -> name)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( *cfgp , VAR1 -> VAR2 )
  ORIGINAL[6]: *cfgp
  TYPE[6]: CALL
  TOKENIZED[6]: *cfgp
  ORIGINAL[7]: ( *cfgp) -> option_names_case_sensitive
  TYPE[7]: CALL
  TOKENIZED[7]: ( *cfgp ) -> VAR1
  ORIGINAL[8]: *cfgp
  TYPE[8]: CALL
  TOKENIZED[8]: *cfgp
  ORIGINAL[9]: cfgp
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: srcsect
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: cfgp
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477136
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cfg -> tmp_key
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cfg -> sections
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cfg -> tmp_key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tmp_key
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477098
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_config_set(baton,section -> name,option -> name,option -> value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR4 -> VAR3 , VAR4 -> VAR5 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771810
FRAGMENT_COUNT: 6
  ORIGINAL[0]: sec_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(sec_ndx,((void *)0),((void *)0),&sec_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , &sec_ptr )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: &sec_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: &sec_ptr
  ORIGINAL[5]: sec_ndx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640399
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !callback(sec -> name,baton,iteration_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: !callback ( VAR1 -> VAR2 , VAR3 , VAR4 )

CENTER_NODE: 30064771473
FRAGMENT_COUNT: 15
  ORIGINAL[0]: ( *p) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 0
  ORIGINAL[1]: *p
  TYPE[1]: CALL
  TOKENIZED[1]: *p
  ORIGINAL[2]: ++p
  TYPE[2]: CALL
  TOKENIZED[2]: ++p
  ORIGINAL[3]: *p = ((char )(tolower(((unsigned char )( *p)))))
  TYPE[3]: CALL
  TOKENIZED[3]: *p = ( ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) ) )
  ORIGINAL[4]: *p
  TYPE[4]: CALL
  TOKENIZED[4]: *p
  ORIGINAL[5]: (char )(tolower(((unsigned char )( *p))))
  TYPE[5]: CALL
  TOKENIZED[5]: ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) )
  ORIGINAL[6]: tolower(((unsigned char )( *p)))
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( ( ( unsigned char ) ( *p ) ) )
  ORIGINAL[7]: (unsigned char )( *p)
  TYPE[7]: CALL
  TOKENIZED[7]: ( unsigned char ) ( *p )
  ORIGINAL[8]: *p
  TYPE[8]: CALL
  TOKENIZED[8]: *p
  ORIGINAL[9]: for (p = key;( *p) != 0;++p)
  TYPE[9]: CONTROL_STRUCTURE
  TOKENIZED[9]: for ( VAR1 = VAR2 ; ( *p ) != 0 ; ++p )
  ORIGINAL[10]: p
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: p
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: p
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: p
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: key
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 47244640297
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771795
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *valuep = ((bool_val?svn_tristate_true : svn_tristate_false))
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = ( ( bool_val?svn_tristate_true : VAR1 ) )
  ORIGINAL[1]: *valuep
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep
  ORIGINAL[2]: bool_val?svn_tristate_true : svn_tristate_false
  TYPE[2]: CALL
  TOKENIZED[2]: bool_val?svn_tristate_true : VAR1
  ORIGINAL[3]: valuep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bool_val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477107
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cfg -> option_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: option_names_case_sensitive
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771454
FRAGMENT_COUNT: 11
  ORIGINAL[0]: option -> expanded && option -> x_value != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3 != ( ( void * ) 0 )
  ORIGINAL[1]: option -> expanded
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: option -> x_value != ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[3]: option -> x_value
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: expanded
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: x_value
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: option
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: option
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: option
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: option
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772024
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tmp_value == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: ( *end_pos) != 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( *end_pos ) != 0
  ORIGINAL[2]: *end_pos
  TYPE[2]: CALL
  TOKENIZED[2]: *end_pos
  ORIGINAL[3]: svn_error_createf(SVN_ERR_BAD_CONFIG_VALUE,((void *)0),(dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: dgettext(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: SVN_ERR_BAD_CONFIG_VALUE
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tmp_value
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771681
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *valuep = default_value
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = VAR1
  ORIGINAL[1]: *valuep
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477518
FRAGMENT_COUNT: 5
  ORIGINAL[0]: list = svn_cstring_split(value,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: b -> key
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: key
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771407
FRAGMENT_COUNT: 6
  ORIGINAL[0]: apr_hash_set( *cfg_hash,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( *cfg_hash , \
  ORIGINAL[1]: *cfg_hash
  TYPE[1]: CALL
  TOKENIZED[1]: *cfg_hash
  ORIGINAL[2]: sizeof(\
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( \
  ORIGINAL[3]: sizeof(\
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( \
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771323
FRAGMENT_COUNT: 5
  ORIGINAL[0]: isValid(gasperi_machiavellians) == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) == 1
  ORIGINAL[1]: stonesoup_fpipe = popen(stonesoup_command_buffer,\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: popen(stonesoup_command_buffer,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: stonesoup_fpipe
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_command_buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772048
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: nhg_droiturel
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771174
FRAGMENT_COUNT: 8
  ORIGINAL[0]: *src == '%'
  TYPE[0]: CALL
  TOKENIZED[0]: *src == '%'
  ORIGINAL[1]: a = src[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 [ 1 ]
  ORIGINAL[2]: src[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ]
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: src
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: src
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: src
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477512
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sec == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: apr_pool_destroy(iteration_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: count
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: count
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: count
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771779
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *valuep = ((bool_val?\
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = ( ( bool_val?\
  ORIGINAL[1]: *valuep
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep
  ORIGINAL[2]: bool_val?\
  TYPE[2]: CALL
  TOKENIZED[2]: bool_val?\
  ORIGINAL[3]: valuep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bool_val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771924
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_config_get(cfg,&retval,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &retval , \
  ORIGINAL[1]: &retval
  TYPE[1]: CALL
  TOKENIZED[1]: &retval
  ORIGINAL[2]: &retval
  TYPE[2]: CALL
  TOKENIZED[2]: &retval
  ORIGINAL[3]: retval
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: retval
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: retval
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: retval
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477371
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *valuep
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep
  ORIGINAL[1]: tmp_value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: valuep
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 4
  ORIGINAL[0]: o = (apr_palloc(pool,sizeof(cfg_option_t )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , sizeof ( VAR3 ) ) )
  ORIGINAL[1]: apr_palloc(pool,sizeof(cfg_option_t ))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( VAR2 ) )
  ORIGINAL[2]: o
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: o
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 13
  ORIGINAL[0]: src[i-1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ i-1 ]
  ORIGINAL[1]: src[i-1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ i-1 ]
  ORIGINAL[2]: i == 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0
  ORIGINAL[3]: src[i-1] != '\\\\'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ i-1 ] != '\\\\'
  ORIGINAL[4]: src[i-1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ i-1 ]
  ORIGINAL[5]: i-1
  TYPE[5]: CALL
  TOKENIZED[5]: i-1
  ORIGINAL[6]: src
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: src
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: src
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: src
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: src
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: src
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: src
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719477641
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: server_group
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: server_group
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476972
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_pool_create_ex(result_pool,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: scratch_pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result_pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477038
FRAGMENT_COUNT: 12
  ORIGINAL[0]: err && err -> apr_err == SVN_ERR_BAD_FILENAME
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 == VAR3
  ORIGINAL[1]: *svn_err__temp = svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: &usr_cfg_path
  TYPE[3]: CALL
  TOKENIZED[3]: &usr_cfg_path
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: svn_err__temp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: usr_cfg_path
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: config_dir
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: category
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pool
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: svn_err__temp
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

