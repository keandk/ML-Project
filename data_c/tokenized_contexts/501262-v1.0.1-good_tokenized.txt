# Tokenized code fragments for 501262-v1.0.1-good
# Total center nodes processed: 38
# Total code fragments found: 186

CENTER_NODE: 30064775019
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CATCH(OutOfMemoryError)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: OutOfMemoryError
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: RETHROW
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064775373
FRAGMENT_COUNT: 4
  ORIGINAL[0]: info->selector_type = get_dissector_table_selector_type(info->table_name)
  TYPE[0]: CALL
  TOKENIZED[0]: info->selector_type = FUN1 ( info->table_name )
  ORIGINAL[1]: info->selector_type
  TYPE[1]: CALL
  TOKENIZED[1]: info->selector_type
  ORIGINAL[2]: get_dissector_table_selector_type(info->table_name)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( info->table_name )
  ORIGINAL[3]: info->table_name
  TYPE[3]: CALL
  TOKENIZED[3]: info->table_name

CENTER_NODE: 30064774764
FRAGMENT_COUNT: 1
  ORIGINAL[0]: <global> final_registration_routines
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: <global> VAR1

CENTER_NODE: 30064775449
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (*info->caller_func)((gchar*)key, table->ui_name, info->caller_data)
  TYPE[0]: CALL
  TOKENIZED[0]: ( *info->caller_func ) ( ( gchar* ) VAR1 , table->ui_name , info->caller_data )
  ORIGINAL[1]: (gchar*)key
  TYPE[1]: CALL
  TOKENIZED[1]: ( gchar* ) VAR1
  ORIGINAL[2]: table->ui_name
  TYPE[2]: CALL
  TOKENIZED[2]: table->ui_name
  ORIGINAL[3]: info->caller_data
  TYPE[3]: CALL
  TOKENIZED[3]: info->caller_data
  ORIGINAL[4]: ui_name
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: table
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: table
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: info
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719481022
FRAGMENT_COUNT: 2
  ORIGINAL[0]: sub_dissectors->type
  TYPE[0]: CALL
  TOKENIZED[0]: sub_dissectors->type
  ORIGINAL[1]: FT_UINT16
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719481361
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sub_dissectors = find_dissector_table( name)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: sub_dissectors->type
  TYPE[1]: CALL
  TOKENIZED[1]: sub_dissectors->type
  ORIGINAL[2]: type
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sub_dissectors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sub_dissectors
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064775391
FRAGMENT_COUNT: 9
  ORIGINAL[0]: info.selector_type = sub_dissectors->type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = sub_dissectors->type
  ORIGINAL[1]: info.selector_type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: sub_dissectors->type
  TYPE[2]: CALL
  TOKENIZED[2]: sub_dissectors->type
  ORIGINAL[3]: selector_type
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: info
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: sub_dissectors
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: info
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: info
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: info
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064773608
FRAGMENT_COUNT: 3
  ORIGINAL[0]: &ett_nodeinfo_subject4
  TYPE[0]: CALL
  TOKENIZED[0]: &ett_nodeinfo_subject4
  ORIGINAL[1]: <global> ett_nodeinfo_subject4
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: <global> ett_nodeinfo_subject6
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719479796
FRAGMENT_COUNT: 5
  ORIGINAL[0]: { \
  TYPE[0]: CALL
  TOKENIZED[0]: { \
  ORIGINAL[1]: NULL
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: BASE_DEC
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476741
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tvb_new_subset(tvb, offset, -1, -1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , -1 , -1 )
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1
  ORIGINAL[3]: next_tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tvb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tvb
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719480989
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CATCH(OutOfMemoryError)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: RETHROW
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064774741
FRAGMENT_COUNT: 1
  ORIGINAL[0]: init_dissection()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )

CENTER_NODE: 30064774187
FRAGMENT_COUNT: 2
  ORIGINAL[0]: register_ber_oid_syntax(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: NULL
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772664
FRAGMENT_COUNT: 3
  ORIGINAL[0]: offset += 16
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 += 16
  ORIGINAL[1]: count
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064775485
FRAGMENT_COUNT: 4
  ORIGINAL[0]: sub_dissectors = find_dissector_table( name)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: find_dissector_table( name)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: sub_dissectors
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771840
FRAGMENT_COUNT: 10
  ORIGINAL[0]: i < 32 - off
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 32 - VAR2
  ORIGINAL[1]: 32 - off
  TYPE[1]: CALL
  TOKENIZED[1]: 32 - VAR1
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: (v & (0x01 << i)) == 0
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 & ( 0x01 << VAR2 ) ) == 0
  ORIGINAL[4]: v & (0x01 << i)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 & ( 0x01 << VAR2 )
  ORIGINAL[5]: break;
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: break ;
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: off
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719480710
FRAGMENT_COUNT: 4
  ORIGINAL[0]: src->tvb = tvb
  TYPE[0]: CALL
  TOKENIZED[0]: src->tvb = VAR1
  ORIGINAL[1]: src->tvb
  TYPE[1]: CALL
  TOKENIZED[1]: src->tvb
  ORIGINAL[2]: tvb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719480847
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CATCH(BoundsError)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: BoundsError
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719481296
FRAGMENT_COUNT: 4
  ORIGINAL[0]: sub_dissectors = find_dissector_table( name)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: info.table_name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: table_name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: info
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719479543
FRAGMENT_COUNT: 1
  ORIGINAL[0]: <global> algorithm_id
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: <global> VAR1

CENTER_NODE: 30064774743
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (gpointer)func
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) VAR2
  ORIGINAL[1]: <global> postseq_cleanup_routines
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: <global> postseq_cleanup_routines
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064775116
FRAGMENT_COUNT: 4
  ORIGINAL[0]: saved_proto = pinfo->current_proto
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = pinfo->current_proto
  ORIGINAL[1]: pinfo->current_proto
  TYPE[1]: CALL
  TOKENIZED[1]: pinfo->current_proto
  ORIGINAL[2]: saved_proto
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: saved_can_desegment
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064775333
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dtbl_entry->current
  TYPE[0]: CALL
  TOKENIZED[0]: dtbl_entry->current
  ORIGINAL[1]: current
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dtbl_entry
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719481014
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sub_dissectors->type
  TYPE[0]: CALL
  TOKENIZED[0]: sub_dissectors->type
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;
  ORIGINAL[2]: FT_UINT32
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064774732
FRAGMENT_COUNT: 4
  ORIGINAL[0]: g_slist_append(init_routines, (gpointer)func)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( VAR2 ) VAR3 )
  ORIGINAL[1]: (gpointer)func
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: <global> init_routines
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: func
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719481116
FRAGMENT_COUNT: 7
  ORIGINAL[0]: sub_dissectors = find_dissector_table( name)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: g_assert( sub_dissectors)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: sub_dissectors->hash_table
  TYPE[2]: CALL
  TOKENIZED[2]: sub_dissectors->hash_table
  ORIGINAL[3]: sub_dissectors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sub_dissectors
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: sub_dissectors
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: sub_dissectors
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719481213
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dtbl_entry->initial
  TYPE[0]: CALL
  TOKENIZED[0]: dtbl_entry->initial
  ORIGINAL[1]: initial
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dtbl_entry
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719481099
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dissector_try_port_new(sub_dissectors, port, tvb, pinfo, tree, TRUE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[1]: tvb
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064775411
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dtbl_entry = value
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: dtbl_entry
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dtbl_entry
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719481364
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sub_dissectors = find_dissector_table( name)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: sub_dissectors->base
  TYPE[1]: CALL
  TOKENIZED[1]: sub_dissectors->base
  ORIGINAL[2]: base
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sub_dissectors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sub_dissectors
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774726
FRAGMENT_COUNT: 3
  ORIGINAL[0]: proto_malformed = proto_get_id_by_filter_name(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( \
  ORIGINAL[1]: proto_get_id_by_filter_name(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> proto_malformed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064775523
FRAGMENT_COUNT: 8
  ORIGINAL[0]: dtbl_entry_a->dissector == dtbl_entry_b->dissector
  TYPE[0]: CALL
  TOKENIZED[0]: dtbl_entry_a->dissector == dtbl_entry_b->dissector
  ORIGINAL[1]: dtbl_entry_a->protocol == dtbl_entry_b->protocol
  TYPE[1]: CALL
  TOKENIZED[1]: dtbl_entry_a->protocol == dtbl_entry_b->protocol
  ORIGINAL[2]: dtbl_entry_a->protocol
  TYPE[2]: CALL
  TOKENIZED[2]: dtbl_entry_a->protocol
  ORIGINAL[3]: dtbl_entry_b->protocol
  TYPE[3]: CALL
  TOKENIZED[3]: dtbl_entry_b->protocol
  ORIGINAL[4]: protocol
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dtbl_entry_a
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dtbl_entry_a
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dtbl_entry_b
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719480855
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ENDTRY
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719480477
FRAGMENT_COUNT: 5
  ORIGINAL[0]: { &hf_x509af_algorithmIdentifier, BER_CLASS_UNI, BER_UNI_TAG_SEQUENCE, BER_FLAGS_NOOWNTAG, dissect_x509af_AlgorithmIdentifier }
  TYPE[0]: CALL
  TOKENIZED[0]: { &hf_x509af_algorithmIdentifier , VAR1 , VAR2 , VAR3 , VAR4 }
  ORIGINAL[1]: dissect_x509af_AlgorithmIdentifier
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: BER_FLAGS_NOOWNTAG
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dissect_x509af_AlgorithmIdentifier
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dissect_x509af_AlgorithmIdentifier
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064775024
FRAGMENT_COUNT: 6
  ORIGINAL[0]: fd->flags.visited
  TYPE[0]: CALL
  TOKENIZED[0]: fd->flags . VAR1
  ORIGINAL[1]: fd->flags
  TYPE[1]: CALL
  TOKENIZED[1]: fd->flags
  ORIGINAL[2]: flags
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: visited
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fd
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: fd
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719481111
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sub_dissectors->type
  TYPE[0]: CALL
  TOKENIZED[0]: sub_dissectors->type
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;
  ORIGINAL[2]: FT_STRINGZ
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064774728
FRAGMENT_COUNT: 4
  ORIGINAL[0]: specified_len < tvb_reported_length(tvb)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < FUN1 ( VAR2 )
  ORIGINAL[1]: tvb_reported_length(tvb)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: specified_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772585
FRAGMENT_COUNT: 36
  ORIGINAL[0]: pntohl(&use->rpu_pltime) == 0xffffffff
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &use->rpu_pltime ) == 0xffffffff
  ORIGINAL[1]: &use->rpu_pltime
  TYPE[1]: CALL
  TOKENIZED[1]: &use->rpu_pltime
  ORIGINAL[2]: use->rpu_pltime
  TYPE[2]: CALL
  TOKENIZED[2]: use->rpu_pltime
  ORIGINAL[3]: use->rpu_pltime
  TYPE[3]: CALL
  TOKENIZED[3]: use->rpu_pltime
  ORIGINAL[4]: &use->rpu_pltime
  TYPE[4]: CALL
  TOKENIZED[4]: &use->rpu_pltime
  ORIGINAL[5]: use->rpu_pltime
  TYPE[5]: CALL
  TOKENIZED[5]: use->rpu_pltime
  ORIGINAL[6]: rpu_pltime
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: use
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: use
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: use
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: use
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: use
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: use
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: use
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: use
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: use
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: use
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: use
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: use
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: use
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: use
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: use
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: use
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: use
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: use
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: use
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: use
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: use
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: use
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: use
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: use
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: use
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: use
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: use
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: use
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: use
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1

