# Tokenized code fragments for 153762-v1.0.0-bad
# Total center nodes processed: 27
# Total code fragments found: 134

CENTER_NODE: 30064771571
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *numeric_p = ((void *)(oid_subid2string(subids,oid_len)))
  TYPE[0]: CALL
  TOKENIZED[0]: *numeric_p = ( ( void * ) ( FUN1 ( VAR1 , VAR2 ) ) )
  ORIGINAL[1]: *numeric_p
  TYPE[1]: CALL
  TOKENIZED[1]: *numeric_p
  ORIGINAL[2]: (void *)(oid_subid2string(subids,oid_len))
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) ( FUN1 ( VAR1 , VAR2 ) )

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477382
FRAGMENT_COUNT: 4
  ORIGINAL[0]: num_smi_modules = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: *smi_modules_uat = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: *smi_modules_uat = ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: smi_modules_uat
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476780
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c - 32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 32
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771382
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < oid_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: byte = oid_bytes[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 [ VAR3 ]
  ORIGINAL[2]: oid_bytes[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: byte
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ev == MG_REQUEST
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: strcmp(ifmatch_header, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: strcmp(ifmatch_header, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: stonesoup_printf_context = conn
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2
  ORIGINAL[4]: stonesoup_handle_taint(stonesoup_tainted_buff)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: if (strcmp(ifmatch_header, \
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: if ( FUN1 ( VAR1 , \
  ORIGINAL[6]: <global> stonesoup_printf_context
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: conn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stonesoup_tainted_buff
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: MG_TRUE
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 13
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: strcmp(getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( FUN2 ( \
  ORIGINAL[3]: *stonesoup_server = mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_server = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: mg_set_option(stonesoup_server, \
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , \
  ORIGINAL[6]: mg_destroy_server(&stonesoup_server)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( &stonesoup_server )
  ORIGINAL[7]: &stonesoup_server
  TYPE[7]: CALL
  TOKENIZED[7]: &stonesoup_server
  ORIGINAL[8]: if (getenv(\
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: if ( FUN1 ( \
  ORIGINAL[9]: stonesoup_server
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: NULL
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stonesoup_server
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: stonesoup_server
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771434
FRAGMENT_COUNT: 6
  ORIGINAL[0]: subids_len = oid_encoded2subid(bytes,byteslen,subids_p)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: oid_encoded2subid(bytes,byteslen,subids_p)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: subids_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bytes
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: byteslen
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: subids_p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477197
FRAGMENT_COUNT: 5
  ORIGINAL[0]: oid_resolved(subids_len,subids)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: subids_len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: subids_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subids_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477304
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719477063
FRAGMENT_COUNT: 4
  ORIGINAL[0]: oid_string2subid(oid_str,subids_p)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: subids_len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: oid_str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids_p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771120
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]

CENTER_NODE: 68719477135
FRAGMENT_COUNT: 5
  ORIGINAL[0]: subids_len = oid_encoded2subid(encoded,len,&subids)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , &subids )
  ORIGINAL[1]: oid_subid2string(subids,subids_len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: subids_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subids_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771585
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (void *)(oid_subid2string(subids,subids_len))
  TYPE[0]: CALL
  TOKENIZED[0]: ( void * ) ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[1]: oid_subid2string(subids,subids_len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: subids
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477146
FRAGMENT_COUNT: 5
  ORIGINAL[0]: subid_oid_length = oid_string2subid(oid_str,&subid_oid)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , &subid_oid )
  ORIGINAL[1]: oid_string2subid(oid_str,&subid_oid)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &subid_oid )
  ORIGINAL[2]: subid_oid_length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: oid_str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subid_oid_length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771243
FRAGMENT_COUNT: 3
  ORIGINAL[0]: add_oid(name,OID_KIND_UNKNOWN,((void *)0),((void *)0),oid_len,subids)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , VAR3 , VAR4 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: oid_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 18
  ORIGINAL[0]: disorganizing_outlook != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: stonesoup_data.after
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[3]: stonesoup_data.after
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: &stonesoup_data.after
  TYPE[4]: CALL
  TOKENIZED[4]: &stonesoup_data . VAR1
  ORIGINAL[5]: stonesoup_data.after
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: after
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_trace
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: variable_signed_integral
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stonesoup_data
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: stonesoup_data
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stonesoup_data
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: stonesoup_data
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: stonesoup_data
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: stonesoup_data
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: stonesoup_data
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: stonesoup_data
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: stonesoup_data
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 30064771534
FRAGMENT_COUNT: 7
  ORIGINAL[0]: subids_len = oid_string2subid(oid_str,&subids)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , &subids )
  ORIGINAL[1]: byteslen = oid_subid2encoded(subids_len,subids,bytes)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: oid_subid2encoded(subids_len,subids,bytes)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: byteslen
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subids_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: subids
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bytes
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !oid -> name
  TYPE[0]: CALL
  TOKENIZED[0]: !oid -> VAR1
  ORIGINAL[1]: while (!oid -> name)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( !oid -> VAR1 )

CENTER_NODE: 68719476845
FRAGMENT_COUNT: 14
  ORIGINAL[0]: n -> kind
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: n -> children
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: n -> value_hfid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: n -> key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: n -> parent
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: n -> bits
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: n -> subid
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: i == oid_len
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 == VAR2
  ORIGINAL[8]: n -> name = ((void *)0)
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[9]: n -> name
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: n -> value_type
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: value_type
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: n
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: n
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 68719477097
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !subids || subids_len <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: !subids || VAR1 <= 0
  ORIGINAL[1]: i++ < subids_len
  TYPE[1]: CALL
  TOKENIZED[1]: i++ < VAR1
  ORIGINAL[2]: *bytes_p
  TYPE[2]: CALL
  TOKENIZED[2]: *bytes_p
  ORIGINAL[3]: bytes_p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640282
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771270
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *s = (ep_alloc0((len * 11 + 1)))
  TYPE[0]: CALL
  TOKENIZED[0]: *s = ( FUN1 ( ( VAR1 * 11 + 1 ) ) )
  ORIGINAL[1]: ep_alloc0((len * 11 + 1))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 * 11 + 1 ) )
  ORIGINAL[2]: len * 11 + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 * 11 + 1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477071
FRAGMENT_COUNT: 4
  ORIGINAL[0]: oid_encoded2subid(oid,oid_len,&subid_oid)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , &subid_oid )
  ORIGINAL[1]: oid
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: oid_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subid_oid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

