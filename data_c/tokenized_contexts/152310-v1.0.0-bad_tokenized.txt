# Tokenized code fragments for 152310-v1.0.0-bad
# Total center nodes processed: 61
# Total code fragments found: 229

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771747
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *cfgp
  TYPE[0]: CALL
  TOKENIZED[0]: *cfgp
  ORIGINAL[1]: ( *cfgp) -> x_values
  TYPE[1]: CALL
  TOKENIZED[1]: ( *cfgp ) -> VAR1
  ORIGINAL[2]: *cfgp
  TYPE[2]: CALL
  TOKENIZED[2]: *cfgp
  ORIGINAL[3]: x_values
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfgp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771818
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cidx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(cidx,&ckey,&ckeyLength,&cval)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &ckey , &ckeyLength , &cval )
  ORIGINAL[2]: &ckey
  TYPE[2]: CALL
  TOKENIZED[2]: &ckey
  ORIGINAL[3]: &ckeyLength
  TYPE[3]: CALL
  TOKENIZED[3]: &ckeyLength
  ORIGINAL[4]: &cval
  TYPE[4]: CALL
  TOKENIZED[4]: &cval
  ORIGINAL[5]: cidx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cval
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cval
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477303
FRAGMENT_COUNT: 6
  ORIGINAL[0]: find_option(cfg,section,((void *)0),&sec)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( ( void * ) 0 ) , &sec )
  ORIGINAL[1]: cfg -> x_pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cfg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771852
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: make_hash_key(cfg -> tmp_key -> data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 -> VAR3 )
  ORIGINAL[2]: cfg -> tmp_key -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: cfg -> tmp_key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cfg -> tmp_key -> data
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: cfg -> tmp_key
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: data
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_config_set(cfg,section,option,(value?\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( value?\
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476826
FRAGMENT_COUNT: 10
  ORIGINAL[0]: &cfg
  TYPE[0]: CALL
  TOKENIZED[0]: &cfg
  ORIGINAL[1]: err == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: svn_config__parse_stream(cfg,stream,result_pool,scratch_pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: result_pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: scratch_pool
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: cfg
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476772
FRAGMENT_COUNT: 6
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: *stonesoup_server = mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_server = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: stonesoup_server
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_server
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771953
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PQresultStatus(res) != PGRES_COMMAND_OK
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) != VAR2
  ORIGINAL[1]: stonesoup_printf(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: PQerrorMessage(conn)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: res
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477515
FRAGMENT_COUNT: 5
  ORIGINAL[0]: heli_unwebbed != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: ((unsigned long )amaethon_clatter) * pierro_indianising * pierro_indianising
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( unsigned long ) VAR1 ) * VAR2 * VAR2
  ORIGINAL[2]: ((unsigned long )amaethon_clatter) * pierro_indianising
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( unsigned long ) VAR1 ) * VAR2
  ORIGINAL[3]: pierro_indianising
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pierro_indianising
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476892
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !config_dir
  TYPE[0]: CALL
  TOKENIZED[0]: !config_dir
  ORIGINAL[1]: err && err -> apr_err == SVN_ERR_BAD_FILENAME
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 && VAR1 -> VAR2 == VAR3
  ORIGINAL[2]: *svn_err__temp = svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: *svn_err__temp = FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476741
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mg_vprintf_data((struct mg_connection*) stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( struct mg_connection* ) VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: va_end(argptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: argptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476905
FRAGMENT_COUNT: 4
  ORIGINAL[0]: get_category_config(&cfg,config_dir,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &cfg , VAR1 , \
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476789
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cfg -> tmp_key
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: svn_stringbuf_create_empty(result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: result_pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result_pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 4
  ORIGINAL[0]: sec_ndx = apr_hash_first(pool,cfg -> sections)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 )
  ORIGINAL[1]: sec_ndx != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[2]: sec_ndx = apr_hash_next(sec_ndx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[3]: for (sec_ndx = apr_hash_first(pool,cfg -> sections);sec_ndx != ((void *)0);sec_ndx = apr_hash_next(sec_ndx))
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 ) ; VAR1 != ( ( void * ) 0 ) ; VAR1 = FUN2 ( VAR1 ) )

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_create2(&cfg,section_names_case_sensitive,option_names_case_sensitive,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &cfg , VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: &cfg
  TYPE[1]: CALL
  TOKENIZED[1]: &cfg
  ORIGINAL[2]: section_names_case_sensitive
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option_names_case_sensitive
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477249
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !tmp_value
  TYPE[0]: CALL
  TOKENIZED[0]: !tmp_value
  ORIGINAL[1]: *valuep = default_value
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep = VAR1
  ORIGINAL[2]: *valuep
  TYPE[2]: CALL
  TOKENIZED[2]: *valuep
  ORIGINAL[3]: default_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771738
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_config_get(cfg,&retval,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &retval , \
  ORIGINAL[1]: &retval
  TYPE[1]: CALL
  TOKENIZED[1]: &retval
  ORIGINAL[2]: &retval
  TYPE[2]: CALL
  TOKENIZED[2]: &retval
  ORIGINAL[3]: retval
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: retval
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: retval
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: retval
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sec_ndx = apr_hash_first(pool,cfg -> sections)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 )
  ORIGINAL[1]: apr_hash_first(pool,cfg -> sections)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 )
  ORIGINAL[2]: for (sec_ndx = apr_hash_first(pool,cfg -> sections);sec_ndx != ((void *)0);sec_ndx = apr_hash_next(sec_ndx))
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 ) ; VAR1 != ( ( void * ) 0 ) ; VAR1 = FUN2 ( VAR1 ) )
  ORIGINAL[3]: sec_ndx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sec_ndx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477223
FRAGMENT_COUNT: 3
  ORIGINAL[0]: apr_psprintf(cfg -> pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , \
  ORIGINAL[1]: cfg -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640338
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771267
FRAGMENT_COUNT: 12
  ORIGINAL[0]: option -> expanded && option -> x_value != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3 != ( ( void * ) 0 )
  ORIGINAL[1]: option -> expanded
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: option -> x_value != ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[3]: option -> x_value = ((void *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[4]: option -> x_value
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: (void *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) 0
  ORIGINAL[6]: option -> expanded = 0
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 = 0
  ORIGINAL[7]: option -> expanded
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: x_value
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: expanded
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: option
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: option
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771085
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stonesoup_tainted_buff = (char*) malloc(buffer_size * sizeof(char))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[1]: (char*) malloc(buffer_size * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[2]: malloc(buffer_size * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: stonesoup_tainted_buff
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640385
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771185
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !red_config
  TYPE[0]: CALL
  TOKENIZED[0]: !red_config
  ORIGINAL[1]: *svn_err__temp = svn_config_create2(cfgp,0,0,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 , 0 , 0 , VAR2 )
  ORIGINAL[2]: svn_config_create2(cfgp,0,0,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0 , 0 , VAR2 )
  ORIGINAL[3]: usr_file_path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: red_config
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfgp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: svn_err__temp
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !cfg -> x_values
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1

CENTER_NODE: 68719477203
FRAGMENT_COUNT: 4
  ORIGINAL[0]: get_bool(valuep,tmp_value,default_value,section,option)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: tmp_value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640339
FRAGMENT_COUNT: 2
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else
  ORIGINAL[1]: option_names_case_sensitive
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640360
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771630
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sec_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: !callback(sec -> name,baton)
  TYPE[1]: CALL
  TOKENIZED[1]: !callback ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[2]: callback(sec -> name,baton)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[3]: sec -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771257
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_set(baton,section -> name,option -> name,option -> value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR4 -> VAR3 , VAR4 -> VAR5 )
  ORIGINAL[1]: option -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771609
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *valuep = ((bool_val?svn_tristate_true : svn_tristate_false))
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = ( ( bool_val?svn_tristate_true : VAR1 ) )
  ORIGINAL[1]: *valuep
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep
  ORIGINAL[2]: bool_val?svn_tristate_true : svn_tristate_false
  TYPE[2]: CALL
  TOKENIZED[2]: bool_val?svn_tristate_true : VAR1
  ORIGINAL[3]: valuep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bool_val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640278
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477168
FRAGMENT_COUNT: 5
  ORIGINAL[0]: opt != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: svn_config_create_option(&opt,option,value,cfg -> option_names_case_sensitive,cfg -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &opt , VAR1 , VAR2 , VAR3 -> VAR4 , VAR3 -> VAR5 )
  ORIGINAL[2]: option
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640309
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640285
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477036
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *copy_from = parse_from
  TYPE[0]: CALL
  TOKENIZED[0]: *copy_from = VAR1
  ORIGINAL[1]: parse_from
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: copy_from
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parse_from
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: parse_from
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 7
  ORIGINAL[0]: opt != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: make_string_from_option(valuep,cfg,sec,opt,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: valuep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: sec
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771554
FRAGMENT_COUNT: 4
  ORIGINAL[0]: input == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: *boolp = default_value
  TYPE[1]: CALL
  TOKENIZED[1]: *boolp = VAR1
  ORIGINAL[2]: *boolp
  TYPE[2]: CALL
  TOKENIZED[2]: *boolp
  ORIGINAL[3]: default_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771293
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ( *p) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 0
  ORIGINAL[1]: (char )(tolower(((unsigned char )( *p))))
  TYPE[1]: CALL
  TOKENIZED[1]: ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) )
  ORIGINAL[2]: tolower(((unsigned char )( *p)))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( unsigned char ) ( *p ) ) )
  ORIGINAL[3]: (unsigned char )( *p)
  TYPE[3]: CALL
  TOKENIZED[3]: ( unsigned char ) ( *p )

CENTER_NODE: 68719477491
FRAGMENT_COUNT: 4
  ORIGINAL[0]: get_bool(valuep,tmp_value,default_value,server_group,option_name)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: tmp_value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: server_group
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476959
FRAGMENT_COUNT: 6
  ORIGINAL[0]: &merge_cfg
  TYPE[0]: CALL
  TOKENIZED[0]: &merge_cfg
  ORIGINAL[1]: merge_cfg -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pool
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: merge_cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: merge_cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477356
FRAGMENT_COUNT: 8
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: callback(opt -> name,temp_value,baton,iteration_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: opt -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: iteration_pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: temp_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: baton
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: iteration_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: iteration_pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477235
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tmp_value && 0 == svn_cstring_casecmp(tmp_value,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && 0 == FUN1 ( VAR1 , \
  ORIGINAL[1]: &bool_val
  TYPE[1]: CALL
  TOKENIZED[1]: &bool_val
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bool_val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477377
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_enumerate2(cfg,master_section,search_groups,(&gb),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &gb ) , VAR4 )
  ORIGINAL[1]: &gb
  TYPE[1]: CALL
  TOKENIZED[1]: &gb
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477363
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_cstring_split(value,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771363
FRAGMENT_COUNT: 5
  ORIGINAL[0]: opt -> x_value
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: opt -> x_value = (apr_pstrmemdup(cfg -> x_pool,opt -> x_value,strlen(opt -> x_value)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( FUN1 ( VAR3 -> VAR4 , VAR1 -> VAR2 , FUN2 ( VAR1 -> VAR2 ) ) )
  ORIGINAL[2]: opt -> x_value
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: apr_pstrmemdup(cfg -> x_pool,opt -> x_value,strlen(opt -> x_value))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , VAR3 -> VAR4 , FUN2 ( VAR3 -> VAR4 ) )
  ORIGINAL[4]: tmp_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640366
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771593
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *valuep = ((bool_val?\
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = ( ( bool_val?\
  ORIGINAL[1]: *valuep
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep
  ORIGINAL[2]: bool_val?\
  TYPE[2]: CALL
  TOKENIZED[2]: bool_val?\
  ORIGINAL[3]: valuep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bool_val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477213
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_config_get(cfg,&tmp_value,section,option,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &tmp_value , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: section
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: option
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476994
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cfg -> sections
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cfg -> tmp_key
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: !cfg -> option_names_case_sensitive
  TYPE[3]: CALL
  TOKENIZED[3]: !cfg -> VAR1
  ORIGINAL[4]: cfg -> option_names_case_sensitive
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cfg -> tmp_key
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: tmp_key
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cfg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477479
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tmp_value == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: *result_value
  TYPE[1]: CALL
  TOKENIZED[1]: *result_value
  ORIGINAL[2]: result_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

