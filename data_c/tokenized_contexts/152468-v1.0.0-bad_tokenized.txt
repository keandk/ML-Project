# Tokenized code fragments for 152468-v1.0.0-bad
# Total center nodes processed: 83
# Total code fragments found: 338

CENTER_NODE: 30064772854
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !svn_uri_is_canonical(url,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: !svn_uri_is_canonical ( VAR1 , VAR2 )
  ORIGINAL[1]: *svn_err__temp = svn_error__malfunction(!0,\
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( !0 , \
  ORIGINAL[2]: svn_error__malfunction(!0,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( !0 , \
  ORIGINAL[3]: !0
  TYPE[3]: CALL
  TOKENIZED[3]: !0
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640378
FRAGMENT_COUNT: 1
  ORIGINAL[0]: len == 1 && dirent[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1 && VAR2 [ 0 ] == 47

CENTER_NODE: 68719476861
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dirent_root_length(dirent,len + 1) == len + 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 + 1 ) == VAR2 + 1
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640578
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dirpath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stat(dirpath, &st)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &st )
  ORIGINAL[2]: &st
  TYPE[2]: CALL
  TOKENIZED[2]: &st
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: st
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771691
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !svn_uri__char_validity[(unsigned char )( *src)]
  TYPE[0]: CALL
  TOKENIZED[0]: !svn_uri__char_validity [ ( unsigned char ) ( *src ) ]
  ORIGINAL[1]: *(dst++) =  *src
  TYPE[1]: CALL
  TOKENIZED[1]: * ( dst++ ) = *src
  ORIGINAL[2]: *(dst++)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( dst++ )
  ORIGINAL[3]: *src
  TYPE[3]: CALL
  TOKENIZED[3]: *src
  ORIGINAL[4]: break;
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: break ;

CENTER_NODE: 68719478200
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fspath[0] == 47 && fspath[1] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47 && VAR1 [ 1 ] == '\\0'
  ORIGINAL[1]: svn_relpath_dirname(fspath + 1,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 + 1 , VAR2 )
  ORIGINAL[2]: fspath + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772921
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len == 1 && fspath[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: len == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 1
  ORIGINAL[2]: fspath[0] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 47
  ORIGINAL[3]: fspath[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ]
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: fspath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477239
FRAGMENT_COUNT: 6
  ORIGINAL[0]: path2[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: path2 + i
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477712
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *ptr = dirent
  TYPE[0]: CALL
  TOKENIZED[0]: *ptr = VAR1
  ORIGINAL[1]: ptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477883
FRAGMENT_COUNT: 4
  ORIGINAL[0]: targets -> nelts == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 1
  ORIGINAL[1]: targets -> nelts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: sizeof(svn_boolean_t )
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: svn_boolean_t
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772926
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_fspath__is_canonical(parent_fspath)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_fspath__is_canonical(parent_fspath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: (void )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void ) 0

CENTER_NODE: 47244640426
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mkdir(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: stonesoup_read_taint(&carifta_unbalance,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &carifta_unbalance , \
  ORIGINAL[2]: &carifta_unbalance
  TYPE[2]: CALL
  TOKENIZED[2]: &carifta_unbalance
  ORIGINAL[3]: canioned_unmanful
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: carifta_unbalance
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477598
FRAGMENT_COUNT: 3
  ORIGINAL[0]: is_child(type_dirent,parent_dirent,child_dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: type_dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: parent_dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772223
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !dirent
  TYPE[0]: CALL
  TOKENIZED[0]: !dirent
  ORIGINAL[1]: dirent[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: dirent[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477740
FRAGMENT_COUNT: 2
  ORIGINAL[0]: relpath_is_canonical(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640450
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772151
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(parent_dirent)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(parent_dirent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parent_dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772082
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_uri_is_root(uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: svn_path_uri_decode(uri + start,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 + VAR2 , VAR3 )
  ORIGINAL[2]: uri + start
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640586
FRAGMENT_COUNT: 2
  ORIGINAL[0]: relpath[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 2
  ORIGINAL[0]: c < 'a' || c > 'z'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 'a' || VAR1 > 'z'
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477655
FRAGMENT_COUNT: 4
  ORIGINAL[0]: uri_skip_ancestor(parent_uri,child_uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: result
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: parent_uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: child_uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478395
FRAGMENT_COUNT: 9
  ORIGINAL[0]: fprintf(stderr, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: errors++
  TYPE[1]: CALL
  TOKENIZED[1]: errors++
  ORIGINAL[2]: errors
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: errors
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: errors
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: errors
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: errors
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: errors
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477673
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_path_cstring_from_utf8(&path_apr,relative,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &path_apr , VAR1 , VAR2 )
  ORIGINAL[1]: &path_apr
  TYPE[1]: CALL
  TOKENIZED[1]: &path_apr
  ORIGINAL[2]: relative
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640491
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477255
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_uri_is_canonical(uri,((void *)0))?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: len == uri_schema_root_length(uri,len)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == FUN1 ( VAR2 , VAR1 )
  ORIGINAL[2]: uri_schema_root_length(uri,len)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771797
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_dirent_canonicalize(internal_style(dirent,pool),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , VAR2 ) , VAR2 )
  ORIGINAL[1]: internal_style(dirent,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772017
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *dirpath = (svn_dirent_dirname(dirent,pool))
  TYPE[0]: CALL
  TOKENIZED[0]: *dirpath = ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[1]: *dirpath
  TYPE[1]: CALL
  TOKENIZED[1]: *dirpath
  ORIGINAL[2]: svn_dirent_dirname(dirent,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dirent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478174
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dirent[0] == 47 && dirent[1] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47 && VAR1 [ 1 ] == '\\0'
  ORIGINAL[1]: dirent = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[2]: *url
  TYPE[2]: CALL
  TOKENIZED[2]: *url
  ORIGINAL[3]: url
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 3
  ORIGINAL[0]: type_uri=0
  TYPE[0]: CALL
  TOKENIZED[0]: type_uri=0
  ORIGINAL[1]: type_dirent=1
  TYPE[1]: CALL
  TOKENIZED[1]: type_dirent=1
  ORIGINAL[2]: type_dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477546
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_uri_basename(uri,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: base_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640396
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 68719477552
FRAGMENT_COUNT: 4
  ORIGINAL[0]: get_longest_ancestor_length(type_dirent,dirent1,dirent2,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirent2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477472
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len = strlen(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: relpath_is_canonical(relpath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: relpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772118
FRAGMENT_COUNT: 10
  ORIGINAL[0]: uri1[i] != uri2[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] != VAR3 [ VAR2 ]
  ORIGINAL[1]: uri1[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: uri2[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: uri1[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]
  ORIGINAL[4]: uri1[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ]
  ORIGINAL[5]: uri1
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: uri1
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: uri2
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: uri1
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477402
FRAGMENT_COUNT: 7
  ORIGINAL[0]: blen == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: apr_pmemdup(pool,component,clen + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 + 1 )
  ORIGINAL[2]: clen + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: component
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: component
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: clen
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719478212
FRAGMENT_COUNT: 9
  ORIGINAL[0]: dirpath != base_name?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != base_name? ( ( void ) 0 ) : FUN1 ( \
  ORIGINAL[1]: *dirpath = svn_fspath__dirname(fspath,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *dirpath = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: *dirpath
  TYPE[2]: CALL
  TOKENIZED[2]: *dirpath
  ORIGINAL[3]: svn_fspath__dirname(fspath,result_pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dirpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: fspath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: result_pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: base_name
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 19
  ORIGINAL[0]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0
  ORIGINAL[1]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[2]: stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 )
  ORIGINAL[3]: (char *) -1
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) -1
  ORIGINAL[4]: *stonesoup_tainted_buff = (char*)calloc(stonesoup_shmsz, sizeof(char))
  TYPE[4]: CALL
  TOKENIZED[4]: *stonesoup_tainted_buff = ( char* ) FUN1 ( VAR1 , sizeof ( char ) )
  ORIGINAL[5]: *stonesoup_tainted_buff
  TYPE[5]: CALL
  TOKENIZED[5]: *stonesoup_tainted_buff
  ORIGINAL[6]: (char*)calloc(stonesoup_shmsz, sizeof(char))
  TYPE[6]: CALL
  TOKENIZED[6]: ( char* ) FUN1 ( VAR1 , sizeof ( char ) )
  ORIGINAL[7]: calloc(stonesoup_shmsz, sizeof(char))
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 , sizeof ( char ) )
  ORIGINAL[8]: sizeof(char)
  TYPE[8]: CALL
  TOKENIZED[8]: sizeof ( char )
  ORIGINAL[9]: stonesoup_s = stonesoup_shm
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 = VAR2
  ORIGINAL[10]: *stonesoup_s != (char)0
  TYPE[10]: CALL
  TOKENIZED[10]: *stonesoup_s != ( char ) 0
  ORIGINAL[11]: *stonesoup_s
  TYPE[11]: CALL
  TOKENIZED[11]: *stonesoup_s
  ORIGINAL[12]: (char)0
  TYPE[12]: CALL
  TOKENIZED[12]: ( char ) 0
  ORIGINAL[13]: stonesoup_tainted_buff
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: stonesoup_shmsz
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: char
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: char
  ORIGINAL[16]: stonesoup_s
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: stonesoup_shm
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: stonesoup_s
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 68719477701
FRAGMENT_COUNT: 3
  ORIGINAL[0]: canonicalize(type_uri,uri,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476794
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stonesoup_printf_context != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context != stderr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: stderr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477291
FRAGMENT_COUNT: 8
  ORIGINAL[0]: component[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: memcpy(dirent,base,blen)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: blen
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: base
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: blen
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: blen
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: blen
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477429
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dirent_root_length(dirent,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640385
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 30064771205
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len >= 1 && dirent[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: len >= 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 1
  ORIGINAL[2]: dirent[0] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 47
  ORIGINAL[3]: dirent[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ]

CENTER_NODE: 68719476889
FRAGMENT_COUNT: 10
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: --len
  TYPE[1]: CALL
  TOKENIZED[1]: --len
  ORIGINAL[2]: len > 0 && relpath[len] != 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > 0 && VAR2 [ VAR1 ] != 47
  ORIGINAL[3]: len > 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 > 0
  ORIGINAL[4]: --len
  TYPE[4]: CALL
  TOKENIZED[4]: --len
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: len
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719478249
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_fspath__is_canonical(result)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __PRETTY_FUNCTION__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> __PRETTY_FUNCTION__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: <global> __PRETTY_FUNCTION__
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 68719477247
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dirent[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: dirent[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478271
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *dbpassword = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *dbpassword = 0
  ORIGINAL[1]: *dbuser = 0
  TYPE[1]: CALL
  TOKENIZED[1]: *dbuser = 0
  ORIGINAL[2]: dbuser
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478260
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_path_is_url(uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: svn_path_uri_decode(uri,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477636
FRAGMENT_COUNT: 5
  ORIGINAL[0]: child_relpath[len] == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 0
  ORIGINAL[1]: child_relpath[len]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: child_relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640459
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772101
FRAGMENT_COUNT: 6
  ORIGINAL[0]: relpath_is_canonical(relpath2)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: relpath_is_canonical(relpath2)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: __assert_fail(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: relpath2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> __PRETTY_FUNCTION__
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 47244640446
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477660
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_dirent_skip_ancestor(parent_dirent,child_dirent)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: parent_dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: child_dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640567
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640454
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771910
FRAGMENT_COUNT: 6
  ORIGINAL[0]: add_separator == 0 && total_len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 && VAR2 == 1
  ORIGINAL[1]: dirent = p = (apr_palloc(pool,total_len + 1))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 = ( FUN1 ( VAR3 , VAR4 + 1 ) )
  ORIGINAL[2]: p = (apr_palloc(pool,total_len + 1))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( FUN1 ( VAR2 , VAR3 + 1 ) )
  ORIGINAL[3]: apr_palloc(pool,total_len + 1)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 + 1 )
  ORIGINAL[4]: dirent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771270
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i == 0 && len > 1 && ( *uri) == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 && VAR2 > 1 && ( *uri ) == 47
  ORIGINAL[1]: i == 0 && len > 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0 && VAR2 > 1
  ORIGINAL[2]: ( *uri) == 47
  TYPE[2]: CALL
  TOKENIZED[2]: ( *uri ) == 47
  ORIGINAL[3]: *uri
  TYPE[3]: CALL
  TOKENIZED[3]: *uri

CENTER_NODE: 68719477711
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *dst = canonicalize(type_dirent,dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *dst = FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: dst
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771247
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !dirent
  TYPE[0]: CALL
  TOKENIZED[0]: !dirent
  ORIGINAL[1]: dirent[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: dirent[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771801
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_relpath_canonicalize(internal_style(relpath,pool),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , VAR2 ) , VAR2 )
  ORIGINAL[1]: internal_style(relpath,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772195
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_uri_is_canonical(parent_uri,((void *)0))?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_uri_is_canonical(parent_uri,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: (void )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void ) 0

CENTER_NODE: 68719477704
FRAGMENT_COUNT: 3
  ORIGINAL[0]: canonicalize(type_relpath,relpath,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 1
  ORIGINAL[0]: base_name
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771243
FRAGMENT_COUNT: 8
  ORIGINAL[0]: i < len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: uri[i] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ] == 47
  ORIGINAL[3]: uri[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772312
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ( *uri) == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: ( *uri ) == '\\0'
  ORIGINAL[1]: *uri
  TYPE[1]: CALL
  TOKENIZED[1]: *uri
  ORIGINAL[2]: !svn_path_is_url(uri)
  TYPE[2]: CALL
  TOKENIZED[2]: !svn_path_is_url ( VAR1 )
  ORIGINAL[3]: svn_path_is_url(uri)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771196
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c < 65 || c > 'Z'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 65 || VAR1 > 'Z'
  ORIGINAL[1]: c - 65 + 'a'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 65 + 'a'
  ORIGINAL[2]: c - 65
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 65
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640448
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772031
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(relpath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772956
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_relpath_basename(fspath + 1,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 + 1 , VAR2 )
  ORIGINAL[1]: fspath + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: fspath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640562
FRAGMENT_COUNT: 1
  ORIGINAL[0]: result_path
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 47244640458
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ( *ptr) == 47
  TYPE[0]: CALL
  TOKENIZED[0]: ( *ptr ) == 47

CENTER_NODE: 47244640509
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772913
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fspath[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47
  ORIGINAL[1]: fspath[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: fspath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fspath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fspath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771993
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(dirent)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(dirent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640569
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477662
FRAGMENT_COUNT: 3
  ORIGINAL[0]: uri_skip_ancestor(parent_uri,child_uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: parent_uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: child_uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772773
FRAGMENT_COUNT: 5
  ORIGINAL[0]: strcmp(ancestor,uri_i) == 0
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 ) == 0
  ORIGINAL[1]: strcmp(ancestor,uri_j) == 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 ) == 0
  ORIGINAL[2]: strcmp(ancestor,uri_j)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: ancestor
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uri_j
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477164
FRAGMENT_COUNT: 8
  ORIGINAL[0]: path1[0] == '\\0' || path2[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0' || VAR2 [ 0 ] == '\\0'
  ORIGINAL[1]: path2[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: path1[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: path2[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]
  ORIGINAL[4]: i == path1_len || i == path2_len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == VAR2 || VAR1 == VAR3
  ORIGINAL[5]: path2
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: path2
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772907
FRAGMENT_COUNT: 6
  ORIGINAL[0]: fspath[0] == 47 && relpath_is_canonical(fspath + 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47 && FUN1 ( VAR1 + 1 )
  ORIGINAL[1]: fspath[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: fspath[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: relpath_is_canonical(fspath + 1)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 + 1 )
  ORIGINAL[4]: fspath + 1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 + 1
  ORIGINAL[5]: fspath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477510
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_uri_is_canonical(uri,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640514
FRAGMENT_COUNT: 0

