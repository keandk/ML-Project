# Tokenized code fragments for 152708-v1.0.0-bad
# Total center nodes processed: 25
# Total code fragments found: 91

CENTER_NODE: 68719477306
FRAGMENT_COUNT: 2
  ORIGINAL[0]: sizeof(SwapFileGap )
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( VAR1 )
  ORIGINAL[1]: SwapFileGap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640304
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771759
FRAGMENT_COUNT: 4
  ORIGINAL[0]: gap -> start = start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: gap -> start
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: start
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: gap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tile_swap_default_out(gimp_swap_file,tile)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;
  ORIGINAL[2]: command
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> gimp_swap_file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: tile
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771321
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_OUT)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_OUT
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476934
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_DELETE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_DELETE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 3
  ORIGINAL[0]: SWAP_IN=1
  TYPE[0]: CALL
  TOKENIZED[0]: SWAP_IN=1
  ORIGINAL[1]: SWAP_OUT=2
  TYPE[1]: CALL
  TOKENIZED[1]: SWAP_OUT=2
  ORIGINAL[2]: SWAP_OUT
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771292
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gimp_swap_file = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> gimp_swap_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477127
FRAGMENT_COUNT: 6
  ORIGINAL[0]: swap_file -> fd = open((swap_file -> filename),0100 | 02 | 0 | 0,0400 | 0200)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = FUN1 ( ( VAR1 -> VAR3 ) , 0100 | 02 | 0 | 0 , 0400 | 0200 )
  ORIGINAL[1]: swap_file -> fd
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: swap_file -> filename
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: swap_file -> fd
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: fd
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: swap_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640385
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771264
FRAGMENT_COUNT: 4
  ORIGINAL[0]: gimp_swap_file -> gaps = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: gimp_swap_file -> gaps
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: <global> gimp_swap_file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771585
FRAGMENT_COUNT: 7
  ORIGINAL[0]: swap_file -> swap_file_end > new_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > VAR3
  ORIGINAL[1]: ftruncate(swap_file -> fd,new_size) != 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 ) != 0
  ORIGINAL[2]: swap_file -> swap_file_end = new_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = VAR3
  ORIGINAL[3]: swap_file -> swap_file_end
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: swap_file_end
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: swap_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: new_size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640301
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771161
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stat(dirpath, &st) == -1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &st ) == -1
  ORIGINAL[1]: retval = mkdir(dirpath, 0700)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , 0700 )
  ORIGINAL[2]: mkdir(dirpath, 0700)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0700 )
  ORIGINAL[3]: retval
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476864
FRAGMENT_COUNT: 3
  ORIGINAL[0]: * stonesoup_envSize = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: *stonesoup_tainted_buff
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_tainted_buff
  ORIGINAL[2]: stonesoup_tainted_buff
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477117
FRAGMENT_COUNT: 12
  ORIGINAL[0]: gap -> start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: gap -> start
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: gap -> start
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: gap -> start
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: gap -> start
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: gap -> end == swap_file -> swap_file_end
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 == VAR3 -> VAR4
  ORIGINAL[6]: gap -> end
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: gap -> start
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: start
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: gap
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: swap_file
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: gap
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 21
  ORIGINAL[0]: (shmid = shmget(key, shmsz, IPC_CREAT | 0666)) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 | 0666 ) ) < 0
  ORIGINAL[1]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[2]: shm = shmat(shmid, NULL, 0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 )
  ORIGINAL[3]: (char *) -1
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) -1
  ORIGINAL[4]: fprintf(stderr, \
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , \
  ORIGINAL[5]: s = shm
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = VAR2
  ORIGINAL[6]: memset(s, 0, shmsz)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[7]: strcpy(shm, str)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[8]: fprintf(stderr, \
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , \
  ORIGINAL[9]: getchar()
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( )
  ORIGINAL[10]: fprintf(stderr, \
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 , \
  ORIGINAL[11]: stderr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: shm
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: shmsz
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: shm
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: str
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: out_filename
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: stderr
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: stderr
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 68719477308
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ((SwapFileGap *)0) == gap
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 * ) 0 ) == VAR2
  ORIGINAL[1]: (SwapFileGap *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) 0
  ORIGINAL[2]: gap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476930
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tile -> swap_offset == (- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( - 1 )
  ORIGINAL[1]: tile -> swap_offset
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tile_swap_command(tile,SWAP_IN)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: tile
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: SWAP_IN
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 0

