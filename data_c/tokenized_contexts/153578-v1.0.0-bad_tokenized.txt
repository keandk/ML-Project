# Tokenized code fragments for 153578-v1.0.0-bad
# Total center nodes processed: 33
# Total code fragments found: 197

CENTER_NODE: 30064771757
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CRYPTO_gcm128_finish(&gctx -> gcm,(ctx -> buf),(gctx -> taglen)) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &gctx -> VAR1 , ( VAR2 -> VAR3 ) , ( VAR4 -> VAR5 ) ) != 0
  ORIGINAL[1]: gctx -> iv_set = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = 0
  ORIGINAL[2]: gctx -> iv_set
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

CENTER_NODE: 30064771954
FRAGMENT_COUNT: 7
  ORIGINAL[0]: AES_set_encrypt_key(key,ctx -> key_len * 8,&cctx -> ks)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 * 8 , &cctx -> VAR4 )
  ORIGINAL[1]: ctx -> key_len * 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 * 8
  ORIGINAL[2]: ctx -> key_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &cctx -> ks
  TYPE[3]: CALL
  TOKENIZED[3]: &cctx -> VAR1
  ORIGINAL[4]: key
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: key
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772894
FRAGMENT_COUNT: 20
  ORIGINAL[0]: out_file = fopen(out_filename, \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: fopen(out_filename, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: fprintf(out_file, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: fclose(out_file)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: out_file = NULL
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = VAR2
  ORIGINAL[5]: fprintf(stderr, \
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , \
  ORIGINAL[6]: fprintf(stdout, \
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , \
  ORIGINAL[7]: if ((out_file = fopen(out_filename, \
  TYPE[7]: CONTROL_STRUCTURE
  TOKENIZED[7]: if ( ( VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[8]: out_filename
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: out_file
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: out_file
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: shmid
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: out_file
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: out_file
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: NULL
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: stderr
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: out_filename
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: stdout
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: shmid
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: stderr
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 12
  ORIGINAL[0]: ctx -> flags & 0x2000
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 & 0x2000
  ORIGINAL[1]: CRYPTO_cfb128_1_encrypt(in,out,len,(&dat -> ks),ctx -> iv,&ctx -> num,ctx -> encrypt,dat -> block)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , &ctx -> VAR7 , VAR5 -> VAR8 , VAR9 -> VAR10 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: dat -> ks
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ctx -> iv
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &ctx -> num
  TYPE[5]: CALL
  TOKENIZED[5]: &ctx -> VAR1
  ORIGINAL[6]: ctx -> encrypt
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: dat -> block
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: in
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: out
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: len
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ctx
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771072
FRAGMENT_COUNT: 1
  ORIGINAL[0]: base_path[20]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 20 ]

CENTER_NODE: 68719477281
FRAGMENT_COUNT: 9
  ORIGINAL[0]: xctx -> stream
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: CRYPTO_xts128_encrypt((&xctx -> xts),(ctx -> iv),in,out,len,ctx -> encrypt)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &xctx -> VAR1 ) , ( VAR2 -> VAR3 ) , VAR4 , VAR5 , VAR6 , VAR2 -> VAR7 )
  ORIGINAL[2]: &xctx -> xts
  TYPE[2]: CALL
  TOKENIZED[2]: &xctx -> VAR1
  ORIGINAL[3]: ctx -> iv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ctx -> encrypt
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: out
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: in
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: out
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 1
  ORIGINAL[0]: CRYPTO_gcm128_encrypt(&gctx -> gcm,in,out,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &gctx -> VAR1 , VAR2 , VAR3 , VAR4 )

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ctx -> encrypt
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719476751
FRAGMENT_COUNT: 3
  ORIGINAL[0]: mode == 0x2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0x2
  ORIGINAL[1]: (cbc128_f )AES_cbc_encrypt
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: AES_cbc_encrypt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771382
FRAGMENT_COUNT: 4
  ORIGINAL[0]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)?&aesni_256_ecb : &aes_256_ecb
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ] & ( 1 << 57 - 32 ) ?&aesni_256_ecb : &aes_256_ecb
  ORIGINAL[1]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ] & ( 1 << 57 - 32 )
  ORIGINAL[2]: &aesni_256_ecb
  TYPE[2]: CALL
  TOKENIZED[2]: &aesni_256_ecb
  ORIGINAL[3]: &aes_256_ecb
  TYPE[3]: CALL
  TOKENIZED[3]: &aes_256_ecb

CENTER_NODE: 68719477051
FRAGMENT_COUNT: 8
  ORIGINAL[0]: gctx -> iv_gen == 0 || gctx -> key_set == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 0 || VAR1 -> VAR3 == 0
  ORIGINAL[1]: gctx -> iv + gctx -> ivlen - arg
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 + VAR1 -> VAR3 - VAR4
  ORIGINAL[2]: gctx -> iv + gctx -> ivlen
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 + VAR1 -> VAR3
  ORIGINAL[3]: arg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: arg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: arg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: arg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: arg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476810
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ctx -> cipher_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ctx -> iv
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ctx -> num
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: num
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640385
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stonesoup_oc_i < stonesoup_opt_var
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: ++stonesoup_oc_i
  TYPE[1]: CALL
  TOKENIZED[1]: ++stonesoup_oc_i
  ORIGINAL[2]: for (;stonesoup_oc_i < stonesoup_opt_var;++stonesoup_oc_i)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( ; VAR1 < VAR2 ; ++stonesoup_oc_i )

CENTER_NODE: 68719477429
FRAGMENT_COUNT: 5
  ORIGINAL[0]: qaid_harled > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: __builtin_va_start(futzed_tapet,qaid_harled)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: futzed_tapet
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: qaid_harled
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: futzed_tapet
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771239
FRAGMENT_COUNT: 12
  ORIGINAL[0]: dat -> stream . ctr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: CRYPTO_ctr128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,ctx -> buf,&num,dat -> block)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , VAR5 -> VAR7 , &num , VAR8 -> VAR9 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: dat -> ks
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ctx -> iv
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: ctx -> buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &num
  TYPE[6]: CALL
  TOKENIZED[6]: &num
  ORIGINAL[7]: dat -> block
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: in
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: out
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: len
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ctx
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064772684
FRAGMENT_COUNT: 3
  ORIGINAL[0]: {(913), (1), (((0x10001 == 0x10001?2 : 1)) * 128 / 8), (16), ((0x4000 | (0x1000 | 0x10 | 0x20 | 0x40) | 0x10001)), (aesni_xts_init_key), (aes_xts_cipher), (((void *)0)), ((sizeof(EVP_AES_XTS_CTX ))), (((void *)0)), (((void *)0)), (aes_xts_ctrl), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 913 ) , ( 1 ) , ( ( ( 0x10001 == 0x10001?2 : 1 ) ) * 128 / 8 ) , ( 16 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x20 | 0x40 ) | 0x10001 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR4 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: ((0x10001 == 0x10001?2 : 1)) * 128 / 8
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( 0x10001 == 0x10001?2 : 1 ) ) * 128 / 8
  ORIGINAL[2]: ((0x10001 == 0x10001?2 : 1)) * 128
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( 0x10001 == 0x10001?2 : 1 ) ) * 128

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i <= len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2
  ORIGINAL[1]: i += bl
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += VAR2
  ORIGINAL[2]: ( *dat -> block)(in + i,out + i,(&dat -> ks))
  TYPE[2]: CALL
  TOKENIZED[2]: ( *dat -> VAR1 ) ( VAR2 + VAR3 , VAR4 + VAR3 , ( &dat -> VAR5 ) )
  ORIGINAL[3]: for ((i = 0 , len -= bl);i <= len;i += bl)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( ( VAR1 = 0 , VAR2 -= VAR3 ) ; VAR1 <= VAR2 ; VAR1 += VAR3 )

CENTER_NODE: 68719477625
FRAGMENT_COUNT: 4
  ORIGINAL[0]: aesni_128_ccm = {(896), (1), (((0x7 == 0x10001?2 : 1)) * 128 / 8), (12), ((0x4000 | (0x1000 | 0x10 | 0x100000 | 0x20 | 0x40) | 0x7)), (aesni_ccm_init_key), (aes_ccm_cipher), (((void *)0)), ((sizeof(EVP_AES_CCM_CTX ))), (((void *)0)), (((void *)0)), (aes_ccm_ctrl), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { ( 896 ) , ( 1 ) , ( ( ( 0x7 == 0x10001?2 : 1 ) ) * 128 / 8 ) , ( 12 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40 ) | 0x7 ) ) , ( VAR2 ) , ( VAR3 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR4 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR5 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: {(896), (1), (((0x7 == 0x10001?2 : 1)) * 128 / 8), (12), ((0x4000 | (0x1000 | 0x10 | 0x100000 | 0x20 | 0x40) | 0x7)), (aesni_ccm_init_key), (aes_ccm_cipher), (((void *)0)), ((sizeof(EVP_AES_CCM_CTX ))), (((void *)0)), (((void *)0)), (aes_ccm_ctrl), ((void *)0)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( 896 ) , ( 1 ) , ( ( ( 0x7 == 0x10001?2 : 1 ) ) * 128 / 8 ) , ( 12 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40 ) | 0x7 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR4 ) , ( ( void * ) 0 ) }
  ORIGINAL[2]: <global> aesni_128_ccm
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: aesni_128_ccm
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771149
FRAGMENT_COUNT: 11
  ORIGINAL[0]: CRYPTO_ofb128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,&ctx -> num,dat -> block)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , &ctx -> VAR7 , VAR8 -> VAR9 )
  ORIGINAL[1]: &dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: &dat -> VAR1
  ORIGINAL[2]: ctx -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &ctx -> num
  TYPE[3]: CALL
  TOKENIZED[3]: &ctx -> VAR1
  ORIGINAL[4]: dat -> block
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: iv
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: in
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: out
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ctx
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ctx
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719476964
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c -> cipher_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cipher_data
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: gctx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771604
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !iv && !key
  TYPE[0]: CALL
  TOKENIZED[0]: !iv && !key
  ORIGINAL[1]: !iv
  TYPE[1]: CALL
  TOKENIZED[1]: !iv
  ORIGINAL[2]: !key
  TYPE[2]: CALL
  TOKENIZED[2]: !key
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771343
FRAGMENT_COUNT: 29
  ORIGINAL[0]: mkdir(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: discoloring_alada != 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 0
  ORIGINAL[2]: rumbustion_eulogises = ((int )(strlen(discoloring_alada)))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( int ) ( FUN1 ( VAR2 ) ) )
  ORIGINAL[3]: (int )(strlen(discoloring_alada))
  TYPE[3]: CALL
  TOKENIZED[3]: ( int ) ( FUN1 ( VAR1 ) )
  ORIGINAL[4]: strlen(discoloring_alada)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: psychiatric_vintage = ((char *)(malloc(rumbustion_eulogises + 1)))
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = ( ( char * ) ( FUN1 ( VAR2 + 1 ) ) )
  ORIGINAL[6]: (char *)(malloc(rumbustion_eulogises + 1))
  TYPE[6]: CALL
  TOKENIZED[6]: ( char * ) ( FUN1 ( VAR1 + 1 ) )
  ORIGINAL[7]: malloc(rumbustion_eulogises + 1)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 + 1 )
  ORIGINAL[8]: rumbustion_eulogises + 1
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 + 1
  ORIGINAL[9]: psychiatric_vintage == 0
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 == 0
  ORIGINAL[10]: memset(psychiatric_vintage,0,rumbustion_eulogises + 1)
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 , 0 , VAR2 + 1 )
  ORIGINAL[11]: rumbustion_eulogises + 1
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 + 1
  ORIGINAL[12]: memcpy(psychiatric_vintage,discoloring_alada,rumbustion_eulogises)
  TYPE[12]: CALL
  TOKENIZED[12]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[13]: discoloring_alada != 0
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 != 0
  ORIGINAL[14]: mooting_outfreeman(1,psychiatric_vintage)
  TYPE[14]: CALL
  TOKENIZED[14]: FUN1 ( 1 , VAR1 )
  ORIGINAL[15]: discoloring_alada
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: rumbustion_eulogises
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: discoloring_alada
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: psychiatric_vintage
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: rumbustion_eulogises
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: psychiatric_vintage
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: psychiatric_vintage
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: rumbustion_eulogises
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: psychiatric_vintage
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: discoloring_alada
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: rumbustion_eulogises
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: discoloring_alada
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: psychiatric_vintage
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: OPENSSL_ia32cap_P
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1

CENTER_NODE: 30064771932
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !c -> encrypt || !cctx -> tag_set
  TYPE[0]: CALL
  TOKENIZED[0]: !c -> VAR1 || !cctx -> VAR2
  ORIGINAL[1]: !c -> encrypt
  TYPE[1]: CALL
  TOKENIZED[1]: !c -> VAR1
  ORIGINAL[2]: c -> encrypt
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: !cctx -> tag_set
  TYPE[3]: CALL
  TOKENIZED[3]: !cctx -> VAR1
  ORIGINAL[4]: cctx -> tag_set
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: tag_set
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: type
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cctx
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772621
FRAGMENT_COUNT: 4
  ORIGINAL[0]: 0x4000 | 0x200000 | (0x1000 | 0x10 | 0x100000 | 0x20 | 0x40) | 0x6
  TYPE[0]: CALL
  TOKENIZED[0]: 0x4000 | 0x200000 | ( 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40 ) | 0x6
  ORIGINAL[1]: 0x4000 | 0x200000 | (0x1000 | 0x10 | 0x100000 | 0x20 | 0x40)
  TYPE[1]: CALL
  TOKENIZED[1]: 0x4000 | 0x200000 | ( 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40 )
  ORIGINAL[2]: 0x4000 | 0x200000
  TYPE[2]: CALL
  TOKENIZED[2]: 0x4000 | 0x200000
  ORIGINAL[3]: 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40
  TYPE[3]: CALL
  TOKENIZED[3]: 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dat -> ks
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ks
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dat
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476771
FRAGMENT_COUNT: 9
  ORIGINAL[0]: ctx -> encrypt
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: CRYPTO_cbc128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,dat -> block)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , VAR7 -> VAR8 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: ctx -> iv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dat -> block
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: in
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: out
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: dat
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 1
  ORIGINAL[0]: type != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0

CENTER_NODE: 47244640345
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771844
FRAGMENT_COUNT: 7
  ORIGINAL[0]: xctx -> xts . key2 = (&xctx -> ks2)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 = ( &xctx -> VAR4 )
  ORIGINAL[1]: xctx -> xts . key2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: xctx -> xts
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &xctx -> ks2
  TYPE[3]: CALL
  TOKENIZED[3]: &xctx -> VAR1
  ORIGINAL[4]: key2
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: iv
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: xctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477484
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: cymbals_optive(boozily_volcanized,nonbusiness_semiorientally)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: boozily_volcanized
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: nonbusiness_semiorientally
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476974
FRAGMENT_COUNT: 5
  ORIGINAL[0]: counter[n]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: n
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: counter
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: n
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: n
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

