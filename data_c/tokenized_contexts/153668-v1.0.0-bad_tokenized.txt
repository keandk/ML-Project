# Tokenized code fragments for 153668-v1.0.0-bad
# Total center nodes processed: 31
# Total code fragments found: 163

CENTER_NODE: 68719476842
FRAGMENT_COUNT: 4
  ORIGINAL[0]: apr_pstrdup(err -> pool,message)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: err -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: message
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: message
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476903
FRAGMENT_COUNT: 4
  ORIGINAL[0]: err1?err1 : err2
  TYPE[0]: CALL
  TOKENIZED[0]: err1?err1 : VAR1
  ORIGINAL[1]: err1
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: err1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771593
FRAGMENT_COUNT: 2
  ORIGINAL[0]: malfunction_handler = svn_error_abort_on_malfunction
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: malfunction_handler
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640319
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719476893
FRAGMENT_COUNT: 5
  ORIGINAL[0]: child == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: child -> apr_err
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: apr_err
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: child
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: child
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771493
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *err = svn_error_raise_on_malfunction(!0,file,line,expr)
  TYPE[0]: CALL
  TOKENIZED[0]: *err = FUN1 ( !0 , VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: svn_error_raise_on_malfunction(!0,file,line,expr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( !0 , VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: !0
  TYPE[2]: CALL
  TOKENIZED[2]: !0
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: file
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: line
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: expr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771403
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_handle_error2(err,stream,fatal,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , \
  ORIGINAL[1]: err
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fatal
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476927
FRAGMENT_COUNT: 8
  ORIGINAL[0]: new_err -> pool
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *new_err
  TYPE[1]: CALL
  TOKENIZED[1]: *new_err
  ORIGINAL[2]: new_err -> message
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: new_err -> child
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: child
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: new_err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: new_err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: new_err
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771115
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context = fopen(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(filepath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476930
FRAGMENT_COUNT: 4
  ORIGINAL[0]: err -> child
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: child
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 1
  ORIGINAL[0]: apr_pool_create_ex(&pool,((void *)0),((void *)0),((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &pool , ( ( void * ) 0 ) , ( ( void * ) 0 ) , ( ( void * ) 0 ) )

CENTER_NODE: 30064771322
FRAGMENT_COUNT: 3
  ORIGINAL[0]: err && err -> message && !strcmp(err -> message,error_tracing_link)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 && !strcmp ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: err && err -> message
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 && VAR1 -> VAR2
  ORIGINAL[2]: !strcmp(err -> message,error_tracing_link)
  TYPE[2]: CALL
  TOKENIZED[2]: !strcmp ( VAR1 -> VAR2 , VAR3 )

CENTER_NODE: 30064771499
FRAGMENT_COUNT: 5
  ORIGINAL[0]: malfunction_handler(can_return,file,line,expr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: can_return
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: line
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: expr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771198
FRAGMENT_COUNT: 7
  ORIGINAL[0]: err -> message = (apr_pvsprintf(err -> pool,fmt,ap))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( FUN1 ( VAR1 -> VAR3 , VAR4 , VAR5 ) )
  ORIGINAL[1]: err -> message
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: apr_pvsprintf(err -> pool,fmt,ap)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[3]: message
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 5
  ORIGINAL[0]: status = SVN_ERR_STREAM_MALFORMED_DATA
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: zerr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: status
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: SVN_ERR_STREAM_MALFORMED_DATA
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: zmsg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771279
FRAGMENT_COUNT: 5
  ORIGINAL[0]: child = err
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: for (child = err;child;child = child -> child)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( VAR1 = VAR2 ; VAR1 ; VAR1 = VAR1 -> VAR1 )
  ORIGINAL[2]: child
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: child
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477212
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_other_buff != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: trace_point
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: trace_point
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: trace_point
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476976
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *new_err_leaf = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *new_err_leaf = ( ( void * ) 0 )
  ORIGINAL[1]: !err
  TYPE[1]: CALL
  TOKENIZED[1]: !err
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771446
FRAGMENT_COUNT: 8
  ORIGINAL[0]: svn_error_clear(svn_cmdline_fprintf(stream,err -> pool,(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , VAR2 -> VAR3 , ( FUN3 ( \
  ORIGINAL[1]: svn_cmdline_fprintf(stream,err -> pool,(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 , ( FUN2 ( \
  ORIGINAL[2]: err -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: err -> apr_err
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: svn_err_best_message(err,buf,sizeof(buf))
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , VAR2 , sizeof ( VAR2 ) )
  ORIGINAL[6]: stream
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: prefix
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771123
FRAGMENT_COUNT: 3
  ORIGINAL[0]: va_end(argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771204
FRAGMENT_COUNT: 5
  ORIGINAL[0]: __sync_bool_compare_and_swap(&unterrifiable_arly,0,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &unterrifiable_arly , 0 , 1 )
  ORIGINAL[1]: &unterrifiable_arly
  TYPE[1]: CALL
  TOKENIZED[1]: &unterrifiable_arly
  ORIGINAL[2]: mkdir(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: mkdir(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771484
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !can_return
  TYPE[0]: CALL
  TOKENIZED[0]: !can_return
  ORIGINAL[1]: abort()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476968
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_pool_destroy(err -> pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[1]: err -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pool
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477084
FRAGMENT_COUNT: 10
  ORIGINAL[0]: defn = error_table
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: defn -> errdesc
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: defn -> errcode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: defn -> errdesc
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: defn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: error_table
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: defn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: defn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: defn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: defn
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640323
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (defn -> errcode) == ((svn_errno_t )statcode)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == ( ( VAR3 ) VAR4 )
  ORIGINAL[1]: for (defn = error_table;defn -> errdesc != ((void *)0);++defn)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( VAR1 = VAR2 ; VAR1 -> VAR3 != ( ( void * ) 0 ) ; ++defn )

CENTER_NODE: 30064771442
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_handle_warning2(stream,err,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771159
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *stonesoup_tainted_buff != 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_tainted_buff != 0
  ORIGINAL[1]: *stonesoup_tainted_buff
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_tainted_buff
  ORIGINAL[2]: fread(*stonesoup_tainted_buff,1,stonesoup_lsize,stonesoup_tainted_file)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( *stonesoup_tainted_buff , 1 , VAR1 , VAR2 )
  ORIGINAL[3]: *stonesoup_tainted_buff
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_tainted_buff
  ORIGINAL[4]: *stonesoup_tainted_buff
  TYPE[4]: CALL
  TOKENIZED[4]: *stonesoup_tainted_buff
  ORIGINAL[5]: stonesoup_tainted_buff
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_lsize
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_tainted_file
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stonesoup_tainted_buff
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476896
FRAGMENT_COUNT: 1
  ORIGINAL[0]: err
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771375
FRAGMENT_COUNT: 13
  ORIGINAL[0]: err -> message
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: err -> apr_err > 20000 + 50000 + 50000 && err -> apr_err <= 20000 + 50000 + 50000 + 50000 * 10
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 > 20000 + 50000 + 50000 && VAR1 -> VAR2 <= 20000 + 50000 + 50000 + 50000 * 10
  ORIGINAL[2]: err -> apr_err > 20000 + 50000 + 50000
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 > 20000 + 50000 + 50000
  ORIGINAL[3]: err -> apr_err
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: 20000 + 50000 + 50000
  TYPE[4]: CALL
  TOKENIZED[4]: 20000 + 50000 + 50000
  ORIGINAL[5]: err -> apr_err <= 20000 + 50000 + 50000 + 50000 * 10
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 <= 20000 + 50000 + 50000 + 50000 * 10
  ORIGINAL[6]: err -> apr_err
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: 20000 + 50000 + 50000 + 50000 * 10
  TYPE[7]: CALL
  TOKENIZED[7]: 20000 + 50000 + 50000 + 50000 * 10
  ORIGINAL[8]: 20000 + 50000 + 50000
  TYPE[8]: CALL
  TOKENIZED[8]: 20000 + 50000 + 50000
  ORIGINAL[9]: 20000 + 50000
  TYPE[9]: CALL
  TOKENIZED[9]: 20000 + 50000
  ORIGINAL[10]: 50000 * 10
  TYPE[10]: CALL
  TOKENIZED[10]: 50000 * 10
  ORIGINAL[11]: apr_err
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: err
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719476952
FRAGMENT_COUNT: 16
  ORIGINAL[0]: !new_err
  TYPE[0]: CALL
  TOKENIZED[0]: !new_err
  ORIGINAL[1]: new_err = (apr_palloc(pool,sizeof(( *new_err))))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 , sizeof ( ( *new_err ) ) ) )
  ORIGINAL[2]: tmp_err = new_err
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2
  ORIGINAL[3]: tmp_err -> child
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tmp_err -> child
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: tmp_err -> message
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: tmp_err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: new_err
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tmp_err
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: tmp_err
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: tmp_err
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: tmp_err
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: tmp_err
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: tmp_err
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: tmp_err
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: tmp_err
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 30064771409
FRAGMENT_COUNT: 4
  ORIGINAL[0]: empties = apr_array_make(subpool,0,(sizeof(apr_status_t )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , 0 , ( sizeof ( VAR3 ) ) )
  ORIGINAL[1]: apr_array_make(subpool,0,(sizeof(apr_status_t )))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 0 , ( sizeof ( VAR2 ) ) )
  ORIGINAL[2]: empties
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tmp_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

