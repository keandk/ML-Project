# Tokenized code fragments for 152585-v1.0.0-bad
# Total center nodes processed: 72
# Total code fragments found: 386

CENTER_NODE: 30064771168
FRAGMENT_COUNT: 4
  ORIGINAL[0]: prev?((void *)0) : s -> opaque
  TYPE[0]: CALL
  TOKENIZED[0]: prev? ( ( void * ) 0 ) : VAR1 -> VAR2
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: s -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: prev
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772446
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *d = (s -> opaque)
  TYPE[0]: CALL
  TOKENIZED[0]: *d = ( VAR1 -> VAR2 )
  ORIGINAL[1]: s -> opaque
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: d
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: padbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771992
FRAGMENT_COUNT: 4
  ORIGINAL[0]: in < 0x80
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0x80
  ORIGINAL[1]: (bytes - 1) * 6
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 - 1 ) * 6
  ORIGINAL[2]: bytes - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: bytes
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771193
FRAGMENT_COUNT: 13
  ORIGINAL[0]: s -> pos = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 0
  ORIGINAL[1]: s -> pos
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pos
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771679
FRAGMENT_COUNT: 4
  ORIGINAL[0]: s -> update_checksum = update_checksum
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: update_checksum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476826
FRAGMENT_COUNT: 3
  ORIGINAL[0]: &ffurl_context_class
  TYPE[0]: CALL
  TOKENIZED[0]: &ffurl_context_class
  ORIGINAL[1]: prev
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ffurl_context_class
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771321
FRAGMENT_COUNT: 2
  ORIGINAL[0]: s -> must_flush = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 0
  ORIGINAL[1]: s -> must_flush
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2

CENTER_NODE: 30064771546
FRAGMENT_COUNT: 5
  ORIGINAL[0]: --i > 0
  TYPE[0]: CALL
  TOKENIZED[0]: --i > 0
  ORIGINAL[1]: 128 | ((uint8_t )(val >> 7 * i))
  TYPE[1]: CALL
  TOKENIZED[1]: 128 | ( ( VAR1 ) ( VAR2 >> 7 * VAR3 ) )
  ORIGINAL[2]: (uint8_t )(val >> 7 * i)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( VAR2 >> 7 * VAR3 )
  ORIGINAL[3]: val >> 7 * i
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 >> 7 * VAR2
  ORIGINAL[4]: uint8_t
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476903
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *(s -> buf_ptr++) = b
  TYPE[0]: CALL
  TOKENIZED[0]: * ( VAR1 -> buf_ptr++ ) = VAR2
  ORIGINAL[1]: s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf_ptr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477086
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ch & top
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & VAR2
  ORIGINAL[1]: q++
  TYPE[1]: CALL
  TOKENIZED[1]: q++
  ORIGINAL[2]: q
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: q
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: q
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 1
  ORIGINAL[0]: s -> buf_ptr >= s -> buf_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 >= VAR1 -> VAR3

CENTER_NODE: 30064771841
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= (avio_r8(s))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= ( FUN1 ( VAR2 ) )
  ORIGINAL[1]: avio_r8(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477792
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buf[4096]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 4096 ]
  ORIGINAL[1]: __builtin_va_start(ap,fmt)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772479
FRAGMENT_COUNT: 4
  ORIGINAL[0]: '4' << 16 | 18 << 8 | 100
  TYPE[0]: CALL
  TOKENIZED[0]: '4' << 16 | 18 << 8 | 100
  ORIGINAL[1]: '4' << 16 | 18 << 8
  TYPE[1]: CALL
  TOKENIZED[1]: '4' << 16 | 18 << 8
  ORIGINAL[2]: '4' << 16
  TYPE[2]: CALL
  TOKENIZED[2]: '4' << 16
  ORIGINAL[3]: 18 << 8
  TYPE[3]: CALL
  TOKENIZED[3]: 18 << 8

CENTER_NODE: 30064771275
FRAGMENT_COUNT: 36
  ORIGINAL[0]: count > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: len = (s -> buf_end - s -> buf_ptr > count?count : s -> buf_end - s -> buf_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR2 -> VAR3 - VAR2 -> VAR4 > count?count : VAR2 -> VAR3 - VAR2 -> VAR4 )
  ORIGINAL[2]: s -> buf_end - s -> buf_ptr > count?count : s -> buf_end - s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 - VAR1 -> VAR3 > count?count : VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[3]: s -> buf_end - s -> buf_ptr > count
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 - VAR1 -> VAR3 > VAR4
  ORIGINAL[4]: s -> buf_end - s -> buf_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[5]: s -> buf_end
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> buf_ptr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: memset((s -> buf_ptr),b,len)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 , VAR4 )
  ORIGINAL[8]: s -> buf_ptr
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: s -> buf_ptr += len
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2 += VAR3
  ORIGINAL[10]: s -> buf_ptr
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: s -> buf_ptr >= s -> buf_end
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 >= VAR1 -> VAR3
  ORIGINAL[12]: s -> buf_ptr
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: s -> buf_end
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: count -= len
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -= VAR2
  ORIGINAL[15]: while (count > 0)
  TYPE[15]: CONTROL_STRUCTURE
  TOKENIZED[15]: while ( VAR1 > 0 )
  ORIGINAL[16]: buf_end
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buf_ptr
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: buf_ptr
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: buf_ptr
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: buf_ptr
  TYPE[20]: FIELD_IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: buf_end
  TYPE[21]: FIELD_IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: count
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: len
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: s
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: s
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: count
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: s
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: b
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: len
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: s
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: len
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: s
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: s
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: count
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: len
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1

CENTER_NODE: 68719477273
FRAGMENT_COUNT: 15
  ORIGINAL[0]: s -> buf_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> write_flag
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> direct
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> buffer_size
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> update_checksum
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> opaque
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: len <= 0
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 <= 0
  ORIGINAL[8]: s -> pos += len
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 += VAR3
  ORIGINAL[9]: s -> pos
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: s -> bytes_read
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: s -> buffer
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: bytes_read
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: s
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 68719477052
FRAGMENT_COUNT: 5
  ORIGINAL[0]: val >> 16
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >> 16
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uint8_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771794
FRAGMENT_COUNT: 12
  ORIGINAL[0]: s -> read_packet && s -> write_flag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3
  ORIGINAL[1]: s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: memcpy(buf,(s -> buf_ptr),len)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ( VAR2 -> VAR3 ) , VAR4 )
  ORIGINAL[4]: s -> buf_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> buf_ptr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf_ptr
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: len
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719477373
FRAGMENT_COUNT: 5
  ORIGINAL[0]: val = avio_rb16(s) << 16
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 ) << 16
  ORIGINAL[1]: avio_rb16(s) << 16
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) << 16
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477055
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_w8(s,(val >> 24))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( VAR2 >> 24 ) )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477591
FRAGMENT_COUNT: 8
  ORIGINAL[0]: flags & 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 2
  ORIGINAL[1]: s -> buf_end = s -> buffer + s -> buffer_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR1 -> VAR3 + VAR1 -> VAR4
  ORIGINAL[2]: s -> buf_end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> buffer_size
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> write_flag
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: write_flag
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val >> 32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >> 32
  ORIGINAL[1]: uint32_t
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 7
  ORIGINAL[0]: sscanf(stonesoup_envKey, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: &stonesoup_key
  TYPE[1]: CALL
  TOKENIZED[1]: &stonesoup_key
  ORIGINAL[2]: shmget(stonesoup_key, stonesoup_shmsz, 0666)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , 0666 )
  ORIGINAL[3]: stonesoup_key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_shmid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_key
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_shmsz
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772346
FRAGMENT_COUNT: 1
  ORIGINAL[0]: io_buffer[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]

CENTER_NODE: 68719477677
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sandburr_devocalisation != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: chasteness_calycled = sandburr_devocalisation
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: tanglefoot_kienan[5]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 5 ]
  ORIGINAL[3]: tanglefoot_kienan
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tanglefoot_kienan
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772025
FRAGMENT_COUNT: 3
  ORIGINAL[0]: val = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tmp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 4
  ORIGINAL[0]: s -> write_packet && !s -> error
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && !s -> VAR3
  ORIGINAL[1]: s -> write_packet
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !s -> error
  TYPE[2]: CALL
  TOKENIZED[2]: !s -> VAR1
  ORIGINAL[3]: s -> error
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2

CENTER_NODE: 30064772399
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *d = opaque
  TYPE[0]: CALL
  TOKENIZED[0]: *d = VAR1
  ORIGINAL[1]: d
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: opaque
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: whence
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772443
FRAGMENT_COUNT: 6
  ORIGINAL[0]: max_packet_size <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: - 1
  TYPE[1]: CALL
  TOKENIZED[1]: - 1
  ORIGINAL[2]: url_open_dyn_buf_internal(s,max_packet_size)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: max_packet_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: max_packet_size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477389
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buf[i++]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ i++ ]
  ORIGINAL[1]: c != 10 && c
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 10 && VAR1
  ORIGINAL[2]: buf[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771897
FRAGMENT_COUNT: 7
  ORIGINAL[0]: hi < 0x800
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0x800
  ORIGINAL[1]: ch = ((ret += 2) <= maxlen?avio_rl16(pb) : (0 - 0xDC00))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 += 2 ) <= maxlen?avio_rl16 ( VAR3 ) : ( 0 - 0xDC00 ) )
  ORIGINAL[2]: (ret += 2) <= maxlen?avio_rl16(pb) : (0 - 0xDC00)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 += 2 ) <= maxlen?avio_rl16 ( VAR2 ) : ( 0 - 0xDC00 )
  ORIGINAL[3]: (ret += 2) <= maxlen
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 += 2 ) <= VAR2
  ORIGINAL[4]: avio_rl16(pb)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: 0 - 0xDC00
  TYPE[5]: CALL
  TOKENIZED[5]: 0 - 0xDC00
  ORIGINAL[6]: ch
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476766
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[3]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771668
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s -> checksum = ((s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_ptr - s -> checksum_ptr)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( VAR1 -> VAR3 ) ( VAR1 -> VAR2 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) ) )
  ORIGINAL[1]: s -> checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_ptr - s -> checksum_ptr))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) )
  ORIGINAL[3]: s -> update_checksum
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> checksum
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> checksum_ptr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> buf_ptr - s -> checksum_ptr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 - VAR1 -> VAR3

CENTER_NODE: 30064771665
FRAGMENT_COUNT: 6
  ORIGINAL[0]: av_crc(av_crc_get_table(AV_CRC_32_IEEE),checksum,buf,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: av_crc_get_table(AV_CRC_32_IEEE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: AV_CRC_32_IEEE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: checksum
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477781
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: s -> opaque
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: av_freep((&s -> buffer))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( &s -> VAR1 ) )
  ORIGINAL[3]: s -> buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> write_flag
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: write_flag
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772307
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *s = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *s = ( ( void * ) 0 )
  ORIGINAL[1]: *s
  TYPE[1]: CALL
  TOKENIZED[1]: *s
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771490
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len += strlen(str)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 += FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(str)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: str
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 3
  ORIGINAL[0]: val >>= 7
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >>= 7
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: while (val >>= 7)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( VAR1 >>= 7 )

CENTER_NODE: 68719477145
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (int )val
  TYPE[0]: CALL
  TOKENIZED[0]: ( int ) VAR1
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772322
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !s -> read_pause
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: (s -> read_pause)(s -> opaque,pause)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 )
  ORIGINAL[2]: s -> read_pause
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> opaque
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pause
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !buffer
  TYPE[0]: CALL
  TOKENIZED[0]: !buffer

CENTER_NODE: 30064771828
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= ((uint64_t )(avio_rl32(s))) << 32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= ( ( VAR2 ) ( FUN1 ( VAR3 ) ) ) << 32
  ORIGINAL[1]: ((uint64_t )(avio_rl32(s))) << 32
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 ) ( FUN1 ( VAR2 ) ) ) << 32
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771257
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s -> update_checksum
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: (s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_ptr - s -> checksum_ptr))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) )
  ORIGINAL[2]: s -> checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> checksum_ptr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> buf_ptr - s -> checksum_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[5]: s -> buf_ptr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> checksum_ptr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2

CENTER_NODE: 68719477347
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_rl16(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772352
FRAGMENT_COUNT: 9
  ORIGINAL[0]: new_allocated_size = (d -> allocated_size)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( VAR2 -> VAR3 )
  ORIGINAL[1]: d -> allocated_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: d -> allocated_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: allocated_size
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: d
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: new_allocated_size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: d
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: d
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: d
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771573
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_wl16(s,val & 0xffff)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 & 0xffff )
  ORIGINAL[1]: val & 0xffff
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0xffff
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477168
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> max_packet_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> buf_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buffer_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> max_packet_size
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: max_packet_size
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: max_buffer_size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477811
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !s -> read_seek
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: ret = ((s -> read_seek)(h,stream_index,timestamp,flags))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 -> VAR3 ) ( VAR4 , VAR5 , VAR6 , VAR7 ) )
  ORIGINAL[2]: (s -> read_seek)(h,stream_index,timestamp,flags)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) ( VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ret
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640301
FRAGMENT_COUNT: 1
  ORIGINAL[0]: s -> eof_reached
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2

CENTER_NODE: 68719477036
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> seek
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: (size = ((s -> seek)(s -> opaque,(- 1),2))) < 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( VAR2 -> VAR3 ) ( VAR2 -> VAR4 , ( - 1 ) , 2 ) ) ) < 0
  ORIGINAL[2]: s -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: size++
  TYPE[3]: CALL
  TOKENIZED[3]: size++
  ORIGINAL[4]: s -> seek
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: seek
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477392
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buflen <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: buflen
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buflen
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477648
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_open2(s,filename,flags,((void *)0),((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477946
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = ffio_url_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772483
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = ffio_url_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771812
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= (avio_r8(s) << 8)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= ( FUN1 ( VAR2 ) << 8 )
  ORIGINAL[1]: avio_r8(s) << 8
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) << 8
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477132
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (uint32_t )(val >> 32)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( VAR2 >> 32 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uint32_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771440
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_seek(s,offset,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477141
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (uint8_t )val
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) VAR2
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772526
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (shmid = shmget(key, shmsz, IPC_CREAT | 0666)) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 | 0666 ) ) < 0
  ORIGINAL[1]: (char *) -1
  TYPE[1]: CALL
  TOKENIZED[1]: ( char * ) -1
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1

CENTER_NODE: 30064771823
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= avio_rl16(s) << 16
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= FUN1 ( VAR2 ) << 16
  ORIGINAL[1]: avio_rl16(s) << 16
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) << 16
  ORIGINAL[2]: avio_rl16(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772022
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= ((uint64_t )(avio_rb32(s)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= ( ( VAR2 ) ( FUN1 ( VAR3 ) ) )
  ORIGINAL[1]: (uint64_t )(avio_rb32(s))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( FUN1 ( VAR2 ) )
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772476
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .item_name = av_default_item_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: av_default_item_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772097
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !buffer
  TYPE[0]: CALL
  TOKENIZED[0]: !buffer
  ORIGINAL[1]: s -> write_flag?2 : 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> write_flag?2 : 1
  ORIGINAL[2]: s -> write_flag
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: write_flag
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477902
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !d
  TYPE[0]: CALL
  TOKENIZED[0]: !d
  ORIGINAL[1]: d -> io_buffer_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: *s
  TYPE[2]: CALL
  TOKENIZED[2]: *s
  ORIGINAL[3]: d -> io_buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: io_buffer
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: d
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: d
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477869
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ((union unaligned_32 *)buf1) -> l = av_bswap32(buf_size)
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( union VAR1 * ) VAR2 ) -> VAR3 = FUN1 ( VAR4 )
  ORIGINAL[1]: ret = dyn_buf_write(opaque,buf1,4)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 , 4 )
  ORIGINAL[2]: dyn_buf_write(opaque,buf1,4)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , 4 )
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: opaque
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ret
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476862
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *s = (av_mallocz(sizeof(AVIOContext )))
  TYPE[0]: CALL
  TOKENIZED[0]: *s = ( FUN1 ( sizeof ( VAR1 ) ) )
  ORIGINAL[1]: !s
  TYPE[1]: CALL
  TOKENIZED[1]: !s
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477152
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_wb16(s,(((int )val) >> 8))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( ( int ) VAR2 ) >> 8 ) )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477620
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (buffer_start = s -> pos - buffer_size) > buf_size
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = VAR2 -> VAR3 - VAR4 ) > VAR5
  ORIGINAL[1]: alloc_size > buf_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > VAR2
  ORIGINAL[2]: buf_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: alloc_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf_size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476994
FRAGMENT_COUNT: 4
  ORIGINAL[0]: whence != 2 || force
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 2 || VAR2
  ORIGINAL[1]: whence != 2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 2
  ORIGINAL[2]: force
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: force
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772442
FRAGMENT_COUNT: 2
  ORIGINAL[0]: url_open_dyn_buf_internal(s,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771316
FRAGMENT_COUNT: 11
  ORIGINAL[0]: size > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: s -> buf_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buf_ptr >= s -> buf_end
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 >= VAR1 -> VAR3
  ORIGINAL[4]: s -> buf_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> buf_end
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf_end
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771833
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val = (avio_r8(s) << 8)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 ) << 8 )
  ORIGINAL[1]: avio_r8(s) << 8
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) << 8
  ORIGINAL[2]: avio_r8(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

