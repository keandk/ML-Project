# Tokenized code fragments for 501312-v1.0.1-good
# Total center nodes processed: 47
# Total code fragments found: 188

CENTER_NODE: 68719477449
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buf[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]
  ORIGINAL[1]: buf[64]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 64 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771525
FRAGMENT_COUNT: 5
  ORIGINAL[0]: current_saved_data->set_data |= (1 << idx)
  TYPE[0]: CALL
  TOKENIZED[0]: current_saved_data->set_data |= ( 1 << VAR1 )
  ORIGINAL[1]: current_saved_data->set_data
  TYPE[1]: CALL
  TOKENIZED[1]: current_saved_data->set_data
  ORIGINAL[2]: 1 << idx
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << VAR1
  ORIGINAL[3]: set_data
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> current_saved_data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 30064771872
FRAGMENT_COUNT: 6
  ORIGINAL[0]: g_snprintf(s, ITEM_LABEL_LENGTH, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: v / 100
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 / 100
  ORIGINAL[2]: (v % 100) * 10
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 % 100 ) * 10
  ORIGINAL[3]: v % 100
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 % 100
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ITEM_LABEL_LENGTH
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476738
FRAGMENT_COUNT: 2
  ORIGINAL[0]: frames[MAX_RQRS_FRAMES]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: MAX_RQRS_FRAMES
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771158
FRAGMENT_COUNT: 4
  ORIGINAL[0]: rr->next = kh->rr
  TYPE[0]: CALL
  TOKENIZED[0]: rr->next = kh->rr
  ORIGINAL[1]: rr->next
  TYPE[1]: CALL
  TOKENIZED[1]: rr->next
  ORIGINAL[2]: kh->rr
  TYPE[2]: CALL
  TOKENIZED[2]: kh->rr
  ORIGINAL[3]: kh
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478096
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ptl_6bit_ascii
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: get_len_6bit_ascii
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771885
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (v + 1) * 2
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 + 1 ) * 2
  ORIGINAL[1]: v + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: v
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477446
FRAGMENT_COUNT: 5
  ORIGINAL[0]: proto_tree_add_text(tree, tvb, 0, -1, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 0 , -1 , \
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tvb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772430
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ptl_bcdplus
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: get_len_bcdplus
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771092
FRAGMENT_COUNT: 5
  ORIGINAL[0]: trg < src ? (trg << 10) | src : (src << 10) | trg
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 ? ( VAR1 << 10 ) | VAR2 : ( VAR2 << 10 ) | VAR1
  ORIGINAL[1]: trg < src
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: (src << 10) | trg
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 << 10 ) | VAR2
  ORIGINAL[3]: src << 10
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 << 10
  ORIGINAL[4]: trg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640267
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !IS_SENDMSG(hdr)
  TYPE[0]: CALL
  TOKENIZED[0]: !IS_SENDMSG ( VAR1 )

CENTER_NODE: 30064771820
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ipmi_cmd_tab[netfn >> 1].desc
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 >> 1 ] . VAR3
  ORIGINAL[1]: ipmi_cmd_tab[netfn >> 1].desc
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 >> 1 ] . VAR3
  ORIGINAL[2]: dn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771804
FRAGMENT_COUNT: 11
  ORIGINAL[0]: inr->siglen != siglen
  TYPE[0]: CALL
  TOKENIZED[0]: inr->siglen != VAR1
  ORIGINAL[1]: inh->oem_selector = oem_selector
  TYPE[1]: CALL
  TOKENIZED[1]: inh->oem_selector = VAR1
  ORIGINAL[2]: inh->oem_selector
  TYPE[2]: CALL
  TOKENIZED[2]: inh->oem_selector
  ORIGINAL[3]: oem_selector
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: inh
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: oem_selector
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: inh
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: inh
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: inh
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: inh
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: inh
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719477467
FRAGMENT_COUNT: 4
  ORIGINAL[0]: g_snprintf(s, ITEM_LABEL_LENGTH, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ITEM_LABEL_LENGTH
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: v
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478098
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ptl_8bit_ascii
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: get_len_8bit_ascii
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477437
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ic = nf->cmdtab
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = nf->cmdtab
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: nf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771072
FRAGMENT_COUNT: 2
  ORIGINAL[0]: saved_data[NSAVED_DATA]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: NSAVED_DATA
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771567
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: v = (tvb_get_guint8(tvb, offs + i / 2) & msk) >> shft
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 , VAR3 + VAR4 / 2 ) & VAR5 ) >> VAR6
  ORIGINAL[2]: (tvb_get_guint8(tvb, offs + i / 2) & msk) >> shft
  TYPE[2]: CALL
  TOKENIZED[2]: ( FUN1 ( VAR1 , VAR2 + VAR3 / 2 ) & VAR4 ) >> VAR5
  ORIGINAL[3]: v
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771222
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ((hdr)->netfn & 0x3e) == IPMI_APP_REQ
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 ) ->netfn & 0x3e ) == VAR2
  ORIGINAL[1]: (hdr)->cmd == 0x34
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ->cmd == 0x34
  ORIGINAL[2]: (hdr)->cmd
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ->cmd
  ORIGINAL[3]: cmd
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hdr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771532
FRAGMENT_COUNT: 4
  ORIGINAL[0]: current_saved_data->set_data & (1 << idx)
  TYPE[0]: CALL
  TOKENIZED[0]: current_saved_data->set_data & ( 1 << VAR1 )
  ORIGINAL[1]: current_saved_data->set_data
  TYPE[1]: CALL
  TOKENIZED[1]: current_saved_data->set_data
  ORIGINAL[2]: 1 << idx
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << VAR1
  ORIGINAL[3]: idx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771736
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ts == 0xffffffff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0xffffffff
  ORIGINAL[1]: tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: hf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ts
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771880
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ipmi_fmt_1s_1based(s, ++v)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ++v )
  ORIGINAL[1]: ++v
  TYPE[1]: CALL
  TOKENIZED[1]: ++v
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478019
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ipmi_netfn_setdesc(IPMI_BRIDGE_REQ, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: ipmi_netfn_setdesc(IPMI_SE_REQ, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: IPMI_SE_REQ
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771892
FRAGMENT_COUNT: 2
  ORIGINAL[0]: chan_vals
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771874
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ipmi_fmt_500ms_1based(s, ++v)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ++v )
  ORIGINAL[1]: ++v
  TYPE[1]: CALL
  TOKENIZED[1]: ++v
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771075
FRAGMENT_COUNT: 2
  ORIGINAL[0]: MSGFMT_NONE = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: MSGFMT_NONE
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771817
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ipmi_cmd_tab[netfn >> 1].siglen
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 >> 1 ] . VAR3
  ORIGINAL[1]: ipmi_cmd_tab[netfn >> 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 >> 1 ]
  ORIGINAL[2]: netfn >> 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >> 1
  ORIGINAL[3]: siglen
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> ipmi_cmd_tab
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 68719478099
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ptl_unicode
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: get_len_unicode
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477270
FRAGMENT_COUNT: 10
  ORIGINAL[0]: proto_tree_add_text(tree, tvb, offs, 1, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , 1 , \
  ORIGINAL[1]: ptr->desc
  TYPE[1]: CALL
  TOKENIZED[1]: ptr->desc
  ORIGINAL[2]: offs
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tvb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offs
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: desc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: unit
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: offs
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477342
FRAGMENT_COUNT: 5
  ORIGINAL[0]: guid.data1 = tvb_get_letohl(tvb, offset + 12)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = FUN1 ( VAR3 , VAR4 + 12 )
  ORIGINAL[1]: guid.data1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: guid.data2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: data2
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: guid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477463
FRAGMENT_COUNT: 4
  ORIGINAL[0]: v / 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 / 2
  ORIGINAL[1]: v % 2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 % 2
  ORIGINAL[2]: v
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: v
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477478
FRAGMENT_COUNT: 4
  ORIGINAL[0]: v & 0x0f
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x0f
  ORIGINAL[1]: v >> 4
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >> 4
  ORIGINAL[2]: v
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: v
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478092
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ptl_binary
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: get_len_binary
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 8
  ORIGINAL[0]: rr->frames[which].num && rr->frames[which].num != fd->num
  TYPE[0]: CALL
  TOKENIZED[0]: rr->frames [ VAR1 ] . VAR2 && rr->frames [ VAR1 ] . VAR2 != fd->num
  ORIGINAL[1]: rr->frames[which].num = fd->num
  TYPE[1]: CALL
  TOKENIZED[1]: rr->frames [ VAR1 ] . VAR2 = fd->num
  ORIGINAL[2]: rr->frames[which].num
  TYPE[2]: CALL
  TOKENIZED[2]: rr->frames [ VAR1 ] . VAR2
  ORIGINAL[3]: rr->frames[which]
  TYPE[3]: CALL
  TOKENIZED[3]: rr->frames [ VAR1 ]
  ORIGINAL[4]: fd->num
  TYPE[4]: CALL
  TOKENIZED[4]: fd->num
  ORIGINAL[5]: rr->frames[which]
  TYPE[5]: CALL
  TOKENIZED[5]: rr->frames [ VAR1 ]
  ORIGINAL[6]: num
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: fd
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771554
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i < len / 3
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 / 3
  ORIGINAL[1]: hex[v & 0xf]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 & 0xf ]
  ORIGINAL[2]: v & 0xf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 & 0xf
  ORIGINAL[3]: v
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476866
FRAGMENT_COUNT: 8
  ORIGINAL[0]: i >= 2 || (i == 1 && wrapper->seq == base->seq)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 2 || ( VAR1 == 1 && wrapper->seq == base->seq )
  ORIGINAL[1]: hdr.trg_sa
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: hdr.trg_lun
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: hdr.src_sa = wrapper->src_sa
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2 = wrapper->src_sa
  ORIGINAL[4]: hdr.src_sa
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: hdr.src_lun
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: src_lun
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: hdr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771648
FRAGMENT_COUNT: 6
  ORIGINAL[0]: p < pmax
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: ch >= 0x20 && ch <= 0x7f
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 0x20 && VAR1 <= 0x7f
  ORIGINAL[2]: ch >= 0x20
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >= 0x20
  ORIGINAL[3]: ch <= 0x7f
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 <= 0x7f
  ORIGINAL[4]: ch
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ch
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771903
FRAGMENT_COUNT: 4
  ORIGINAL[0]: g_snprintf(s, ITEM_LABEL_LENGTH, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ITEM_LABEL_LENGTH
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: v
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477487
FRAGMENT_COUNT: 5
  ORIGINAL[0]: g_snprintf(s, ITEM_LABEL_LENGTH, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: get_udp_port(v)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ITEM_LABEL_LENGTH
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: v
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771324
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (rr = key_lookup_reqresp(kh, hdr, current_pinfo->fd)) != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , current_pinfo->fd ) ) != VAR4
  ORIGINAL[1]: rr->frames[0]
  TYPE[1]: CALL
  TOKENIZED[1]: rr->frames [ 0 ]
  ORIGINAL[2]: rr->frames
  TYPE[2]: CALL
  TOKENIZED[2]: rr->frames
  ORIGINAL[3]: frames
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: rr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640287
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477199
FRAGMENT_COUNT: 3
  ORIGINAL[0]: p + len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + VAR2
  ORIGINAL[1]: p
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477363
FRAGMENT_COUNT: 3
  ORIGINAL[0]: netfn >> 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >> 1
  ORIGINAL[1]: <global> ipmi_cmd_tab
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: netfn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 1
  ORIGINAL[0]: len
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 2
  ORIGINAL[0]: RQ = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: RQ
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771928
FRAGMENT_COUNT: 1
  ORIGINAL[0]: { 0xd5, \
  TYPE[0]: CALL
  TOKENIZED[0]: { 0xd5 , \

CENTER_NODE: 68719477472
FRAGMENT_COUNT: 4
  ORIGINAL[0]: g_snprintf(s, ITEM_LABEL_LENGTH, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: v * 5
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 * 5
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ITEM_LABEL_LENGTH
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

