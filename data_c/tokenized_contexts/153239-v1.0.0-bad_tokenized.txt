# Tokenized code fragments for 153239-v1.0.0-bad
# Total center nodes processed: 15
# Total code fragments found: 70

CENTER_NODE: 68719476751
FRAGMENT_COUNT: 3
  ORIGINAL[0]: COL_SETUID=14
  TYPE[0]: CALL
  TOKENIZED[0]: COL_SETUID=14
  ORIGINAL[1]: COL_SETGID=15
  TYPE[1]: CALL
  TOKENIZED[1]: COL_SETGID=15
  ORIGINAL[2]: COL_SETGID
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640267
FRAGMENT_COUNT: 3
  ORIGINAL[0]: mg_poll_server(stonesoup_server, 1000) == 0 && stonesoup_exit_flag == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1000 ) == 0 && VAR2 == 1
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;
  ORIGINAL[2]: stonesoup_server
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771544
FRAGMENT_COUNT: 1
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \

CENTER_NODE: 30064771099
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mg_vprintf_data((struct mg_connection*) stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( struct mg_connection* ) VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: (struct mg_connection*) stonesoup_printf_context
  TYPE[1]: CALL
  TOKENIZED[1]: ( struct mg_connection* ) VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ev == MG_REQUEST
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: strcmp(ifmatch_header, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: strcmp(ifmatch_header, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: ifmatch_header
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477322
FRAGMENT_COUNT: 4
  ORIGINAL[0]: colorize = FALSE
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: colorize
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: FALSE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: FALSE
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640326
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: cmds[i] . cmdnum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: for (i = 0;cmds[i] . cmdnum;i++)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( VAR1 = 0 ; VAR2 [ VAR1 ] . VAR3 ; i++ )

CENTER_NODE: 68719476807
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buffer_param[0]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ]
  ORIGINAL[1]: first_char
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer_param
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477228
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: cardiorenal_gobbin != 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 0
  ORIGINAL[2]: cardiorenal_gobbin
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cardiorenal_gobbin
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477207
FRAGMENT_COUNT: 19
  ORIGINAL[0]: linedraw = cstable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: linedraw -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: linedraw = cstable + sizeof(cstable) / sizeof(( *cstable)) - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 + sizeof ( VAR2 ) / sizeof ( ( *cstable ) ) - 1
  ORIGINAL[3]: cstable + sizeof(cstable) / sizeof(( *cstable)) - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 + sizeof ( VAR1 ) / sizeof ( ( *cstable ) ) - 1
  ORIGINAL[4]: cstable + sizeof(cstable) / sizeof(( *cstable))
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 + sizeof ( VAR1 ) / sizeof ( ( *cstable ) )
  ORIGINAL[5]: sizeof(cstable) / sizeof(( *cstable))
  TYPE[5]: CALL
  TOKENIZED[5]: sizeof ( VAR1 ) / sizeof ( ( *cstable ) )
  ORIGINAL[6]: sizeof(cstable)
  TYPE[6]: CALL
  TOKENIZED[6]: sizeof ( VAR1 )
  ORIGINAL[7]: sizeof(( *cstable))
  TYPE[7]: CALL
  TOKENIZED[7]: sizeof ( ( *cstable ) )
  ORIGINAL[8]: *cstable
  TYPE[8]: CALL
  TOKENIZED[8]: *cstable
  ORIGINAL[9]: name
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: flag
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: <global> charset
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: <global> VAR1
  ORIGINAL[12]: <global> linedraw
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: <global> VAR1
  ORIGINAL[13]: cstable
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: <global> linedraw
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: <global> VAR1
  ORIGINAL[15]: <global> linedraw
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: <global> VAR1
  ORIGINAL[16]: cstable
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: cstable
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: cstable
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]
  ORIGINAL[1]: missing_flgs = strcpy((xmalloc(strlen(c[1]) + 1)),c[1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( ( FUN2 ( FUN3 ( VAR2 [ 1 ] ) + 1 ) ) , VAR2 [ 1 ] )
  ORIGINAL[2]: strcpy((xmalloc(strlen(c[1]) + 1)),c[1])
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( FUN2 ( FUN3 ( VAR1 [ 1 ] ) + 1 ) ) , VAR1 [ 1 ] )
  ORIGINAL[3]: break;
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: break ;
  ORIGINAL[4]: <global> missing_flgs
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 30064771428
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *nwrds
  TYPE[0]: CALL
  TOKENIZED[0]: *nwrds
  ORIGINAL[1]: w[ *nwrds]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ *nwrds ]
  ORIGINAL[2]: *nwrds == n - 2
  TYPE[2]: CALL
  TOKENIZED[2]: *nwrds == VAR1 - 2
  ORIGINAL[3]: *nwrds
  TYPE[3]: CALL
  TOKENIZED[3]: *nwrds
  ORIGINAL[4]: n - 2
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 - 2
  ORIGINAL[5]: *nwrds
  TYPE[5]: CALL
  TOKENIZED[5]: *nwrds
  ORIGINAL[6]: nwrds
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: n
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: nwrds
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

