# Tokenized code fragments for 501252-v1.0.1-good
# Total center nodes processed: 40
# Total code fragments found: 186

CENTER_NODE: 68719481302
FRAGMENT_COUNT: 4
  ORIGINAL[0]: { \
  TYPE[0]: CALL
  TOKENIZED[0]: { \
  ORIGINAL[1]: HFILL
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: HFILL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: HFILL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771957
FRAGMENT_COUNT: 2
  ORIGINAL[0]: register_init_routine(&arp_init_protocol)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &arp_init_protocol )
  ORIGINAL[1]: &arp_init_protocol
  TYPE[1]: CALL
  TOKENIZED[1]: &arp_init_protocol

CENTER_NODE: 68719476863
FRAGMENT_COUNT: 8
  ORIGINAL[0]: offset + 13
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + 13
  ORIGINAL[1]: tvb_bytes_to_str(tvb, offset + 13, 6)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 + 13 , 6 )
  ORIGINAL[2]: afi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tvb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tvb
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tvb
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771087
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ARP_PRO_IS_IPv4(type, ad_len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: (type) == ETHERTYPE_IP && (ad_len) == 4
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) == VAR2 && ( VAR3 ) == 4
  ORIGINAL[2]: ip_to_str(ad)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: ad
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476883
FRAGMENT_COUNT: 2
  ORIGINAL[0]: GPOINTER_TO_UINT(v)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: v
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772129
FRAGMENT_COUNT: 4
  ORIGINAL[0]: idx>=BOOTP_OPT_NUM
  TYPE[0]: CALL
  TOKENIZED[0]: idx>=BOOTP_OPT_NUM
  ORIGINAL[1]: bootp_opt[idx].ftype
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[2]: bootp_opt[idx]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: ftype
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772122
FRAGMENT_COUNT: 6
  ORIGINAL[0]: idx>=BOOTP_OPT_NUM
  TYPE[0]: CALL
  TOKENIZED[0]: idx>=BOOTP_OPT_NUM
  ORIGINAL[1]: bootp_opt[idx].text
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[2]: bootp_opt[idx]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: text
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> bootp_opt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: idx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064775758
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (c>>6)&03
  TYPE[0]: CALL
  TOKENIZED[0]: ( c>>6 ) &03
  ORIGINAL[1]: c>>6
  TYPE[1]: CALL
  TOKENIZED[1]: c>>6
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719479537
FRAGMENT_COUNT: 5
  ORIGINAL[0]: {\
  TYPE[0]: CALL
  TOKENIZED[0]: { \
  ORIGINAL[1]: NULL
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: special
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719482375
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c == '-' || c == ':'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == '-' || VAR1 == ':'
  ORIGINAL[1]: c == '.'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == ' . '
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719482632
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !dot
  TYPE[0]: CALL
  TOKENIZED[0]: !dot
  ORIGINAL[1]: sicnt = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: subid0 = 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = 0
  ORIGINAL[3]: subid0
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subid0
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719482721
FRAGMENT_COUNT: 8
  ORIGINAL[0]: p++
  TYPE[0]: CALL
  TOKENIZED[0]: p++
  ORIGINAL[1]: isspace(c)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: c==':' || c=='.' || c=='-'
  TYPE[2]: CALL
  TOKENIZED[2]: c==':' || c==' . ' || c=='-'
  ORIGINAL[3]: !isxdigit(c)
  TYPE[3]: CALL
  TOKENIZED[3]: !isxdigit ( VAR1 )
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: p
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: p
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064776416
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *q = '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: *q = '\\0'
  ORIGINAL[1]: *q
  TYPE[1]: CALL
  TOKENIZED[1]: *q
  ORIGINAL[2]: case_insensitive
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: out_string
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640994
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719476885
FRAGMENT_COUNT: 3
  ORIGINAL[0]: v == v2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: v
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: v2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771819
FRAGMENT_COUNT: 6
  ORIGINAL[0]: { \
  TYPE[0]: CALL
  TOKENIZED[0]: { \
  ORIGINAL[1]: FT_UINT8
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: BASE_DEC
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: HFILL
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064776116
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *p == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: *p == '\\0'
  ORIGINAL[1]: ! isxdigit(hex_digit[0])
  TYPE[1]: CALL
  TOKENIZED[1]: ! FUN1 ( VAR1 [ 0 ] )
  ORIGINAL[2]: isxdigit(hex_digit[0])
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 [ 0 ] )
  ORIGINAL[3]: hex_digit[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ]

CENTER_NODE: 30064771072
FRAGMENT_COUNT: 1
  ORIGINAL[0]: mac[6]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 6 ]

CENTER_NODE: 30064772117
FRAGMENT_COUNT: 3
  ORIGINAL[0]: mac_allzero[6] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 6 ] = { 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 }
  ORIGINAL[1]: { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
  TYPE[1]: CALL
  TOKENIZED[1]: { 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 }
  ORIGINAL[2]: mac_allzero
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244641025
FRAGMENT_COUNT: 1
  ORIGINAL[0]: string
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064776146
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fmtbuf[idx] == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == VAR3
  ORIGINAL[1]: fmtbuf[idx] = g_malloc(INITIAL_FMTBUF_SIZE)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = FUN1 ( VAR3 )
  ORIGINAL[2]: fmtbuf[idx]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: g_malloc(INITIAL_FMTBUF_SIZE)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: INITIAL_FMTBUF_SIZE
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719482797
FRAGMENT_COUNT: 8
  ORIGINAL[0]: hlen-- >= nlen
  TYPE[0]: CALL
  TOKENIZED[0]: hlen-- >= VAR1
  ORIGINAL[1]: g_ascii_strncasecmp(haystack, needle, nlen)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: haystack
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: haystack
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: needle
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: nlen
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: haystack
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: haystack
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064776297
FRAGMENT_COUNT: 8
  ORIGINAL[0]: c = *p++
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = *p++
  ORIGINAL[1]: *p++
  TYPE[1]: CALL
  TOKENIZED[1]: *p++
  ORIGINAL[2]: p++
  TYPE[2]: CALL
  TOKENIZED[2]: p++
  ORIGINAL[3]: while ((c = *p++))
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: while ( ( VAR1 = *p++ ) )
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: c
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buffer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064773376
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (fixpoint->altitude_res != 30) && (fixpoint->altitude_res != 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( fixpoint->altitude_res != 30 ) && ( fixpoint->altitude_res != 0 )
  ORIGINAL[1]: decimal->altitude = (double) fixpoint->altitude / (1 << 8)
  TYPE[1]: CALL
  TOKENIZED[1]: decimal->altitude = ( double ) fixpoint->altitude / ( 1 << 8 )
  ORIGINAL[2]: decimal->altitude
  TYPE[2]: CALL
  TOKENIZED[2]: decimal->altitude
  ORIGINAL[3]: (double) fixpoint->altitude / (1 << 8)
  TYPE[3]: CALL
  TOKENIZED[3]: ( double ) fixpoint->altitude / ( 1 << 8 )
  ORIGINAL[4]: altitude
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: decimal
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: decimal
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: decimal
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064775679
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *next_token = linep
  TYPE[0]: CALL
  TOKENIZED[0]: *next_token = VAR1
  ORIGINAL[1]: *next_token
  TYPE[1]: CALL
  TOKENIZED[1]: *next_token
  ORIGINAL[2]: next_token
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: linep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719482111
FRAGMENT_COUNT: 6
  ORIGINAL[0]: lineend > data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2
  ORIGINAL[1]: lineend - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 1
  ORIGINAL[2]: lineend
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: lineend
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: lineend
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: lineend
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719482676
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ba1->len != ba2->len
  TYPE[0]: CALL
  TOKENIZED[0]: ba1->len != ba2->len
  ORIGINAL[1]: ba1->len
  TYPE[1]: CALL
  TOKENIZED[1]: ba1->len
  ORIGINAL[2]: ba1->data
  TYPE[2]: CALL
  TOKENIZED[2]: ba1->data
  ORIGINAL[3]: data
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ba1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ba1
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719482703
FRAGMENT_COUNT: 5
  ORIGINAL[0]: needle_len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: needle_len > haystack_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > VAR2
  ORIGINAL[2]: haystack_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: needle_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: haystack_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477876
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dissector_add(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: arp_handle
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ETHERTYPE_ARP
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arp_handle
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: arp_handle
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244641004
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064774826
FRAGMENT_COUNT: 2
  ORIGINAL[0]: register_init_routine(&bootp_init_protocol)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bootp_init_protocol )
  ORIGINAL[1]: &bootp_init_protocol
  TYPE[1]: CALL
  TOKENIZED[1]: &bootp_init_protocol

CENTER_NODE: 30064773207
FRAGMENT_COUNT: 10
  ORIGINAL[0]: fixpoint->altitude_type = (lci[10]>>4) & 0x0F
  TYPE[0]: CALL
  TOKENIZED[0]: fixpoint->altitude_type = ( VAR1 [ 10 ] >>4 ) & 0x0F
  ORIGINAL[1]: fixpoint->altitude_type
  TYPE[1]: CALL
  TOKENIZED[1]: fixpoint->altitude_type
  ORIGINAL[2]: (lci[10]>>4) & 0x0F
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 [ 10 ] >>4 ) & 0x0F
  ORIGINAL[3]: altitude_type
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fixpoint
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: lci
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: fixpoint
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: fixpoint
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: fixpoint
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: fixpoint
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719476777
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ad_len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: bytes_to_str(ad, ad_len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: ad_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ad
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ad_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719482408
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *s
  TYPE[0]: CALL
  TOKENIZED[0]: *s
  ORIGINAL[1]: *s
  TYPE[1]: CALL
  TOKENIZED[1]: *s
  ORIGINAL[2]: four_digits_second_half[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ]
  ORIGINAL[3]: *s
  TYPE[3]: CALL
  TOKENIZED[3]: *s
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477597
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ar_pln != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: ar_pro
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arp_tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ar_pro
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ar_pln
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ar_pro
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ar_pro
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064775893
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bytes_to_str_punct(bd,bd_len,'\\0')
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , '\\0' )
  ORIGINAL[1]: bd
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: bd_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771090
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ad_len = ad_tl & ATMARP_LEN_MASK
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 & VAR3
  ORIGINAL[1]: ad_tl & ATMARP_LEN_MASK
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & VAR2
  ORIGINAL[2]: ATMARP_LEN_MASK
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ad_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ad_tl
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773929
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tvb_format_stringzpad(tvb, off + 4, tlv_len * 2)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 + 4 , VAR3 * 2 )
  ORIGINAL[1]: off + 4
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 4
  ORIGINAL[2]: tlv_len * 2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 * 2
  ORIGINAL[3]: raw_val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tvb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tlv_len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719482603
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !ba
  TYPE[0]: CALL
  TOKENIZED[0]: !ba
  ORIGINAL[1]: g_byte_array_append(new_ba, ba->data, ba->len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ba->data , ba->len )
  ORIGINAL[2]: new_ba
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: new_ba
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640899
FRAGMENT_COUNT: 2
  ORIGINAL[0]: string < stringend
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: while (string < stringend)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( VAR1 < VAR2 )

