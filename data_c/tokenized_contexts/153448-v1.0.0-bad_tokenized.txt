# Tokenized code fragments for 153448-v1.0.0-bad
# Total center nodes processed: 31
# Total code fragments found: 113

CENTER_NODE: 68719477046
FRAGMENT_COUNT: 6
  ORIGINAL[0]: strlen(citizendom_myocomma) < 20
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) < 20
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_address, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: variable_address
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: variable_address
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_base_path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476918
FRAGMENT_COUNT: 6
  ORIGINAL[0]: memcpy(dest,src,sizeof(( *src)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , sizeof ( ( *src ) ) )
  ORIGINAL[1]: sizeof(( *src))
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( ( *src ) )
  ORIGINAL[2]: *src
  TYPE[2]: CALL
  TOKENIZED[2]: *src
  ORIGINAL[3]: dest
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: src
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771369
FRAGMENT_COUNT: 3
  ORIGINAL[0]: id -> val
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: val
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: id
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771307
FRAGMENT_COUNT: 3
  ORIGINAL[0]: add_lock_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> add_lock_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476859
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dynlock_create_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> dynlock_create_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771119
FRAGMENT_COUNT: 3
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c - 32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 32
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477087
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (*threadid_callback)(CRYPTO_THREADID *) = 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *threadid_callback ) ( VAR1 * ) = 0
  ORIGINAL[1]: *(*dynlock_create_callback)(const char *, int ) = 0
  TYPE[1]: CALL
  TOKENIZED[1]: * ( *dynlock_create_callback ) ( const char * , int ) = 0
  ORIGINAL[2]: <global> dynlock_create_callback
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: 
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: 

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477093
FRAGMENT_COUNT: 2
  ORIGINAL[0]: OPENSSL_NONPIC_relocated = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: OPENSSL_NONPIC_relocated
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476880
FRAGMENT_COUNT: 15
  ORIGINAL[0]: dnum = (sizeof(id -> val))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( sizeof ( VAR2 -> VAR3 ) )
  ORIGINAL[1]: id -> val
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: memset(id,0,sizeof(( *id)))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0 , sizeof ( ( *id ) ) )
  ORIGINAL[3]: sizeof(( *id))
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( ( *id ) )
  ORIGINAL[4]: *id
  TYPE[4]: CALL
  TOKENIZED[4]: *id
  ORIGINAL[5]: id -> ptr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: id -> ptr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: id
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: id
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: id
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: id
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: id
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: id
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: id
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: id
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 68719476903
FRAGMENT_COUNT: 4
  ORIGINAL[0]: threadid_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> threadid_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: <global> threadid_callback
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: func
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476989
FRAGMENT_COUNT: 1
  ORIGINAL[0]: stderr
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771439
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: for (i = 0;i < len;i++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = 0 ; VAR1 < VAR2 ; i++ )
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476868
FRAGMENT_COUNT: 3
  ORIGINAL[0]: locking_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> locking_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476922
FRAGMENT_COUNT: 3
  ORIGINAL[0]: id_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> id_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476906
FRAGMENT_COUNT: 1
  ORIGINAL[0]: <global> threadid_callback
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: <global> VAR1

CENTER_NODE: 30064771444
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *adjoined_forz = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *adjoined_forz = 0
  ORIGINAL[1]: adjoined_forz
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> stonesoup_global_variable
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771524
FRAGMENT_COUNT: 1
  ORIGINAL[0]: OPENSSL_ia32cap_P[2]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 2 ]

CENTER_NODE: 68719477078
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: nutramin_santayana(fishling_que,enclaves_harmsworth)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: fishling_que
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: enclaves_harmsworth
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476871
FRAGMENT_COUNT: 5
  ORIGINAL[0]: memset(id,0,sizeof(( *id)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , sizeof ( ( *id ) ) )
  ORIGINAL[1]: sizeof(( *id))
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( ( *id ) )
  ORIGINAL[2]: *id
  TYPE[2]: CALL
  TOKENIZED[2]: *id
  ORIGINAL[3]: id
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: id
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (getenv(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 30064771364
FRAGMENT_COUNT: 5
  ORIGINAL[0]: memcmp(a,b,sizeof(( *a)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , sizeof ( ( *a ) ) )
  ORIGINAL[1]: sizeof(( *a))
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( ( *a ) )
  ORIGINAL[2]: *a
  TYPE[2]: CALL
  TOKENIZED[2]: *a
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771452
FRAGMENT_COUNT: 3
  ORIGINAL[0]: nutramin_santayana(kenogenetic_megacolon,commandership_soldiery)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: kenogenetic_megacolon
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: commandership_soldiery
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476862
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dynlock_lock_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> dynlock_lock_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i = -i - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = -i - 1
  ORIGINAL[1]: -i - 1
  TYPE[1]: CALL
  TOKENIZED[1]: -i - 1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> dynlock_destroy_callback
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 30064771433
FRAGMENT_COUNT: 2
  ORIGINAL[0]: OPENSSL_showfatal(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: abort()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 68719476982
FRAGMENT_COUNT: 5
  ORIGINAL[0]: __builtin_va_start(ap,fmta)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: vfprintf(stderr,fmta,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: stderr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmta
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640260
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_exit_flag = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771304
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dynlock_destroy_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> dynlock_destroy_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

