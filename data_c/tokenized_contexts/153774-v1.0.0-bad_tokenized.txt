# Tokenized code fragments for 153774-v1.0.0-bad
# Total center nodes processed: 20
# Total code fragments found: 102

CENTER_NODE: 68719476805
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: engine_pile_hash(a)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771162
FRAGMENT_COUNT: 4
  ORIGINAL[0]: engine_cleanup_add_first(cleanup)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: added
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cleanup
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: num_nids
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771245
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (n = sk_find(((_STACK *)((1?pile -> sk : ((struct stack_st_ENGINE *)0)))),((void *)((1?e : ((ENGINE *)0)))))) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( ( ( VAR2 * ) ( ( 1?pile -> VAR3 : ( ( struct VAR4 * ) 0 ) ) ) ) , ( ( void * ) ( ( 1?e : ( ( VAR5 * ) 0 ) ) ) ) ) ) >= 0
  ORIGINAL[1]: n = sk_find(((_STACK *)((1?pile -> sk : ((struct stack_st_ENGINE *)0)))),((void *)((1?e : ((ENGINE *)0)))))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( ( ( VAR2 * ) ( ( 1?pile -> VAR3 : ( ( struct VAR4 * ) 0 ) ) ) ) , ( ( void * ) ( ( 1?e : ( ( VAR5 * ) 0 ) ) ) ) )
  ORIGINAL[2]: sk_find(((_STACK *)((1?pile -> sk : ((struct stack_st_ENGINE *)0)))),((void *)((1?e : ((ENGINE *)0)))))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( VAR1 * ) ( ( 1?pile -> VAR2 : ( ( struct VAR3 * ) 0 ) ) ) ) , ( ( void * ) ( ( 1?e : ( ( VAR4 * ) 0 ) ) ) ) )
  ORIGINAL[3]: n
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771404
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !( *table)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( *table )
  ORIGINAL[1]: !int_table_check(table,0)
  TYPE[1]: CALL
  TOKENIZED[1]: !int_table_check ( VAR1 , 0 )
  ORIGINAL[2]: int_table_check(table,0)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0 )
  ORIGINAL[3]: table
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476869
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771133
FRAGMENT_COUNT: 3
  ORIGINAL[0]: table_flags = flags
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> table_flags
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: flags
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476810
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: engine_pile_cmp(a,b)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477012
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: *b = arg2
  TYPE[1]: CALL
  TOKENIZED[1]: *b = VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771391
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *t
  TYPE[0]: CALL
  TOKENIZED[0]: *t
  ORIGINAL[1]: !create
  TYPE[1]: CALL
  TOKENIZED[1]: !create
  ORIGINAL[2]: create
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771284
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

CENTER_NODE: 68719476875
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int_table_check(table,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: *table
  TYPE[1]: CALL
  TOKENIZED[1]: *table
  ORIGINAL[2]: table
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: table
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 22
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: size_dirpath = strlen(ss_tc_root) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(ss_tc_root) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: strlen(ss_tc_root) + strlen(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[4]: strlen(ss_tc_root)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: strlen(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: dirpath = (char*) malloc (size_dirpath * sizeof(char))
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[7]: (char*) malloc (size_dirpath * sizeof(char))
  TYPE[7]: CALL
  TOKENIZED[7]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[8]: malloc (size_dirpath * sizeof(char))
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[9]: size_dirpath * sizeof(char)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 * sizeof ( char )
  ORIGINAL[10]: sizeof(char)
  TYPE[10]: CALL
  TOKENIZED[10]: sizeof ( char )
  ORIGINAL[11]: dirpath != NULL
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 != VAR2
  ORIGINAL[12]: ss_tc_root
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: NULL
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: size_dirpath
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ss_tc_root
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: dirpath
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: size_dirpath
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: char
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: char
  ORIGINAL[19]: dirpath
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: NULL
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: <global> stonesoup_printf_context
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: <global> VAR1

CENTER_NODE: 30064771136
FRAGMENT_COUNT: 6
  ORIGINAL[0]: a -> nid - b -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 - VAR3 -> VAR2
  ORIGINAL[1]: a -> nid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b -> nid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: nid
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: a
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771459
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (dall -> cb)(pile -> nid,pile -> sk,pile -> funct,dall -> arg)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR3 -> VAR4 , VAR3 -> VAR5 , VAR3 -> VAR6 , VAR1 -> VAR7 )
  ORIGINAL[1]: dall -> cb
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pile -> nid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pile -> sk
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pile -> funct
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: dall -> arg
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2

CENTER_NODE: 30064771471
FRAGMENT_COUNT: 6
  ORIGINAL[0]: dall . arg = arg
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = VAR2
  ORIGINAL[1]: dall . arg
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: arg
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dall
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: arg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dall
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771384
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *table
  TYPE[0]: CALL
  TOKENIZED[0]: *table
  ORIGINAL[1]: &( *table) -> piles
  TYPE[1]: CALL
  TOKENIZED[1]: & ( *table ) -> VAR1
  ORIGINAL[2]: ( *table) -> piles
  TYPE[2]: CALL
  TOKENIZED[2]: ( *table ) -> VAR1
  ORIGINAL[3]: (void *)(&( *table) -> piles)
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) ( & ( *table ) -> VAR1 )
  ORIGINAL[4]: &( *table) -> piles
  TYPE[4]: CALL
  TOKENIZED[4]: & ( *table ) -> VAR1
  ORIGINAL[5]: ( *table) -> piles
  TYPE[5]: CALL
  TOKENIZED[5]: ( *table ) -> VAR1

CENTER_NODE: 30064771293
FRAGMENT_COUNT: 6
  ORIGINAL[0]: p -> funct
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: engine_unlocked_finish(p -> funct,0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , 0 )
  ORIGINAL[2]: p -> funct
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: funct
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771134
FRAGMENT_COUNT: 3
  ORIGINAL[0]: c -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: nid
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

