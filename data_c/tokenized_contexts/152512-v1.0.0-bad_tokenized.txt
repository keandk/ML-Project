# Tokenized code fragments for 152512-v1.0.0-bad
# Total center nodes processed: 13
# Total code fragments found: 47

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i <= inl
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= VAR2
  ORIGINAL[2]: i += bl
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 += VAR2
  ORIGINAL[3]: BF_ecb_encrypt(in + i,out + i,(&((EVP_BF_KEY *)(ctx -> cipher_data)) -> ks),ctx -> encrypt)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 + VAR2 , VAR3 + VAR2 , ( & ( ( VAR4 * ) ( VAR5 -> VAR6 ) ) -> VAR7 ) , VAR5 -> VAR8 )
  ORIGINAL[4]: for (i = 0;i <= inl;i += bl)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: for ( VAR1 = 0 ; VAR1 <= VAR2 ; VAR1 += VAR3 )

CENTER_NODE: 68719476880
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *stonesoup_dbuser = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_dbuser = 0
  ORIGINAL[1]: *stonesoup_dbhost = 0
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_dbhost = 0
  ORIGINAL[2]: stonesoup_dbhost
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476875
FRAGMENT_COUNT: 4
  ORIGINAL[0]: BF_set_key(&((EVP_BF_KEY *)(ctx -> cipher_data)) -> ks,EVP_CIPHER_CTX_key_length(ctx),key)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( & ( ( VAR1 * ) ( VAR2 -> VAR3 ) ) -> VAR4 , FUN2 ( VAR2 ) , VAR5 )
  ORIGINAL[1]: &((EVP_BF_KEY *)(ctx -> cipher_data)) -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: & ( ( VAR1 * ) ( VAR2 -> VAR3 ) ) -> VAR4
  ORIGINAL[2]: EVP_CIPHER_CTX_key_length(ctx)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476782
FRAGMENT_COUNT: 4
  ORIGINAL[0]: inl >= ((size_t )1) << sizeof(long ) * 8 - 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= ( ( VAR2 ) 1 ) << sizeof ( long ) * 8 - 2
  ORIGINAL[1]: (size_t )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1
  ORIGINAL[2]: sizeof(long )
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( long )
  ORIGINAL[3]: long
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: long

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (getenv(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 30064771439
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(93), (1), (16), (8), ((0x8 | 0x3)), (bf_init_key), (bf_cfb64_cipher), (((void *)0)), ((sizeof(EVP_BF_KEY ))), (EVP_CIPHER_set_asn1_iv), (EVP_CIPHER_get_asn1_iv), (((void *)0)), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 93 ) , ( 1 ) , ( 16 ) , ( 8 ) , ( ( 0x8 | 0x3 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( VAR4 ) , ( VAR5 ) , ( ( ( void * ) 0 ) ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 5
  ORIGINAL[0]: inl >= ((size_t )1) << sizeof(long ) * 8 - 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= ( ( VAR2 ) 1 ) << sizeof ( long ) * 8 - 2
  ORIGINAL[1]: &ctx -> num
  TYPE[1]: CALL
  TOKENIZED[1]: &ctx -> VAR1
  ORIGINAL[2]: ctx -> num
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: num
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640260
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_exit_flag = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771174
FRAGMENT_COUNT: 10
  ORIGINAL[0]: inl && inl >= chunk
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 >= VAR2
  ORIGINAL[1]: BF_cfb64_encrypt(in,out,((long )(64 == 1 && !(ctx -> flags & 0x2000)?inl * 8 : inl)),(&((EVP_BF_KEY *)(ctx -> cipher_data)) -> ks),ctx -> iv,&ctx -> num,ctx -> encrypt)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , ( ( long ) ( 64 == 1 && ! ( VAR3 -> VAR4 & 0x2000 ) ?inl * 8 : VAR5 ) ) , ( & ( ( VAR6 * ) ( VAR3 -> VAR7 ) ) -> VAR8 ) , VAR3 -> VAR9 , &ctx -> VAR10 , VAR3 -> VAR11 )
  ORIGINAL[2]: (long )(64 == 1 && !(ctx -> flags & 0x2000)?inl * 8 : inl)
  TYPE[2]: CALL
  TOKENIZED[2]: ( long ) ( 64 == 1 && ! ( VAR1 -> VAR2 & 0x2000 ) ?inl * 8 : VAR3 )
  ORIGINAL[3]: 64 == 1 && !(ctx -> flags & 0x2000)?inl * 8 : inl
  TYPE[3]: CALL
  TOKENIZED[3]: 64 == 1 && ! ( VAR1 -> VAR2 & 0x2000 ) ?inl * 8 : VAR3
  ORIGINAL[4]: &((EVP_BF_KEY *)(ctx -> cipher_data)) -> ks
  TYPE[4]: CALL
  TOKENIZED[4]: & ( ( VAR1 * ) ( VAR2 -> VAR3 ) ) -> VAR4
  ORIGINAL[5]: ctx -> iv
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &ctx -> num
  TYPE[6]: CALL
  TOKENIZED[6]: &ctx -> VAR1
  ORIGINAL[7]: ctx -> encrypt
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: in
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: out
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 2
  ORIGINAL[0]: mkdir(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (mkdir(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

