# Tokenized code fragments for 153766-v1.0.0-bad
# Total center nodes processed: 27
# Total code fragments found: 72

CENTER_NODE: 68719477071
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ftruncate(swap_file -> fd,new_size) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 ) != 0
  ORIGINAL[1]: g_log(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: gettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: g_strerror( *__errno_location())
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( *__errno_location ( ) )
  ORIGINAL[4]: G_LOG_LEVEL_MESSAGE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640280
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476857
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gimp_swap_file = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> gimp_swap_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476869
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tile -> swap_offset == (- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( - 1 )
  ORIGINAL[1]: tile_swap_command(tile,SWAP_IN)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: tile
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: SWAP_IN
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771268
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_OUT)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_OUT
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477291
FRAGMENT_COUNT: 3
  ORIGINAL[0]: g_slice_free1(sizeof(SwapFileGap ),gap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( sizeof ( VAR1 ) , VAR2 )
  ORIGINAL[1]: sizeof(SwapFileGap )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: gap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640345
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771074
FRAGMENT_COUNT: 2
  ORIGINAL[0]: SWAP_DELETE=3
  TYPE[0]: CALL
  TOKENIZED[0]: SWAP_DELETE=3
  ORIGINAL[1]: SWAP_DELETE
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640344
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771856
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (void )(((SwapFileGap *)0) == gap)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( ( VAR1 * ) 0 ) == VAR2 )
  ORIGINAL[1]: ((SwapFileGap *)0) == gap
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 * ) 0 ) == VAR2
  ORIGINAL[2]: (SwapFileGap *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) 0
  ORIGINAL[3]: gap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771714
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mungy_septfoil != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *hellenized_unwithered)))))))))))))))))))))))))))))))))))))))
  TYPE[1]: CALL
  TOKENIZED[1]: * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *hellenized_unwithered ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
  ORIGINAL[2]: *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *hellenized_unwithered))))))))))))))))))))))))))))))))))))))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *hellenized_unwithered ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
  ORIGINAL[3]: *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *hellenized_unwithered)))))))))))))))))))))))))))))))))))))
  TYPE[3]: CALL
  TOKENIZED[3]: * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *hellenized_unwithered ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )

CENTER_NODE: 30064771893
FRAGMENT_COUNT: 7
  ORIGINAL[0]: strlen(stonesoup_source) + 1 <= 64
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) + 1 <= 64
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_buffer_info, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: strlen(stonesoup_buffer)+1
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) +1
  ORIGINAL[3]: strlen(stonesoup_buffer)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: stonesoup_trace
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: variable_buffer_info
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_buffer
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771393
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tile -> swap_offset == (- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( - 1 )
  ORIGINAL[1]: 64 * 64 * (tile -> bpp)
  TYPE[1]: CALL
  TOKENIZED[1]: 64 * 64 * ( VAR1 -> VAR2 )
  ORIGINAL[2]: 64 * 64
  TYPE[2]: CALL
  TOKENIZED[2]: 64 * 64
  ORIGINAL[3]: tile -> bpp
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tile
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476807
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stonesoup_tainted_file != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: fseek(stonesoup_tainted_file,0L,2)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 0L , 2 )
  ORIGINAL[2]: stonesoup_lsize = ftell(stonesoup_tainted_file)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[3]: ftell(stonesoup_tainted_file)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: stonesoup_lsize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_lsize
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 3
  ORIGINAL[0]: retval = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: retval
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ss_tc_root
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771915
FRAGMENT_COUNT: 3
  ORIGINAL[0]: importunacy_psalmodize(desertness_noncabinet,psychedelics_generalise)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: desertness_noncabinet
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: psychedelics_generalise
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771269
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_DELETE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_DELETE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640282
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 1
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 6
  ORIGINAL[0]: dirname = gimp_config_path_expand(path,!0,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , !0 , ( ( void * ) 0 ) )
  ORIGINAL[1]: gimp_config_path_expand(path,!0,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , !0 , ( ( void * ) 0 ) )
  ORIGINAL[2]: !0
  TYPE[2]: CALL
  TOKENIZED[2]: !0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: dirname
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640334
FRAGMENT_COUNT: 1
  ORIGINAL[0]: swap_file -> fd == - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == - 1

CENTER_NODE: 68719477287
FRAGMENT_COUNT: 6
  ORIGINAL[0]: gap -> start = start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: gap -> start
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: gap -> end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: end
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: gap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: gap
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

