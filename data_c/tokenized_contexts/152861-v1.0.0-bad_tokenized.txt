# Tokenized code fragments for 152861-v1.0.0-bad
# Total center nodes processed: 85
# Total code fragments found: 378

CENTER_NODE: 68719477242
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i == path1_len && path2[i] == 47 || i == path2_len && path1[i] == 47 || i == path1_len && i == path2_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 && VAR3 [ VAR1 ] == 47 || VAR1 == VAR4 && VAR5 [ VAR1 ] == 47 || VAR1 == VAR2 && VAR1 == VAR4
  ORIGINAL[1]: last_dirsep == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: last_dirsep
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: last_dirsep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: last_dirsep
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: last_dirsep
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477295
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dirent[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: dirent[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771893
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_dirent_is_canonical(base,pool)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_dirent_is_canonical(base,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: __assert_fail(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: base
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: <global> __PRETTY_FUNCTION__
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1

CENTER_NODE: 68719477298
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_relpath_canonicalize(internal_style(relpath,pool),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , VAR2 ) , VAR2 )
  ORIGINAL[1]: internal_style(relpath,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772996
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: fspath[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: fspath[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: fspath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772287
FRAGMENT_COUNT: 4
  ORIGINAL[0]: result?svn_path_uri_decode(result,result_pool) : ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: result?svn_path_uri_decode ( VAR1 , VAR2 ) : ( ( void * ) 0 )
  ORIGINAL[1]: svn_path_uri_decode(result,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640477
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640587
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773088
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_fspath__is_canonical(result)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_fspath__is_canonical(result)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: __assert_fail(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: result
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> __PRETTY_FUNCTION__
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 47244640620
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (shmsz = atoi(optarg)) <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 ) ) <= 0
  ORIGINAL[1]: errors++
  TYPE[1]: CALL
  TOKENIZED[1]: errors++
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772972
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dirent[0] == 47 && dirent[1] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47 && VAR1 [ 1 ] == '\\0'
  ORIGINAL[1]: dirent = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: url
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772908
FRAGMENT_COUNT: 8
  ORIGINAL[0]: status = apr_filepath_merge(&full_path,base_path,path,0x01 | 0x02,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &full_path , VAR2 , VAR3 , 0x01 | 0x02 , VAR4 )
  ORIGINAL[1]: apr_filepath_merge(&full_path,base_path,path,0x01 | 0x02,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &full_path , VAR1 , VAR2 , 0x01 | 0x02 , VAR3 )
  ORIGINAL[2]: &full_path
  TYPE[2]: CALL
  TOKENIZED[2]: &full_path
  ORIGINAL[3]: 0x01 | 0x02
  TYPE[3]: CALL
  TOKENIZED[3]: 0x01 | 0x02
  ORIGINAL[4]: status
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: base_path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: path
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: result_pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477649
FRAGMENT_COUNT: 3
  ORIGINAL[0]: is_child(type_dirent,parent_dirent,child_dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: child_dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772297
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !dirent
  TYPE[0]: CALL
  TOKENIZED[0]: !dirent
  ORIGINAL[1]: dirent[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: dirent[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: !0
  TYPE[3]: CALL
  TOKENIZED[3]: !0

CENTER_NODE: 68719476937
FRAGMENT_COUNT: 10
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: --len
  TYPE[1]: CALL
  TOKENIZED[1]: --len
  ORIGINAL[2]: len > 0 && relpath[len] != 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > 0 && VAR2 [ VAR1 ] != 47
  ORIGINAL[3]: len > 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 > 0
  ORIGINAL[4]: --len
  TYPE[4]: CALL
  TOKENIZED[4]: --len
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: len
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064772238
FRAGMENT_COUNT: 5
  ORIGINAL[0]: child_dirent[len] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 47
  ORIGINAL[1]: child_dirent + len + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2 + 1
  ORIGINAL[2]: child_dirent + len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2
  ORIGINAL[3]: child_dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772294
FRAGMENT_COUNT: 5
  ORIGINAL[0]: uri_skip_ancestor(parent_uri,child_uri) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 ) != ( ( void * ) 0 )
  ORIGINAL[1]: uri_skip_ancestor(parent_uri,child_uri)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: parent_uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: child_uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477618
FRAGMENT_COUNT: 6
  ORIGINAL[0]: uri1[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: uri2[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: uri2[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: uri2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uri2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 2
  ORIGINAL[0]: c < 65 || c > 'Z'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 65 || VAR1 > 'Z'
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064772166
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *base_name = svn_uri_basename(uri,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *base_name = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: *base_name
  TYPE[1]: CALL
  TOKENIZED[1]: *base_name
  ORIGINAL[2]: svn_uri_basename(uri,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: base_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772983
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fspath[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47
  ORIGINAL[1]: relpath_is_canonical(fspath + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 + 1 )
  ORIGINAL[2]: fspath + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: fspath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640532
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772142
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_uri_is_canonical(uri,((void *)0))?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_uri_is_canonical(uri,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: __assert_fail(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773067
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fspath[1] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ] == '\\0'
  ORIGINAL[1]: (char *)((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( char * ) ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c < 'a' || c > 'z'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 'a' || VAR1 > 'z'
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772991
FRAGMENT_COUNT: 6
  ORIGINAL[0]: fspath[0] == 47 && fspath[1] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47 && VAR1 [ 1 ] == '\\0'
  ORIGINAL[1]: apr_pstrcat(pool,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: svn_relpath_canonicalize(fspath,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: (char *)((void *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) ( ( void * ) 0 )
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771339
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: i == 0 && len > 1 && ( *uri) == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0 && VAR2 > 1 && ( *uri ) == 47
  ORIGINAL[2]: i == 0 && len > 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0 && VAR2 > 1
  ORIGINAL[3]: ( *uri) == 47
  TYPE[3]: CALL
  TOKENIZED[3]: ( *uri ) == 47
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773011
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_fspath__is_canonical(fspath)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_fspath__is_canonical(fspath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: __assert_fail(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: <global> __PRETTY_FUNCTION__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719477369
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_dirent_is_canonical(s,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772292
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_dirent_skip_ancestor(parent_dirent,child_dirent) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 ) != ( ( void * ) 0 )
  ORIGINAL[1]: svn_dirent_skip_ancestor(parent_dirent,child_dirent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 68719478258
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dirpath != base_name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: dirpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: base_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: base_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771134
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *stonesoup_tainted_buff = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_tainted_buff = VAR1
  ORIGINAL[1]: *stonesoup_tainted_buff
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_tainted_buff
  ORIGINAL[2]: stonesoup_tainted_buff
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_tainted_buff
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_buff
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 30064772124
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *dirpath = (svn_relpath_dirname(relpath,pool))
  TYPE[0]: CALL
  TOKENIZED[0]: *dirpath = ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[1]: *dirpath
  TYPE[1]: CALL
  TOKENIZED[1]: *dirpath
  ORIGINAL[2]: svn_relpath_dirname(relpath,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: base_name
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476911
FRAGMENT_COUNT: 10
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i < len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: uri[i] == 47
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] == 47
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771074
FRAGMENT_COUNT: 2
  ORIGINAL[0]: type_relpath=2
  TYPE[0]: CALL
  TOKENIZED[0]: type_relpath=2
  ORIGINAL[1]: type_relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064773091
FRAGMENT_COUNT: 23
  ORIGINAL[0]: svn_path_is_url(uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: uri = svn_uri_canonicalize(uri,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: svn_uri_canonicalize(uri,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: uri = svn_fspath__canonicalize(uri,pool)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: svn_fspath__canonicalize(uri,pool)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: uri = svn_path_uri_decode(uri,pool)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[6]: svn_path_uri_decode(uri,pool)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[7]: uri = svn_path_uri_encode(uri,pool)
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[8]: svn_path_uri_encode(uri,pool)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[9]: uri
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: uri
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: uri
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: pool
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: uri
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: uri
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: pool
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: uri
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: uri
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: pool
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: uri
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: uri
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: pool
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: uri
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1

CENTER_NODE: 68719478138
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pcondensed_targets != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: *pcondensed_targets = apr_array_make(result_pool,num_condensed,(sizeof(const char *)))
  TYPE[1]: CALL
  TOKENIZED[1]: *pcondensed_targets = FUN1 ( VAR1 , VAR2 , ( sizeof ( const char * ) ) )
  ORIGINAL[2]: i = 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = 0
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477305
FRAGMENT_COUNT: 4
  ORIGINAL[0]: uri_schema_root_length(uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 2
  ORIGINAL[0]: dirent_root_length(dirent,len + 1) == len + 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 + 1 ) == VAR2 + 1
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477526
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len = strlen(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(relpath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477474
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_dirent_is_canonical(dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __PRETTY_FUNCTION__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064773133
FRAGMENT_COUNT: 5
  ORIGINAL[0]: isValid(cohusband_whitmore) == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) == 1
  ORIGINAL[1]: stonesoup_fpipe = popen(stonesoup_command_buffer,\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: popen(stonesoup_command_buffer,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: stonesoup_fpipe
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_command_buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772938
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hostname = (apr_pstrmemdup(pool,hostname,(path - hostname)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , VAR1 , ( VAR3 - VAR1 ) ) )
  ORIGINAL[1]: apr_pstrmemdup(pool,hostname,(path - hostname))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , ( VAR3 - VAR2 ) )
  ORIGINAL[2]: path
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hostname
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hostname
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772349
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ( *relpath) == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: ( *relpath ) == '\\0'
  ORIGINAL[1]: ( *ptr) == 47
  TYPE[1]: CALL
  TOKENIZED[1]: ( *ptr ) == 47
  ORIGINAL[2]: *ptr
  TYPE[2]: CALL
  TOKENIZED[2]: *ptr
  ORIGINAL[3]: *ptr
  TYPE[3]: CALL
  TOKENIZED[3]: *ptr
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640466
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772997
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_fspath__is_canonical(parent_fspath)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_fspath__is_canonical(parent_fspath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: __assert_fail(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: child_fspath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 5
  ORIGINAL[0]: isxdigit(a) && isxdigit(b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) && FUN1 ( VAR2 )
  ORIGINAL[1]: isxdigit(a)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: isxdigit(b)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772317
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_dirent_is_absolute(relative) && svn_dirent_is_canonical(relative,pool) && !svn_path_is_backpath_present(relative)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) && FUN2 ( VAR1 , VAR2 ) && !svn_path_is_backpath_present ( VAR1 )
  ORIGINAL[1]: svn_dirent_is_absolute(relative) && svn_dirent_is_canonical(relative,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) && FUN2 ( VAR1 , VAR2 )
  ORIGINAL[2]: !svn_path_is_backpath_present(relative)
  TYPE[2]: CALL
  TOKENIZED[2]: !svn_path_is_backpath_present ( VAR1 )
  ORIGINAL[3]: svn_path_is_backpath_present(relative)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )

CENTER_NODE: 30064773034
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (void )0
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) 0
  ORIGINAL[1]: strchr(result,47) == ((void *)0)?((void )0) : __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 47 ) == ( ( void * ) 0 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[2]: strchr(result,47) == ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 47 ) == ( ( void * ) 0 )
  ORIGINAL[3]: (void )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void ) 0

CENTER_NODE: 30064772637
FRAGMENT_COUNT: 11
  ORIGINAL[0]: targets -> nelts == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 1
  ORIGINAL[1]: *((const char **)(apr_array_push(abs_targets))) =  *pcommon
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( const char ** ) ( FUN1 ( VAR1 ) ) ) = *pcommon
  ORIGINAL[2]: *((const char **)(apr_array_push(abs_targets)))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( ( const char ** ) ( FUN1 ( VAR1 ) ) )
  ORIGINAL[3]: *pcommon
  TYPE[3]: CALL
  TOKENIZED[3]: *pcommon
  ORIGINAL[4]: *pcommon
  TYPE[4]: CALL
  TOKENIZED[4]: *pcommon
  ORIGINAL[5]: *pcommon
  TYPE[5]: CALL
  TOKENIZED[5]: *pcommon
  ORIGINAL[6]: pcommon
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pcommon
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pcommon
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pcommon
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pcommon
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772101
FRAGMENT_COUNT: 4
  ORIGINAL[0]: apr_pstrmemdup(pool,relpath,relpath_previous_segment(relpath,len))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , FUN2 ( VAR2 , VAR3 ) )
  ORIGINAL[1]: relpath_previous_segment(relpath,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771714
FRAGMENT_COUNT: 17
  ORIGINAL[0]: *(dst++)
  TYPE[0]: CALL
  TOKENIZED[0]: * ( dst++ )
  ORIGINAL[1]: *(dst++)
  TYPE[1]: CALL
  TOKENIZED[1]: * ( dst++ )
  ORIGINAL[2]: *(dst++)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( dst++ )
  ORIGINAL[3]: *(dst++)
  TYPE[3]: CALL
  TOKENIZED[3]: * ( dst++ )
  ORIGINAL[4]: *(dst++)
  TYPE[4]: CALL
  TOKENIZED[4]: * ( dst++ )
  ORIGINAL[5]: *(dst++)
  TYPE[5]: CALL
  TOKENIZED[5]: * ( dst++ )
  ORIGINAL[6]: *(dst++)
  TYPE[6]: CALL
  TOKENIZED[6]: * ( dst++ )
  ORIGINAL[7]: *(dst++)
  TYPE[7]: CALL
  TOKENIZED[7]: * ( dst++ )
  ORIGINAL[8]: *(dst++)
  TYPE[8]: CALL
  TOKENIZED[8]: * ( dst++ )
  ORIGINAL[9]: !(0 != (svn_ctype_table[(unsigned char )( *(src + 1))] & (0x0004 | 0x0040))) || !(0 != (svn_ctype_table[(unsigned char )( *(src + 2))] & (0x0004 | 0x0040)))
  TYPE[9]: CALL
  TOKENIZED[9]: ! ( 0 != ( VAR1 [ ( unsigned char ) ( * ( VAR2 + 1 ) ) ] & ( 0x0004 | 0x0040 ) ) ) || ! ( 0 != ( VAR1 [ ( unsigned char ) ( * ( VAR2 + 2 ) ) ] & ( 0x0004 | 0x0040 ) ) )
  ORIGINAL[10]: *(dst++)
  TYPE[10]: CALL
  TOKENIZED[10]: * ( dst++ )
  ORIGINAL[11]: dst++
  TYPE[11]: CALL
  TOKENIZED[11]: dst++
  ORIGINAL[12]: *(dst++)
  TYPE[12]: CALL
  TOKENIZED[12]: * ( dst++ )
  ORIGINAL[13]: *(dst++)
  TYPE[13]: CALL
  TOKENIZED[13]: * ( dst++ )
  ORIGINAL[14]: *(dst++)
  TYPE[14]: CALL
  TOKENIZED[14]: * ( dst++ )
  ORIGINAL[15]: *(dst++)
  TYPE[15]: CALL
  TOKENIZED[15]: * ( dst++ )
  ORIGINAL[16]: dst
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 47244640468
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477763
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ( *ptr) == 47
  TYPE[0]: CALL
  TOKENIZED[0]: ( *ptr ) == 47
  ORIGINAL[1]: *ptr
  TYPE[1]: CALL
  TOKENIZED[1]: *ptr
  ORIGINAL[2]: ptr++
  TYPE[2]: CALL
  TOKENIZED[2]: ptr++
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477788
FRAGMENT_COUNT: 2
  ORIGINAL[0]: relpath_is_canonical(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640596
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640472
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771212
FRAGMENT_COUNT: 11
  ORIGINAL[0]: src[i] != '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] != '\\0'
  ORIGINAL[1]: src[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: src[i] == ';'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ] == ' ; '
  ORIGINAL[3]: src[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]
  ORIGINAL[4]: i == 0 || src[i-1] != '\\\\'
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[5]: i == 0 || src[i-1] != '\\\\'
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[6]: src[i] == '&'
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ VAR2 ] == '&'
  ORIGINAL[7]: i == 0 || src[i-1] != '\\\\'
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[8]: while (src[i] != '\\0')
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: while ( VAR1 [ VAR2 ] != '\\0' )
  ORIGINAL[9]: src
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719477607
FRAGMENT_COUNT: 4
  ORIGINAL[0]: get_longest_ancestor_length(type_relpath,relpath1,relpath2,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: relpath1
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: type_relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relpath1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477753
FRAGMENT_COUNT: 4
  ORIGINAL[0]: canonicalize(type_relpath,relpath,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476933
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !dirent
  TYPE[0]: CALL
  TOKENIZED[0]: !dirent
  ORIGINAL[1]: dirent[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477517
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_dirent_basename(dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: base_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772041
FRAGMENT_COUNT: 6
  ORIGINAL[0]: clen == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: apr_pmemdup(pool,base,blen + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 + 1 )
  ORIGINAL[2]: blen + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: base
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: blen
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771876
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len == 1 && dirent[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: len == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 1
  ORIGINAL[2]: dirent[0] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 47
  ORIGINAL[3]: !0
  TYPE[3]: CALL
  TOKENIZED[3]: !0

CENTER_NODE: 47244640585
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640464
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640414
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 30064772334
FRAGMENT_COUNT: 4
  ORIGINAL[0]: canonicalize(type_uri,uri,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477681
FRAGMENT_COUNT: 5
  ORIGINAL[0]: 0 != strncmp(parent_relpath,child_relpath,len)
  TYPE[0]: CALL
  TOKENIZED[0]: 0 != FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: child_relpath[len]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: child_relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: child_relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772066
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(dirent)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(dirent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640509
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476870
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *semimade_reckoning = {0}
  TYPE[0]: CALL
  TOKENIZED[0]: *semimade_reckoning = { 0 }
  ORIGINAL[1]: saprolegniales_stockstone = 35
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 35
  ORIGINAL[2]: saprolegniales_stockstone
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: saprolegniales_stockstone
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 3
  ORIGINAL[0]: retval = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: retval
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ss_tc_root
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640438
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_uri_is_root(uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064771276
FRAGMENT_COUNT: 3
  ORIGINAL[0]: len >= 1 && dirent[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: len >= 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 1
  ORIGINAL[2]: dirent[0] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 47

CENTER_NODE: 68719477600
FRAGMENT_COUNT: 4
  ORIGINAL[0]: get_longest_ancestor_length(type_dirent,dirent1,dirent2,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirent2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477287
FRAGMENT_COUNT: 6
  ORIGINAL[0]: path2[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: path2 + i
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772337
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *dst = canonicalize(type_dirent,dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *dst = FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: canonicalize(type_dirent,dirent,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: type_dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772284
FRAGMENT_COUNT: 2
  ORIGINAL[0]: child_uri[len] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 47
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064772550
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ( *(ptr + 1)) < 48 || ( *(ptr + 1)) > '9'
  TYPE[0]: CALL
  TOKENIZED[0]: ( * ( VAR1 + 1 ) ) < 48 || ( * ( VAR1 + 1 ) ) > '9'
  ORIGINAL[1]: ( *(ptr + 1)) < 65 || ( *(ptr + 1)) > 'F'
  TYPE[1]: CALL
  TOKENIZED[1]: ( * ( VAR1 + 1 ) ) < 65 || ( * ( VAR1 + 1 ) ) > 'F'
  ORIGINAL[2]: ( *(ptr + 1)) < 65
  TYPE[2]: CALL
  TOKENIZED[2]: ( * ( VAR1 + 1 ) ) < 65
  ORIGINAL[3]: *(ptr + 1)
  TYPE[3]: CALL
  TOKENIZED[3]: * ( VAR1 + 1 )
  ORIGINAL[4]: ( *(ptr + 1)) > 'F'
  TYPE[4]: CALL
  TOKENIZED[4]: ( * ( VAR1 + 1 ) ) > 'F'
  ORIGINAL[5]: *(ptr + 1)
  TYPE[5]: CALL
  TOKENIZED[5]: * ( VAR1 + 1 )
  ORIGINAL[6]: ptr + 1
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 + 1
  ORIGINAL[7]: ptr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640527
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476789
FRAGMENT_COUNT: 4
  ORIGINAL[0]: vfprintf(stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: va_end(argptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: argptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477291
FRAGMENT_COUNT: 3
  ORIGINAL[0]: internal_style(dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

