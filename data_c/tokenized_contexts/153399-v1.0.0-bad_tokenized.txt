# Tokenized code fragments for 153399-v1.0.0-bad
# Total center nodes processed: 47
# Total code fragments found: 153

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 12
  ORIGINAL[0]: p == start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: svn_string_ncreate(start,(p - start),pool) -> data
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( VAR2 - VAR1 ) , VAR3 ) -> VAR4
  ORIGINAL[3]: svn_string_ncreate(start,(p - start),pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ( VAR2 - VAR1 ) , VAR3 )
  ORIGINAL[4]: p - start
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 - VAR2
  ORIGINAL[5]: data
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: p
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: start
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: start
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: p
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: start
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: pool
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640404
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640328
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771316
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *__errno_location()
  TYPE[0]: CALL
  TOKENIZED[0]: *__errno_location ( )
  ORIGINAL[1]: *__errno_location()
  TYPE[1]: CALL
  TOKENIZED[1]: *__errno_location ( )
  ORIGINAL[2]: *__errno_location()
  TYPE[2]: CALL
  TOKENIZED[2]: *__errno_location ( )
  ORIGINAL[3]: __errno_location()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640396
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771358
FRAGMENT_COUNT: 28
  ORIGINAL[0]: failures == 0 || failures == 0x00000008
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 || VAR1 == 0x00000008
  ORIGINAL[1]: failures == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: failures == 0x00000008
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0x00000008
  ORIGINAL[3]: *cred_p = (memset(apr_palloc(pool,sizeof(( *( *cred_p)))),0,sizeof(( *( *cred_p)))))
  TYPE[3]: CALL
  TOKENIZED[3]: *cred_p = ( FUN1 ( FUN2 ( VAR1 , sizeof ( ( * ( *cred_p ) ) ) ) , 0 , sizeof ( ( * ( *cred_p ) ) ) ) )
  ORIGINAL[4]: *cred_p
  TYPE[4]: CALL
  TOKENIZED[4]: *cred_p
  ORIGINAL[5]: memset(apr_palloc(pool,sizeof(( *( *cred_p)))),0,sizeof(( *( *cred_p))))
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( FUN2 ( VAR1 , sizeof ( ( * ( *cred_p ) ) ) ) , 0 , sizeof ( ( * ( *cred_p ) ) ) )
  ORIGINAL[6]: apr_palloc(pool,sizeof(( *( *cred_p))))
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , sizeof ( ( * ( *cred_p ) ) ) )
  ORIGINAL[7]: sizeof(( *( *cred_p)))
  TYPE[7]: CALL
  TOKENIZED[7]: sizeof ( ( * ( *cred_p ) ) )
  ORIGINAL[8]: *( *cred_p)
  TYPE[8]: CALL
  TOKENIZED[8]: * ( *cred_p )
  ORIGINAL[9]: *cred_p
  TYPE[9]: CALL
  TOKENIZED[9]: *cred_p
  ORIGINAL[10]: sizeof(( *( *cred_p)))
  TYPE[10]: CALL
  TOKENIZED[10]: sizeof ( ( * ( *cred_p ) ) )
  ORIGINAL[11]: *( *cred_p)
  TYPE[11]: CALL
  TOKENIZED[11]: * ( *cred_p )
  ORIGINAL[12]: *cred_p
  TYPE[12]: CALL
  TOKENIZED[12]: *cred_p
  ORIGINAL[13]: ( *cred_p) -> may_save = 0
  TYPE[13]: CALL
  TOKENIZED[13]: ( *cred_p ) -> VAR1 = 0
  ORIGINAL[14]: ( *cred_p) -> may_save
  TYPE[14]: CALL
  TOKENIZED[14]: ( *cred_p ) -> VAR1
  ORIGINAL[15]: *cred_p
  TYPE[15]: CALL
  TOKENIZED[15]: *cred_p
  ORIGINAL[16]: ( *cred_p) -> accepted_failures = failures
  TYPE[16]: CALL
  TOKENIZED[16]: ( *cred_p ) -> VAR1 = VAR2
  ORIGINAL[17]: ( *cred_p) -> accepted_failures
  TYPE[17]: CALL
  TOKENIZED[17]: ( *cred_p ) -> VAR1
  ORIGINAL[18]: *cred_p
  TYPE[18]: CALL
  TOKENIZED[18]: *cred_p
  ORIGINAL[19]: may_save
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: accepted_failures
  TYPE[20]: FIELD_IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: cred_p
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: pool
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: cred_p
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: cred_p
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: cred_p
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: cred_p
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: failures
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477164
FRAGMENT_COUNT: 6
  ORIGINAL[0]: equals_sign = (strchr(second_colon + 1,'='))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 + 1 , '=' ) )
  ORIGINAL[1]: second_colon + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: second_colon
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: equals_sign
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: second_colon
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: second_colon
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771691
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_prop_needs_translation(pname)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: *svn_err__temp = svn_cmdline_cstring_from_utf8(&pname_stdout,pname,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( &pname_stdout , VAR1 , VAR2 )
  ORIGINAL[2]: svn_cmdline_cstring_from_utf8(&pname_stdout,pname,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &pname_stdout , VAR1 , VAR2 )
  ORIGINAL[3]: &pname_stdout
  TYPE[3]: CALL
  TOKENIZED[3]: &pname_stdout
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pname
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477360
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !e
  TYPE[0]: CALL
  TOKENIZED[0]: !e
  ORIGINAL[1]: cfg = ((config?apr_hash_get(config,\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( config?apr_hash_get ( VAR2 , \
  ORIGINAL[2]: config?apr_hash_get(config,\
  TYPE[2]: CALL
  TOKENIZED[2]: config?apr_hash_get ( VAR1 , \
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: config
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640379
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771534
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_xml_is_xml_safe(propval -> data,propval -> len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR1 -> VAR3 )
  ORIGINAL[1]: xml_safe = base64ed -> data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3
  ORIGINAL[2]: base64ed -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: data
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: base64ed
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: xml_safe
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: base64ed
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stat(dirpath, &st) == -1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &st ) == -1
  ORIGINAL[1]: retval = mkdir(dirpath, 0700)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , 0700 )
  ORIGINAL[2]: mkdir(dirpath, 0700)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0700 )
  ORIGINAL[3]: retval
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477197
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < config_options -> nelts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: svn_config_set(cfg,arg -> section,arg -> option,arg -> value)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR2 -> VAR4 , VAR2 -> VAR5 )
  ORIGINAL[3]: svn_error_clear(err)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476907
FRAGMENT_COUNT: 6
  ORIGINAL[0]: output_encoding == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_utf_cstring_from_utf8_ex2(dest,src,output_encoding,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: dest
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> output_encoding
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477097
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !non_interactive
  TYPE[0]: CALL
  TOKENIZED[0]: !non_interactive
  ORIGINAL[1]: *svn_err__temp = svn_config_get_bool(cfg,&store_password_val,\
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 , &store_password_val , \
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640359
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477247
FRAGMENT_COUNT: 4
  ORIGINAL[0]: line = next_line(&str,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &str , VAR2 )
  ORIGINAL[1]: svn_stringbuf_appendcstr(out,indent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: out
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: indent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 1
  ORIGINAL[0]: apr_err
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719476911
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_cmdline_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476941
FRAGMENT_COUNT: 5
  ORIGINAL[0]: __builtin_va_end(ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: svn_cmdline_fputs(message,stream,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: message
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: message
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640313
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640366
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 1
  ORIGINAL[0]: err && (err -> apr_err == 13 || err -> apr_err == 30)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && ( VAR1 -> VAR2 == 13 || VAR1 -> VAR2 == 30 )

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *__errno_location() == 32
  TYPE[0]: CALL
  TOKENIZED[0]: *__errno_location ( ) == 32
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_tainted_file != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: *stonesoup_tainted_buff = ((char *)(malloc(sizeof(char ) * (stonesoup_lsize + 1))))
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_tainted_buff = ( ( char * ) ( FUN1 ( sizeof ( char ) * ( VAR1 + 1 ) ) ) )
  ORIGINAL[2]: *stonesoup_tainted_buff
  TYPE[2]: CALL
  TOKENIZED[2]: *stonesoup_tainted_buff
  ORIGINAL[3]: (char *)(malloc(sizeof(char ) * (stonesoup_lsize + 1)))
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) ( FUN1 ( sizeof ( char ) * ( VAR1 + 1 ) ) )
  ORIGINAL[4]: stonesoup_tainted_buff
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640354
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476845
FRAGMENT_COUNT: 6
  ORIGINAL[0]: fstat(0,&st) == - 1 && open(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 0 , &st ) == - 1 && FUN2 ( \
  ORIGINAL[1]: setvbuf(error_stream,((void *)0),2,0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , 2 , 0 )
  ORIGINAL[2]: setvbuf(stdout,((void *)0),1,0)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( ( void * ) 0 ) , 1 , 0 )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: error_stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stdout
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640376
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771982
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sauncier_sizably--
  TYPE[0]: CALL
  TOKENIZED[0]: sauncier_sizably--
  ORIGINAL[1]: sauncier_sizably
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: sauncier_sizably
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477111
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_getopt_init(os,pool,argc,argv)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: os
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argv
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476928
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_pvsprintf(pool,fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640410
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640356
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640401
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640391
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476968
FRAGMENT_COUNT: 6
  ORIGINAL[0]: err -> apr_err != SVN_ERR_IO_PIPE_WRITE_ERROR
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != VAR3
  ORIGINAL[1]: err -> apr_err
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: svn_handle_error2(err,stderr,0,prefix)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , 0 , VAR3 )
  ORIGINAL[3]: svn_error_clear(err)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640407
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640416
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476921
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_dirent_local_style(src,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: dest
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640319
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477312
FRAGMENT_COUNT: 10
  ORIGINAL[0]: *outstr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *outstr == ( ( void * ) 0 )
  ORIGINAL[1]: *outstr = svn_stringbuf_create_empty(pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *outstr = FUN1 ( VAR1 )
  ORIGINAL[2]: sorted_props = svn_sort__hash(prop_hash,svn_sort_compare_items_lexically,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[3]: svn_sort__hash(prop_hash,svn_sort_compare_items_lexically,pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[4]: sorted_props -> nelts
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: sorted_props -> elts
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: sorted_props
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: prop_hash
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: sorted_props
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: sorted_props
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

