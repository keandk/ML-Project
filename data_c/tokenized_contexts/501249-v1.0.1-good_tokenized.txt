# Tokenized code fragments for 501249-v1.0.1-good
# Total center nodes processed: 27
# Total code fragments found: 121

CENTER_NODE: 30064771698
FRAGMENT_COUNT: 9
  ORIGINAL[0]: strncmp(data, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: strncmp(data, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: strncmp(data, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: strncmp(data, \
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , \
  ORIGINAL[4]: strncmp(data, \
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , \
  ORIGINAL[5]: strncmp(data, \
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , \
  ORIGINAL[6]: indx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: data
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: indx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771124
FRAGMENT_COUNT: 7
  ORIGINAL[0]: st_node_other = stats_tree_create_node(st, st_str_other, st_node_packets,FALSE)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: stats_tree_create_node(st, st_str_other, st_node_packets,FALSE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: <global> st_node_other
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: st
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> st_str_other
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> st_node_packets
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: FALSE
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719478379
FRAGMENT_COUNT: 1
  ORIGINAL[0]: <global> proto_message_http
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: <global> VAR1

CENTER_NODE: 68719478685
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < range->nranges
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < range->nranges
  ORIGINAL[1]: range->nranges
  TYPE[1]: CALL
  TOKENIZED[1]: range->nranges
  ORIGINAL[2]: nranges
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: range
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772923
FRAGMENT_COUNT: 9
  ORIGINAL[0]: RANGE_HDR_SIZE + src->nranges*sizeof (range_admin_t)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + src->nranges*sizeof ( VAR2 )
  ORIGINAL[1]: RANGE_HDR_SIZE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: sizeof (range_t) - sizeof (range_admin_t)
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 ) - sizeof ( VAR2 )
  ORIGINAL[3]: sizeof (range_t)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 )
  ORIGINAL[4]: sizeof (range_admin_t)
  TYPE[4]: CALL
  TOKENIZED[4]: sizeof ( VAR1 )
  ORIGINAL[5]: range_size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: range_t
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: range_admin_t
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: src
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719478653
FRAGMENT_COUNT: 7
  ORIGINAL[0]: a->nranges != b->nranges
  TYPE[0]: CALL
  TOKENIZED[0]: a->nranges != b->nranges
  ORIGINAL[1]: a->nranges
  TYPE[1]: CALL
  TOKENIZED[1]: a->nranges
  ORIGINAL[2]: a->nranges
  TYPE[2]: CALL
  TOKENIZED[2]: a->nranges
  ORIGINAL[3]: a->ranges[i].high != b->ranges[i].high
  TYPE[3]: CALL
  TOKENIZED[3]: a->ranges [ VAR1 ] . VAR2 != b->ranges [ VAR1 ] . VAR2
  ORIGINAL[4]: nranges
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: a
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719478068
FRAGMENT_COUNT: 5
  ORIGINAL[0]: conv_data = get_http_conversation_data(pinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: get_http_conversation_data(pinfo)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: conv_data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: conv_data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476773
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stats_tree_create_node(st, st_str_requests_by_host, 0, TRUE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 0 , VAR3 )
  ORIGINAL[1]: st
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> st_str_requests_by_host
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: TRUE
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772410
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dissector_add_string(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: reinit_http()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: message_http_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772307
FRAGMENT_COUNT: 4
  ORIGINAL[0]: UAT_FLD_CSTRING(header_fields, header_name, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: UAT_FLD_CSTRING(header_fields, header_desc, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: custom_header_uat_fields
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: UAT_END_FIELDS
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478081
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ssl_dissector_add(port, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: TRUE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478581
FRAGMENT_COUNT: 8
  ORIGINAL[0]: &endp
  TYPE[0]: CALL
  TOKENIZED[0]: &endp
  ORIGINAL[1]: isdigit((unsigned char)c)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( unsigned char ) VAR1 )
  ORIGINAL[2]: &endp
  TYPE[2]: CALL
  TOKENIZED[2]: &endp
  ORIGINAL[3]: endp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: endp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: endp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: endp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772178
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dissector_delete(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> http_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640477
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719478077
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dissector_add(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> http_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064772136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: conv_data = get_http_conversation_data(pinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: get_http_conversation_data(pinfo)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: conv_data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771918
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hf_index = find_header_hf_value(tvb, offset, header_len)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: find_header_hf_value(tvb, offset, header_len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: hf_index
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: value_offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772363
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dissector_add(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478511
FRAGMENT_COUNT: 5
  ORIGINAL[0]: range = g_malloc(RANGE_HDR_SIZE)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: range->nranges
  TYPE[1]: CALL
  TOKENIZED[1]: range->nranges
  ORIGINAL[2]: nranges
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: range
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: range
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478079
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ssl_dissector_delete(port, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: TRUE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476831
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tvb_strneql(ntlmssp_tvb, 0, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , \
  ORIGINAL[1]: call_dissector(ntlmssp_handle, ntlmssp_tvb, pinfo, tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: <global> ntlmssp_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: ntlmssp_tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478341
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stats_tree_register(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: http_reqs_stats_tree_packet
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771102
FRAGMENT_COUNT: 6
  ORIGINAL[0]: st_node_resps_by_srv_addr = stats_tree_create_node(st, st_str_resps_by_srv_addr, 0, TRUE)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 , VAR4 )
  ORIGINAL[1]: stats_tree_create_node(st, st_str_resps_by_srv_addr, 0, TRUE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , 0 , VAR3 )
  ORIGINAL[2]: <global> st_node_resps_by_srv_addr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: st
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> st_str_resps_by_srv_addr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: TRUE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478647
FRAGMENT_COUNT: 3
  ORIGINAL[0]: i < range->nranges
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < range->nranges
  ORIGINAL[1]: range
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: FALSE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771090
FRAGMENT_COUNT: 4
  ORIGINAL[0]: rec->header_name
  TYPE[0]: CALL
  TOKENIZED[0]: rec->header_name
  ORIGINAL[1]: g_free(rec->header_name)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( rec->header_name )
  ORIGINAL[2]: rec->header_name
  TYPE[2]: CALL
  TOKENIZED[2]: rec->header_name
  ORIGINAL[3]: rec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478461
FRAGMENT_COUNT: 3
  ORIGINAL[0]: st_node_requests_by_host = -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = -1
  ORIGINAL[1]: *st_str_requests_by_host = \
  TYPE[1]: CALL
  TOKENIZED[1]: *st_str_requests_by_host = \
  ORIGINAL[2]: st_str_requests_by_host
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640514
FRAGMENT_COUNT: 5
  ORIGINAL[0]: j = range->ranges[i].low
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = range->ranges [ VAR2 ] . VAR3
  ORIGINAL[1]: j <= range->ranges[i].high
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= range->ranges [ VAR2 ] . VAR3
  ORIGINAL[2]: j++
  TYPE[2]: CALL
  TOKENIZED[2]: j++
  ORIGINAL[3]: callback(j)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: for (j = range->ranges[i].low;j <= range->ranges[i].high;j++)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: for ( VAR1 = range->ranges [ VAR2 ] . VAR3 ; VAR1 <= range->ranges [ VAR2 ] . VAR4 ; j++ )

