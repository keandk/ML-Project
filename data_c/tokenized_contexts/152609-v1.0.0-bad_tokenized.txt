# Tokenized code fragments for 152609-v1.0.0-bad
# Total center nodes processed: 12
# Total code fragments found: 89

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 22
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: size_dirpath = strlen(ss_tc_root) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(ss_tc_root) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: strlen(ss_tc_root) + strlen(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[4]: strlen(ss_tc_root)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: strlen(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: dirpath = (char*) malloc (size_dirpath * sizeof(char))
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[7]: (char*) malloc (size_dirpath * sizeof(char))
  TYPE[7]: CALL
  TOKENIZED[7]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[8]: malloc (size_dirpath * sizeof(char))
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[9]: size_dirpath * sizeof(char)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 * sizeof ( char )
  ORIGINAL[10]: sizeof(char)
  TYPE[10]: CALL
  TOKENIZED[10]: sizeof ( char )
  ORIGINAL[11]: dirpath != NULL
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 != VAR2
  ORIGINAL[12]: ss_tc_root
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: NULL
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: size_dirpath
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ss_tc_root
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: dirpath
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: size_dirpath
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: char
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: char
  ORIGINAL[19]: dirpath
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: NULL
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: <global> stonesoup_printf_context
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: <global> VAR1

CENTER_NODE: 30064771366
FRAGMENT_COUNT: 6
  ORIGINAL[0]: bp -> flags & 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 & 0
  ORIGINAL[1]: bp -> flags
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: flags
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771384
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bonnetlike_dibranch(foreguess_anguille)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: bonnetlike_dibranch
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: foreguess_anguille
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771212
FRAGMENT_COUNT: 15
  ORIGINAL[0]: b -> init && out != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR3 != ( ( void * ) 0 )
  ORIGINAL[1]: ret == 0 && b -> flags & 0?ferror(((FILE *)(b -> ptr))) : ferror(((FILE *)(b -> ptr)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0 && VAR2 -> VAR3 & 0?ferror ( ( ( VAR4 * ) ( VAR2 -> VAR5 ) ) ) : FUN1 ( ( ( VAR4 * ) ( VAR2 -> VAR5 ) ) )
  ORIGINAL[2]: ret == 0 && b -> flags & 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0 && VAR2 -> VAR3 & 0
  ORIGINAL[3]: ret == 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == 0
  ORIGINAL[4]: b -> flags & 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 & 0
  ORIGINAL[5]: ferror(((FILE *)(b -> ptr)))
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( ( ( VAR1 * ) ( VAR2 -> VAR3 ) ) )
  ORIGINAL[6]: (FILE *)(b -> ptr)
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[7]: b -> ptr
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: ferror(((FILE *)(b -> ptr)))
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( ( ( VAR1 * ) ( VAR2 -> VAR3 ) ) )
  ORIGINAL[9]: (FILE *)(b -> ptr)
  TYPE[9]: CALL
  TOKENIZED[9]: ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[10]: b -> ptr
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: ptr
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: ptr
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: b
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: b
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 47244640278
FRAGMENT_COUNT: 2
  ORIGINAL[0]: b -> flags & 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 & 0
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064771393
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *dbuser = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *dbuser = 0
  ORIGINAL[1]: dbuser
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dbhost
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476810
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (ret = BIO_new(BIO_s_file())) == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( FUN2 ( ) ) ) == ( ( void * ) 0 )
  ORIGINAL[1]: (char *)stream
  TYPE[1]: CALL
  TOKENIZED[1]: ( char * ) VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477068
FRAGMENT_COUNT: 4
  ORIGINAL[0]: methods_filep = {(2 | 0x0400), (\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { ( 2 | 0x0400 ) , ( \
  ORIGINAL[1]: {(2 | 0x0400), (\
  TYPE[1]: CALL
  TOKENIZED[1]: { ( 2 | 0x0400 ) , ( \
  ORIGINAL[2]: <global> methods_filep
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: methods_filep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 4
  ORIGINAL[0]: a -> init
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: a -> ptr != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[2]: a -> ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 30064771380
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = file_write(bp,str,n)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: file_write(bp,str,n)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771169
FRAGMENT_COUNT: 4
  ORIGINAL[0]: bi -> ptr = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: bi -> ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: bi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771133
FRAGMENT_COUNT: 19
  ORIGINAL[0]: file == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: ERR_put_error(2,1, *__errno_location(),\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 2 , 1 , *__errno_location ( ) , \
  ORIGINAL[3]: *__errno_location()
  TYPE[3]: CALL
  TOKENIZED[3]: *__errno_location ( )
  ORIGINAL[4]: __errno_location()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )
  ORIGINAL[5]: ERR_add_error_data(5,\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( 5 , \
  ORIGINAL[6]: *__errno_location() == 2
  TYPE[6]: CALL
  TOKENIZED[6]: *__errno_location ( ) == 2
  ORIGINAL[7]: *__errno_location()
  TYPE[7]: CALL
  TOKENIZED[7]: *__errno_location ( )
  ORIGINAL[8]: __errno_location()
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( )
  ORIGINAL[9]: (void *)0
  TYPE[9]: CALL
  TOKENIZED[9]: ( void * ) 0
  ORIGINAL[10]: (ret = BIO_new(BIO_s_file())) == ((void *)0)
  TYPE[10]: CALL
  TOKENIZED[10]: ( VAR1 = FUN1 ( FUN2 ( ) ) ) == ( ( void * ) 0 )
  ORIGINAL[11]: ret = BIO_new(BIO_s_file())
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 = FUN1 ( FUN2 ( ) )
  ORIGINAL[12]: BIO_new(BIO_s_file())
  TYPE[12]: CALL
  TOKENIZED[12]: FUN1 ( FUN2 ( ) )
  ORIGINAL[13]: BIO_s_file()
  TYPE[13]: CALL
  TOKENIZED[13]: FUN1 ( )
  ORIGINAL[14]: (void *)0
  TYPE[14]: CALL
  TOKENIZED[14]: ( void * ) 0
  ORIGINAL[15]: file
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: filename
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: mode
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: ret
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

