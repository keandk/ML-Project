# Tokenized code fragments for 153630-v1.0.0-bad
# Total center nodes processed: 146
# Total code fragments found: 572

CENTER_NODE: 47244640780
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640510
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479889
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (char *)record
  TYPE[0]: CALL
  TOKENIZED[0]: ( char * ) VAR1
  ORIGINAL[1]: (intptr_t )(sizeof(XLogRecord ))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( sizeof ( VAR2 ) )
  ORIGINAL[2]: intptr_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: XLogRecord
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773341
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !((tuple -> t_infomask) & (0x0400 | 0x0800))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) & ( 0x0400 | 0x0800 ) )
  ORIGINAL[1]: (tuple -> t_infomask) & (0x0400 | 0x0800)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & ( 0x0400 | 0x0800 )
  ORIGINAL[2]: tuple -> t_infomask
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 0x0400 | 0x0800
  TYPE[3]: CALL
  TOKENIZED[3]: 0x0400 | 0x0800

CENTER_NODE: 30064772643
FRAGMENT_COUNT: 8
  ORIGINAL[0]: r -> rd_rel -> relkind
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: errstart(20,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 20 , \
  ORIGINAL[2]: r -> rd_rel -> relname
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: r -> rd_rel
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: rd_rel
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: relname
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: r
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: r
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476738
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (struct mg_connection*) stonesoup_printf_context
  TYPE[0]: CALL
  TOKENIZED[0]: ( struct mg_connection* ) VAR1
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640570
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640565
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772878
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 68719480932
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !((rel -> rd_rel -> relpersistence) == 'p')
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 -> VAR3 ) == 'p' )
  ORIGINAL[1]: smgrimmedsync(rel -> rd_smgr,MAIN_FORKNUM)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[2]: (bool )(rel -> rd_rel -> reltoastrelid != ((Oid )0))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( VAR2 -> VAR3 -> VAR4 != ( ( VAR5 ) 0 ) )
  ORIGINAL[3]: bool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rel
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772844
FRAGMENT_COUNT: 8
  ORIGINAL[0]: scan -> rs_strategy != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: scan -> rs_strategy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: FreeAccessStrategy(scan -> rs_strategy)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[4]: scan -> rs_strategy
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: rs_strategy
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: scan
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: scan
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640507
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776086
FRAGMENT_COUNT: 3
  ORIGINAL[0]: scan -> rs_ctup . t_data != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 != ( ( void * ) 0 )
  ORIGINAL[1]: (void )((bool )1)
  TYPE[1]: CALL
  TOKENIZED[1]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[2]: (bool )1
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 1

CENTER_NODE: 68719477525
FRAGMENT_COUNT: 3
  ORIGINAL[0]: relid = relation -> rd_lockInfo . lockRelId
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3 . VAR4
  ORIGINAL[1]: RelationClose(relation)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: relation
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640722
FRAGMENT_COUNT: 0

CENTER_NODE: 68719480566
FRAGMENT_COUNT: 11
  ORIGINAL[0]: (record -> xl_info) & 0x0080
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) & 0x0080
  ORIGINAL[1]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[2]: &xlhdr
  TYPE[2]: CALL
  TOKENIZED[2]: &xlhdr
  ORIGINAL[3]: xlhdr . t_infomask2
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: xlhdr . t_infomask
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: htup -> t_hoff
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: xlhdr . t_hoff
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . VAR2
  ORIGINAL[7]: t_hoff
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: samepage
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: xlhdr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: xlhdr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064773358
FRAGMENT_COUNT: 8
  ORIGINAL[0]: bistate -> current_buf != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != 0
  ORIGINAL[1]: bistate -> current_buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: bistate -> current_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: current_buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bistate
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bistate
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bistate
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: bistate
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772518
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((const void *)r) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( const void * ) VAR1 ) != ( ( void * ) 0 )
  ORIGINAL[1]: (const void *)r
  TYPE[1]: CALL
  TOKENIZED[1]: ( const void * ) VAR1
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: r
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064774365
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774414
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640578
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640645
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773027
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tid -> ip_posid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ip_posid
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771211
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064772651
FRAGMENT_COUNT: 34
  ORIGINAL[0]: (r -> rd_rel -> relkind) == 'i'
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 -> VAR3 ) == 'i'
  ORIGINAL[1]: errstart(20,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 20 , \
  ORIGINAL[2]: errstart(20,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 20 , \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: errfinish(errcode(('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24)),errmsg(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( FUN2 ( ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 ) ) , FUN3 ( \
  ORIGINAL[5]: errcode(('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24))
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 ) )
  ORIGINAL[6]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + (('9' - 48 & 0x3F) << 24)
  TYPE[6]: CALL
  TOKENIZED[6]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( '9' - 48 & 0x3F ) << 24 )
  ORIGINAL[7]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18)
  TYPE[7]: CALL
  TOKENIZED[7]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 )
  ORIGINAL[8]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6) + ((56 - 48 & 0x3F) << 12)
  TYPE[8]: CALL
  TOKENIZED[8]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 ) + ( ( 56 - 48 & 0x3F ) << 12 )
  ORIGINAL[9]: ('4' - 48 & 0x3F) + (('2' - 48 & 0x3F) << 6)
  TYPE[9]: CALL
  TOKENIZED[9]: ( '4' - 48 & 0x3F ) + ( ( '2' - 48 & 0x3F ) << 6 )
  ORIGINAL[10]: '4' - 48 & 0x3F
  TYPE[10]: CALL
  TOKENIZED[10]: '4' - 48 & 0x3F
  ORIGINAL[11]: '4' - 48
  TYPE[11]: CALL
  TOKENIZED[11]: '4' - 48
  ORIGINAL[12]: ('2' - 48 & 0x3F) << 6
  TYPE[12]: CALL
  TOKENIZED[12]: ( '2' - 48 & 0x3F ) << 6
  ORIGINAL[13]: '2' - 48 & 0x3F
  TYPE[13]: CALL
  TOKENIZED[13]: '2' - 48 & 0x3F
  ORIGINAL[14]: '2' - 48
  TYPE[14]: CALL
  TOKENIZED[14]: '2' - 48
  ORIGINAL[15]: (56 - 48 & 0x3F) << 12
  TYPE[15]: CALL
  TOKENIZED[15]: ( 56 - 48 & 0x3F ) << 12
  ORIGINAL[16]: 56 - 48 & 0x3F
  TYPE[16]: CALL
  TOKENIZED[16]: 56 - 48 & 0x3F
  ORIGINAL[17]: 56 - 48
  TYPE[17]: CALL
  TOKENIZED[17]: 56 - 48
  ORIGINAL[18]: (48 - 48 & 0x3F) << 18
  TYPE[18]: CALL
  TOKENIZED[18]: ( 48 - 48 & 0x3F ) << 18
  ORIGINAL[19]: 48 - 48 & 0x3F
  TYPE[19]: CALL
  TOKENIZED[19]: 48 - 48 & 0x3F
  ORIGINAL[20]: 48 - 48
  TYPE[20]: CALL
  TOKENIZED[20]: 48 - 48
  ORIGINAL[21]: ('9' - 48 & 0x3F) << 24
  TYPE[21]: CALL
  TOKENIZED[21]: ( '9' - 48 & 0x3F ) << 24
  ORIGINAL[22]: '9' - 48 & 0x3F
  TYPE[22]: CALL
  TOKENIZED[22]: '9' - 48 & 0x3F
  ORIGINAL[23]: '9' - 48
  TYPE[23]: CALL
  TOKENIZED[23]: '9' - 48
  ORIGINAL[24]: errmsg(\
  TYPE[24]: CALL
  TOKENIZED[24]: FUN1 ( \
  ORIGINAL[25]: r -> rd_rel -> relname . data
  TYPE[25]: CALL
  TOKENIZED[25]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[26]: r -> rd_rel -> relname
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[27]: r -> rd_rel
  TYPE[27]: CALL
  TOKENIZED[27]: VAR1 -> VAR2
  ORIGINAL[28]: (void )0
  TYPE[28]: CALL
  TOKENIZED[28]: ( void ) 0
  ORIGINAL[29]: rd_rel
  TYPE[29]: FIELD_IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: relname
  TYPE[30]: FIELD_IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: data
  TYPE[31]: FIELD_IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: <global> __func__
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: <global> VAR1
  ORIGINAL[33]: r
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1

CENTER_NODE: 30064776130
FRAGMENT_COUNT: 4
  ORIGINAL[0]: scan -> rs_cbuf != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != 0
  ORIGINAL[1]: ReleaseBuffer(scan -> rs_cbuf)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: scan -> rs_cbuf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: scan
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772773
FRAGMENT_COUNT: 8
  ORIGINAL[0]: heap_beginscan_internal(relation,snapshot,nkeys,key,((bool )1),((bool )1),((bool )0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( VAR5 ) 1 ) , ( ( VAR5 ) 1 ) , ( ( VAR5 ) 0 ) )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1
  ORIGINAL[2]: (bool )1
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 1
  ORIGINAL[3]: (bool )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) 0
  ORIGINAL[4]: relation
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: snapshot
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: nkeys
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: key
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064777235
FRAGMENT_COUNT: 11
  ORIGINAL[0]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6
  ORIGINAL[1]: &((PageHeaderData *)0) -> pd_linp
  TYPE[1]: CALL
  TOKENIZED[1]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[2]: ((PageHeaderData *)0) -> pd_linp
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[3]: (PageHeaderData *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 * ) 0
  ORIGINAL[4]: ((PageHeaderData *)0) -> pd_linp
  TYPE[4]: CALL
  TOKENIZED[4]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[5]: (PageHeaderData *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 * ) 0
  ORIGINAL[6]: ((PageHeaderData *)0) -> pd_linp
  TYPE[6]: CALL
  TOKENIZED[6]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[7]: (PageHeaderData *)0
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 * ) 0
  ORIGINAL[8]: ((PageHeaderData *)0) -> pd_linp
  TYPE[8]: CALL
  TOKENIZED[8]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[9]: (PageHeaderData *)0
  TYPE[9]: CALL
  TOKENIZED[9]: ( VAR1 * ) 0
  ORIGINAL[10]: pd_linp
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640514
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477815
FRAGMENT_COUNT: 3
  ORIGINAL[0]: heap_hot_search_buffer(tid,relation,buffer,snapshot,&heapTuple,all_dead,((bool )1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , &heapTuple , VAR5 , ( ( VAR6 ) 1 ) )
  ORIGINAL[1]: &heapTuple
  TYPE[1]: CALL
  TOKENIZED[1]: &heapTuple
  ORIGINAL[2]: all_dead
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479040
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *buffer = ReadBuffer(relation,((((void )((bool )1)) , ((((void )((bool )1)) , ((BlockNumber )(((&tid -> ip_blkid) -> bi_hi) << 16 | ((uint16 )((&tid -> ip_blkid) -> bi_lo)))))))))
  TYPE[0]: CALL
  TOKENIZED[0]: *buffer = FUN1 ( VAR1 , ( ( ( ( void ) ( ( VAR2 ) 1 ) ) , ( ( ( ( void ) ( ( VAR2 ) 1 ) ) , ( ( VAR3 ) ( ( ( &tid -> VAR4 ) -> VAR5 ) << 16 | ( ( VAR6 ) ( ( &tid -> VAR4 ) -> VAR7 ) ) ) ) ) ) ) ) )
  ORIGINAL[1]: *buffer
  TYPE[1]: CALL
  TOKENIZED[1]: *buffer
  ORIGINAL[2]: *buffer
  TYPE[2]: CALL
  TOKENIZED[2]: *buffer
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640776
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640353
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 0

CENTER_NODE: 30064775196
FRAGMENT_COUNT: 9
  ORIGINAL[0]: tup2 -> t_data -> t_infomask2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: tup2 -> t_data -> t_infomask
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: (tupdesc -> attrs[attrnum - 1] -> attlen) == ((int )(sizeof(Datum )))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 [ VAR3 - 1 ] -> VAR4 ) == ( ( int ) ( sizeof ( VAR5 ) ) )
  ORIGINAL[3]: (char *)(tup2 -> t_data)
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) ( VAR1 -> VAR2 )
  ORIGINAL[4]: tup2 -> t_data
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: tup2 -> t_data
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: t_data
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tup2
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tup2
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064776062
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (tuple -> t_infomask) & (0x4000 | 0x8000)?tuple -> t_choice . t_heap . t_field3 . t_xvac : ((TransactionId )0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) & ( 0x4000 | 0x8000 ) ?tuple -> VAR3 . VAR4 . VAR5 . VAR6 : ( ( VAR7 ) 0 )
  ORIGINAL[1]: (tuple -> t_infomask) & (0x4000 | 0x8000)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & ( 0x4000 | 0x8000 )
  ORIGINAL[2]: tuple -> t_choice . t_heap . t_field3 . t_xvac
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 . VAR5
  ORIGINAL[3]: tuple -> t_choice . t_heap . t_field3
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[4]: t_xvac
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064775321
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (attrnum = bms_first_member(hot_attrs)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 ) ) >= 0
  ORIGINAL[1]: attrnum += - 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += - 8
  ORIGINAL[2]: - 8
  TYPE[2]: CALL
  TOKENIZED[2]: - 8
  ORIGINAL[3]: attrnum
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773665
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tup -> t_data -> t_infomask2 &= ~0xC000
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 &= ~0xC000
  ORIGINAL[1]: tup -> t_data -> t_infomask2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: ~0xC000
  TYPE[2]: CALL
  TOKENIZED[2]: ~0xC000

CENTER_NODE: 30064778869
FRAGMENT_COUNT: 11
  ORIGINAL[0]: (((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) )
  ORIGINAL[1]: &((PageHeaderData *)0) -> pd_linp
  TYPE[1]: CALL
  TOKENIZED[1]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[2]: ((PageHeaderData *)0) -> pd_linp
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[3]: &((PageHeaderData *)0) -> pd_linp
  TYPE[3]: CALL
  TOKENIZED[3]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[4]: ((PageHeaderData *)0) -> pd_linp
  TYPE[4]: CALL
  TOKENIZED[4]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[5]: (PageHeaderData *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 * ) 0
  ORIGINAL[6]: ((PageHeaderData *)0) -> pd_linp
  TYPE[6]: CALL
  TOKENIZED[6]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[7]: (PageHeaderData *)0
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 * ) 0
  ORIGINAL[8]: ((PageHeaderData *)0) -> pd_linp
  TYPE[8]: CALL
  TOKENIZED[8]: ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[9]: (PageHeaderData *)0
  TYPE[9]: CALL
  TOKENIZED[9]: ( VAR1 * ) 0
  ORIGINAL[10]: pd_linp
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640712
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479509
FRAGMENT_COUNT: 3
  ORIGINAL[0]: rdata[0] . len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] . VAR2
  ORIGINAL[1]: (size_t )(&((xl_heap_freeze *)0) -> cutoff_xid)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[2]: size_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064779005
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064777949
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 68719479403
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tuple -> t_choice
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: t_choice
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: xmin
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tuple
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477776
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !skip
  TYPE[0]: CALL
  TOKENIZED[0]: !skip
  ORIGINAL[1]: valid = ( *snapshot -> satisfies)(heapTuple -> t_data,snapshot,buffer)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( *snapshot -> VAR2 ) ( VAR3 -> VAR4 , VAR5 , VAR6 )
  ORIGINAL[2]: CheckForSerializableConflictOut(valid,relation,heapTuple,buffer,snapshot)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[3]: valid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: valid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: relation
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: heapTuple
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buffer
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: snapshot
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064779229
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *stonesoup_heap_buffer_64 = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_heap_buffer_64 = 0
  ORIGINAL[1]: stonesoup_heap_buffer_64
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fluidification_eglin
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064775401
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064772176
FRAGMENT_COUNT: 94
  ORIGINAL[0]: !scan -> rs_inited
  TYPE[0]: CALL
  TOKENIZED[0]: !scan -> VAR1
  ORIGINAL[1]: scan -> rs_nblocks == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 == 0
  ORIGINAL[2]: !scan -> rs_inited
  TYPE[2]: CALL
  TOKENIZED[2]: !scan -> VAR1
  ORIGINAL[3]: scan -> rs_nblocks == 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 == 0
  ORIGINAL[4]: linesleft > 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 > 0
  ORIGINAL[5]: lineoff = scan -> rs_vistuples[lineindex]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[6]: scan -> rs_vistuples[lineindex]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[7]: scan -> rs_vistuples
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: lpp = ((ItemId )(&((PageHeader )dp) -> pd_linp[lineoff - 1]))
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 = ( ( VAR2 ) ( & ( ( VAR3 ) VAR4 ) -> VAR5 [ VAR6 - 1 ] ) )
  ORIGINAL[9]: (ItemId )(&((PageHeader )dp) -> pd_linp[lineoff - 1])
  TYPE[9]: CALL
  TOKENIZED[9]: ( VAR1 ) ( & ( ( VAR2 ) VAR3 ) -> VAR4 [ VAR5 - 1 ] )
  ORIGINAL[10]: &((PageHeader )dp) -> pd_linp[lineoff - 1]
  TYPE[10]: CALL
  TOKENIZED[10]: & ( ( VAR1 ) VAR2 ) -> VAR3 [ VAR4 - 1 ]
  ORIGINAL[11]: ((PageHeader )dp) -> pd_linp[lineoff - 1]
  TYPE[11]: CALL
  TOKENIZED[11]: ( ( VAR1 ) VAR2 ) -> VAR3 [ VAR4 - 1 ]
  ORIGINAL[12]: ((PageHeader )dp) -> pd_linp
  TYPE[12]: CALL
  TOKENIZED[12]: ( ( VAR1 ) VAR2 ) -> VAR3
  ORIGINAL[13]: (PageHeader )dp
  TYPE[13]: CALL
  TOKENIZED[13]: ( VAR1 ) VAR2
  ORIGINAL[14]: lineoff - 1
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 - 1
  ORIGINAL[15]: tuple -> t_data = ((HeapTupleHeader )(((((void )((bool )1)) , ((void )((bool )1))) , ((Item )(((char *)((Page )dp)) + lpp -> lp_off)))))
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2 = ( ( VAR3 ) ( ( ( ( ( void ) ( ( VAR4 ) 1 ) ) , ( ( void ) ( ( VAR4 ) 1 ) ) ) , ( ( VAR5 ) ( ( ( char * ) ( ( VAR6 ) VAR7 ) ) + VAR8 -> VAR9 ) ) ) ) )
  ORIGINAL[16]: tuple -> t_data
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: (HeapTupleHeader )(((((void )((bool )1)) , ((void )((bool )1))) , ((Item )(((char *)((Page )dp)) + lpp -> lp_off))))
  TYPE[17]: CALL
  TOKENIZED[17]: ( VAR1 ) ( ( ( ( ( void ) ( ( VAR2 ) 1 ) ) , ( ( void ) ( ( VAR2 ) 1 ) ) ) , ( ( VAR3 ) ( ( ( char * ) ( ( VAR4 ) VAR5 ) ) + VAR6 -> VAR7 ) ) ) )
  ORIGINAL[18]: (void )((bool )1)
  TYPE[18]: CALL
  TOKENIZED[18]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[19]: (bool )1
  TYPE[19]: CALL
  TOKENIZED[19]: ( VAR1 ) 1
  ORIGINAL[20]: (void )((bool )1)
  TYPE[20]: CALL
  TOKENIZED[20]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[21]: (bool )1
  TYPE[21]: CALL
  TOKENIZED[21]: ( VAR1 ) 1
  ORIGINAL[22]: (Item )(((char *)((Page )dp)) + lpp -> lp_off)
  TYPE[22]: CALL
  TOKENIZED[22]: ( VAR1 ) ( ( ( char * ) ( ( VAR2 ) VAR3 ) ) + VAR4 -> VAR5 )
  ORIGINAL[23]: ((char *)((Page )dp)) + lpp -> lp_off
  TYPE[23]: CALL
  TOKENIZED[23]: ( ( char * ) ( ( VAR1 ) VAR2 ) ) + VAR3 -> VAR4
  ORIGINAL[24]: (char *)((Page )dp)
  TYPE[24]: CALL
  TOKENIZED[24]: ( char * ) ( ( VAR1 ) VAR2 )
  ORIGINAL[25]: (Page )dp
  TYPE[25]: CALL
  TOKENIZED[25]: ( VAR1 ) VAR2
  ORIGINAL[26]: lpp -> lp_off
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 -> VAR2
  ORIGINAL[27]: tuple -> t_len = (lpp -> lp_len)
  TYPE[27]: CALL
  TOKENIZED[27]: VAR1 -> VAR2 = ( VAR3 -> VAR4 )
  ORIGINAL[28]: tuple -> t_len
  TYPE[28]: CALL
  TOKENIZED[28]: VAR1 -> VAR2
  ORIGINAL[29]: lpp -> lp_len
  TYPE[29]: CALL
  TOKENIZED[29]: VAR1 -> VAR2
  ORIGINAL[30]: (void )((bool )1)
  TYPE[30]: CALL
  TOKENIZED[30]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[31]: (bool )1
  TYPE[31]: CALL
  TOKENIZED[31]: ( VAR1 ) 1
  ORIGINAL[32]: (void )((bool )1)
  TYPE[32]: CALL
  TOKENIZED[32]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[33]: (bool )1
  TYPE[33]: CALL
  TOKENIZED[33]: ( VAR1 ) 1
  ORIGINAL[34]: (&(&tuple -> t_self) -> ip_blkid) -> bi_hi = (page >> 16)
  TYPE[34]: CALL
  TOKENIZED[34]: ( & ( &tuple -> VAR1 ) -> VAR2 ) -> VAR3 = ( VAR4 >> 16 )
  ORIGINAL[35]: (&(&tuple -> t_self) -> ip_blkid) -> bi_hi
  TYPE[35]: CALL
  TOKENIZED[35]: ( & ( &tuple -> VAR1 ) -> VAR2 ) -> VAR3
  ORIGINAL[36]: &(&tuple -> t_self) -> ip_blkid
  TYPE[36]: CALL
  TOKENIZED[36]: & ( &tuple -> VAR1 ) -> VAR2
  ORIGINAL[37]: (&tuple -> t_self) -> ip_blkid
  TYPE[37]: CALL
  TOKENIZED[37]: ( &tuple -> VAR1 ) -> VAR2
  ORIGINAL[38]: &tuple -> t_self
  TYPE[38]: CALL
  TOKENIZED[38]: &tuple -> VAR1
  ORIGINAL[39]: tuple -> t_self
  TYPE[39]: CALL
  TOKENIZED[39]: VAR1 -> VAR2
  ORIGINAL[40]: page >> 16
  TYPE[40]: CALL
  TOKENIZED[40]: VAR1 >> 16
  ORIGINAL[41]: (&(&tuple -> t_self) -> ip_blkid) -> bi_lo = (page & 0xffff)
  TYPE[41]: CALL
  TOKENIZED[41]: ( & ( &tuple -> VAR1 ) -> VAR2 ) -> VAR3 = ( VAR4 & 0xffff )
  ORIGINAL[42]: (&(&tuple -> t_self) -> ip_blkid) -> bi_lo
  TYPE[42]: CALL
  TOKENIZED[42]: ( & ( &tuple -> VAR1 ) -> VAR2 ) -> VAR3
  ORIGINAL[43]: &(&tuple -> t_self) -> ip_blkid
  TYPE[43]: CALL
  TOKENIZED[43]: & ( &tuple -> VAR1 ) -> VAR2
  ORIGINAL[44]: (&tuple -> t_self) -> ip_blkid
  TYPE[44]: CALL
  TOKENIZED[44]: ( &tuple -> VAR1 ) -> VAR2
  ORIGINAL[45]: &tuple -> t_self
  TYPE[45]: CALL
  TOKENIZED[45]: &tuple -> VAR1
  ORIGINAL[46]: tuple -> t_self
  TYPE[46]: CALL
  TOKENIZED[46]: VAR1 -> VAR2
  ORIGINAL[47]: page & 0xffff
  TYPE[47]: CALL
  TOKENIZED[47]: VAR1 & 0xffff
  ORIGINAL[48]: (&tuple -> t_self) -> ip_posid = lineoff
  TYPE[48]: CALL
  TOKENIZED[48]: ( &tuple -> VAR1 ) -> VAR2 = VAR3
  ORIGINAL[49]: (&tuple -> t_self) -> ip_posid
  TYPE[49]: CALL
  TOKENIZED[49]: ( &tuple -> VAR1 ) -> VAR2
  ORIGINAL[50]: &tuple -> t_self
  TYPE[50]: CALL
  TOKENIZED[50]: &tuple -> VAR1
  ORIGINAL[51]: tuple -> t_self
  TYPE[51]: CALL
  TOKENIZED[51]: VAR1 -> VAR2
  ORIGINAL[52]: key != ((void *)0)
  TYPE[52]: CALL
  TOKENIZED[52]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[53]: (void *)0
  TYPE[53]: CALL
  TOKENIZED[53]: ( void * ) 0
  ORIGINAL[54]: while (linesleft > 0)
  TYPE[54]: CONTROL_STRUCTURE
  TOKENIZED[54]: while ( VAR1 > 0 )
  ORIGINAL[55]: rs_vistuples
  TYPE[55]: FIELD_IDENTIFIER
  TOKENIZED[55]: VAR1
  ORIGINAL[56]: pd_linp
  TYPE[56]: FIELD_IDENTIFIER
  TOKENIZED[56]: VAR1
  ORIGINAL[57]: t_data
  TYPE[57]: FIELD_IDENTIFIER
  TOKENIZED[57]: VAR1
  ORIGINAL[58]: lp_off
  TYPE[58]: FIELD_IDENTIFIER
  TOKENIZED[58]: VAR1
  ORIGINAL[59]: t_len
  TYPE[59]: FIELD_IDENTIFIER
  TOKENIZED[59]: VAR1
  ORIGINAL[60]: lp_len
  TYPE[60]: FIELD_IDENTIFIER
  TOKENIZED[60]: VAR1
  ORIGINAL[61]: t_self
  TYPE[61]: FIELD_IDENTIFIER
  TOKENIZED[61]: VAR1
  ORIGINAL[62]: ip_blkid
  TYPE[62]: FIELD_IDENTIFIER
  TOKENIZED[62]: VAR1
  ORIGINAL[63]: bi_hi
  TYPE[63]: FIELD_IDENTIFIER
  TOKENIZED[63]: VAR1
  ORIGINAL[64]: t_self
  TYPE[64]: FIELD_IDENTIFIER
  TOKENIZED[64]: VAR1
  ORIGINAL[65]: ip_blkid
  TYPE[65]: FIELD_IDENTIFIER
  TOKENIZED[65]: VAR1
  ORIGINAL[66]: bi_lo
  TYPE[66]: FIELD_IDENTIFIER
  TOKENIZED[66]: VAR1
  ORIGINAL[67]: t_self
  TYPE[67]: FIELD_IDENTIFIER
  TOKENIZED[67]: VAR1
  ORIGINAL[68]: ip_posid
  TYPE[68]: FIELD_IDENTIFIER
  TOKENIZED[68]: VAR1
  ORIGINAL[69]: linesleft
  TYPE[69]: IDENTIFIER
  TOKENIZED[69]: VAR1
  ORIGINAL[70]: lineoff
  TYPE[70]: IDENTIFIER
  TOKENIZED[70]: VAR1
  ORIGINAL[71]: scan
  TYPE[71]: IDENTIFIER
  TOKENIZED[71]: VAR1
  ORIGINAL[72]: lineindex
  TYPE[72]: IDENTIFIER
  TOKENIZED[72]: VAR1
  ORIGINAL[73]: lpp
  TYPE[73]: IDENTIFIER
  TOKENIZED[73]: VAR1
  ORIGINAL[74]: ItemId
  TYPE[74]: IDENTIFIER
  TOKENIZED[74]: VAR1
  ORIGINAL[75]: dp
  TYPE[75]: IDENTIFIER
  TOKENIZED[75]: VAR1
  ORIGINAL[76]: lineoff
  TYPE[76]: IDENTIFIER
  TOKENIZED[76]: VAR1
  ORIGINAL[77]: tuple
  TYPE[77]: IDENTIFIER
  TOKENIZED[77]: VAR1
  ORIGINAL[78]: HeapTupleHeader
  TYPE[78]: IDENTIFIER
  TOKENIZED[78]: VAR1
  ORIGINAL[79]: Item
  TYPE[79]: IDENTIFIER
  TOKENIZED[79]: VAR1
  ORIGINAL[80]: dp
  TYPE[80]: IDENTIFIER
  TOKENIZED[80]: VAR1
  ORIGINAL[81]: lpp
  TYPE[81]: IDENTIFIER
  TOKENIZED[81]: VAR1
  ORIGINAL[82]: tuple
  TYPE[82]: IDENTIFIER
  TOKENIZED[82]: VAR1
  ORIGINAL[83]: lpp
  TYPE[83]: IDENTIFIER
  TOKENIZED[83]: VAR1
  ORIGINAL[84]: tuple
  TYPE[84]: IDENTIFIER
  TOKENIZED[84]: VAR1
  ORIGINAL[85]: page
  TYPE[85]: IDENTIFIER
  TOKENIZED[85]: VAR1
  ORIGINAL[86]: tuple
  TYPE[86]: IDENTIFIER
  TOKENIZED[86]: VAR1
  ORIGINAL[87]: page
  TYPE[87]: IDENTIFIER
  TOKENIZED[87]: VAR1
  ORIGINAL[88]: tuple
  TYPE[88]: IDENTIFIER
  TOKENIZED[88]: VAR1
  ORIGINAL[89]: lineoff
  TYPE[89]: IDENTIFIER
  TOKENIZED[89]: VAR1
  ORIGINAL[90]: key
  TYPE[90]: IDENTIFIER
  TOKENIZED[90]: VAR1
  ORIGINAL[91]: valid
  TYPE[91]: IDENTIFIER
  TOKENIZED[91]: VAR1
  ORIGINAL[92]: backward
  TYPE[92]: IDENTIFIER
  TOKENIZED[92]: VAR1
  ORIGINAL[93]: finished
  TYPE[93]: IDENTIFIER
  TOKENIZED[93]: VAR1

CENTER_NODE: 47244640442
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064777141
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640546
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477611
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: scan -> rs_cbuf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: rs_cbuf
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: scan
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640350
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064775332
FRAGMENT_COUNT: 2
  ORIGINAL[0]: GetCurrentCommandId(((bool )1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( VAR1 ) 1 ) )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 68719477694
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !((lp -> lp_flags) == 1)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) == 1 )
  ORIGINAL[1]: ( *snapshot -> satisfies)(tuple -> t_data,snapshot,buffer)
  TYPE[1]: CALL
  TOKENIZED[1]: ( *snapshot -> VAR1 ) ( VAR2 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: tuple -> t_data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: snapshot
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: snapshot
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: snapshot
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771933
FRAGMENT_COUNT: 7
  ORIGINAL[0]: scan -> rs_cblock = ((BlockNumber )0xFFFFFFFF)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( VAR3 ) 0xFFFFFFFF )
  ORIGINAL[1]: scan -> rs_cblock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (BlockNumber )0xFFFFFFFF
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 0xFFFFFFFF
  ORIGINAL[3]: rs_cblock
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: finished
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: scan
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: scan
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640762
FRAGMENT_COUNT: 0

CENTER_NODE: 68719480644
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (((((PageHeader )page) -> pd_lower) <= ((size_t )(&((PageHeaderData *)0) -> pd_linp))?0 : ((((PageHeader )page) -> pd_lower) - ((size_t )(&((PageHeaderData *)0) -> pd_linp))) / sizeof(ItemIdData ))) >= offnum
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) <= ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ?0 : ( ( ( ( VAR1 ) VAR2 ) -> VAR3 ) - ( ( VAR4 ) ( & ( ( VAR5 * ) 0 ) -> VAR6 ) ) ) / sizeof ( VAR7 ) ) ) >= VAR8
  ORIGINAL[1]: (ItemId )(&((PageHeader )page) -> pd_linp[offnum - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( & ( ( VAR2 ) VAR3 ) -> VAR4 [ VAR5 - 1 ] )
  ORIGINAL[2]: lp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ItemId
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064779004
FRAGMENT_COUNT: 5
  ORIGINAL[0]: target -> node . relNode
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: target -> node
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: node
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relNode
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: target
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640726
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640654
FRAGMENT_COUNT: 0

CENTER_NODE: 68719480197
FRAGMENT_COUNT: 9
  ORIGINAL[0]: XLogReadBuffer(xlrec -> node,blkno,((bool )1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , ( ( VAR4 ) 1 ) )
  ORIGINAL[1]: xlrec -> node
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (bool )1
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 1
  ORIGINAL[3]: blkno
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: blkno
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: isinit
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: blkno
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: blkno
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: blkno
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719480776
FRAGMENT_COUNT: 5
  ORIGINAL[0]: record -> xl_info
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: info & 0x70
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x70
  ORIGINAL[2]: heap_xlog_newpage(lsn,record)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: lsn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: record
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640581
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640745
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772856
FRAGMENT_COUNT: 9
  ORIGINAL[0]: scan -> rs_pageatatime
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: heapgettup(scan,direction,scan -> rs_nkeys,scan -> rs_key)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR1 -> VAR3 , VAR1 -> VAR4 )
  ORIGINAL[2]: scan -> rs_key
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: rs_key
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: scan
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: scan
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: scan
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: scan
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: scan
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719478724
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !already_marked
  TYPE[0]: CALL
  TOKENIZED[0]: !already_marked
  ORIGINAL[1]: oldtup . t_data -> t_choice . t_heap . t_xmax = xid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 -> VAR3 . VAR4 . VAR5 = VAR6
  ORIGINAL[2]: oldtup . t_data -> t_choice . t_heap . t_xmax
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 -> VAR3 . VAR4 . VAR5
  ORIGINAL[3]: xid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: xid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: xid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: xid
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: xid
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064776637
FRAGMENT_COUNT: 4
  ORIGINAL[0]: rdata[0] . data = ((char *)(&xlrec))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] . VAR2 = ( ( char * ) ( &xlrec ) )
  ORIGINAL[1]: rdata[0] . data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] . VAR2
  ORIGINAL[2]: (char *)(&xlrec)
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) ( &xlrec )
  ORIGINAL[3]: rdata
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064777361
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064771118
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064775837
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640656
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773554
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(options & 0x0001) && (relation -> rd_rel -> relpersistence) == 'p'
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 & 0x0001 ) && ( VAR2 -> VAR3 -> VAR4 ) == 'p'
  ORIGINAL[1]: rdata[2] . next = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 2 ] . VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: rdata[2] . next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 2 ] . VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 68719477573
FRAGMENT_COUNT: 4
  ORIGINAL[0]: heap_beginscan_internal(relation,snapshot,nkeys,key,((bool )0),((bool )0),((bool )1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( VAR5 ) 0 ) , ( ( VAR5 ) 0 ) , ( ( VAR5 ) 1 ) )
  ORIGINAL[1]: snapshot
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: nkeys
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064776892
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (record -> xl_len) > ((size_t )(&((xl_heap_freeze *)0) -> cutoff_xid)) + sizeof(TransactionId )
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) > ( ( VAR3 ) ( & ( ( VAR4 * ) 0 ) -> VAR5 ) ) + sizeof ( VAR6 )
  ORIGINAL[1]: ((size_t )(&((xl_heap_freeze *)0) -> cutoff_xid)) + sizeof(TransactionId )
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 ) ) + sizeof ( VAR4 )
  ORIGINAL[2]: (size_t )(&((xl_heap_freeze *)0) -> cutoff_xid)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( & ( ( VAR2 * ) 0 ) -> VAR3 )
  ORIGINAL[3]: &((xl_heap_freeze *)0) -> cutoff_xid
  TYPE[3]: CALL
  TOKENIZED[3]: & ( ( VAR1 * ) 0 ) -> VAR2
  ORIGINAL[4]: size_t
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: TransactionId
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064779017
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ((&(&target -> tid) -> ip_blkid) -> bi_hi) << 16 | ((uint16 )((&(&target -> tid) -> ip_blkid) -> bi_lo))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( & ( &target -> VAR1 ) -> VAR2 ) -> VAR3 ) << 16 | ( ( VAR4 ) ( ( & ( &target -> VAR1 ) -> VAR2 ) -> VAR5 ) )
  ORIGINAL[1]: ((&(&target -> tid) -> ip_blkid) -> bi_hi) << 16
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( & ( &target -> VAR1 ) -> VAR2 ) -> VAR3 ) << 16
  ORIGINAL[2]: (uint16 )((&(&target -> tid) -> ip_blkid) -> bi_lo)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( ( & ( &target -> VAR2 ) -> VAR3 ) -> VAR4 )
  ORIGINAL[3]: (&(&target -> tid) -> ip_blkid) -> bi_lo
  TYPE[3]: CALL
  TOKENIZED[3]: ( & ( &target -> VAR1 ) -> VAR2 ) -> VAR3
  ORIGINAL[4]: uint16
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478287
FRAGMENT_COUNT: 3
  ORIGINAL[0]: heap_insert(relation,tup,GetCurrentCommandId(((bool )1)),0,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , FUN2 ( ( ( VAR3 ) 1 ) ) , 0 , ( ( void * ) 0 ) )
  ORIGINAL[1]: relation
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tup
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719479662
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *xlrec = (xl_heap_cleanup_info *)(((char *)record) + (((intptr_t )(sizeof(XLogRecord ))) + (8 - 1) & ~((intptr_t )(8 - 1))))
  TYPE[0]: CALL
  TOKENIZED[0]: *xlrec = ( VAR1 * ) ( ( ( char * ) VAR2 ) + ( ( ( VAR3 ) ( sizeof ( VAR4 ) ) ) + ( 8 - 1 ) & ~ ( ( VAR3 ) ( 8 - 1 ) ) ) )
  ORIGINAL[1]: standbyState >= STANDBY_SNAPSHOT_PENDING
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= VAR2
  ORIGINAL[2]: standbyState
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: STANDBY_SNAPSHOT_PENDING
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640681
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719480795
FRAGMENT_COUNT: 5
  ORIGINAL[0]: record -> xl_info
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: info & 0x70
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x70
  ORIGINAL[2]: heap_xlog_multi_insert(lsn,record)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: lsn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: record
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771178
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640459
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640582
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773184
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ((const void *)tid) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( const void * ) VAR1 ) != ( ( void * ) 0 )
  ORIGINAL[1]: (tid -> ip_posid) != 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) != 0
  ORIGINAL[2]: tid -> ip_posid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ip_posid
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tid
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tid
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tid
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: tid
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719479347
FRAGMENT_COUNT: 7
  ORIGINAL[0]: (tuple -> t_infomask) & (0x4000 | 0x8000)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) & ( 0x4000 | 0x8000 )
  ORIGINAL[1]: xid = ((tuple -> t_infomask) & (0x4000 | 0x8000)?tuple -> t_choice . t_heap . t_field3 . t_xvac : ((TransactionId )0))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 -> VAR3 ) & ( 0x4000 | 0x8000 ) ?tuple -> VAR4 . VAR5 . VAR6 . VAR7 : ( ( VAR8 ) 0 ) )
  ORIGINAL[2]: xid >= ((TransactionId )3)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >= ( ( VAR2 ) 3 )
  ORIGINAL[3]: (TransactionId )3
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) 3
  ORIGINAL[4]: xid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: xid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: xid
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640400
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476773
FRAGMENT_COUNT: 5
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_server
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774021
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064772709
FRAGMENT_COUNT: 4
  ORIGINAL[0]: r = relation_openrv_extended(relation,lockmode,missing_ok)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: relation_openrv_extended(relation,lockmode,missing_ok)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: r
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: r
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640399
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774339
FRAGMENT_COUNT: 2
  ORIGINAL[0]: GetCurrentCommandId(((bool )1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( VAR1 ) 1 ) )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640765
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774415
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640709
FRAGMENT_COUNT: 0

CENTER_NODE: 68719480921
FRAGMENT_COUNT: 13
  ORIGINAL[0]: info == 0x50
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0x50
  ORIGINAL[1]: xl_info & 0x0080
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x0080
  ORIGINAL[2]: appendStringInfo(buf,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: appendStringInfo(buf,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , \
  ORIGINAL[4]: appendStringInfo(buf,\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , \
  ORIGINAL[5]: xlrec -> node . spcNode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3
  ORIGINAL[6]: xlrec -> node . dbNode
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: xlrec -> node . relNode
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 . VAR3
  ORIGINAL[8]: xlrec -> blkno
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: xlrec -> ntuples
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064772541
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !SearchSysCacheExists(RELOID,((Datum )(((Datum )relationId) & 0xFFFFFFFF)),0,0,0)
  TYPE[0]: CALL
  TOKENIZED[0]: !SearchSysCacheExists ( VAR1 , ( ( VAR2 ) ( ( ( VAR2 ) VAR3 ) & 0xFFFFFFFF ) ) , 0 , 0 , 0 )
  ORIGINAL[1]: !(((const void *)r) != ((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( ( ( const void * ) VAR1 ) != ( ( void * ) 0 ) )
  ORIGINAL[2]: ((const void *)r) != ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( const void * ) VAR1 ) != ( ( void * ) 0 )
  ORIGINAL[3]: (const void *)r
  TYPE[3]: CALL
  TOKENIZED[3]: ( const void * ) VAR1
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0

CENTER_NODE: 68719476763
FRAGMENT_COUNT: 6
  ORIGINAL[0]: strcmp(ifmatch_header, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: data_size < buffer_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: stonesoup_printf_context = conn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2
  ORIGINAL[3]: break;
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: break ;
  ORIGINAL[4]: <global> stonesoup_printf_context
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: conn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640697
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640406
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772778
FRAGMENT_COUNT: 2
  ORIGINAL[0]: heap_beginscan_internal(relation,snapshot,nkeys,key,allow_strat,allow_sync,((bool )0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 , ( ( VAR7 ) 0 ) )
  ORIGINAL[1]: (bool )0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 0

CENTER_NODE: 47244640684
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640741
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776282
FRAGMENT_COUNT: 27
  ORIGINAL[0]: &rdata[2]
  TYPE[0]: CALL
  TOKENIZED[0]: &rdata [ 2 ]
  ORIGINAL[1]: rdata[2]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 2 ]
  ORIGINAL[2]: rdata[2]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 2 ]
  ORIGINAL[3]: rdata[2]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 2 ]
  ORIGINAL[4]: rdata[2]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 2 ]
  ORIGINAL[5]: rdata[2]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ 2 ]
  ORIGINAL[6]: rdata[2]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ 2 ]
  ORIGINAL[7]: rdata[2]
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 [ 2 ]
  ORIGINAL[8]: rdata[2]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 [ 2 ]
  ORIGINAL[9]: rdata
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: rdata
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: rdata
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: rdata
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: rdata
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: rdata
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: rdata
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: rdata
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: rdata
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: rdata
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: rdata
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: rdata
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: rdata
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: rdata
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: rdata
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: rdata
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: rdata
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: rdata
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640396
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !is_bitmapscan
  TYPE[0]: CALL
  TOKENIZED[0]: !is_bitmapscan

CENTER_NODE: 30064775353
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064779125
FRAGMENT_COUNT: 11
  ORIGINAL[0]: info == 0x50
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0x50
  ORIGINAL[1]: appendStringInfo(buf,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: xlrec -> node . spcNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: xlrec -> node . dbNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: xlrec -> node . relNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: xlrec -> forknum
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: xlrec -> blkno
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: blkno
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: xlrec
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: xlrec
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772572
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !((bool )(relOid != ((Oid )0)))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 ) ( VAR2 != ( ( VAR3 ) 0 ) ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 68719480021
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((&(&xlrec -> target . tid) -> ip_blkid) -> bi_hi) << 16
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( & ( &xlrec -> VAR1 . VAR2 ) -> VAR3 ) -> VAR4 ) << 16
  ORIGINAL[1]: (uint16 )((&(&xlrec -> target . tid) -> ip_blkid) -> bi_lo)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( ( & ( &xlrec -> VAR2 . VAR3 ) -> VAR4 ) -> VAR5 )
  ORIGINAL[2]: uint16
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: xlrec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773351
FRAGMENT_COUNT: 4
  ORIGINAL[0]: MemoryContextAlloc(CurrentMemoryContext,sizeof(BulkInsertStateData ))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , sizeof ( VAR2 ) )
  ORIGINAL[1]: sizeof(BulkInsertStateData )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: CurrentMemoryContext
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BulkInsertStateData
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640314
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776939
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((intptr_t )(sizeof(XLogRecord ))) + (8 - 1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 ) ( sizeof ( VAR2 ) ) ) + ( 8 - 1 )
  ORIGINAL[1]: (intptr_t )(sizeof(XLogRecord ))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( sizeof ( VAR2 ) )
  ORIGINAL[2]: sizeof(XLogRecord )
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: intptr_t
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774117
FRAGMENT_COUNT: 4
  ORIGINAL[0]: infomask & 0x1000
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x1000
  ORIGINAL[1]: MultiXactIdWait(((MultiXactId )xwait))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 ) VAR2 ) )
  ORIGINAL[2]: (MultiXactId )xwait
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640689
FRAGMENT_COUNT: 1
  ORIGINAL[0]: lsn . xlogid < ((PageHeader )page) -> pd_lsn . xlogid || lsn . xlogid == ((PageHeader )page) -> pd_lsn . xlogid && lsn . xrecoff <= ((PageHeader )page) -> pd_lsn . xrecoff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 || VAR1 . VAR2 == ( ( VAR3 ) VAR4 ) -> VAR5 . VAR2 && VAR1 . VAR6 <= ( ( VAR3 ) VAR4 ) -> VAR5 . VAR6

CENTER_NODE: 47244640778
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640639
FRAGMENT_COUNT: 0

CENTER_NODE: 30064775399
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064777967
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 68719479431
FRAGMENT_COUNT: 3
  ORIGINAL[0]: rdata . len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: sizeof(xl_heap_cleanup_info )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: xl_heap_cleanup_info
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719479526
FRAGMENT_COUNT: 24
  ORIGINAL[0]: rdata[2]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 2 ]
  ORIGINAL[1]: rdata[2]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 2 ]
  ORIGINAL[2]: rdata[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: rdata[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ]
  ORIGINAL[4]: rdata[0]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 0 ]
  ORIGINAL[5]: rdata[0]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ 0 ]
  ORIGINAL[6]: rdata[1]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ 1 ]
  ORIGINAL[7]: rdata[1]
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 [ 1 ]
  ORIGINAL[8]: rdata[1]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 [ 1 ]
  ORIGINAL[9]: rdata[1]
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 [ 1 ]
  ORIGINAL[10]: rdata[1]
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 [ 1 ]
  ORIGINAL[11]: rdata[1]
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 [ 1 ]
  ORIGINAL[12]: rdata
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: rdata
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: rdata
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: rdata
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: rdata
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: rdata
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: rdata
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: rdata
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: rdata
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: rdata
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: rdata
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: rdata
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1

CENTER_NODE: 47244640797
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640466
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479239
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: (Block )(BufferBlocks + ((Size )(buffer - 1)) * 8192)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( VAR2 + ( ( VAR3 ) ( VAR4 - 1 ) ) * 8192 )
  ORIGINAL[2]: Block
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BufferBlocks
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064775839
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064771341
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (lpp -> lp_flags) == 1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == 1
  ORIGINAL[1]: (Item )(((char *)((Page )dp)) + lpp -> lp_off)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( ( ( char * ) ( ( VAR2 ) VAR3 ) ) + VAR4 -> VAR5 )
  ORIGINAL[2]: ((char *)((Page )dp)) + lpp -> lp_off
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( char * ) ( ( VAR1 ) VAR2 ) ) + VAR3 -> VAR4
  ORIGINAL[3]: Item
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640552
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773156
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640382
FRAGMENT_COUNT: 1
  ORIGINAL[0]: lockmode != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640464
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640548
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640772
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640483
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640784
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064774079
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064773821
FRAGMENT_COUNT: 4
  ORIGINAL[0]: info = 0x50
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0x50
  ORIGINAL[1]: needwal
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: info
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: scratchptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064774081
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064775746
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 47244640666
FRAGMENT_COUNT: 0

