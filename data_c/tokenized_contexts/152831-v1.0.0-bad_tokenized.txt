# Tokenized code fragments for 152831-v1.0.0-bad
# Total center nodes processed: 48
# Total code fragments found: 153

CENTER_NODE: 47244640327
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771495
FRAGMENT_COUNT: 4
  ORIGINAL[0]: apr_err = apr_getopt_init(os,pool,argc,argv)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: apr_getopt_init(os,pool,argc,argv)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771283
FRAGMENT_COUNT: 4
  ORIGINAL[0]: message = (apr_pvsprintf(pool,fmt,ap))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , VAR3 , VAR4 ) )
  ORIGINAL[1]: apr_pvsprintf(pool,fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: message
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771280
FRAGMENT_COUNT: 3
  ORIGINAL[0]: __builtin_va_end(ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: message
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771257
FRAGMENT_COUNT: 6
  ORIGINAL[0]: 0 > atexit(apr_terminate)
  TYPE[0]: CALL
  TOKENIZED[0]: 0 > FUN1 ( VAR1 )
  ORIGINAL[1]: pool = svn_pool_create_ex(((void *)0),((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[2]: svn_pool_create_ex(((void *)0),((void *)0))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640299
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *__errno_location() == 32
  TYPE[0]: CALL
  TOKENIZED[0]: *__errno_location ( ) == 32
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477368
FRAGMENT_COUNT: 6
  ORIGINAL[0]: &e
  TYPE[0]: CALL
  TOKENIZED[0]: &e
  ORIGINAL[1]: !( *c)
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( *c )
  ORIGINAL[2]: *editor = e
  TYPE[2]: CALL
  TOKENIZED[2]: *editor = VAR1
  ORIGINAL[3]: *editor
  TYPE[3]: CALL
  TOKENIZED[3]: *editor
  ORIGINAL[4]: e
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: e
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640400
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640324
FRAGMENT_COUNT: 1
  ORIGINAL[0]: auth_password
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719477250
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < sorted_props -> nelts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: item = ((svn_sort__item_t *)(sorted_props -> elts))[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 * ) ( VAR3 -> VAR4 ) ) [ VAR5 ]
  ORIGINAL[2]: *pname = item . key
  TYPE[2]: CALL
  TOKENIZED[2]: *pname = VAR1 . VAR2
  ORIGINAL[3]: item . key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: pname
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: item
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pname
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771603
FRAGMENT_COUNT: 12
  ORIGINAL[0]: svn_config_set(cfg,arg -> section,arg -> option,arg -> value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR2 -> VAR4 , VAR2 -> VAR5 )
  ORIGINAL[1]: arg -> section
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: arg -> option
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: arg -> value
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: section
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: arg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: arg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cfg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cfg
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: arg
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: arg
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: arg
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771116
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context = fopen(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(filepath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771793
FRAGMENT_COUNT: 6
  ORIGINAL[0]: base_dir[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: apr_err = apr_filepath_set(base_dir_apr,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[2]: apr_filepath_set(base_dir_apr,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: base_dir_apr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640365
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 6
  ORIGINAL[0]: output_encoding == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_utf_cstring_from_utf8_ex2(dest,src,output_encoding,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: dest
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> output_encoding
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640355
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477120
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_xml_is_xml_safe(propval -> data,propval -> len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR1 -> VAR3 )
  ORIGINAL[1]: encoding = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = \
  ORIGINAL[2]: xml_safe = base64ed -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 -> VAR3
  ORIGINAL[3]: base64ed -> data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: xml_safe
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: base64ed
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: xml_safe
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771161
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *stonesoup_tainted_buff != 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_tainted_buff != 0
  ORIGINAL[1]: (*stonesoup_tainted_buff)[stonesoup_lsize] = '\\0'
  TYPE[1]: CALL
  TOKENIZED[1]: ( *stonesoup_tainted_buff ) [ VAR1 ] = '\\0'
  ORIGINAL[2]: (*stonesoup_tainted_buff)[stonesoup_lsize]
  TYPE[2]: CALL
  TOKENIZED[2]: ( *stonesoup_tainted_buff ) [ VAR1 ]
  ORIGINAL[3]: *stonesoup_tainted_buff
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_tainted_buff
  ORIGINAL[4]: stonesoup_lsize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640353
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771340
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_error_clear(err)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: err
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771345
FRAGMENT_COUNT: 28
  ORIGINAL[0]: failures == 0 || failures == 0x00000008
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 || VAR1 == 0x00000008
  ORIGINAL[1]: failures == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: failures == 0x00000008
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0x00000008
  ORIGINAL[3]: *cred_p = (memset(apr_palloc(pool,sizeof(( *( *cred_p)))),0,sizeof(( *( *cred_p)))))
  TYPE[3]: CALL
  TOKENIZED[3]: *cred_p = ( FUN1 ( FUN2 ( VAR1 , sizeof ( ( * ( *cred_p ) ) ) ) , 0 , sizeof ( ( * ( *cred_p ) ) ) ) )
  ORIGINAL[4]: *cred_p
  TYPE[4]: CALL
  TOKENIZED[4]: *cred_p
  ORIGINAL[5]: memset(apr_palloc(pool,sizeof(( *( *cred_p)))),0,sizeof(( *( *cred_p))))
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( FUN2 ( VAR1 , sizeof ( ( * ( *cred_p ) ) ) ) , 0 , sizeof ( ( * ( *cred_p ) ) ) )
  ORIGINAL[6]: apr_palloc(pool,sizeof(( *( *cred_p))))
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , sizeof ( ( * ( *cred_p ) ) ) )
  ORIGINAL[7]: sizeof(( *( *cred_p)))
  TYPE[7]: CALL
  TOKENIZED[7]: sizeof ( ( * ( *cred_p ) ) )
  ORIGINAL[8]: *( *cred_p)
  TYPE[8]: CALL
  TOKENIZED[8]: * ( *cred_p )
  ORIGINAL[9]: *cred_p
  TYPE[9]: CALL
  TOKENIZED[9]: *cred_p
  ORIGINAL[10]: sizeof(( *( *cred_p)))
  TYPE[10]: CALL
  TOKENIZED[10]: sizeof ( ( * ( *cred_p ) ) )
  ORIGINAL[11]: *( *cred_p)
  TYPE[11]: CALL
  TOKENIZED[11]: * ( *cred_p )
  ORIGINAL[12]: *cred_p
  TYPE[12]: CALL
  TOKENIZED[12]: *cred_p
  ORIGINAL[13]: ( *cred_p) -> may_save = 0
  TYPE[13]: CALL
  TOKENIZED[13]: ( *cred_p ) -> VAR1 = 0
  ORIGINAL[14]: ( *cred_p) -> may_save
  TYPE[14]: CALL
  TOKENIZED[14]: ( *cred_p ) -> VAR1
  ORIGINAL[15]: *cred_p
  TYPE[15]: CALL
  TOKENIZED[15]: *cred_p
  ORIGINAL[16]: ( *cred_p) -> accepted_failures = failures
  TYPE[16]: CALL
  TOKENIZED[16]: ( *cred_p ) -> VAR1 = VAR2
  ORIGINAL[17]: ( *cred_p) -> accepted_failures
  TYPE[17]: CALL
  TOKENIZED[17]: ( *cred_p ) -> VAR1
  ORIGINAL[18]: *cred_p
  TYPE[18]: CALL
  TOKENIZED[18]: *cred_p
  ORIGINAL[19]: may_save
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: accepted_failures
  TYPE[20]: FIELD_IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: cred_p
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: pool
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: cred_p
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: cred_p
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: cred_p
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: cred_p
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: failures
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1

CENTER_NODE: 47244640373
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640406
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771973
FRAGMENT_COUNT: 4
  ORIGINAL[0]: disaffiliating_intermembranous != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: (int )(strlen(disaffiliating_intermembranous))
  TYPE[1]: CALL
  TOKENIZED[1]: ( int ) ( FUN1 ( VAR1 ) )
  ORIGINAL[2]: strlen(disaffiliating_intermembranous)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: disaffiliating_intermembranous
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640360
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640421
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640358
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640409
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640395
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640401
FRAGMENT_COUNT: 1
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771617
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ( *p) != 13 && ( *p) != 10 && ( *p) != '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 13 && ( *p ) != 10 && ( *p ) != '\\0'
  ORIGINAL[1]: ( *p) != 13 && ( *p) != 10
  TYPE[1]: CALL
  TOKENIZED[1]: ( *p ) != 13 && ( *p ) != 10
  ORIGINAL[2]: ( *p) != 13
  TYPE[2]: CALL
  TOKENIZED[2]: ( *p ) != 13
  ORIGINAL[3]: ( *p) != 10
  TYPE[3]: CALL
  TOKENIZED[3]: ( *p ) != 10
  ORIGINAL[4]: ( *p) != '\\0'
  TYPE[4]: CALL
  TOKENIZED[4]: ( *p ) != '\\0'
  ORIGINAL[5]: *p
  TYPE[5]: CALL
  TOKENIZED[5]: *p
  ORIGINAL[6]: p
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771270
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_cmdline_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477306
FRAGMENT_COUNT: 7
  ORIGINAL[0]: sorted_props -> nelts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: sorted_props -> elts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: nelts
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sorted_props
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: sorted_props
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: names_only
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476911
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_cmdline_cstring_from_utf8(dest,svn_dirent_local_style(src,pool),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR2 , VAR3 ) , VAR3 )
  ORIGINAL[1]: svn_dirent_local_style(src,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477237
FRAGMENT_COUNT: 5
  ORIGINAL[0]: line = next_line(&str,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &str , VAR2 )
  ORIGINAL[1]: svn_stringbuf_appendcstr(out,line)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: line
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: out
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: line
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771547
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (second_colon = (strchr(first_colon + 1,':'))) && second_colon != first_colon + 1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = ( FUN1 ( VAR2 + 1 , ':' ) ) ) && VAR1 != VAR2 + 1
  ORIGINAL[1]: strchr(second_colon + 1,'=')
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 + 1 , '=' )
  ORIGINAL[2]: second_colon + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: second_colon
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477341
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !force_interactive && !non_interactive
  TYPE[0]: CALL
  TOKENIZED[0]: !force_interactive && !non_interactive
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: !non_interactive
  TYPE[2]: CALL
  TOKENIZED[2]: !non_interactive
  ORIGINAL[3]: force_interactive
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: non_interactive
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640415
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477645
FRAGMENT_COUNT: 7
  ORIGINAL[0]: gaylene_clodded(&suedes_plectridial)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &suedes_plectridial )
  ORIGINAL[1]: &suedes_plectridial
  TYPE[1]: CALL
  TOKENIZED[1]: &suedes_plectridial
  ORIGINAL[2]: suedes_plectridial != 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != 0
  ORIGINAL[3]: suedes_plectridial
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: suedes_plectridial
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: suedes_plectridial
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: suedes_plectridial
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640295
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

