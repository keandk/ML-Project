# Tokenized code fragments for 152141-v1.0.0-bad
# Total center nodes processed: 75
# Total code fragments found: 506

CENTER_NODE: 68719476780
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *s = obj
  TYPE[0]: CALL
  TOKENIZED[0]: *s = VAR1
  ORIGINAL[1]: prev?((void *)0) : s -> opaque
  TYPE[1]: CALL
  TOKENIZED[1]: prev? ( ( void * ) 0 ) : VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: s -> opaque
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: opaque
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: prev
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771488
FRAGMENT_COUNT: 5
  ORIGINAL[0]: val >>= 7
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >>= 7
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: while (val >>= 7)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( VAR1 >>= 7 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477760
FRAGMENT_COUNT: 2
  ORIGINAL[0]: url_open_dyn_buf_internal(s,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772118
FRAGMENT_COUNT: 6
  ORIGINAL[0]: avio_open2(s,filename,flags,((void *)0),((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: flags
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772054
FRAGMENT_COUNT: 3
  ORIGINAL[0]: flags & 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 2
  ORIGINAL[1]: s -> write_flag = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = 1
  ORIGINAL[2]: s -> write_flag
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

CENTER_NODE: 68719477102
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (int )val
  TYPE[0]: CALL
  TOKENIZED[0]: ( int ) VAR1
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476839
FRAGMENT_COUNT: 10
  ORIGINAL[0]: s -> write_packet && !s -> error
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && !s -> VAR3
  ORIGINAL[1]: s -> write_packet
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> error
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> opaque
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ret < 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 < 0
  ORIGINAL[5]: s -> error = ret
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 = VAR3
  ORIGINAL[6]: s -> error
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: s -> pos
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: pos
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477045
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tmp >> 6
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >> 6
  ORIGINAL[1]: ch = (ch << 6) + tmp
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR1 << 6 ) + VAR2
  ORIGINAL[2]: (ch << 6) + tmp
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 << 6 ) + VAR2
  ORIGINAL[3]: ch
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ch
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ch
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477828
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .version = '4' << 16 | 18 << 8 | 100
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = '4' << 16 | 18 << 8 | 100
  ORIGINAL[1]: '4' << 16 | 18 << 8 | 100
  TYPE[1]: CALL
  TOKENIZED[1]: '4' << 16 | 18 << 8 | 100
  ORIGINAL[2]: version
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477304
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_rl16(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477298
FRAGMENT_COUNT: 5
  ORIGINAL[0]: val = (avio_r8(s))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 ) )
  ORIGINAL[1]: avio_r8(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771220
FRAGMENT_COUNT: 5
  ORIGINAL[0]: s -> buf_ptr >= s -> buf_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 >= VAR1 -> VAR3
  ORIGINAL[1]: s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: flush_buffer(s)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476825
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: ffio_init_context(s,buffer,buffer_size,write_flag,opaque,read_packet,write_packet,seek)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 , VAR7 , VAR8 )
  ORIGINAL[2]: opaque
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: read_packet
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: write_packet
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772029
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !( *s)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( *s )
  ORIGINAL[1]: ( *s) -> av_class = &ffio_url_class
  TYPE[1]: CALL
  TOKENIZED[1]: ( *s ) -> VAR1 = &ffio_url_class
  ORIGINAL[2]: ( *s) -> av_class
  TYPE[2]: CALL
  TOKENIZED[2]: ( *s ) -> VAR1
  ORIGINAL[3]: *s
  TYPE[3]: CALL
  TOKENIZED[3]: *s
  ORIGINAL[4]: &ffio_url_class
  TYPE[4]: CALL
  TOKENIZED[4]: &ffio_url_class
  ORIGINAL[5]: av_class
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: <global> ffio_url_class
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1

CENTER_NODE: 30064772039
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !buffer
  TYPE[0]: CALL
  TOKENIZED[0]: !buffer
  ORIGINAL[1]: s -> buffer = buffer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: s -> buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buffer
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771411
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: s -> eof_reached
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> eof_reached
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: eof_reached
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: eof_reached
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772297
FRAGMENT_COUNT: 3
  ORIGINAL[0]: padding = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: padding
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477311
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_rl16(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 12
  ORIGINAL[0]: s -> error = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 0
  ORIGINAL[1]: s -> error
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: error
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 2
  ORIGINAL[0]: count > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: while (count > 0)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( VAR1 > 0 )

CENTER_NODE: 68719477655
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !s -> read_pause
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: s -> read_pause
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> read_pause
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> opaque
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: opaque
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477295
FRAGMENT_COUNT: 11
  ORIGINAL[0]: s -> read_packet
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> write_flag
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> buf_end
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> buf_ptr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> error
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: s -> error
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: error
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772153
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *s = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *s = ( ( void * ) 0 )
  ORIGINAL[1]: *s
  TYPE[1]: CALL
  TOKENIZED[1]: *s
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476771
FRAGMENT_COUNT: 4
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477725
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ret < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: dyn_buf_write(opaque,buf,buf_size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: buf_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772132
FRAGMENT_COUNT: 6
  ORIGINAL[0]: err < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: err = ffio_fdopen(s,h)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[2]: ffio_fdopen(s,h)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: h
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771669
FRAGMENT_COUNT: 43
  ORIGINAL[0]: size > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: (s -> direct || size > s -> buffer_size) && !s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 || VAR3 > VAR1 -> VAR4 ) && !s -> VAR5
  ORIGINAL[2]: len <= 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 0
  ORIGINAL[3]: s -> eof_reached = 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = 1
  ORIGINAL[4]: s -> eof_reached
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: len < 0
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 < 0
  ORIGINAL[6]: s -> pos += len
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 += VAR3
  ORIGINAL[7]: s -> pos
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: s -> bytes_read += len
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 += VAR3
  ORIGINAL[9]: s -> bytes_read
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: size -= len
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -= VAR2
  ORIGINAL[11]: buf += len
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 += VAR2
  ORIGINAL[12]: s -> buf_ptr = s -> buffer
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[13]: s -> buf_ptr
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: s -> buffer
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: s -> buf_end = s -> buffer
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[16]: s -> buf_end
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: s -> buffer
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 -> VAR2
  ORIGINAL[18]: break;
  TYPE[18]: CONTROL_STRUCTURE
  TOKENIZED[18]: break ;
  ORIGINAL[19]: eof_reached
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: pos
  TYPE[20]: FIELD_IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: bytes_read
  TYPE[21]: FIELD_IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: buf_ptr
  TYPE[22]: FIELD_IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: buffer
  TYPE[23]: FIELD_IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: buf_end
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: buffer
  TYPE[25]: FIELD_IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: size
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: len
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: s
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: len
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: s
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: len
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: s
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: len
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: size
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: len
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: buf
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: len
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: s
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: s
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: s
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: s
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: size1
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1

CENTER_NODE: 68719477028
FRAGMENT_COUNT: 6
  ORIGINAL[0]: avio_write(s,((const unsigned char *)str),len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( const unsigned char * ) VAR2 ) , VAR3 )
  ORIGINAL[1]: (const unsigned char *)str
  TYPE[1]: CALL
  TOKENIZED[1]: ( const unsigned char * ) VAR1
  ORIGINAL[2]: str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771504
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_wl32(s,((uint32_t )(val >> 32)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) ( VAR3 >> 32 ) ) )
  ORIGINAL[1]: (uint32_t )(val >> 32)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( VAR2 >> 32 )
  ORIGINAL[2]: val >> 32
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >> 32
  ORIGINAL[3]: uint32_t
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772191
FRAGMENT_COUNT: 1
  ORIGINAL[0]: io_buffer[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]

CENTER_NODE: 30064771199
FRAGMENT_COUNT: 33
  ORIGINAL[0]: s -> buf_ptr > s -> buffer
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > VAR1 -> VAR3
  ORIGINAL[1]: s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> checksum = ((s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_ptr - s -> checksum_ptr)))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = ( ( VAR1 -> VAR3 ) ( VAR1 -> VAR2 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) ) )
  ORIGINAL[3]: s -> checksum
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_ptr - s -> checksum_ptr))
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) )
  ORIGINAL[5]: s -> update_checksum
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> checksum
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: s -> checksum_ptr
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: s -> buf_ptr - s -> checksum_ptr
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[9]: s -> buf_ptr
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: s -> checksum_ptr
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: s -> checksum_ptr = s -> buffer
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[12]: s -> checksum_ptr
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: s -> buffer
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: update_checksum
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: checksum
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: update_checksum
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: checksum
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: checksum_ptr
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: buf_ptr
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: checksum_ptr
  TYPE[20]: FIELD_IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: checksum_ptr
  TYPE[21]: FIELD_IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: buffer
  TYPE[22]: FIELD_IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: s
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: s
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: s
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: s
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: s
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: s
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: s
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: s
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: s
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: s
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1

CENTER_NODE: 30064772163
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_write(s,buf,(strlen(buf)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( FUN2 ( VAR2 ) ) )
  ORIGINAL[1]: strlen(buf)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771969
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((uint64_t )(avio_rb32(s))) << 32
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 ) ( FUN1 ( VAR2 ) ) ) << 32
  ORIGINAL[1]: (uint64_t )(avio_rb32(s))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( FUN1 ( VAR2 ) )
  ORIGINAL[2]: avio_rb32(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: uint64_t
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477832
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = ffio_url_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771778
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= ((uint64_t )(avio_rl32(s))) << 32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= ( ( VAR2 ) ( FUN1 ( VAR3 ) ) ) << 32
  ORIGINAL[1]: ((uint64_t )(avio_rl32(s))) << 32
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 ) ( FUN1 ( VAR2 ) ) ) << 32
  ORIGINAL[2]: (uint64_t )(avio_rl32(s))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( FUN1 ( VAR2 ) )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771527
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_wb16(s,(((int )val) >> 8))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( ( int ) VAR2 ) >> 8 ) )
  ORIGINAL[1]: ((int )val) >> 8
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( int ) VAR1 ) >> 8
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476739
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mg_vprintf_data((struct mg_connection*) stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( struct mg_connection* ) VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: (struct mg_connection*) stonesoup_printf_context
  TYPE[1]: CALL
  TOKENIZED[1]: ( struct mg_connection* ) VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477321
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_r8(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477333
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_rb16(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772371
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = ffio_url_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477826
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .item_name = av_default_item_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: av_default_item_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476914
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: s -> pos
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pos
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pos
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771507
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_wb32(s,((uint32_t )(val >> 32)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) ( VAR3 >> 32 ) ) )
  ORIGINAL[1]: (uint32_t )(val >> 32)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( VAR2 >> 32 )
  ORIGINAL[2]: val >> 32
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >> 32
  ORIGINAL[3]: uint32_t
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771630
FRAGMENT_COUNT: 15
  ORIGINAL[0]: s -> update_checksum
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> checksum = checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: s -> checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> checksum_ptr = s -> buf_ptr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[4]: s -> checksum_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> buf_ptr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: update_checksum
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: checksum
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: checksum_ptr
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf_ptr
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: checksum
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: s
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 68719477008
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (uint8_t )(val >> 16)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( VAR2 >> 16 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uint8_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772289
FRAGMENT_COUNT: 2
  ORIGINAL[0]: max_packet_size <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: - 1
  TYPE[1]: CALL
  TOKENIZED[1]: - 1

CENTER_NODE: 68719477758
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !( *s)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( *s )
  ORIGINAL[1]: *s
  TYPE[1]: CALL
  TOKENIZED[1]: *s
  ORIGINAL[2]: *s
  TYPE[2]: CALL
  TOKENIZED[2]: *s
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771835
FRAGMENT_COUNT: 20
  ORIGINAL[0]: buflen <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: ret + 1 < maxlen
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1 < VAR2
  ORIGINAL[2]: ret + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: ch = ((ret += 2) <= maxlen?avio_rl16(pb) : 0)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = ( ( VAR2 += 2 ) <= maxlen?avio_rl16 ( VAR3 ) : 0 )
  ORIGINAL[4]: (ret += 2) <= maxlen?avio_rl16(pb) : 0
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 += 2 ) <= maxlen?avio_rl16 ( VAR2 ) : 0
  ORIGINAL[5]: (ret += 2) <= maxlen
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 += 2 ) <= VAR2
  ORIGINAL[6]: ret += 2
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 += 2
  ORIGINAL[7]: hi = ch - 0xD800
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 = VAR2 - 0xD800
  ORIGINAL[8]: ch - 0xD800
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 - 0xD800
  ORIGINAL[9]: hi < 0x800
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 < 0x800
  ORIGINAL[10]: !ch
  TYPE[10]: CALL
  TOKENIZED[10]: !ch
  ORIGINAL[11]: while (ret + 1 < maxlen)
  TYPE[11]: CONTROL_STRUCTURE
  TOKENIZED[11]: while ( VAR1 + 1 < VAR2 )
  ORIGINAL[12]: maxlen
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: ch
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: ret
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: maxlen
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: hi
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: ch
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: hi
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: q
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064772206
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !new_allocated_size
  TYPE[0]: CALL
  TOKENIZED[0]: !new_allocated_size
  ORIGINAL[1]: new_allocated_size = new_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: new_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: new_allocated_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: new_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477495
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tmp = avio_r8(bc)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: val = (val << 7) + (tmp & 127)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR1 << 7 ) + ( VAR2 & 127 )
  ORIGINAL[2]: (val << 7) + (tmp & 127)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 << 7 ) + ( VAR2 & 127 )
  ORIGINAL[3]: tmp & 128
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 & 128
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: val
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: val
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: avio_flush(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: h
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477483
FRAGMENT_COUNT: 16
  ORIGINAL[0]: buflen <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: ret + 1 < maxlen
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1 < VAR2
  ORIGINAL[2]: hi < 0x800
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 < 0x800
  ORIGINAL[3]: ch > 0x3FFU || hi > 0x3FFU
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 > 0x3FFU || VAR2 > 0x3FFU
  ORIGINAL[4]: !ch
  TYPE[4]: CALL
  TOKENIZED[4]: !ch
  ORIGINAL[5]: *q
  TYPE[5]: CALL
  TOKENIZED[5]: *q
  ORIGINAL[6]: break;
  TYPE[6]: CONTROL_STRUCTURE
  TOKENIZED[6]: break ;
  ORIGINAL[7]: break;
  TYPE[7]: CONTROL_STRUCTURE
  TOKENIZED[7]: break ;
  ORIGINAL[8]: q
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: q
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: q
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: q
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: q
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: q
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: q
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: q
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 30064772349
FRAGMENT_COUNT: 7
  ORIGINAL[0]: uniqueness_kathode != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: *corsos_sori
  TYPE[1]: CALL
  TOKENIZED[1]: *corsos_sori
  ORIGINAL[2]: (char *)( *corsos_sori)
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) ( *corsos_sori )
  ORIGINAL[3]: *corsos_sori
  TYPE[3]: CALL
  TOKENIZED[3]: *corsos_sori
  ORIGINAL[4]: *corsos_sori
  TYPE[4]: CALL
  TOKENIZED[4]: *corsos_sori
  ORIGINAL[5]: corsos_sori
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: corsos_sori
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771624
FRAGMENT_COUNT: 4
  ORIGINAL[0]: s -> update_checksum = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771640
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> buf_ptr < s -> buf_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 < VAR1 -> VAR3
  ORIGINAL[1]: s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: *(s -> buf_ptr++)
  TYPE[3]: CALL
  TOKENIZED[3]: * ( VAR1 -> buf_ptr++ )
  ORIGINAL[4]: s -> buf_ptr++
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> buf_ptr++
  ORIGINAL[5]: s -> buf_ptr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf_ptr
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771523
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_wl16(s,val & 0xffff)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 & 0xffff )
  ORIGINAL[1]: val & 0xffff
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0xffff
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771246
FRAGMENT_COUNT: 16
  ORIGINAL[0]: s -> direct
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: !s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: !s -> VAR1
  ORIGINAL[2]: s -> update_checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: update_checksum
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: s
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: s
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 68719476980
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_seek(s,offset,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476993
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> seek
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: (size = ((s -> seek)(s -> opaque,(- 1),2))) < 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( VAR2 -> VAR3 ) ( VAR2 -> VAR4 , ( - 1 ) , 2 ) ) ) < 0
  ORIGINAL[2]: s -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: size++
  TYPE[3]: CALL
  TOKENIZED[3]: size++
  ORIGINAL[4]: s -> seek
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: seek
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476783
FRAGMENT_COUNT: 3
  ORIGINAL[0]: &ffurl_context_class
  TYPE[0]: CALL
  TOKENIZED[0]: &ffurl_context_class
  ORIGINAL[1]: prev
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ffurl_context_class
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771824
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i < buflen
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: buf[i] = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = 0
  ORIGINAL[2]: buf[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476908
FRAGMENT_COUNT: 5
  ORIGINAL[0]: flush_buffer(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: s -> must_flush
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: must_flush
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771787
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val = avio_rb16(s) << 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 ) << 8
  ORIGINAL[1]: avio_rb16(s) << 8
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) << 8
  ORIGINAL[2]: avio_rb16(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477178
FRAGMENT_COUNT: 5
  ORIGINAL[0]: av_crc(av_crc_get_table(AV_CRC_32_IEEE),checksum,buf,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: av_crc_get_table(AV_CRC_32_IEEE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: checksum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477017
FRAGMENT_COUNT: 6
  ORIGINAL[0]: avio_w8(s,((uint8_t )(val >> 16)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) ( VAR3 >> 16 ) ) )
  ORIGINAL[1]: avio_w8(s,((uint8_t )(val >> 8)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( VAR2 ) ( VAR3 >> 8 ) ) )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uint8_t
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477100
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (int )val
  TYPE[0]: CALL
  TOKENIZED[0]: ( int ) VAR1
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477336
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: c = (avio_r8(s))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 ) )
  ORIGINAL[2]: avio_r8(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: c != 10 && c
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 != 10 && VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: c
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771491
FRAGMENT_COUNT: 14
  ORIGINAL[0]: --i > 0
  TYPE[0]: CALL
  TOKENIZED[0]: --i > 0
  ORIGINAL[1]: --i
  TYPE[1]: CALL
  TOKENIZED[1]: --i
  ORIGINAL[2]: avio_w8(bc,128 | ((uint8_t )(val >> 7 * i)))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 128 | ( ( VAR2 ) ( VAR3 >> 7 * VAR4 ) ) )
  ORIGINAL[3]: 128 | ((uint8_t )(val >> 7 * i))
  TYPE[3]: CALL
  TOKENIZED[3]: 128 | ( ( VAR1 ) ( VAR2 >> 7 * VAR3 ) )
  ORIGINAL[4]: (uint8_t )(val >> 7 * i)
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 ) ( VAR2 >> 7 * VAR3 )
  ORIGINAL[5]: val >> 7 * i
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 >> 7 * VAR2
  ORIGINAL[6]: 7 * i
  TYPE[6]: CALL
  TOKENIZED[6]: 7 * VAR1
  ORIGINAL[7]: while (--i > 0)
  TYPE[7]: CONTROL_STRUCTURE
  TOKENIZED[7]: while ( --i > 0 )
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: bc
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: uint8_t
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: val
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: i
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: bc
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064771557
FRAGMENT_COUNT: 34
  ORIGINAL[0]: !s -> read_packet
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: s -> buf_ptr >= s -> buf_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 >= VAR1 -> VAR3
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buf_end
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf_ptr
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: s
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: s
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: s
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: s
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: s
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: s
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: s
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: s
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: s
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: s
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: s
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: s
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: s
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: s
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: s
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: s
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: s
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: s
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: s
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: s
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1

CENTER_NODE: 68719476762
FRAGMENT_COUNT: 6
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: buffer_size = buffer_size * 2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 * 2
  ORIGINAL[2]: free(stonesoup_tainted_buff)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: stonesoup_tainted_buff
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_tainted_buff
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_buff
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477727
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *d = opaque
  TYPE[0]: CALL
  TOKENIZED[0]: *d = VAR1
  ORIGINAL[1]: d
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: opaque
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640404
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ret >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 0

CENTER_NODE: 30064772114
FRAGMENT_COUNT: 5
  ORIGINAL[0]: alloc_size > buf_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2
  ORIGINAL[1]: !(buf =  *bufp = (av_realloc_f(buf,1,alloc_size)))
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( VAR1 = *bufp = ( FUN1 ( VAR1 , 1 , VAR2 ) ) )
  ORIGINAL[2]: s -> eof_reached = 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = 0
  ORIGINAL[3]: s -> eof_reached
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

