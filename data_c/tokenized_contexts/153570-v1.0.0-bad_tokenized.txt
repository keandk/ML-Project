# Tokenized code fragments for 153570-v1.0.0-bad
# Total center nodes processed: 48
# Total code fragments found: 191

CENTER_NODE: 47244640423
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640332
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771933
FRAGMENT_COUNT: 8
  ORIGINAL[0]: *svn_err__temp = get_xlate_handle_node(&node,topage,SVN_APR_UTF8_CHARSET,convset_key,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( &node , VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: get_xlate_handle_node(&node,topage,SVN_APR_UTF8_CHARSET,convset_key,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &node , VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: &node
  TYPE[2]: CALL
  TOKENIZED[2]: &node
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: topage
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> SVN_APR_UTF8_CHARSET
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: convset_key
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640400
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640333
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640396
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771142
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: strlen(ss_tc_root) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[2]: strlen(ss_tc_root) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: strlen(ss_tc_root)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: strlen(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( \

CENTER_NODE: 68719477619
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_utf_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476936
FRAGMENT_COUNT: 9
  ORIGINAL[0]: apr_xlate_open(&handle,topage,frompage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &handle , VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: &handle
  TYPE[1]: CALL
  TOKENIZED[1]: &handle
  ORIGINAL[2]: topage
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: frompage
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pool
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 1
  ORIGINAL[0]: frompage == ((const char *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( const char * ) 0 )

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640413
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476891
FRAGMENT_COUNT: 3
  ORIGINAL[0]: xlate_handle_hash = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> xlate_handle_hash
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640379
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640406
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477212
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !(0 != (svn_ctype_table[(unsigned char )( *src)] & 0x0080)) || ( *src) == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( 0 != ( VAR1 [ ( unsigned char ) ( *src ) ] & 0x0080 ) ) || ( *src ) == '\\0'
  ORIGINAL[1]: new_len += 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += 1
  ORIGINAL[2]: new_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: new_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: new_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: new_len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476764
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: fprintf(stderr, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: stderr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stderr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stderr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stderr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stderr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stderr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stderr
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stderr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640302
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477318
FRAGMENT_COUNT: 8
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i < valid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: ++i
  TYPE[2]: CALL
  TOKENIZED[2]: ++i
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: valid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771660
FRAGMENT_COUNT: 55
  ORIGINAL[0]: src_length == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: destlen = buflen - ( *dest) -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 - ( *dest ) -> VAR3
  ORIGINAL[2]: buflen - ( *dest) -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - ( *dest ) -> VAR2
  ORIGINAL[3]: ( *dest) -> len
  TYPE[3]: CALL
  TOKENIZED[3]: ( *dest ) -> VAR1
  ORIGINAL[4]: *dest
  TYPE[4]: CALL
  TOKENIZED[4]: *dest
  ORIGINAL[5]: apr_err = apr_xlate_conv_buffer(node -> handle,src_data + (src_length - srclen),&srclen,( *dest) -> data + ( *dest) -> len,&destlen)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = FUN1 ( VAR2 -> VAR3 , VAR4 + ( VAR5 - VAR6 ) , &srclen , ( *dest ) -> VAR7 + ( *dest ) -> VAR8 , &destlen )
  ORIGINAL[6]: apr_xlate_conv_buffer(node -> handle,src_data + (src_length - srclen),&srclen,( *dest) -> data + ( *dest) -> len,&destlen)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 -> VAR2 , VAR3 + ( VAR4 - VAR5 ) , &srclen , ( *dest ) -> VAR6 + ( *dest ) -> VAR7 , &destlen )
  ORIGINAL[7]: node -> handle
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: src_data + (src_length - srclen)
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 + ( VAR2 - VAR3 )
  ORIGINAL[9]: src_length - srclen
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 - VAR2
  ORIGINAL[10]: &srclen
  TYPE[10]: CALL
  TOKENIZED[10]: &srclen
  ORIGINAL[11]: ( *dest) -> data + ( *dest) -> len
  TYPE[11]: CALL
  TOKENIZED[11]: ( *dest ) -> VAR1 + ( *dest ) -> VAR2
  ORIGINAL[12]: ( *dest) -> data
  TYPE[12]: CALL
  TOKENIZED[12]: ( *dest ) -> VAR1
  ORIGINAL[13]: *dest
  TYPE[13]: CALL
  TOKENIZED[13]: *dest
  ORIGINAL[14]: ( *dest) -> len
  TYPE[14]: CALL
  TOKENIZED[14]: ( *dest ) -> VAR1
  ORIGINAL[15]: *dest
  TYPE[15]: CALL
  TOKENIZED[15]: *dest
  ORIGINAL[16]: &destlen
  TYPE[16]: CALL
  TOKENIZED[16]: &destlen
  ORIGINAL[17]: ( *dest) -> len += buflen - ( *dest) -> len - destlen
  TYPE[17]: CALL
  TOKENIZED[17]: ( *dest ) -> VAR1 += VAR2 - ( *dest ) -> VAR1 - VAR3
  ORIGINAL[18]: ( *dest) -> len
  TYPE[18]: CALL
  TOKENIZED[18]: ( *dest ) -> VAR1
  ORIGINAL[19]: *dest
  TYPE[19]: CALL
  TOKENIZED[19]: *dest
  ORIGINAL[20]: buflen - ( *dest) -> len - destlen
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 - ( *dest ) -> VAR2 - VAR3
  ORIGINAL[21]: buflen - ( *dest) -> len
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 - ( *dest ) -> VAR2
  ORIGINAL[22]: ( *dest) -> len
  TYPE[22]: CALL
  TOKENIZED[22]: ( *dest ) -> VAR1
  ORIGINAL[23]: *dest
  TYPE[23]: CALL
  TOKENIZED[23]: *dest
  ORIGINAL[24]: buflen += srclen * 3
  TYPE[24]: CALL
  TOKENIZED[24]: VAR1 += VAR2 * 3
  ORIGINAL[25]: srclen * 3
  TYPE[25]: CALL
  TOKENIZED[25]: VAR1 * 3
  ORIGINAL[26]: apr_err == 0 && srclen != 0
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 == 0 && VAR2 != 0
  ORIGINAL[27]: apr_err == 0
  TYPE[27]: CALL
  TOKENIZED[27]: VAR1 == 0
  ORIGINAL[28]: srclen != 0
  TYPE[28]: CALL
  TOKENIZED[28]: VAR1 != 0
  ORIGINAL[29]: len
  TYPE[29]: FIELD_IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: handle
  TYPE[30]: FIELD_IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: data
  TYPE[31]: FIELD_IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: len
  TYPE[32]: FIELD_IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: len
  TYPE[33]: FIELD_IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: len
  TYPE[34]: FIELD_IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: destlen
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: buflen
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: dest
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: apr_err
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: node
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: src_data
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: src_length
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: srclen
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: srclen
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: dest
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: dest
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: destlen
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: dest
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: VAR1
  ORIGINAL[48]: buflen
  TYPE[48]: IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: dest
  TYPE[49]: IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: destlen
  TYPE[50]: IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: buflen
  TYPE[51]: IDENTIFIER
  TOKENIZED[51]: VAR1
  ORIGINAL[52]: srclen
  TYPE[52]: IDENTIFIER
  TOKENIZED[52]: VAR1
  ORIGINAL[53]: apr_err
  TYPE[53]: IDENTIFIER
  TOKENIZED[53]: VAR1
  ORIGINAL[54]: apr_err
  TYPE[54]: IDENTIFIER
  TOKENIZED[54]: VAR1

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640344
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477607
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fuzzy_escape(src,strlen(src),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR1 ) , VAR2 )
  ORIGINAL[1]: escaped
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476888
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97
  ORIGINAL[1]: c <= 122
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 122
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *node = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *node = VAR1
  ORIGINAL[1]: node
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640373
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771827
FRAGMENT_COUNT: 25
  ORIGINAL[0]: node -> handle
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *svn_err__temp = convert_to_stringbuf(node,src,strlen(src),&destbuf,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 , VAR2 , FUN2 ( VAR2 ) , &destbuf , VAR3 )
  ORIGINAL[2]: convert_to_stringbuf(node,src,strlen(src),&destbuf,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , FUN2 ( VAR2 ) , &destbuf , VAR3 )
  ORIGINAL[3]: strlen(src)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: &destbuf
  TYPE[4]: CALL
  TOKENIZED[4]: &destbuf
  ORIGINAL[5]: len = strlen(src)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[6]: strlen(src)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 )
  ORIGINAL[7]: *svn_err__temp = check_non_ascii(src,len,pool)
  TYPE[7]: CALL
  TOKENIZED[7]: *svn_err__temp = FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[8]: check_non_ascii(src,len,pool)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[9]: handle
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: svn_err__temp
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: node
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: src
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: src
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: destbuf
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: pool
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: svn_err__temp
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: len
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: src
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: svn_err__temp
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: src
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: len
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: pool
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: svn_err__temp
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1

CENTER_NODE: 47244640345
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640335
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640394
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771397
FRAGMENT_COUNT: 7
  ORIGINAL[0]: unsystematised_inversions != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: ( *( *( *( *( *( *( *( *( *( *sophistress_odontolith)))))))))) . ring_stinkbugs != 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *sophistress_odontolith ) ) ) ) ) ) ) ) ) ) . VAR1 != 0
  ORIGINAL[2]: ( *( *( *( *( *( *( *( *( *( *sophistress_odontolith)))))))))) . ring_stinkbugs
  TYPE[2]: CALL
  TOKENIZED[2]: ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *sophistress_odontolith ) ) ) ) ) ) ) ) ) ) . VAR1
  ORIGINAL[3]: *( *( *( *( *( *( *( *( *( *sophistress_odontolith)))))))))
  TYPE[3]: CALL
  TOKENIZED[3]: * ( * ( * ( * ( * ( * ( * ( * ( * ( *sophistress_odontolith ) ) ) ) ) ) ) ) )
  ORIGINAL[4]: ( *( *( *( *( *( *( *( *( *( *sophistress_odontolith)))))))))) . ring_stinkbugs
  TYPE[4]: CALL
  TOKENIZED[4]: ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *sophistress_odontolith ) ) ) ) ) ) ) ) ) ) . VAR1
  ORIGINAL[5]: *( *( *( *( *( *( *( *( *( *sophistress_odontolith)))))))))
  TYPE[5]: CALL
  TOKENIZED[5]: * ( * ( * ( * ( * ( * ( * ( * ( * ( *sophistress_odontolith ) ) ) ) ) ) ) ) )
  ORIGINAL[6]: ring_stinkbugs
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477349
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !svn_utf__is_valid(data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: !svn_utf__is_valid ( VAR1 , VAR2 )
  ORIGINAL[1]: invalid_utf8(data,len,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640415
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476875
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[1]: calloc(stonesoup_shmsz, sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( char ) )
  ORIGINAL[2]: stonesoup_shmsz
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_shmsz
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: char
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: char

CENTER_NODE: 47244640425
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640424
FRAGMENT_COUNT: 1
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 47244640347
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640398
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771940
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_utf_cstring_from_utf8_ex2(dest,src,topage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: dest
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: topage
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771725
FRAGMENT_COUNT: 5
  ORIGINAL[0]: data - data_start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2
  ORIGINAL[1]: svn_error_createf(22,((void *)0),(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 22 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: *((const unsigned char *)data)
  TYPE[4]: CALL
  TOKENIZED[4]: * ( ( const unsigned char * ) VAR1 )

CENTER_NODE: 68719477484
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf_cstring_to_utf8_ex2(dest,src,frompage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: dest
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771242
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !xlate_handle_hash
  TYPE[0]: CALL
  TOKENIZED[0]: !xlate_handle_hash
  ORIGINAL[1]: *err = svn_mutex__init(&mutex,!0,subpool)
  TYPE[1]: CALL
  TOKENIZED[1]: *err = FUN1 ( &mutex , !0 , VAR1 )
  ORIGINAL[2]: svn_mutex__init(&mutex,!0,subpool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &mutex , !0 , VAR1 )
  ORIGINAL[3]: &mutex
  TYPE[3]: CALL
  TOKENIZED[3]: &mutex
  ORIGINAL[4]: !0
  TYPE[4]: CALL
  TOKENIZED[4]: !0
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: subpool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772000
FRAGMENT_COUNT: 3
  ORIGINAL[0]: * stonesoup_printf_context = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771771
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !svn_utf__cstring_is_valid(data)
  TYPE[0]: CALL
  TOKENIZED[0]: !svn_utf__cstring_is_valid ( VAR1 )
  ORIGINAL[1]: svn_utf__cstring_is_valid(data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

