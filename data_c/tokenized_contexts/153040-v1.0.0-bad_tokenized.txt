# Tokenized code fragments for 153040-v1.0.0-bad
# Total center nodes processed: 88
# Total code fragments found: 328

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640436
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773129
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(sv_flags & 1 << 3)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 & 1 << 3 )
  ORIGINAL[1]: LWLockRelease(buf -> io_in_progress_lock)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: buf -> io_in_progress_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772287
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !((bufHdr -> flags) & 1 << 1) || !((bufHdr -> flags) & 1 << 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) & 1 << 1 ) || ! ( ( VAR1 -> VAR2 ) & 1 << 0 )
  ORIGINAL[1]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock)) = 0
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) ) = 0
  ORIGINAL[2]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) )
  ORIGINAL[3]: (volatile slock_t *)(&bufHdr -> buf_hdr_lock)
  TYPE[3]: CALL
  TOKENIZED[3]: ( volatile VAR1 * ) ( &bufHdr -> VAR2 )

CENTER_NODE: 30064771861
FRAGMENT_COUNT: 36
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: MarkLocalBufferDirty(buffer)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[3]: &BufferDescriptors[buffer - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[4]: BufferDescriptors[buffer - 1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[5]: buffer - 1
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 - 1
  ORIGINAL[6]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[7]: &bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: &bufHdr -> VAR1
  ORIGINAL[8]: bufHdr -> buf_hdr_lock
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: !((bufHdr -> flags) & 1 << 0)
  TYPE[9]: CALL
  TOKENIZED[9]: ! ( ( VAR1 -> VAR2 ) & 1 << 0 )
  ORIGINAL[10]: (bufHdr -> flags) & 1 << 0
  TYPE[10]: CALL
  TOKENIZED[10]: ( VAR1 -> VAR2 ) & 1 << 0
  ORIGINAL[11]: bufHdr -> flags
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: 1 << 0
  TYPE[12]: CALL
  TOKENIZED[12]: 1 << 0
  ORIGINAL[13]: bufHdr -> flags |= 1 << 0 | 1 << 5
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2 |= 1 << 0 | 1 << 5
  ORIGINAL[14]: bufHdr -> flags
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: 1 << 0 | 1 << 5
  TYPE[15]: CALL
  TOKENIZED[15]: 1 << 0 | 1 << 5
  ORIGINAL[16]: 1 << 0
  TYPE[16]: CALL
  TOKENIZED[16]: 1 << 0
  ORIGINAL[17]: 1 << 5
  TYPE[17]: CALL
  TOKENIZED[17]: 1 << 5
  ORIGINAL[18]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock)) = 0
  TYPE[18]: CALL
  TOKENIZED[18]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) ) = 0
  ORIGINAL[19]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock))
  TYPE[19]: CALL
  TOKENIZED[19]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) )
  ORIGINAL[20]: (volatile slock_t *)(&bufHdr -> buf_hdr_lock)
  TYPE[20]: CALL
  TOKENIZED[20]: ( volatile VAR1 * ) ( &bufHdr -> VAR2 )
  ORIGINAL[21]: &bufHdr -> buf_hdr_lock
  TYPE[21]: CALL
  TOKENIZED[21]: &bufHdr -> VAR1
  ORIGINAL[22]: bufHdr -> buf_hdr_lock
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 -> VAR2
  ORIGINAL[23]: buf_hdr_lock
  TYPE[23]: FIELD_IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: flags
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: flags
  TYPE[25]: FIELD_IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: buf_hdr_lock
  TYPE[26]: FIELD_IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: buffer
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: buffer
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: bufHdr
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: BufferDescriptors
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: buffer
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: bufHdr
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: bufHdr
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: bufHdr
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: bufHdr
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1

CENTER_NODE: 30064772023
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: ( volatile VAR1 * ) ( &buf -> VAR2 )
  ORIGINAL[1]: &buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &buf -> VAR1
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

CENTER_NODE: 30064773186
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buf -> flags &= ~(1 << 3 | 1 << 4)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 &= ~ ( 1 << 3 | 1 << 4 )
  ORIGINAL[1]: buf -> flags
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ~(1 << 3 | 1 << 4)
  TYPE[2]: CALL
  TOKENIZED[2]: ~ ( 1 << 3 | 1 << 4 )
  ORIGINAL[3]: 1 << 3 | 1 << 4
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 3 | 1 << 4

CENTER_NODE: 47244640302
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640535
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719477842
FRAGMENT_COUNT: 4
  ORIGINAL[0]: LockBuffer(buffer,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: ReleaseBuffer(buffer)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640480
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477656
FRAGMENT_COUNT: 7
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: bufHdr -> flags
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: BufferDescriptors
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772983
FRAGMENT_COUNT: 7
  ORIGINAL[0]: mode == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: LWLockAcquire(buf -> content_lock,LW_SHARED)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[2]: buf -> content_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: content_lock
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: LW_SHARED
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640532
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772489
FRAGMENT_COUNT: 12
  ORIGINAL[0]: relation -> rd_smgr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: relation -> rd_smgr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: &relation -> rd_smgr
  TYPE[3]: CALL
  TOKENIZED[3]: &relation -> VAR1
  ORIGINAL[4]: relation -> rd_smgr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: relation -> rd_smgr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: rd_smgr
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: relation
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: relation
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: relation
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: relation
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: relation
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064773067
FRAGMENT_COUNT: 2
  ORIGINAL[0]: bufid < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: (bool )0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 0

CENTER_NODE: 68719477734
FRAGMENT_COUNT: 7
  ORIGINAL[0]: bufHdr -> buf_hdr_lock
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: bufHdr -> tag . rnode . dbNode == dbid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5
  ORIGINAL[3]: bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf_hdr_lock
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bufHdr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477369
FRAGMENT_COUNT: 7
  ORIGINAL[0]: num_to_scan-- > 0
  TYPE[0]: CALL
  TOKENIZED[0]: num_to_scan-- > 0
  ORIGINAL[1]: BufferDescriptors[buf_id]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: buf_id
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BufferDescriptors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf_id
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf_id
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf_id
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640519
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772302
FRAGMENT_COUNT: 1
  ORIGINAL[0]: on_shmem_exit(AtProcExit_Buffers,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )

CENTER_NODE: 47244640550
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640500
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477307
FRAGMENT_COUNT: 5
  ORIGINAL[0]: PrivateRefCount[b]++
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] ++
  ORIGINAL[1]: ResourceOwnerRememberBuffer(CurrentResourceOwner,buf -> buf_id + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 + 1 )
  ORIGINAL[2]: buf -> buf_id + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 + 1
  ORIGINAL[3]: CurrentResourceOwner
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772852
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bufHdr -> tag . rnode . dbNode == dbid && (bufHdr -> flags) & 1 << 1 && (bufHdr -> flags) & 1 << 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 && ( VAR1 -> VAR6 ) & 1 << 1 && ( VAR1 -> VAR6 ) & 1 << 0
  ORIGINAL[1]: bufHdr -> tag . rnode . dbNode == dbid && (bufHdr -> flags) & 1 << 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 && ( VAR1 -> VAR6 ) & 1 << 1
  ORIGINAL[2]: (bufHdr -> flags) & 1 << 0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) & 1 << 0
  ORIGINAL[3]: bufHdr -> flags
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: 1 << 0
  TYPE[4]: CALL
  TOKENIZED[4]: 1 << 0

CENTER_NODE: 30064773483
FRAGMENT_COUNT: 6
  ORIGINAL[0]: key = strtol(optarg, NULL, 10)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , 10 )
  ORIGINAL[1]: strtol(optarg, NULL, 10)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , 10 )
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: optarg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NULL
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 6
  ORIGINAL[0]: isLocalBuf?LocalBufferBlockPointers[-(bufHdr -> buf_id + 2)] : ((Block )(BufferBlocks + ((Size )(bufHdr -> buf_id)) * 8192))
  TYPE[0]: CALL
  TOKENIZED[0]: isLocalBuf?LocalBufferBlockPointers [ - ( VAR1 -> VAR2 + 2 ) ] : ( ( VAR3 ) ( VAR4 + ( ( VAR5 ) ( VAR1 -> VAR2 ) ) * 8192 ) )
  ORIGINAL[1]: (Block )(BufferBlocks + ((Size )(bufHdr -> buf_id)) * 8192)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( VAR2 + ( ( VAR3 ) ( VAR4 -> VAR5 ) ) * 8192 )
  ORIGINAL[2]: BufferBlocks + ((Size )(bufHdr -> buf_id)) * 8192
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + ( ( VAR2 ) ( VAR3 -> VAR4 ) ) * 8192
  ORIGINAL[3]: (Block )(BufferBlocks + ((Size )(bufHdr -> buf_id)) * 8192)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) ( VAR2 + ( ( VAR3 ) ( VAR4 -> VAR5 ) ) * 8192 )
  ORIGINAL[4]: isLocalBuf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: Block
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064773156
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !((buf -> flags) & 1 << 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) & 1 << 0 )
  ORIGINAL[1]: (buf -> flags) & 1 << 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 1 << 0
  ORIGINAL[2]: buf -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 1 << 0
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 0
  ORIGINAL[4]: forInput
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772357
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: BufferDescriptors[buffer - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640309
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771171
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]

CENTER_NODE: 30064772567
FRAGMENT_COUNT: 10
  ORIGINAL[0]: bufHdr -> tag . rnode . dbNode
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[1]: bufHdr -> tag . rnode . spcNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[2]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6
  ORIGINAL[3]: bufHdr -> tag . rnode . relNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[4]: bufHdr -> tag . rnode . dbNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[5]: bufHdr -> tag . rnode . spcNode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[6]: bufHdr -> tag . rnode
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: bufHdr -> tag
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: rnode
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: spcNode
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064773091
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !ConditionalLockBuffer(buffer)
  TYPE[0]: CALL
  TOKENIZED[0]: !ConditionalLockBuffer ( VAR1 )
  ORIGINAL[1]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[2]: &bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &bufHdr -> VAR1
  ORIGINAL[3]: bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: &bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: &bufHdr -> VAR1
  ORIGINAL[5]: bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &bufHdr -> VAR1
  ORIGINAL[7]: bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: &bufHdr -> buf_hdr_lock
  TYPE[8]: CALL
  TOKENIZED[8]: &bufHdr -> VAR1
  ORIGINAL[9]: bufHdr -> buf_hdr_lock
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2

CENTER_NODE: 68719478138
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ungentility_gymnosophist . albuminous_gramash != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != 0
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: trace_point
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: trace_point
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: trace_point
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640461
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640344
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640452
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477894
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772938
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((bufHdr -> flags) & (1 << 0 | 1 << 5)) != (1 << 0 | 1 << 5)
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 -> VAR2 ) & ( 1 << 0 | 1 << 5 ) ) != ( 1 << 0 | 1 << 5 )
  ORIGINAL[1]: bufHdr -> flags |= 1 << 0 | 1 << 5
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 |= 1 << 0 | 1 << 5
  ORIGINAL[2]: bufHdr -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 1 << 0 | 1 << 5
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 0 | 1 << 5

CENTER_NODE: 30064771133
FRAGMENT_COUNT: 7
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: strcmp(getenv(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( FUN2 ( \
  ORIGINAL[4]: strcmp(getenv(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( FUN2 ( \
  ORIGINAL[5]: getenv(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: NULL
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771169
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640326
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640442
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772317
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buf = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: loccount
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477588
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buffer - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BufferDescriptors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772877
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: LocalRefCount[-buffer - 1]--
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ -buffer - 1 ] --
  ORIGINAL[2]: LocalRefCount[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ -buffer - 1 ]

CENTER_NODE: 30064773034
FRAGMENT_COUNT: 4
  ORIGINAL[0]: bufHdr -> refcount == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 1
  ORIGINAL[1]: (bufHdr -> flags) & 1 << 6
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 1 << 6
  ORIGINAL[2]: bufHdr -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 1 << 6
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 6

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772637
FRAGMENT_COUNT: 6
  ORIGINAL[0]: bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4
  ORIGINAL[1]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7
  ORIGINAL[2]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6
  ORIGINAL[3]: bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4
  ORIGINAL[4]: bufHdr -> tag . rnode . spcNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[5]: rnode . node . spcNode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2 . VAR3

CENTER_NODE: 47244640355
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640556
FRAGMENT_COUNT: 1
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )

CENTER_NODE: 47244640370
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771220
FRAGMENT_COUNT: 7
  ORIGINAL[0]: reln -> pgstat_info != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: reln -> pgstat_info
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: reln -> pgstat_info -> t_counts
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: reln -> pgstat_info
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pgstat_info
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: t_counts
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: reln
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477196
FRAGMENT_COUNT: 11
  ORIGINAL[0]: buf -> tag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf -> tag . rnode . relNode == oldTag . rnode . relNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 . VAR3 . VAR4
  ORIGINAL[5]: buf -> tag
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf -> refcount
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: tag
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771714
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buf -> refcount == 1 && !(oldFlags & 1 << 0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 1 && ! ( VAR3 & 1 << 0 )
  ORIGINAL[1]: 1 << 1 | 1 << 0 | 1 << 5 | 1 << 7 | 1 << 4 | 1 << 8
  TYPE[1]: CALL
  TOKENIZED[1]: 1 << 1 | 1 << 0 | 1 << 5 | 1 << 7 | 1 << 4 | 1 << 8
  ORIGINAL[2]: 1 << 1 | 1 << 0 | 1 << 5 | 1 << 7 | 1 << 4
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << 1 | 1 << 0 | 1 << 5 | 1 << 7 | 1 << 4
  ORIGINAL[3]: 1 << 8
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 8

CENTER_NODE: 47244640468
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640472
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640376
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772896
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ResourceOwnerRememberBuffer(CurrentResourceOwner,buffer)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: CurrentResourceOwner
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772332
FRAGMENT_COUNT: 2
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772041
FRAGMENT_COUNT: 19
  ORIGINAL[0]: PrivateRefCount[b] == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 0
  ORIGINAL[1]: &buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &buf -> VAR1
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &buf -> VAR1
  ORIGINAL[4]: buf -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &buf -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &buf -> VAR1
  ORIGINAL[6]: buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &buf -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: &buf -> VAR1
  ORIGINAL[8]: buf -> buf_hdr_lock
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: buf_hdr_lock
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: buf
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: buf
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: buf
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: buf
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buf
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: buf
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 47244640311
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640520
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640440
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640487
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640541
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640364
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772825
FRAGMENT_COUNT: 25
  ORIGINAL[0]: &bufHdr -> buf_hdr_lock
  TYPE[0]: CALL
  TOKENIZED[0]: &bufHdr -> VAR1
  ORIGINAL[1]: bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &bufHdr -> VAR1
  ORIGINAL[3]: bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr -> tag . rnode . relNode == rel -> rd_node . relNode && bufHdr -> tag . rnode . dbNode == rel -> rd_node . dbNode && bufHdr -> tag . rnode . spcNode == rel -> rd_node . spcNode && (bufHdr -> flags) & 1 << 1 && (bufHdr -> flags) & 1 << 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 -> VAR6 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR5 -> VAR6 . VAR7 && VAR1 -> VAR2 . VAR3 . VAR8 == VAR5 -> VAR6 . VAR8 && ( VAR1 -> VAR9 ) & 1 << 1 && ( VAR1 -> VAR9 ) & 1 << 0
  ORIGINAL[5]: &bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &bufHdr -> VAR1
  ORIGINAL[6]: bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf_hdr_lock
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: bufHdr
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: bufHdr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: bufHdr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: bufHdr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: bufHdr
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: bufHdr
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: bufHdr
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: bufHdr
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: bufHdr
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: bufHdr
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: bufHdr
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: bufHdr
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: bufHdr
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: bufHdr
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: bufHdr
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: bufHdr
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: bufHdr
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1

CENTER_NODE: 68719476825
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ReadBufferExtended(reln,MAIN_FORKNUM,blockNum,RBM_NORMAL,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: reln
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: MAIN_FORKNUM
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 22
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: size_dirpath = strlen(ss_tc_root) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(ss_tc_root) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: strlen(ss_tc_root) + strlen(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[4]: strlen(ss_tc_root)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: strlen(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: dirpath = (char*) malloc (size_dirpath * sizeof(char))
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[7]: (char*) malloc (size_dirpath * sizeof(char))
  TYPE[7]: CALL
  TOKENIZED[7]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[8]: malloc (size_dirpath * sizeof(char))
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[9]: size_dirpath * sizeof(char)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 * sizeof ( char )
  ORIGINAL[10]: sizeof(char)
  TYPE[10]: CALL
  TOKENIZED[10]: sizeof ( char )
  ORIGINAL[11]: dirpath != NULL
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 != VAR2
  ORIGINAL[12]: ss_tc_root
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: NULL
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: size_dirpath
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ss_tc_root
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: dirpath
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: size_dirpath
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: char
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: char
  ORIGINAL[19]: dirpath
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: NULL
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: <global> stonesoup_printf_context
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: <global> VAR1

CENTER_NODE: 30064773309
FRAGMENT_COUNT: 5
  ORIGINAL[0]: peritrochal_muraena != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: resizes_pranging . albuminous_gramash = ((char *)peritrochal_muraena)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = ( ( char * ) VAR3 )
  ORIGINAL[2]: resizes_pranging . albuminous_gramash
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: (char *)peritrochal_muraena
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) VAR1
  ORIGINAL[4]: caricature_laryngalgia
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640536
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640546
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640540
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719476856
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ReadBuffer_common(smgr,'p',forkNum,blockNum,mode,strategy,&hit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 'p' , VAR2 , VAR3 , VAR4 , VAR5 , &hit )
  ORIGINAL[1]: mode
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: strategy
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hit
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772305
FRAGMENT_COUNT: 2
  ORIGINAL[0]: UnlockBuffers()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: AtProcExit_LocalBuffers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 68719476789
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stonesoup_printf_context != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773281
FRAGMENT_COUNT: 7
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: bufHdr -> tag . rnode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: bufHdr -> tag
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tag
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rnode
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bufHdr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477541
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AtEOXact_LocalBuffers(isCommit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: isCommit
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772348
FRAGMENT_COUNT: 5
  ORIGINAL[0]: CheckpointStats . ckpt_sync_end_t = GetCurrentTimestamp()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: CheckpointStats . ckpt_sync_end_t
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: GetCurrentTimestamp()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: ckpt_sync_end_t
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: CheckpointStats
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640505
FRAGMENT_COUNT: 0

