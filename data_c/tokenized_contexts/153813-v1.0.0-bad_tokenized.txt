# Tokenized code fragments for 153813-v1.0.0-bad
# Total center nodes processed: 60
# Total code fragments found: 272

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477449
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_get(cfg,&retval,server_group,option_name,retval)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &retval , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: server_group
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: retval
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771750
FRAGMENT_COUNT: 6
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(opt_ndx,((void *)0),((void *)0),&opt_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , &opt_ptr )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: &opt_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: &opt_ptr
  ORIGINAL[5]: opt_ndx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640311
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771635
FRAGMENT_COUNT: 8
  ORIGINAL[0]: svn_error_createf(SVN_ERR_BAD_CONFIG_VALUE,((void *)0),(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: dgettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: SVN_ERR_BAD_CONFIG_VALUE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: input
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: section
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: option
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476919
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_merge( *cfgp,usr_file_path,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( *cfgp , VAR1 , 0 )
  ORIGINAL[1]: *cfgp
  TYPE[1]: CALL
  TOKENIZED[1]: *cfgp
  ORIGINAL[2]: red_config
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: usr_file_path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771671
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *valuep = ((bool_val?\
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = ( ( bool_val?\
  ORIGINAL[1]: *valuep
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep
  ORIGINAL[2]: bool_val?\
  TYPE[2]: CALL
  TOKENIZED[2]: bool_val?\
  ORIGINAL[3]: bool_val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476823
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c - 32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 32
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771108
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771926
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: make_hash_key(cfg -> tmp_key -> data)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 -> VAR3 )
  ORIGINAL[3]: cfg -> tmp_key -> data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: cfg -> tmp_key
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: tmp_key
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: data
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cfg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: sec
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477579
FRAGMENT_COUNT: 5
  ORIGINAL[0]: gimmals_saebeins > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: tracepoint(stonesoup_trace, weakness_start, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_i = 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = 0
  ORIGINAL[3]: stonesoup_i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771303
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_hash_set( *cfg_hash,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( *cfg_hash , \
  ORIGINAL[1]: *cfg_hash
  TYPE[1]: CALL
  TOKENIZED[1]: *cfg_hash
  ORIGINAL[2]: sizeof(\
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( \
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477105
FRAGMENT_COUNT: 6
  ORIGINAL[0]: parse_from != ((void *)0) && ( *parse_from) != '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 ) && ( *parse_from ) != '\\0'
  ORIGINAL[1]: *parse_from
  TYPE[1]: CALL
  TOKENIZED[1]: *parse_from
  ORIGINAL[2]: strstr(parse_from,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: parse_from
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: name_start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: parse_from
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477366
FRAGMENT_COUNT: 7
  ORIGINAL[0]: sec_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: !callback(sec -> name,baton,iteration_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: !callback ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: apr_pool_destroy(iteration_pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: break;
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: break ;
  ORIGINAL[4]: iteration_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: iteration_pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: iteration_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640302
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477271
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_config_set(cfg,section,option,(value?\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( value?\
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640362
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477162
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: hash_key = s -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3
  ORIGINAL[2]: s -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: hash_key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hash_key
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771151
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stonesoup_tainted_file != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: (char *)(malloc(sizeof(char ) * (stonesoup_lsize + 1)))
  TYPE[1]: CALL
  TOKENIZED[1]: ( char * ) ( FUN1 ( sizeof ( char ) * ( VAR1 + 1 ) ) )
  ORIGINAL[2]: malloc(sizeof(char ) * (stonesoup_lsize + 1))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( sizeof ( char ) * ( VAR1 + 1 ) )
  ORIGINAL[3]: sizeof(char ) * (stonesoup_lsize + 1)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( char ) * ( VAR1 + 1 )

CENTER_NODE: 68719477194
FRAGMENT_COUNT: 13
  ORIGINAL[0]: *valuep = default_value
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = VAR1
  ORIGINAL[1]: *opt = find_option(cfg,section,option,&sec)
  TYPE[1]: CALL
  TOKENIZED[1]: *opt = FUN1 ( VAR1 , VAR2 , VAR3 , &sec )
  ORIGINAL[2]: find_option(cfg,section,option,&sec)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 , &sec )
  ORIGINAL[3]: &sec
  TYPE[3]: CALL
  TOKENIZED[3]: &sec
  ORIGINAL[4]: opt != ((void *)0)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[5]: (void *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) 0
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: opt
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cfg
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: section
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: option
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: sec
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: opt
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719477514
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *cfg_hash = apr_hash_make(pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg_hash = FUN1 ( VAR1 )
  ORIGINAL[1]: cidx = apr_hash_first(pool,src_hash)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[2]: apr_hash_first(pool,src_hash)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: cidx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cidx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476999
FRAGMENT_COUNT: 6
  ORIGINAL[0]: opt_ndx = apr_hash_next(opt_ndx)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[1]: apr_hash_next(opt_ndx)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: callback(baton,sec,opt)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: opt_ndx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: opt_ndx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: opt_ndx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477230
FRAGMENT_COUNT: 7
  ORIGINAL[0]: opt != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: opt -> value = (apr_pstrdup(cfg -> pool,value))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( FUN1 ( VAR3 -> VAR4 , VAR2 ) )
  ORIGINAL[2]: opt -> value
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: opt -> expanded
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: expanded
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: opt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771375
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: make_hash_key(cfg -> tmp_key -> data)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 -> VAR3 )
  ORIGINAL[3]: cfg -> tmp_key -> data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: cfg -> tmp_key
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: tmp_key
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: data
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cfg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: sec_ptr
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771348
FRAGMENT_COUNT: 4
  ORIGINAL[0]: option -> expanded
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: option -> x_value != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[2]: option -> x_value
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477328
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bool_val?svn_tristate_true : svn_tristate_false
  TYPE[0]: CALL
  TOKENIZED[0]: bool_val?svn_tristate_true : VAR1
  ORIGINAL[1]: bool_val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_tristate_true
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477184
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_pstrdup(pool,option)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: option
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: option_names_case_sensitive
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477268
FRAGMENT_COUNT: 4
  ORIGINAL[0]: get_bool(valuep,tmp_value,default_value,section,option)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: tmp_value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640280
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771645
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_config_get(cfg,&tmp_value,section,option,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &tmp_value , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: &tmp_value
  TYPE[1]: CALL
  TOKENIZED[1]: &tmp_value
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: section
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: option
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp_value
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771904
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tmp_value = svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[2]: tmp_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tmp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476949
FRAGMENT_COUNT: 12
  ORIGINAL[0]: err && err -> apr_err == SVN_ERR_BAD_FILENAME
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 == VAR3
  ORIGINAL[1]: *svn_err__temp = svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: &usr_cfg_path
  TYPE[3]: CALL
  TOKENIZED[3]: &usr_cfg_path
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: svn_err__temp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: usr_cfg_path
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: config_dir
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: category
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pool
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: svn_err__temp
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719477019
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cfg -> option_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cfg -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pool
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771171
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640287
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771220
FRAGMENT_COUNT: 5
  ORIGINAL[0]: preaffirmation_crosscurrented != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: dillyman_beakers = ((char **)(((unsigned long )enhydris_expeditely) * harpp_seculars * harpp_seculars)) + 5
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( char ** ) ( ( ( unsigned long ) VAR2 ) * VAR3 * VAR3 ) ) + 5
  ORIGINAL[2]: ((char **)(((unsigned long )enhydris_expeditely) * harpp_seculars * harpp_seculars)) + 5
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( char ** ) ( ( ( unsigned long ) VAR1 ) * VAR2 * VAR2 ) ) + 5
  ORIGINAL[3]: (char **)(((unsigned long )enhydris_expeditely) * harpp_seculars * harpp_seculars)
  TYPE[3]: CALL
  TOKENIZED[3]: ( char ** ) ( ( ( unsigned long ) VAR1 ) * VAR2 * VAR2 )
  ORIGINAL[4]: dillyman_beakers
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477401
FRAGMENT_COUNT: 6
  ORIGINAL[0]: sec == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: iteration_pool = svn_pool_create_ex(pool,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , ( ( void * ) 0 ) )
  ORIGINAL[2]: count = 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = 0
  ORIGINAL[3]: count
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: count
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: count
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771798
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_cstring_match_glob_list(b -> key,list)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: b -> match = (apr_pstrdup(b -> pool,name))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( FUN1 ( VAR1 -> VAR3 , VAR4 ) )
  ORIGINAL[2]: b -> match
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: apr_pstrdup(b -> pool,name)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , VAR3 )

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477631
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: tyrannisingly_gerbatka(schtick_ossicule,amase_exostema)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: schtick_ossicule
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: amase_exostema
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476825
FRAGMENT_COUNT: 13
  ORIGINAL[0]: *cfg = (apr_palloc(result_pool,sizeof(( *cfg))))
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg = ( FUN1 ( VAR1 , sizeof ( ( *cfg ) ) ) )
  ORIGINAL[1]: apr_palloc(result_pool,sizeof(( *cfg)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( ( *cfg ) ) )
  ORIGINAL[2]: cfg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result_pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cfg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cfg
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: cfg
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: cfg
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: cfg
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: cfg
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771357
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !cfg -> x_values
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: for_each_option(cfg,((void *)0),cfg -> x_pool,rmex_callback)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , VAR1 -> VAR2 , VAR3 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771333
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_set(baton,section -> name,option -> name,option -> value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR4 -> VAR3 , VAR4 -> VAR5 )
  ORIGINAL[1]: section -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477555
FRAGMENT_COUNT: 5
  ORIGINAL[0]: get_bool(valuep,tmp_value,default_value,server_group,option_name)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: tmp_value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: valuep
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tmp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: default_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771804
FRAGMENT_COUNT: 9
  ORIGINAL[0]: gb . key = key
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = VAR2
  ORIGINAL[1]: gb . key
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: key
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: gb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: key
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: gb
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: gb
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: gb
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: gb
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477311
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_get(cfg,&tmp_value,section,option,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &tmp_value , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: section
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: option
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477297
FRAGMENT_COUNT: 6
  ORIGINAL[0]: &tmp_value
  TYPE[0]: CALL
  TOKENIZED[0]: &tmp_value
  ORIGINAL[1]: svn_cstring_casecmp(tmp_value,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: tmp_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tmp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tmp_value
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477489
FRAGMENT_COUNT: 5
  ORIGINAL[0]: optidx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: &optkey
  TYPE[1]: CALL
  TOKENIZED[1]: &optkey
  ORIGINAL[2]: optidx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: optkey
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: optkey
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771421
FRAGMENT_COUNT: 13
  ORIGINAL[0]: !opt -> expanded
  TYPE[0]: CALL
  TOKENIZED[0]: !opt -> VAR1
  ORIGINAL[1]: opt -> expanded
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: expanded
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: opt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: opt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: opt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: opt
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: opt
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: opt
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: opt
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: opt
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: opt
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771688
FRAGMENT_COUNT: 3
  ORIGINAL[0]: count = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: count
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: subpool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771368
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ( *p) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 0
  ORIGINAL[1]: *p
  TYPE[1]: CALL
  TOKENIZED[1]: *p
  ORIGINAL[2]: *p = ((char )(tolower(((unsigned char )( *p)))))
  TYPE[2]: CALL
  TOKENIZED[2]: *p = ( ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) ) )
  ORIGINAL[3]: *p
  TYPE[3]: CALL
  TOKENIZED[3]: *p
  ORIGINAL[4]: (char )(tolower(((unsigned char )( *p))))
  TYPE[4]: CALL
  TOKENIZED[4]: ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) )
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: p
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: p
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771654
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_set(cfg,section,option,(apr_psprintf(cfg -> pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( FUN2 ( VAR1 -> VAR4 , \
  ORIGINAL[1]: apr_psprintf(cfg -> pool,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , \
  ORIGINAL[2]: cfg -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771243
FRAGMENT_COUNT: 7
  ORIGINAL[0]: err == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: *cfgp = cfg
  TYPE[1]: CALL
  TOKENIZED[1]: *cfgp = VAR1
  ORIGINAL[2]: *cfgp
  TYPE[2]: CALL
  TOKENIZED[2]: *cfgp
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfgp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: scratch_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

