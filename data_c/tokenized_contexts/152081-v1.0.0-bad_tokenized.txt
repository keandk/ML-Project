# Tokenized code fragments for 152081-v1.0.0-bad
# Total center nodes processed: 73
# Total code fragments found: 376

CENTER_NODE: 68719478519
FRAGMENT_COUNT: 4
  ORIGINAL[0]: choultries_trophicity != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: chestier_nociassociation . anhydrously_ichthyofaunal = choultries_trophicity
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = VAR3
  ORIGINAL[2]: *coxiest_bobbysoxer
  TYPE[2]: CALL
  TOKENIZED[2]: *coxiest_bobbysoxer
  ORIGINAL[3]: coxiest_bobbysoxer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772016
FRAGMENT_COUNT: 6
  ORIGINAL[0]: g_strlcpy(cinfo -> col_expr . col_expr_val[col],cinfo -> col_buf[col],256)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 . VAR3 [ VAR4 ] , VAR1 -> VAR5 [ VAR4 ] , 256 )
  ORIGINAL[1]: cinfo -> col_expr . col_expr_val[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[2]: cinfo -> col_expr . col_expr_val
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: cinfo -> col_buf[col]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771525
FRAGMENT_COUNT: 4
  ORIGINAL[0]: orig_buf[1?4096 : 256]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1?4096 : 256 ]
  ORIGINAL[1]: orig_buf[1?4096 : 256]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1?4096 : 256 ]
  ORIGINAL[2]: orig_buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640411
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477661
FRAGMENT_COUNT: 4
  ORIGINAL[0]: secs >= 60
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 60
  ORIGINAL[1]: (gint32 )secs
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: secs
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: secs
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640466
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772463
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo -> col_data[col] = cinfo -> col_buf[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] = VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_data[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cinfo -> col_buf[col]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772767
FRAGMENT_COUNT: 6
  ORIGINAL[0]: pinfo -> cinfo -> col_expr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: pinfo -> cinfo
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: col_expr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: is_src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477299
FRAGMENT_COUNT: 6
  ORIGINAL[0]: fence != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: cinfo -> col_data[i] = str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] = VAR4
  ORIGINAL[2]: cinfo -> col_data[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: str
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: str
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476796
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepoint(stonesoup_trace, trace_location, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772278
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: cinfo -> col_expr . col_expr[col] = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2 [ VAR3 ] = \
  ORIGINAL[2]: cinfo -> col_expr . col_expr[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_expr . col_expr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR2
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772566
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: g_assertion_message_expr(((gchar *)0),\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[2]: (gchar *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) 0
  ORIGINAL[3]: (const char *)__func__
  TYPE[3]: CALL
  TOKENIZED[3]: ( const char * ) VAR1
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0

CENTER_NODE: 47244640616
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771237
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < cinfo -> num_cols
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: cinfo -> col_data[i] = cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] = VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cinfo -> col_buf[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771674
FRAGMENT_COUNT: 9
  ORIGINAL[0]: fence != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: cinfo -> col_data[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cinfo -> col_data[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: cinfo -> col_data[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: col_data
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771966
FRAGMENT_COUNT: 12
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: g_snprintf(buf,256,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 256 , \
  ORIGINAL[2]: tmp -> tm_year + 1900
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 + 1900
  ORIGINAL[3]: tmp -> tm_mon + 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 + 1
  ORIGINAL[4]: tmp -> tm_mon
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: tmp -> tm_mday
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: tmp -> tm_hour
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: tmp -> tm_min
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: tmp -> tm_sec
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: ((long )fd -> abs_ts . nsecs) / 1000000
  TYPE[9]: CALL
  TOKENIZED[9]: ( ( long ) VAR1 -> VAR2 . VAR3 ) / 1000000
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: tmp
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772029
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo -> col_expr . col_expr[col] = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR2 [ VAR3 ] = \
  ORIGINAL[1]: cinfo -> col_expr . col_expr[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640563
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640485
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771256
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772480
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo -> col_data[col] = cinfo -> col_buf[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] = VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_data[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]

CENTER_NODE: 68719478522
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: antisepticise_cyclopean = {0}
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = { 0 }
  ORIGINAL[2]: {0}
  TYPE[2]: CALL
  TOKENIZED[2]: { 0 }
  ORIGINAL[3]: antisepticise_cyclopean . anhydrously_ichthyofaunal
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: antisepticise_cyclopean
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: antisepticise_cyclopean
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: antisepticise_cyclopean
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: antisepticise_cyclopean
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640497
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476893
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i <= cinfo -> col_last[el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: cinfo -> fmt_matx[i][el]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[3]: cinfo -> col_fence[i] = ((int )(strlen(cinfo -> col_data[i])))
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] = ( ( int ) ( FUN1 ( VAR1 -> VAR4 [ VAR3 ] ) ) )
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771802
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_data[i] = cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] = VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_buf[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477365
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> fmt_matx[i][el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[1]: cinfo -> col_data[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771870
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[2]: separator == ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: col_do_append_str(cinfo,el,separator,str)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[5]: separator
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: el
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: separator
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: str
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064772300
FRAGMENT_COUNT: 7
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: set_time_seconds(&fd -> del_cap_ts,cinfo -> col_buf[col])
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &fd -> VAR1 , VAR2 -> VAR3 [ VAR4 ] )
  ORIGINAL[2]: cinfo -> col_buf[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cinfo -> col_buf[col]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: cinfo -> col_buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: col
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772994
FRAGMENT_COUNT: 6
  ORIGINAL[0]: col < cinfo -> num_cols
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: cinfo -> num_cols
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: num_cols
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: col
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640472
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640605
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640619
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773050
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_fmt[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: g_strlcpy(cinfo -> col_expr . col_expr_val[col],cinfo -> col_buf[col],256)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 . VAR3 [ VAR4 ] , VAR1 -> VAR5 [ VAR4 ] , 256 )
  ORIGINAL[2]: cinfo -> col_expr . col_expr_val[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[3]: cinfo -> col_buf[col]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: break;
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: break ;

CENTER_NODE: 30064772343
FRAGMENT_COUNT: 73
  ORIGINAL[0]: !fd -> flags . has_ts
  TYPE[0]: CALL
  TOKENIZED[0]: !fd -> VAR1 . VAR2
  ORIGINAL[1]: timestamp_get_seconds_type()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: set_time_seconds(&fd -> del_dis_ts,cinfo -> col_buf[col])
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &fd -> VAR1 , VAR2 -> VAR3 [ VAR4 ] )
  ORIGINAL[3]: &fd -> del_dis_ts
  TYPE[3]: CALL
  TOKENIZED[3]: &fd -> VAR1
  ORIGINAL[4]: fd -> del_dis_ts
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cinfo -> col_buf[col]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[6]: cinfo -> col_buf
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: cinfo -> col_expr . col_expr[col] = \
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 . VAR2 [ VAR3 ] = \
  ORIGINAL[8]: cinfo -> col_expr . col_expr[col]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[9]: cinfo -> col_expr . col_expr
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2 . VAR2
  ORIGINAL[10]: cinfo -> col_expr
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: g_strlcpy(cinfo -> col_expr . col_expr_val[col],cinfo -> col_buf[col],256)
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( VAR1 -> VAR2 . VAR3 [ VAR4 ] , VAR1 -> VAR5 [ VAR4 ] , 256 )
  ORIGINAL[12]: cinfo -> col_expr . col_expr_val[col]
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[13]: cinfo -> col_expr . col_expr_val
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2 . VAR3
  ORIGINAL[14]: cinfo -> col_expr
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: cinfo -> col_buf[col]
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[16]: cinfo -> col_buf
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: set_time_hour_min_sec(&fd -> del_dis_ts,cinfo -> col_buf[col])
  TYPE[17]: CALL
  TOKENIZED[17]: FUN1 ( &fd -> VAR1 , VAR2 -> VAR3 [ VAR4 ] )
  ORIGINAL[18]: &fd -> del_dis_ts
  TYPE[18]: CALL
  TOKENIZED[18]: &fd -> VAR1
  ORIGINAL[19]: fd -> del_dis_ts
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 -> VAR2
  ORIGINAL[20]: cinfo -> col_buf[col]
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[21]: cinfo -> col_buf
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 -> VAR2
  ORIGINAL[22]: cinfo -> col_expr . col_expr[col] = \
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 -> VAR2 . VAR2 [ VAR3 ] = \
  ORIGINAL[23]: cinfo -> col_expr . col_expr[col]
  TYPE[23]: CALL
  TOKENIZED[23]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[24]: cinfo -> col_expr . col_expr
  TYPE[24]: CALL
  TOKENIZED[24]: VAR1 -> VAR2 . VAR2
  ORIGINAL[25]: cinfo -> col_expr
  TYPE[25]: CALL
  TOKENIZED[25]: VAR1 -> VAR2
  ORIGINAL[26]: set_time_seconds(&fd -> del_dis_ts,cinfo -> col_expr . col_expr_val[col])
  TYPE[26]: CALL
  TOKENIZED[26]: FUN1 ( &fd -> VAR1 , VAR2 -> VAR3 . VAR4 [ VAR5 ] )
  ORIGINAL[27]: &fd -> del_dis_ts
  TYPE[27]: CALL
  TOKENIZED[27]: &fd -> VAR1
  ORIGINAL[28]: fd -> del_dis_ts
  TYPE[28]: CALL
  TOKENIZED[28]: VAR1 -> VAR2
  ORIGINAL[29]: cinfo -> col_expr . col_expr_val[col]
  TYPE[29]: CALL
  TOKENIZED[29]: VAR1 -> VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[30]: cinfo -> col_expr . col_expr_val
  TYPE[30]: CALL
  TOKENIZED[30]: VAR1 -> VAR2 . VAR3
  ORIGINAL[31]: cinfo -> col_expr
  TYPE[31]: CALL
  TOKENIZED[31]: VAR1 -> VAR2
  ORIGINAL[32]: g_assertion_message_expr(((gchar *)0),\
  TYPE[32]: CALL
  TOKENIZED[32]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[33]: (gchar *)0
  TYPE[33]: CALL
  TOKENIZED[33]: ( VAR1 * ) 0
  ORIGINAL[34]: (const char *)__func__
  TYPE[34]: CALL
  TOKENIZED[34]: ( const char * ) VAR1
  ORIGINAL[35]: (void *)0
  TYPE[35]: CALL
  TOKENIZED[35]: ( void * ) 0
  ORIGINAL[36]: break;
  TYPE[36]: CONTROL_STRUCTURE
  TOKENIZED[36]: break ;
  ORIGINAL[37]: break;
  TYPE[37]: CONTROL_STRUCTURE
  TOKENIZED[37]: break ;
  ORIGINAL[38]: del_dis_ts
  TYPE[38]: FIELD_IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: col_buf
  TYPE[39]: FIELD_IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: col_expr
  TYPE[40]: FIELD_IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: col_expr
  TYPE[41]: FIELD_IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: col_expr
  TYPE[42]: FIELD_IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: col_expr_val
  TYPE[43]: FIELD_IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: col_buf
  TYPE[44]: FIELD_IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: del_dis_ts
  TYPE[45]: FIELD_IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: col_buf
  TYPE[46]: FIELD_IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: col_expr
  TYPE[47]: FIELD_IDENTIFIER
  TOKENIZED[47]: VAR1
  ORIGINAL[48]: col_expr
  TYPE[48]: FIELD_IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: del_dis_ts
  TYPE[49]: FIELD_IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: col_expr
  TYPE[50]: FIELD_IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: col_expr_val
  TYPE[51]: FIELD_IDENTIFIER
  TOKENIZED[51]: VAR1
  ORIGINAL[52]: TS_SECONDS_DEFAULT
  TYPE[52]: IDENTIFIER
  TOKENIZED[52]: VAR1
  ORIGINAL[53]: fd
  TYPE[53]: IDENTIFIER
  TOKENIZED[53]: VAR1
  ORIGINAL[54]: cinfo
  TYPE[54]: IDENTIFIER
  TOKENIZED[54]: VAR1
  ORIGINAL[55]: col
  TYPE[55]: IDENTIFIER
  TOKENIZED[55]: VAR1
  ORIGINAL[56]: cinfo
  TYPE[56]: IDENTIFIER
  TOKENIZED[56]: VAR1
  ORIGINAL[57]: col
  TYPE[57]: IDENTIFIER
  TOKENIZED[57]: VAR1
  ORIGINAL[58]: cinfo
  TYPE[58]: IDENTIFIER
  TOKENIZED[58]: VAR1
  ORIGINAL[59]: col
  TYPE[59]: IDENTIFIER
  TOKENIZED[59]: VAR1
  ORIGINAL[60]: cinfo
  TYPE[60]: IDENTIFIER
  TOKENIZED[60]: VAR1
  ORIGINAL[61]: col
  TYPE[61]: IDENTIFIER
  TOKENIZED[61]: VAR1
  ORIGINAL[62]: TS_SECONDS_HOUR_MIN_SEC
  TYPE[62]: IDENTIFIER
  TOKENIZED[62]: VAR1
  ORIGINAL[63]: fd
  TYPE[63]: IDENTIFIER
  TOKENIZED[63]: VAR1
  ORIGINAL[64]: cinfo
  TYPE[64]: IDENTIFIER
  TOKENIZED[64]: VAR1
  ORIGINAL[65]: col
  TYPE[65]: IDENTIFIER
  TOKENIZED[65]: VAR1
  ORIGINAL[66]: cinfo
  TYPE[66]: IDENTIFIER
  TOKENIZED[66]: VAR1
  ORIGINAL[67]: col
  TYPE[67]: IDENTIFIER
  TOKENIZED[67]: VAR1
  ORIGINAL[68]: fd
  TYPE[68]: IDENTIFIER
  TOKENIZED[68]: VAR1
  ORIGINAL[69]: cinfo
  TYPE[69]: IDENTIFIER
  TOKENIZED[69]: VAR1
  ORIGINAL[70]: col
  TYPE[70]: IDENTIFIER
  TOKENIZED[70]: VAR1
  ORIGINAL[71]: <global> __func__
  TYPE[71]: IDENTIFIER
  TOKENIZED[71]: <global> VAR1
  ORIGINAL[72]: cinfo
  TYPE[72]: IDENTIFIER
  TOKENIZED[72]: VAR1

CENTER_NODE: 30064771497
FRAGMENT_COUNT: 12
  ORIGINAL[0]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: g_strlcpy(cinfo -> col_buf[i],cinfo -> col_data[i],max_len)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] , VAR1 -> VAR4 [ VAR3 ] , VAR5 )
  ORIGINAL[3]: cinfo -> col_buf[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: cinfo -> col_buf
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cinfo -> col_data[i]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[6]: cinfo -> col_buf[i]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[7]: cinfo -> col_buf
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: cinfo -> col_buf[i][len]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: cinfo
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: max_len
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640406
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640509
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477427
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> fmt_matx[col][COL_CLS_TIME] || cinfo -> fmt_matx[col][COL_ABS_TIME] || cinfo -> fmt_matx[col][COL_ABS_DATE_TIME] || cinfo -> fmt_matx[col][COL_UTC_TIME] || cinfo -> fmt_matx[col][COL_UTC_DATE_TIME] || cinfo -> fmt_matx[col][COL_REL_TIME] || cinfo -> fmt_matx[col][COL_DELTA_TIME]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR5 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR6 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR7 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR8 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR9 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR10 ]
  ORIGINAL[1]: cinfo -> fmt_matx
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: fmt_matx
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476995
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cinfo -> col_custom_field
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cinfo -> col_custom_field_id[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: hfinfo?hfinfo -> id : - 1
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo?hfinfo -> VAR1 : - 1
  ORIGINAL[3]: hfinfo -> id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: - 1
  TYPE[4]: CALL
  TOKENIZED[4]: - 1
  ORIGINAL[5]: id
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: hfinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: hfinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640372
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771127
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stonesoup_printf_context != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context != stderr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: stderr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477898
FRAGMENT_COUNT: 6
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: display_epoch_time(buf,256,fd -> abs_ts . secs,fd -> abs_ts . nsecs,TO_STR_TIME_RES_T_NSECS)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 256 , VAR2 -> VAR3 . VAR4 , VAR2 -> VAR3 . VAR5 , VAR6 )
  ORIGINAL[2]: fd -> abs_ts . secs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: fd -> abs_ts . nsecs
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: TO_STR_TIME_RES_T_NSECS
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772602
FRAGMENT_COUNT: 3
  ORIGINAL[0]: g_assertion_message_expr(((gchar *)0),\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[1]: (gchar *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) 0
  ORIGINAL[2]: (const char *)__func__
  TYPE[2]: CALL
  TOKENIZED[2]: ( const char * ) VAR1

CENTER_NODE: 47244640433
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477911
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> col_data[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col_buf
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640566
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640608
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478079
FRAGMENT_COUNT: 7
  ORIGINAL[0]: cinfo -> writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: timestamp_get_precision()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: TS_PREC_AUTO_USEC
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640415
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771359
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cinfo -> fmt_matx[i][COL_CUSTOM] && cinfo -> col_custom_field[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] && VAR1 -> VAR5 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_custom_field_id[i] != - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] != - 1
  ORIGINAL[2]: cinfo -> col_custom_field_id[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_custom_field_id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: - 1
  TYPE[4]: CALL
  TOKENIZED[4]: - 1
  ORIGINAL[5]: cinfo -> col_custom_field_id[i]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[6]: cinfo -> col_custom_field_id
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771335
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo && cinfo -> col_first[COL_CUSTOM] >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[1]: cinfo -> col_first[COL_CUSTOM] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476760
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dirpath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: &st
  TYPE[1]: CALL
  TOKENIZED[1]: &st
  ORIGINAL[2]: st
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: st
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 2
  ORIGINAL[0]: el == COL_INFO
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477178
FRAGMENT_COUNT: 7
  ORIGINAL[0]: cinfo -> writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: orig_buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477999
FRAGMENT_COUNT: 5
  ORIGINAL[0]: col_set_cls_time(fd,cinfo,col)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: COL_CLS_TIME
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fd
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640452
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478408
FRAGMENT_COUNT: 36
  ORIGINAL[0]: pinfo -> cinfo
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pinfo -> cinfo -> col_fmt[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: pinfo -> fd
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pinfo -> cinfo
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pinfo -> src
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: pinfo -> src
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: pinfo -> dl_src
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: pinfo -> dl_src
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: pinfo -> net_src
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: pinfo -> net_src
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: pinfo -> dst
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: pinfo -> dst
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: pinfo -> dl_dst
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: pinfo -> dl_dst
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: pinfo -> net_dst
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: pinfo -> net_dst
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2
  ORIGINAL[16]: pinfo -> vsan
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: net_src
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: pinfo
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: pinfo
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: pinfo
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: pinfo
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: pinfo
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: i
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: pinfo
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: pinfo
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: pinfo
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: pinfo
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: pinfo
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: pinfo
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: pinfo
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: pinfo
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: pinfo
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: pinfo
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: pinfo
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: pinfo
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1

CENTER_NODE: 68719478497
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo -> col_fmt[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: COL_CUMULATIVE_BYTES
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fill_fd_colums
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772392
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tmp = gmtime((&then))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( ( &then ) )
  ORIGINAL[1]: gmtime((&then))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &then ) )
  ORIGINAL[2]: &then
  TYPE[2]: CALL
  TOKENIZED[2]: &then
  ORIGINAL[3]: local
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478565
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_files != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: trace_point
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: trace_point
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: trace_point
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477395
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: col_do_append_str(cinfo,el,((void *)0),str)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , ( ( void * ) 0 ) , VAR3 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640459
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771200
FRAGMENT_COUNT: 4
  ORIGINAL[0]: g_malloc_n(num_cols,sizeof(int ))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , sizeof ( int ) )
  ORIGINAL[1]: sizeof(int )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( int )
  ORIGINAL[2]: num_cols
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: int
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: int

CENTER_NODE: 30064771258
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> writable = writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: writable
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477976
FRAGMENT_COUNT: 3
  ORIGINAL[0]: timestamp_get_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: TS_DELTA_DIS
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772873
FRAGMENT_COUNT: 6
  ORIGINAL[0]: pinfo -> cinfo -> col_buf[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: pinfo -> cinfo -> col_buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: pinfo -> cinfo
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: is_res
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: col
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640473
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771264
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> col_first[el] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[2]: cinfo -> col_first[el]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_first
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: el
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640443
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772081
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: g_assertion_message_expr(((gchar *)0),\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[2]: (gchar *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) 0
  ORIGINAL[3]: (const char *)__func__
  TYPE[3]: CALL
  TOKENIZED[3]: ( const char * ) VAR1
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = cinfo -> col_first[el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: i <= cinfo -> col_last[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: for (i = cinfo -> col_first[el];i <= cinfo -> col_last[el];i++)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( VAR1 = VAR2 -> VAR3 [ VAR4 ] ; VAR1 <= VAR2 -> VAR5 [ VAR4 ] ; i++ )

