# Tokenized code fragments for 153790-v1.0.0-bad
# Total center nodes processed: 21
# Total code fragments found: 98

CENTER_NODE: 30064771691
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !amip
  TYPE[0]: CALL
  TOKENIZED[0]: !amip
  ORIGINAL[1]: buf_len = (strlen(buf))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 ) )
  ORIGINAL[2]: strlen(buf)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: amip && !CRYPTO_THREADID_cmp((&amip -> threadid),(&ti))
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 && !CRYPTO_THREADID_cmp ( ( &amip -> VAR2 ) , ( &ti ) )
  ORIGINAL[4]: buf_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476858
FRAGMENT_COUNT: 3
  ORIGINAL[0]: a -> addr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: addr
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476881
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771226
FRAGMENT_COUNT: 3
  ORIGINAL[0]: options = bits
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> options
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: bits
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476876
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (const APP_INFO *)a_void
  TYPE[0]: CALL
  TOKENIZED[0]: ( const VAR1 * ) VAR2
  ORIGINAL[1]: a_void
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771832
FRAGMENT_COUNT: 2
  ORIGINAL[0]: break_order_num = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: break_order_num
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_tainted_file != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: *stonesoup_tainted_buff = ((char *)(malloc(sizeof(char ) * (stonesoup_lsize + 1))))
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_tainted_buff = ( ( char * ) ( FUN1 ( sizeof ( char ) * ( VAR1 + 1 ) ) ) )
  ORIGINAL[2]: *stonesoup_tainted_buff
  TYPE[2]: CALL
  TOKENIZED[2]: *stonesoup_tainted_buff
  ORIGINAL[3]: (char *)(malloc(sizeof(char ) * (stonesoup_lsize + 1)))
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) ( FUN1 ( sizeof ( char ) * ( VAR1 + 1 ) ) )
  ORIGINAL[4]: stonesoup_tainted_buff
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476861
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771247
FRAGMENT_COUNT: 2
  ORIGINAL[0]: mem_hash(a)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477226
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: *b = arg2
  TYPE[1]: CALL
  TOKENIZED[1]: *b = VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477184
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: print_leak_doall_arg(a,b)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771438
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CRYPTO_is_mem_check_on()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: CRYPTO_mem_ctrl(0x2)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 0x2 )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771565
FRAGMENT_COUNT: 4
  ORIGINAL[0]: CRYPTO_is_mem_check_on() && mh != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ) && VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: mp != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: mp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stat(dirpath, &st) == -1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &st ) == -1
  ORIGINAL[1]: retval = mkdir(dirpath, 0700)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , 0700 )
  ORIGINAL[2]: mkdir(dirpath, 0700)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0700 )
  ORIGINAL[3]: retval
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771240
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ret * 17851 + (ret >> 14) * 7 + (ret >> 4) * 251
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 * 17851 + ( VAR1 >> 14 ) * 7 + ( VAR1 >> 4 ) * 251
  ORIGINAL[1]: ret * 17851 + (ret >> 14) * 7
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 * 17851 + ( VAR1 >> 14 ) * 7
  ORIGINAL[2]: ret * 17851
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 * 17851
  ORIGINAL[3]: (ret >> 14) * 7
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 >> 14 ) * 7
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771445
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pop_info() != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ) != ( ( void * ) 0 )
  ORIGINAL[1]: pop_info()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: ret++
  TYPE[2]: CALL
  TOKENIZED[2]: ret++
  ORIGINAL[3]: while (pop_info() != ((void *)0))
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: while ( FUN1 ( ) != ( ( void * ) 0 ) )
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771382
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ret = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: CRYPTO_is_mem_check_on()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476957
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: app_info_hash(a)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771801
FRAGMENT_COUNT: 9
  ORIGINAL[0]: ( *cb)(m -> order,m -> file,m -> line,m -> num,m -> addr)
  TYPE[0]: CALL
  TOKENIZED[0]: ( *cb ) ( VAR1 -> VAR2 , VAR1 -> VAR3 , VAR1 -> VAR4 , VAR1 -> VAR5 , VAR1 -> VAR6 )
  ORIGINAL[1]: m -> order
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: m -> file
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: m -> line
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: m -> num
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: m -> addr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: order
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: m
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: m
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771173
FRAGMENT_COUNT: 4
  ORIGINAL[0]: inf -> next != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: app_info_free(inf -> next)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: inf -> next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: inf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771479
FRAGMENT_COUNT: 17
  ORIGINAL[0]: mh == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: (mh = ((struct lhash_st_MEM *)(lh_new(mem_LHASH_HASH,mem_LHASH_COMP)))) == ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( struct VAR2 * ) ( FUN1 ( VAR3 , VAR4 ) ) ) ) == ( ( void * ) 0 )
  ORIGINAL[2]: m -> num = num
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = VAR2
  ORIGINAL[3]: m -> num
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: num
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: m
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: num
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: m
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: m
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: m
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: m
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: m
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: m
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: m
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: m
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: m
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: m
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

