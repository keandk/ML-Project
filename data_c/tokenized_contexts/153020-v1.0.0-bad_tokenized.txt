# Tokenized code fragments for 153020-v1.0.0-bad
# Total center nodes processed: 31
# Total code fragments found: 165

CENTER_NODE: 68719476949
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c -> cipher_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: gctx -> iv
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: c -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: iv
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772073
FRAGMENT_COUNT: 4
  ORIGINAL[0]: gorsier_predisable(&clinis_antifat)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &clinis_antifat )
  ORIGINAL[1]: &clinis_antifat
  TYPE[1]: CALL
  TOKENIZED[1]: &clinis_antifat
  ORIGINAL[2]: gorsier_predisable
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: clinis_antifat
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477148
FRAGMENT_COUNT: 5
  ORIGINAL[0]: memcmp((ctx -> buf),(in + len),16)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( VAR1 -> VAR2 ) , ( VAR3 + VAR4 ) , 16 )
  ORIGINAL[1]: OPENSSL_cleanse(out,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: out
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771903
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cctx -> tag_set = 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 1
  ORIGINAL[1]: cctx -> tag_set
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tag_set
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771080
FRAGMENT_COUNT: 30
  ORIGINAL[0]: (mode == 0x1 || mode == 0x2) && !enc
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 == 0x1 || VAR1 == 0x2 ) && !enc
  ORIGINAL[1]: mode == 0x1 || mode == 0x2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0x1 || VAR1 == 0x2
  ORIGINAL[2]: !enc
  TYPE[2]: CALL
  TOKENIZED[2]: !enc
  ORIGINAL[3]: ret = AES_set_decrypt_key(key,ctx -> key_len * 8,&dat -> ks)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 * 8 , &dat -> VAR5 )
  ORIGINAL[4]: AES_set_decrypt_key(key,ctx -> key_len * 8,&dat -> ks)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 -> VAR3 * 8 , &dat -> VAR4 )
  ORIGINAL[5]: ctx -> key_len * 8
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 * 8
  ORIGINAL[6]: ctx -> key_len
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &dat -> ks
  TYPE[7]: CALL
  TOKENIZED[7]: &dat -> VAR1
  ORIGINAL[8]: dat -> ks
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: dat -> block = ((block128_f )AES_decrypt)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2 = ( ( VAR3 ) VAR4 )
  ORIGINAL[10]: dat -> block
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: (block128_f )AES_decrypt
  TYPE[11]: CALL
  TOKENIZED[11]: ( VAR1 ) VAR2
  ORIGINAL[12]: dat -> stream . cbc = (mode == 0x2?((cbc128_f )AES_cbc_encrypt) : ((void *)0))
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2 . VAR3 = ( VAR4 == 0x2? ( ( VAR5 ) VAR6 ) : ( ( void * ) 0 ) )
  ORIGINAL[13]: dat -> stream . cbc
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2 . VAR3
  ORIGINAL[14]: dat -> stream
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: mode == 0x2?((cbc128_f )AES_cbc_encrypt) : ((void *)0)
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 == 0x2? ( ( VAR2 ) VAR3 ) : ( ( void * ) 0 )
  ORIGINAL[16]: mode == 0x2
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 == 0x2
  ORIGINAL[17]: key_len
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: ks
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: block
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: stream
  TYPE[20]: FIELD_IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: cbc
  TYPE[21]: FIELD_IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: ret
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: key
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: ctx
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: dat
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: dat
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: AES_decrypt
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: dat
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: mode
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1

CENTER_NODE: 68719476763
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ctx -> encrypt
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: CRYPTO_cbc128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,dat -> block)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , VAR7 -> VAR8 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: ctx -> iv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dat -> block
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: in
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: out
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477406
FRAGMENT_COUNT: 2
  ORIGINAL[0]: footies_bewired = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: footies_bewired
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771149
FRAGMENT_COUNT: 11
  ORIGINAL[0]: CRYPTO_ofb128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,&ctx -> num,dat -> block)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , &ctx -> VAR7 , VAR8 -> VAR9 )
  ORIGINAL[1]: &dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: &dat -> VAR1
  ORIGINAL[2]: ctx -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &ctx -> num
  TYPE[3]: CALL
  TOKENIZED[3]: &ctx -> VAR1
  ORIGINAL[4]: dat -> block
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: iv
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: in
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: out
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ctx
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ctx
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 1
  ORIGINAL[0]: CRYPTO_ccm128_tag(ccm,tag,(cctx -> M))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( VAR3 -> VAR4 ) )

CENTER_NODE: 30064771334
FRAGMENT_COUNT: 9
  ORIGINAL[0]: __sync_bool_compare_and_swap(&nonsuit_undiscernible,0,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &nonsuit_undiscernible , 0 , 1 )
  ORIGINAL[1]: mkdir(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: mkdir(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: tracepoint(stonesoup_trace,trace_location,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[4]: baronetise_transuded(sharon_tylosin)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: if (mkdir(\
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: if ( FUN1 ( \
  ORIGINAL[6]: stonesoup_trace
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: trace_location
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: OPENSSL_ia32cap_P
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476808
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dat -> ks
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ks
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dat
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 1
  ORIGINAL[0]: n
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771747
FRAGMENT_COUNT: 4
  ORIGINAL[0]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ] & ( 1 << 57 - 32 )
  ORIGINAL[1]: OPENSSL_ia32cap_P[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ]
  ORIGINAL[2]: 1 << 57 - 32
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << 57 - 32
  ORIGINAL[3]: 57 - 32
  TYPE[3]: CALL
  TOKENIZED[3]: 57 - 32

CENTER_NODE: 30064771940
FRAGMENT_COUNT: 10
  ORIGINAL[0]: &cctx -> ks
  TYPE[0]: CALL
  TOKENIZED[0]: &cctx -> VAR1
  ORIGINAL[1]: cctx -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: CRYPTO_ccm128_init(&cctx -> ccm,(cctx -> M),(cctx -> L),(&cctx -> ks),((block128_f )AES_encrypt))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &cctx -> VAR1 , ( VAR2 -> VAR3 ) , ( VAR2 -> VAR4 ) , ( &cctx -> VAR5 ) , ( ( VAR6 ) VAR7 ) )
  ORIGINAL[3]: &cctx -> ccm
  TYPE[3]: CALL
  TOKENIZED[3]: &cctx -> VAR1
  ORIGINAL[4]: cctx -> M
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cctx -> L
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &cctx -> ks
  TYPE[6]: CALL
  TOKENIZED[6]: &cctx -> VAR1
  ORIGINAL[7]: cctx -> ks
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: (block128_f )AES_encrypt
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 ) VAR2
  ORIGINAL[9]: key
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771199
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len >= ((size_t )1) << sizeof(size_t ) * 8 - 4
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= ( ( VAR2 ) 1 ) << sizeof ( VAR2 ) * 8 - 4
  ORIGINAL[1]: sizeof(size_t ) * 8 - 4
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 ) * 8 - 4
  ORIGINAL[2]: sizeof(size_t ) * 8
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 ) * 8
  ORIGINAL[3]: sizeof(size_t )
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 )

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 2
  ORIGINAL[0]: gctx -> ctr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064771571
FRAGMENT_COUNT: 4
  ORIGINAL[0]: arg != 13
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 13
  ORIGINAL[1]: c -> buf[arg - 2]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 - 2 ]
  ORIGINAL[2]: arg - 2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 2
  ORIGINAL[3]: arg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771867
FRAGMENT_COUNT: 4
  ORIGINAL[0]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)?&aesni_256_xts : &aes_256_xts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ] & ( 1 << 57 - 32 ) ?&aesni_256_xts : &aes_256_xts
  ORIGINAL[1]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ] & ( 1 << 57 - 32 )
  ORIGINAL[2]: &aesni_256_xts
  TYPE[2]: CALL
  TOKENIZED[2]: &aesni_256_xts
  ORIGINAL[3]: <global> aesni_256_xts
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 47244640360
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771072
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]

CENTER_NODE: 30064771799
FRAGMENT_COUNT: 5
  ORIGINAL[0]: xctx -> xts . block1 = ((block128_f )AES_decrypt)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 = ( ( VAR4 ) VAR5 )
  ORIGINAL[1]: xctx -> xts . block1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: (block128_f )AES_decrypt
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2
  ORIGINAL[3]: enc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: key
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 11
  ORIGINAL[0]: len < bl
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: len -= bl
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -= VAR2
  ORIGINAL[3]: i <= len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 <= VAR2
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bl
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: bl
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: len
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772567
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(655), (1), (256 / 8), (16), ((0x4000 | 0x3)), (aes_init_key), (aes_cfb8_cipher), (((void *)0)), ((sizeof(EVP_AES_KEY ))), (((void *)0)), (((void *)0)), (((void *)0)), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 655 ) , ( 1 ) , ( 256 / 8 ) , ( 16 ) , ( ( 0x4000 | 0x3 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064772847
FRAGMENT_COUNT: 2
  ORIGINAL[0]: 0x7 == 0x10001?2 : 1
  TYPE[0]: CALL
  TOKENIZED[0]: 0x7 == 0x10001?2 : 1
  ORIGINAL[1]: 0x7 == 0x10001
  TYPE[1]: CALL
  TOKENIZED[1]: 0x7 == 0x10001

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640347
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !out || !in || len < 16
  TYPE[0]: CALL
  TOKENIZED[0]: !out || !in || VAR1 < 16

CENTER_NODE: 68719477074
FRAGMENT_COUNT: 7
  ORIGINAL[0]: AES_set_encrypt_key(key,ctx -> key_len * 8,&gctx -> ks)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 * 8 , &gctx -> VAR4 )
  ORIGINAL[1]: ctx -> key_len * 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 * 8
  ORIGINAL[2]: &gctx -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &gctx -> VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: key
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: key
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771239
FRAGMENT_COUNT: 12
  ORIGINAL[0]: dat -> stream . ctr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: CRYPTO_ctr128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,ctx -> buf,&num,dat -> block)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , VAR5 -> VAR7 , &num , VAR8 -> VAR9 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: dat -> ks
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ctx -> iv
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: ctx -> buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &num
  TYPE[6]: CALL
  TOKENIZED[6]: &num
  ORIGINAL[7]: dat -> block
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: in
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: out
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: len
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ctx
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771772
FRAGMENT_COUNT: 4
  ORIGINAL[0]: type != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: xctx -> xts . key1 = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 = ( ( void * ) 0 )
  ORIGINAL[2]: xctx -> xts . key1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 68719476819
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ctx -> cipher_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: &dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: &dat -> VAR1
  ORIGINAL[2]: ctx -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: iv
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 0

