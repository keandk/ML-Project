# Tokenized code fragments for 152936-v1.0.0-bad
# Total center nodes processed: 28
# Total code fragments found: 102

CENTER_NODE: 68719476781
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771309
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

CENTER_NODE: 30064771339
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fnd -> funct && engine_unlocked_init(fnd -> funct)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[1]: fnd -> funct
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: engine_unlocked_init(fnd -> funct)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[3]: fnd -> funct
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2

CENTER_NODE: 68719477002
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stonesoup_exit_flag = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: <global> stonesoup_exit_flag
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: stonesoup_exit_flag
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771236
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (n = sk_find(((_STACK *)((1?pile -> sk : ((struct stack_st_ENGINE *)0)))),((void *)((1?e : ((ENGINE *)0)))))) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( ( ( VAR2 * ) ( ( 1?pile -> VAR3 : ( ( struct VAR4 * ) 0 ) ) ) ) , ( ( void * ) ( ( 1?e : ( ( VAR5 * ) 0 ) ) ) ) ) ) >= 0
  ORIGINAL[1]: (_STACK *)((1?pile -> sk : ((struct stack_st_ENGINE *)0)))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( ( 1?pile -> VAR2 : ( ( struct VAR3 * ) 0 ) ) )
  ORIGINAL[2]: 1?pile -> sk : ((struct stack_st_ENGINE *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: 1?pile -> VAR1 : ( ( struct VAR2 * ) 0 )
  ORIGINAL[3]: pile -> sk
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (struct stack_st_ENGINE *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( struct VAR1 * ) 0

CENTER_NODE: 30064771393
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (_LHASH *)((void *)(&table -> piles))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 * ) ( ( void * ) ( &table -> VAR2 ) )
  ORIGINAL[1]: (void *)(&table -> piles)
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) ( &table -> VAR1 )
  ORIGINAL[2]: &table -> piles
  TYPE[2]: CALL
  TOKENIZED[2]: &table -> VAR1

CENTER_NODE: 68719476939
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064771120
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]

CENTER_NODE: 30064771380
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (dall -> cb)(pile -> nid,pile -> sk,pile -> funct,dall -> arg)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR3 -> VAR4 , VAR3 -> VAR5 , VAR3 -> VAR6 , VAR1 -> VAR7 )
  ORIGINAL[1]: pile -> nid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pile -> sk
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pile -> funct
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dall -> arg
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: nid
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pile
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pile
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771122
FRAGMENT_COUNT: 3
  ORIGINAL[0]: c -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: nid
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476786
FRAGMENT_COUNT: 3
  ORIGINAL[0]: a -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: nid
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771474
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tripodic_uranophane . forky_malakin != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != 0
  ORIGINAL[1]: free(((char *)tripodic_uranophane . forky_malakin))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( char * ) VAR1 . VAR2 ) )
  ORIGINAL[2]: (char *)tripodic_uranophane . forky_malakin
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) VAR1 . VAR2
  ORIGINAL[3]: stonesoup_close_printf_context()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )

CENTER_NODE: 30064771128
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771301
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *table
  TYPE[0]: CALL
  TOKENIZED[0]: *table
  ORIGINAL[1]: lh_free(((_LHASH *)((void *)(&( *table) -> piles))))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) ( ( void * ) ( & ( *table ) -> VAR2 ) ) ) )
  ORIGINAL[2]: (_LHASH *)((void *)(&( *table) -> piles))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) ( ( void * ) ( & ( *table ) -> VAR2 ) )
  ORIGINAL[3]: (void *)(&( *table) -> piles)
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) ( & ( *table ) -> VAR1 )

CENTER_NODE: 30064771162
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *table
  TYPE[0]: CALL
  TOKENIZED[0]: *table
  ORIGINAL[1]: num_nids--
  TYPE[1]: CALL
  TOKENIZED[1]: num_nids--
  ORIGINAL[2]: ( *table) -> piles
  TYPE[2]: CALL
  TOKENIZED[2]: ( *table ) -> VAR1
  ORIGINAL[3]: *table
  TYPE[3]: CALL
  TOKENIZED[3]: *table
  ORIGINAL[4]: ( *table) -> piles
  TYPE[4]: CALL
  TOKENIZED[4]: ( *table ) -> VAR1
  ORIGINAL[5]: piles
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: table
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476856
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476740
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mg_vprintf_data((struct mg_connection*) stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( struct mg_connection* ) VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: (struct mg_connection*) stonesoup_printf_context
  TYPE[1]: CALL
  TOKENIZED[1]: ( struct mg_connection* ) VAR1
  ORIGINAL[2]: argptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: argptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 1
  ORIGINAL[0]: p -> funct
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 1
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2

CENTER_NODE: 68719476789
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476784
FRAGMENT_COUNT: 3
  ORIGINAL[0]: table_flags = flags
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> table_flags
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: flags
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476923
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: int_cb_doall_arg(a,b)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771273
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

CENTER_NODE: 30064771268
FRAGMENT_COUNT: 5
  ORIGINAL[0]: int_table_check(table,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: ( *table) -> piles
  TYPE[1]: CALL
  TOKENIZED[1]: ( *table ) -> VAR1
  ORIGINAL[2]: *table
  TYPE[2]: CALL
  TOKENIZED[2]: *table
  ORIGINAL[3]: piles
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: table
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771133
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !create
  TYPE[0]: CALL
  TOKENIZED[0]: !create
  ORIGINAL[1]: (lh = ((struct lhash_st_ENGINE_PILE *)(lh_new(engine_pile_LHASH_HASH,engine_pile_LHASH_COMP)))) == ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( struct VAR2 * ) ( FUN1 ( VAR3 , VAR4 ) ) ) ) == ( ( void * ) 0 )
  ORIGINAL[2]: lh = ((struct lhash_st_ENGINE_PILE *)(lh_new(engine_pile_LHASH_HASH,engine_pile_LHASH_COMP)))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( struct VAR2 * ) ( FUN1 ( VAR3 , VAR4 ) ) )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: *t = ((ENGINE_TABLE *)lh)
  TYPE[4]: CALL
  TOKENIZED[4]: *t = ( ( VAR1 * ) VAR2 )
  ORIGINAL[5]: *t
  TYPE[5]: CALL
  TOKENIZED[5]: *t
  ORIGINAL[6]: (ENGINE_TABLE *)lh
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 * ) VAR2
  ORIGINAL[7]: t
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: lh
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771402
FRAGMENT_COUNT: 5
  ORIGINAL[0]: gradgrindian_retooled != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: lisbon_hematocyanin . forky_malakin = ((char *)gradgrindian_retooled)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = ( ( char * ) VAR3 )
  ORIGINAL[2]: lisbon_hematocyanin . forky_malakin
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: (char *)gradgrindian_retooled
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) VAR1
  ORIGINAL[4]: pitchpot_plumed
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

