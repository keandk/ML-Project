# Tokenized code fragments for 152092-v1.0.0-bad
# Total center nodes processed: 74
# Total code fragments found: 317

CENTER_NODE: 68719478352
FRAGMENT_COUNT: 35
  ORIGINAL[0]: pinfo -> cinfo
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pinfo -> fd
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pinfo -> cinfo
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pinfo -> src
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pinfo -> src
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: pinfo -> dl_src
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: pinfo -> dl_src
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: pinfo -> net_src
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: pinfo -> net_src
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: pinfo -> dst
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: pinfo -> dst
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: pinfo -> dl_dst
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: pinfo -> dl_dst
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: pinfo -> net_dst
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: pinfo -> net_dst
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: pinfo -> vsan
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2
  ORIGINAL[16]: fd
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: fill_fd_colums
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: pinfo
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: pinfo
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: pinfo
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: pinfo
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: pinfo
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: pinfo
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: pinfo
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: pinfo
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: pinfo
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: pinfo
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: pinfo
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: pinfo
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: pinfo
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: pinfo
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: pinfo
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: pinfo
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: pinfo
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1

CENTER_NODE: 68719476738
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (struct mg_connection*) stonesoup_printf_context
  TYPE[0]: CALL
  TOKENIZED[0]: ( struct mg_connection* ) VAR1
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640423
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640469
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640364
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640436
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477287
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: i <= cinfo -> col_last[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: cinfo -> col_last[el]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_last
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: el
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: el
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640488
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476829
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < NUM_COL_FMTS
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: cinfo -> col_last[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_last
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772580
FRAGMENT_COUNT: 3
  ORIGINAL[0]: g_assertion_message_expr(((gchar *)0),\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[1]: (gchar *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) 0
  ORIGINAL[2]: (const char *)__func__
  TYPE[2]: CALL
  TOKENIZED[2]: ( const char * ) VAR1

CENTER_NODE: 30064772337
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: set_time_hour_min_sec(&fd -> del_dis_ts,cinfo -> col_buf[col])
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &fd -> VAR1 , VAR2 -> VAR3 [ VAR4 ] )
  ORIGINAL[2]: &fd -> del_dis_ts
  TYPE[2]: CALL
  TOKENIZED[2]: &fd -> VAR1
  ORIGINAL[3]: cinfo -> col_buf[col]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640611
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640475
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771223
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < cinfo -> num_cols
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: cinfo -> col_expr . col_expr[i] = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2 [ VAR3 ] = \
  ORIGINAL[2]: cinfo -> col_expr . col_expr[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_expr . col_expr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR2
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771860
FRAGMENT_COUNT: 11
  ORIGINAL[0]: cinfo -> fmt_matx[col][COL_CLS_TIME] || cinfo -> fmt_matx[col][COL_ABS_TIME] || cinfo -> fmt_matx[col][COL_ABS_DATE_TIME] || cinfo -> fmt_matx[col][COL_UTC_TIME] || cinfo -> fmt_matx[col][COL_UTC_DATE_TIME] || cinfo -> fmt_matx[col][COL_REL_TIME] || cinfo -> fmt_matx[col][COL_DELTA_TIME] || cinfo -> fmt_matx[col][COL_DELTA_TIME_DIS]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR5 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR6 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR7 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR8 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR9 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR10 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR11 ]
  ORIGINAL[1]: cinfo -> fmt_matx[col][COL_CLS_TIME] || cinfo -> fmt_matx[col][COL_ABS_TIME] || cinfo -> fmt_matx[col][COL_ABS_DATE_TIME] || cinfo -> fmt_matx[col][COL_UTC_TIME] || cinfo -> fmt_matx[col][COL_UTC_DATE_TIME] || cinfo -> fmt_matx[col][COL_REL_TIME] || cinfo -> fmt_matx[col][COL_DELTA_TIME]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR5 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR6 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR7 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR8 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR9 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR10 ]
  ORIGINAL[2]: cinfo -> fmt_matx[col][COL_CLS_TIME] || cinfo -> fmt_matx[col][COL_ABS_TIME] || cinfo -> fmt_matx[col][COL_ABS_DATE_TIME] || cinfo -> fmt_matx[col][COL_UTC_TIME] || cinfo -> fmt_matx[col][COL_UTC_DATE_TIME] || cinfo -> fmt_matx[col][COL_REL_TIME]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR5 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR6 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR7 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR8 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR9 ]
  ORIGINAL[3]: cinfo -> fmt_matx[col][COL_DELTA_TIME]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[4]: cinfo -> fmt_matx[col][COL_DELTA_TIME_DIS]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[5]: cinfo -> fmt_matx[col]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[6]: cinfo -> fmt_matx
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: fmt_matx
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cinfo
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: col
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: COL_DELTA_TIME_DIS
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771830
FRAGMENT_COUNT: 7
  ORIGINAL[0]: cinfo -> fmt_matx[i][el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[1]: separator != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: len != 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 != 0
  ORIGINAL[4]: separator
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771998
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo -> col_buf[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: col
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640350
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )

CENTER_NODE: 30064771731
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_data[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_data
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 1
  ORIGINAL[0]: cinfo -> fmt_matx[i][el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]

CENTER_NODE: 30064771639
FRAGMENT_COUNT: 18
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: i <= cinfo -> col_last[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: cinfo -> col_last[el]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_last
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: i++
  TYPE[4]: CALL
  TOKENIZED[4]: i++
  ORIGINAL[5]: cinfo -> fmt_matx[i][el]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[6]: cinfo -> fmt_matx[i]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[7]: cinfo -> fmt_matx
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: for (i = cinfo -> col_first[el];i <= cinfo -> col_last[el];i++)
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: for ( VAR1 = VAR2 -> VAR3 [ VAR4 ] ; VAR1 <= VAR2 -> VAR5 [ VAR4 ] ; i++ )
  ORIGINAL[9]: col_last
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: fmt_matx
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: i
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: cinfo
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: el
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: i
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: cinfo
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: i
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: el
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 68719477693
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: &fd -> rel_ts
  TYPE[1]: CALL
  TOKENIZED[1]: &fd -> VAR1
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_buf
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771840
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[2]: cinfo?cinfo -> writable : 0
  TYPE[2]: CALL
  TOKENIZED[2]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[3]: cinfo -> col_first[el] >= 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] >= 0

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 7
  ORIGINAL[0]: cinfo -> writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cinfo -> fmt_matx[i][el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[2]: cinfo -> col_buf[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_data
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772599
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fd -> flags . ref_time
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: g_strlcpy(cinfo -> col_buf[col],\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] , \
  ORIGINAL[2]: cinfo -> col_buf[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772626
FRAGMENT_COUNT: 5
  ORIGINAL[0]: col <= cinfo -> col_last[el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: col++
  TYPE[1]: CALL
  TOKENIZED[1]: col++
  ORIGINAL[2]: for (col = cinfo -> col_first[el];col <= cinfo -> col_last[el];col++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = VAR2 -> VAR3 [ VAR4 ] ; VAR1 <= VAR2 -> VAR5 [ VAR4 ] ; col++ )
  ORIGINAL[3]: col
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772410
FRAGMENT_COUNT: 4
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: ((long )fd -> abs_ts . nsecs) / 1000
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( long ) VAR1 -> VAR2 . VAR3 ) / 1000
  ORIGINAL[2]: (long )fd -> abs_ts . nsecs
  TYPE[2]: CALL
  TOKENIZED[2]: ( long ) VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: fd -> abs_ts . nsecs
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3

CENTER_NODE: 47244640619
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773213
FRAGMENT_COUNT: 2
  ORIGINAL[0]: cladine_dromaeognathism = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: cladine_dromaeognathism
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772186
FRAGMENT_COUNT: 10
  ORIGINAL[0]: secs >= (60 * 60)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= ( 60 * 60 )
  ORIGINAL[1]: g_snprintf(buf,256,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 256 , \
  ORIGINAL[2]: negative?\
  TYPE[2]: CALL
  TOKENIZED[2]: negative?\
  ORIGINAL[3]: ((gint32 )secs) / (60 * 60)
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( VAR1 ) VAR2 ) / ( 60 * 60 )
  ORIGINAL[4]: ((gint32 )(secs / 60)) % 60
  TYPE[4]: CALL
  TOKENIZED[4]: ( ( VAR1 ) ( VAR2 / 60 ) ) % 60
  ORIGINAL[5]: ((gint32 )secs) % 60
  TYPE[5]: CALL
  TOKENIZED[5]: ( ( VAR1 ) VAR2 ) % 60
  ORIGINAL[6]: (gint32 )secs
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 ) VAR2
  ORIGINAL[7]: nsecs / 1000
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 / 1000
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: nsecs
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640622
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773162
FRAGMENT_COUNT: 5
  ORIGINAL[0]: yapper_thigmonegative != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: frankenstein_moldwarps = ((void *)yapper_thigmonegative)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( void * ) VAR2 )
  ORIGINAL[2]: (void *)yapper_thigmonegative
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) VAR1
  ORIGINAL[3]: frankenstein_moldwarps
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ponent_noncompetently
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772880
FRAGMENT_COUNT: 6
  ORIGINAL[0]: pinfo -> cinfo -> col_expr . col_expr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 . VAR3
  ORIGINAL[1]: pinfo -> cinfo -> col_expr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: pinfo -> cinfo
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_expr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col_expr
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: is_src
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640414
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477868
FRAGMENT_COUNT: 3
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: TS_PREC_AUTO_NSEC
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771608
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> col_fence[i] > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] > 0
  ORIGINAL[1]: (int )(strlen(cinfo -> col_buf[i]))
  TYPE[1]: CALL
  TOKENIZED[1]: ( int ) ( FUN1 ( VAR1 -> VAR2 [ VAR3 ] ) )
  ORIGINAL[2]: strlen(cinfo -> col_buf[i])
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] )
  ORIGINAL[3]: cinfo -> col_buf[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]

CENTER_NODE: 47244640477
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771234
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 2
  ORIGINAL[0]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640566
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640608
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476943
FRAGMENT_COUNT: 25
  ORIGINAL[0]: cinfo && cinfo -> col_first[COL_CUSTOM] >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[1]: cinfo -> col_first[COL_CUSTOM] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[2]: cinfo -> col_first[COL_CUSTOM]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_first
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cinfo -> col_first
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cinfo -> col_last
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: cinfo -> col_custom_field_id
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: cinfo -> fmt_matx
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: cinfo -> col_custom_dfilter
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: cinfo -> col_custom_dfilter
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: cinfo -> col_custom_field
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: cinfo -> col_custom_field_id
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: col_first
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: cinfo
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: cinfo
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: COL_CUSTOM
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: cinfo
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: cinfo
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: cinfo
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: cinfo
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: cinfo
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: cinfo
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: cinfo
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: cinfo
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: cinfo
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1

CENTER_NODE: 47244640455
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773027
FRAGMENT_COUNT: 7
  ORIGINAL[0]: cinfo -> col_fmt[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_expr . col_expr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2
  ORIGINAL[2]: cinfo -> col_expr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_expr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col_expr
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772288
FRAGMENT_COUNT: 9
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: cinfo -> col_buf[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: g_strlcpy(cinfo -> col_expr . col_expr_val[col],cinfo -> col_buf[col],256)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 . VAR3 [ VAR4 ] , VAR1 -> VAR5 [ VAR4 ] , 256 )
  ORIGINAL[3]: cinfo -> col_expr . col_expr_val[col]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[4]: cinfo -> col_buf[col]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: cinfo -> col_buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: cinfo -> col_buf[col]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[7]: cinfo -> col_buf
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: col
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640480
FRAGMENT_COUNT: 3
  ORIGINAL[0]: timestamp_get_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: col_set_abs_time(fd,cinfo,col)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;

CENTER_NODE: 47244640418
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640569
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477932
FRAGMENT_COUNT: 2
  ORIGINAL[0]: timestamp_get_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: TS_NOT_SET
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476921
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i <= cinfo -> col_last[COL_CUSTOM]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: cinfo -> fmt_matx
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: fmt_matx
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771431
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> fmt_matx[i][el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[1]: len = ((int )(strlen(cinfo -> col_buf[i])))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( int ) ( FUN1 ( VAR2 -> VAR3 [ VAR4 ] ) ) )
  ORIGINAL[2]: (int )(strlen(cinfo -> col_buf[i]))
  TYPE[2]: CALL
  TOKENIZED[2]: ( int ) ( FUN1 ( VAR1 -> VAR2 [ VAR3 ] ) )
  ORIGINAL[3]: strlen(cinfo -> col_buf[i])
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] )
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640613
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !cinfo
  TYPE[0]: CALL
  TOKENIZED[0]: !cinfo

CENTER_NODE: 47244640500
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771108
FRAGMENT_COUNT: 5
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: *stonesoup_server = mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_server = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: stonesoup_server
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478127
FRAGMENT_COUNT: 3
  ORIGINAL[0]: addr -> type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: AT_ARCNET
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: is_src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640462
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771971
FRAGMENT_COUNT: 10
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: tmp -> tm_mon + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 + 1
  ORIGINAL[2]: tmp -> tm_mon
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tm_mon
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tmp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tmp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tmp
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: tmp
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064772426
FRAGMENT_COUNT: 5
  ORIGINAL[0]: set_abs_time(fd,cinfo -> col_buf[col],!0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 [ VAR4 ] , !0 )
  ORIGINAL[1]: cinfo -> col_buf[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: !0
  TYPE[2]: CALL
  TOKENIZED[2]: !0
  ORIGINAL[3]: fd
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640512
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771236
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> writable = writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: writable
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477492
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo -> col_expr . col_expr[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_expr . col_expr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2
  ORIGINAL[2]: col
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771240
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: writable
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771090
FRAGMENT_COUNT: 6
  ORIGINAL[0]: data_size = mg_get_var(conn, \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: mg_get_var(conn, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: buffer_size * sizeof(char)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 * sizeof ( char )
  ORIGINAL[3]: data_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: conn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_buff
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772977
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_fmt[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_fmt
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col_fmt
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477825
FRAGMENT_COUNT: 4
  ORIGINAL[0]: set_abs_time(fd,cinfo -> col_buf[col],0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 [ VAR4 ] , 0 )
  ORIGINAL[1]: cinfo -> col_expr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col_expr
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640446
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772525
FRAGMENT_COUNT: 7
  ORIGINAL[0]: cinfo -> col_buf[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data[col] = cinfo -> col_buf[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] = VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_data[col]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: cinfo -> col_buf[col]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: cinfo -> col_buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: col
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640409
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478534
FRAGMENT_COUNT: 6
  ORIGINAL[0]: memset(stonesoup_stack_string,'x',stonesoup_stack_size - 1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 'x' , VAR2 - 1 )
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: trace_point
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_trace
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771316
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo -> col_first[COL_CUSTOM]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_first
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col_first
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: COL_CUSTOM
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477050
FRAGMENT_COUNT: 9
  ORIGINAL[0]: cinfo -> fmt_matx[i][el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[1]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data[i] = cinfo -> col_buf[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] = VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[3]: len = ((int )(strlen(cinfo -> col_buf[i])))
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = ( ( int ) ( FUN1 ( VAR2 -> VAR3 [ VAR4 ] ) ) )
  ORIGINAL[4]: (int )(strlen(cinfo -> col_buf[i]))
  TYPE[4]: CALL
  TOKENIZED[4]: ( int ) ( FUN1 ( VAR1 -> VAR2 [ VAR3 ] ) )
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

