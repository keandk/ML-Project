# Tokenized code fragments for 153423-v1.0.0-bad
# Total center nodes processed: 33
# Total code fragments found: 180

CENTER_NODE: 68719477153
FRAGMENT_COUNT: 3
  ORIGINAL[0]: malfunction_handler = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: old_malfunction_handler
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: old_malfunction_handler
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476771
FRAGMENT_COUNT: 6
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: sprintf(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: filepath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477057
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_handle_error2(err,stream,fatal,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , \
  ORIGINAL[1]: err
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *stonesoup_s != (char)0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_s != ( char ) 0
  ORIGINAL[1]: *stonesoup_s
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_s
  ORIGINAL[2]: (*stonesoup_tainted_buff)[stonesoup_s - stonesoup_shm]
  TYPE[2]: CALL
  TOKENIZED[2]: ( *stonesoup_tainted_buff ) [ VAR1 - VAR2 ]
  ORIGINAL[3]: *stonesoup_s
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_s
  ORIGINAL[4]: stonesoup_s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771421
FRAGMENT_COUNT: 14
  ORIGINAL[0]: err -> apr_err > 20000 + 50000 + 50000 && err -> apr_err <= 20000 + 50000 + 50000 + 50000 * 10
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > 20000 + 50000 + 50000 && VAR1 -> VAR2 <= 20000 + 50000 + 50000 + 50000 * 10
  ORIGINAL[1]: err -> apr_err
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: err -> apr_err
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: apr_strerror(err -> apr_err,errbuf,sizeof(errbuf))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , VAR3 , sizeof ( VAR3 ) )
  ORIGINAL[4]: err -> apr_err
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: sizeof(errbuf)
  TYPE[5]: CALL
  TOKENIZED[5]: sizeof ( VAR1 )
  ORIGINAL[6]: err -> apr_err
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: apr_err
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: err
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: err
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: errbuf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: err
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: err
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: err
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 68719477234
FRAGMENT_COUNT: 3
  ORIGINAL[0]: russky_plankbuilt(cleanhanded_palpebral,ixodian_nonhackneyed)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: cleanhanded_palpebral
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ixodian_nonhackneyed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771382
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !err
  TYPE[0]: CALL
  TOKENIZED[0]: !err
  ORIGINAL[1]: tmp_err -> child = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: tmp_err -> child
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 30064771272
FRAGMENT_COUNT: 5
  ORIGINAL[0]: err1 && err2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR2
  ORIGINAL[1]: svn_error_compose(err1,svn_error_quick_wrap(err2,(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , FUN2 ( VAR2 , ( FUN3 ( \
  ORIGINAL[2]: svn_error_quick_wrap(err2,(dgettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( FUN2 ( \
  ORIGINAL[3]: err1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477238
FRAGMENT_COUNT: 3
  ORIGINAL[0]: error_tracing_link[] = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ ] = \
  ORIGINAL[1]: <global> error_tracing_link
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: error_tracing_link
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771439
FRAGMENT_COUNT: 4
  ORIGINAL[0]: apr_array_make(subpool,0,(sizeof(apr_status_t )))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , ( sizeof ( VAR2 ) ) )
  ORIGINAL[1]: sizeof(apr_status_t )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: subpool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_status_t
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771604
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *(basile_cypro - 5) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: * ( VAR1 - 5 ) != 0
  ORIGINAL[1]: *(basile_cypro - 5)
  TYPE[1]: CALL
  TOKENIZED[1]: * ( VAR1 - 5 )
  ORIGINAL[2]: *(basile_cypro - 5)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( VAR1 - 5 )
  ORIGINAL[3]: basile_cypro - 5
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 5
  ORIGINAL[4]: basile_cypro
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771481
FRAGMENT_COUNT: 9
  ORIGINAL[0]: svn_error__is_tracing_link(err)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: err = err -> child
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 -> VAR2
  ORIGINAL[2]: err -> child
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: while (svn_error__is_tracing_link(err))
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: while ( FUN1 ( VAR1 ) )
  ORIGINAL[4]: child
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: err
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: err
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476994
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_pool_destroy(err -> pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[1]: err -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pool
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771268
FRAGMENT_COUNT: 8
  ORIGINAL[0]: child == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: svn_error_create(child -> apr_err,child,new_msg)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR1 , VAR3 )
  ORIGINAL[2]: child -> apr_err
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: apr_err
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: child
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: child
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: child
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: new_msg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771649
FRAGMENT_COUNT: 21
  ORIGINAL[0]: (shmid = shmget(key, shmsz, IPC_CREAT | 0666)) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 | 0666 ) ) < 0
  ORIGINAL[1]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[2]: shm = shmat(shmid, NULL, 0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 )
  ORIGINAL[3]: (char *) -1
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) -1
  ORIGINAL[4]: fprintf(stderr, \
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , \
  ORIGINAL[5]: s = shm
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = VAR2
  ORIGINAL[6]: memset(s, 0, shmsz)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[7]: strcpy(shm, str)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[8]: fprintf(stderr, \
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , \
  ORIGINAL[9]: getchar()
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( )
  ORIGINAL[10]: fprintf(stderr, \
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 , \
  ORIGINAL[11]: stderr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: shm
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: shmsz
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: shm
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: str
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: out_filename
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: stderr
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: stderr
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 68719476965
FRAGMENT_COUNT: 7
  ORIGINAL[0]: child -> child
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR1
  ORIGINAL[1]: child -> apr_err
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: apr_err
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: child
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: child
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: child
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: child
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771480
FRAGMENT_COUNT: 2
  ORIGINAL[0]: fflush(stream)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476922
FRAGMENT_COUNT: 1
  ORIGINAL[0]: err
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771496
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (defn -> errcode) == ((svn_errno_t )statcode)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == ( ( VAR3 ) VAR4 )
  ORIGINAL[1]: apr_cpystrn(buf,(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( FUN2 ( \
  ORIGINAL[2]: dgettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufsize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477157
FRAGMENT_COUNT: 5
  ORIGINAL[0]: malfunction_handler(can_return,file,line,expr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: can_return
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: line
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: expr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476974
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !new_err
  TYPE[0]: CALL
  TOKENIZED[0]: !new_err
  ORIGINAL[1]: *new_err
  TYPE[1]: CALL
  TOKENIZED[1]: *new_err
  ORIGINAL[2]: new_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: new_err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: new_err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: new_err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: new_err
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476867
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mkdir(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: tracepoint(stonesoup_trace,trace_location,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: trace_location
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 3
  ORIGINAL[0]: err -> child
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 5
  ORIGINAL[0]: memset(apr_palloc(pool,sizeof(( *new_error))),0,sizeof(( *new_error)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , sizeof ( ( *new_error ) ) ) , 0 , sizeof ( ( *new_error ) ) )
  ORIGINAL[1]: apr_palloc(pool,sizeof(( *new_error)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( ( *new_error ) ) )
  ORIGINAL[2]: sizeof(( *new_error))
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( ( *new_error ) )
  ORIGINAL[3]: sizeof(( *new_error))
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( ( *new_error ) )
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476845
FRAGMENT_COUNT: 6
  ORIGINAL[0]: err -> message
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: err -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pool
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: message
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477092
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_handle_warning2(stream,err,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476824
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476933
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *pool = chain -> pool
  TYPE[0]: CALL
  TOKENIZED[0]: *pool = VAR1 -> VAR2
  ORIGINAL[1]: *oldpool = new_err -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: *oldpool = VAR1 -> VAR2
  ORIGINAL[2]: new_err -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: oldpool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: new_err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: oldpool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476848
FRAGMENT_COUNT: 8
  ORIGINAL[0]: err = make_error_internal(apr_err,child)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: make_error_internal(apr_err,child)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: err -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: apr_err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: err
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771507
FRAGMENT_COUNT: 5
  ORIGINAL[0]: defn -> errdesc != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: (defn -> errcode) == ((svn_errno_t )statcode)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) == ( ( VAR3 ) VAR4 )
  ORIGINAL[2]: defn -> errcode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (svn_errno_t )statcode
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) VAR2
  ORIGINAL[4]: statcode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771523
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_handle_error2(err,stderr,0,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 0 , \
  ORIGINAL[1]: abort()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stderr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477139
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_error_createf(SVN_ERR_ASSERTION_FAIL,((void *)0),(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[1]: expr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SVN_ERR_ASSERTION_FAIL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

