# Tokenized code fragments for 152266-v1.0.0-bad
# Total center nodes processed: 84
# Total code fragments found: 298

CENTER_NODE: 68719477852
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: -buffer
  TYPE[1]: CALL
  TOKENIZED[1]: -buffer
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: LocalRefCount
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772672
FRAGMENT_COUNT: 4
  ORIGINAL[0]: bufHdr -> tag . rnode . dbNode == dbid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5
  ORIGINAL[1]: InvalidateBuffer(bufHdr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bufHdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772305
FRAGMENT_COUNT: 1
  ORIGINAL[0]: on_shmem_exit(AtProcExit_Buffers,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )

CENTER_NODE: 30064773074
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrivateRefCount[bufid] > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] > 0
  ORIGINAL[1]: (bool )0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 0

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773201
FRAGMENT_COUNT: 5
  ORIGINAL[0]: clear_dirty && !((buf -> flags) & 1 << 5)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && ! ( ( VAR2 -> VAR3 ) & 1 << 5 )
  ORIGINAL[1]: ~(1 << 0 | 1 << 7)
  TYPE[1]: CALL
  TOKENIZED[1]: ~ ( 1 << 0 | 1 << 7 )
  ORIGINAL[2]: 1 << 0 | 1 << 7
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << 0 | 1 << 7
  ORIGINAL[3]: 1 << 0
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 0
  ORIGINAL[4]: 1 << 7
  TYPE[4]: CALL
  TOKENIZED[4]: 1 << 7

CENTER_NODE: 30064772847
FRAGMENT_COUNT: 10
  ORIGINAL[0]: bufHdr -> tag . rnode . dbNode != dbid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 != VAR5
  ORIGINAL[1]: bufHdr -> tag . rnode . dbNode == dbid && (bufHdr -> flags) & 1 << 1 && (bufHdr -> flags) & 1 << 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 && ( VAR1 -> VAR6 ) & 1 << 1 && ( VAR1 -> VAR6 ) & 1 << 0
  ORIGINAL[2]: bufHdr -> tag . rnode . dbNode == dbid && (bufHdr -> flags) & 1 << 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 && ( VAR1 -> VAR6 ) & 1 << 1
  ORIGINAL[3]: bufHdr -> tag . rnode . dbNode == dbid
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5
  ORIGINAL[4]: (bufHdr -> flags) & 1 << 1
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 -> VAR2 ) & 1 << 1
  ORIGINAL[5]: (bufHdr -> flags) & 1 << 0
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 -> VAR2 ) & 1 << 0
  ORIGINAL[6]: bufHdr -> flags
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: 1 << 0
  TYPE[7]: CALL
  TOKENIZED[7]: 1 << 0
  ORIGINAL[8]: flags
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: bufHdr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064773121
FRAGMENT_COUNT: 9
  ORIGINAL[0]: sv_flags = buf -> flags
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: buf -> flags
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !(sv_flags & 1 << 3)
  TYPE[2]: CALL
  TOKENIZED[2]: ! ( VAR1 & 1 << 3 )
  ORIGINAL[3]: flags
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sv_flags
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 5
  ORIGINAL[0]: smgr = smgropen(rnode,- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , - 1 )
  ORIGINAL[1]: smgropen(rnode,- 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , - 1 )
  ORIGINAL[2]: - 1
  TYPE[2]: CALL
  TOKENIZED[2]: - 1
  ORIGINAL[3]: smgr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rnode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640505
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477888
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buf = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: mode == 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0
  ORIGINAL[3]: mode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772920
FRAGMENT_COUNT: 29
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: ((bufHdr -> flags) & (1 << 0 | 1 << 5)) != (1 << 0 | 1 << 5)
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 -> VAR2 ) & ( 1 << 0 | 1 << 5 ) ) != ( 1 << 0 | 1 << 5 )
  ORIGINAL[2]: (bufHdr -> flags) & (1 << 0 | 1 << 5)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) & ( 1 << 0 | 1 << 5 )
  ORIGINAL[3]: 1 << 0 | 1 << 5
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 0 | 1 << 5
  ORIGINAL[4]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[5]: &bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &bufHdr -> VAR1
  ORIGINAL[6]: bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: !((bufHdr -> flags) & 1 << 0)
  TYPE[7]: CALL
  TOKENIZED[7]: ! ( ( VAR1 -> VAR2 ) & 1 << 0 )
  ORIGINAL[8]: (bufHdr -> flags) & 1 << 0
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 -> VAR2 ) & 1 << 0
  ORIGINAL[9]: bufHdr -> flags
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: 1 << 0
  TYPE[10]: CALL
  TOKENIZED[10]: 1 << 0
  ORIGINAL[11]: bufHdr -> flags |= 1 << 0 | 1 << 5
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 |= 1 << 0 | 1 << 5
  ORIGINAL[12]: bufHdr -> flags
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: 1 << 0 | 1 << 5
  TYPE[13]: CALL
  TOKENIZED[13]: 1 << 0 | 1 << 5
  ORIGINAL[14]: 1 << 0
  TYPE[14]: CALL
  TOKENIZED[14]: 1 << 0
  ORIGINAL[15]: 1 << 5
  TYPE[15]: CALL
  TOKENIZED[15]: 1 << 5
  ORIGINAL[16]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock)) = 0
  TYPE[16]: CALL
  TOKENIZED[16]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) ) = 0
  ORIGINAL[17]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock))
  TYPE[17]: CALL
  TOKENIZED[17]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) )
  ORIGINAL[18]: (volatile slock_t *)(&bufHdr -> buf_hdr_lock)
  TYPE[18]: CALL
  TOKENIZED[18]: ( volatile VAR1 * ) ( &bufHdr -> VAR2 )
  ORIGINAL[19]: &bufHdr -> buf_hdr_lock
  TYPE[19]: CALL
  TOKENIZED[19]: &bufHdr -> VAR1
  ORIGINAL[20]: bufHdr -> buf_hdr_lock
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 -> VAR2
  ORIGINAL[21]: buf_hdr_lock
  TYPE[21]: FIELD_IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: flags
  TYPE[22]: FIELD_IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: flags
  TYPE[23]: FIELD_IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: buf_hdr_lock
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: bufHdr
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: bufHdr
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: bufHdr
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: bufHdr
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1

CENTER_NODE: 47244640301
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477549
FRAGMENT_COUNT: 6
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: -buffer
  TYPE[1]: CALL
  TOKENIZED[1]: -buffer
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: LocalBufferDescriptors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640535
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640314
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772024
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *((volatile slock_t *)(&buf -> buf_hdr_lock)) = 0
  TYPE[0]: CALL
  TOKENIZED[0]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) ) = 0
  ORIGINAL[1]: *((volatile slock_t *)(&buf -> buf_hdr_lock))
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) )
  ORIGINAL[2]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[2]: CALL
  TOKENIZED[2]: ( volatile VAR1 * ) ( &buf -> VAR2 )

CENTER_NODE: 68719477242
FRAGMENT_COUNT: 8
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: bufHdr -> flags
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf_hdr_lock
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: bufHdr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719478018
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (volatile BufferDesc *)arg
  TYPE[0]: CALL
  TOKENIZED[0]: ( volatile VAR1 * ) VAR2
  ORIGINAL[1]: arg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477212
FRAGMENT_COUNT: 13
  ORIGINAL[0]: buf -> tag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf -> refcount != 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 != 0
  ORIGINAL[5]: buf -> refcount
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf -> flags
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: buf -> tag . rnode . spcNode = ((Oid )0)
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 . VAR3 . VAR4 = ( ( VAR5 ) 0 )
  ORIGINAL[9]: buf -> tag
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: tag
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064772896
FRAGMENT_COUNT: 3
  ORIGINAL[0]: LockBuffer(buffer,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640376
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640487
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640520
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771115
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context = fopen(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(filepath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771695
FRAGMENT_COUNT: 13
  ORIGINAL[0]: buf -> refcount == 1 && !(oldFlags & 1 << 0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 1 && ! ( VAR3 & 1 << 0 )
  ORIGINAL[1]: buf -> tag = newTag
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: buf -> tag
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tag
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: newTag
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719477545
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AtEOXact_LocalBuffers(isCommit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: isCommit
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477655
FRAGMENT_COUNT: 7
  ORIGINAL[0]: relation -> rd_smgr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: relation -> rd_smgr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &relation -> rd_smgr
  TYPE[2]: CALL
  TOKENIZED[2]: &relation -> VAR1
  ORIGINAL[3]: relation -> rd_smgr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: relation -> rd_node
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: rd_node
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: relation
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771979
FRAGMENT_COUNT: 16
  ORIGINAL[0]: b = buf -> buf_id
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: buf -> buf_id
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf -> buf_id
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf_id
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: buf
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: buf
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: buf
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 47244640354
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640472
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640519
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064773380
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *out_file = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: *out_file = VAR1
  ORIGINAL[1]: out_file
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: opterr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640295
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640532
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772345
FRAGMENT_COUNT: 3
  ORIGINAL[0]: BufferSync(flags)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: flags
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: CheckpointStats
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640452
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640550
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773108
FRAGMENT_COUNT: 4
  ORIGINAL[0]: bufHdr -> refcount == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 1
  ORIGINAL[1]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock)) = 0
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) ) = 0
  ORIGINAL[2]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) )
  ORIGINAL[3]: (volatile slock_t *)(&bufHdr -> buf_hdr_lock)
  TYPE[3]: CALL
  TOKENIZED[3]: ( volatile VAR1 * ) ( &bufHdr -> VAR2 )

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477589
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: -buffer
  TYPE[1]: CALL
  TOKENIZED[1]: -buffer
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: LocalBufferDescriptors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477331
FRAGMENT_COUNT: 5
  ORIGINAL[0]: PrivateRefCount[b]--
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] --
  ORIGINAL[1]: PrivateRefCount[b]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: PrivateRefCount[b]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: PrivateRefCount
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640541
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640468
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773298
FRAGMENT_COUNT: 8
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: relpathbackend(bufHdr -> tag . rnode,MyBackendId,bufHdr -> tag . forkNum)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 . VAR3 , VAR4 , VAR1 -> VAR2 . VAR5 )
  ORIGINAL[2]: bufHdr -> tag . rnode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: bufHdr -> tag
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr -> tag . forkNum
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: bufHdr -> tag
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: rnode
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: MyBackendId
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640442
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640343
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640546
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771167
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ReadBufferExtended(reln,MAIN_FORKNUM,blockNum,RBM_NORMAL,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: reln
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: MAIN_FORKNUM
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: blockNum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: RBM_NORMAL
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772307
FRAGMENT_COUNT: 3
  ORIGINAL[0]: AbortBufferIO()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: UnlockBuffers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: AtProcExit_LocalBuffers()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 68719477770
FRAGMENT_COUNT: 9
  ORIGINAL[0]: bufHdr -> tag . rnode . relNode == rel -> rd_node . relNode && bufHdr -> tag . rnode . dbNode == rel -> rd_node . dbNode && bufHdr -> tag . rnode . spcNode == rel -> rd_node . spcNode && (bufHdr -> flags) & 1 << 1 && (bufHdr -> flags) & 1 << 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 -> VAR6 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR5 -> VAR6 . VAR7 && VAR1 -> VAR2 . VAR3 . VAR8 == VAR5 -> VAR6 . VAR8 && ( VAR1 -> VAR9 ) & 1 << 1 && ( VAR1 -> VAR9 ) & 1 << 0
  ORIGINAL[1]: bufHdr -> flags
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: bufHdr -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: bufHdr -> buf_id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr -> flags
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf_id
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: LocalBufferBlockPointers
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: bufHdr
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640440
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640370
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640500
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772996
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: &BufferDescriptors[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[2]: BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[3]: buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 1
  ORIGINAL[4]: BufferDescriptors
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477660
FRAGMENT_COUNT: 7
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: bufHdr -> flags
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: BufferDescriptors
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640436
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476977
FRAGMENT_COUNT: 21
  ORIGINAL[0]: &io_time
  TYPE[0]: CALL
  TOKENIZED[0]: &io_time
  ORIGINAL[1]: io_time . tv_sec
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: io_time . tv_usec
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: io_time . tv_usec
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: io_time . tv_usec
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: io_time . tv_sec
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: io_time . tv_sec
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . VAR2
  ORIGINAL[7]: io_time . tv_usec
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 . VAR2
  ORIGINAL[8]: io_time . tv_sec
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 . VAR2
  ORIGINAL[9]: io_time . tv_usec
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 . VAR2
  ORIGINAL[10]: <global> track_io_timing
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: <global> VAR1
  ORIGINAL[11]: io_time
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: io_time
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: io_time
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: io_time
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: io_time
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: io_time
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: io_time
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: io_time
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: io_time
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: io_time
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 68719477582
FRAGMENT_COUNT: 7
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: bufHdr -> tag
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: BufferDescriptors
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772554
FRAGMENT_COUNT: 12
  ORIGINAL[0]: !(bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7 )
  ORIGINAL[1]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode && bufHdr -> tag . forkNum == forkNum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7 && VAR1 -> VAR2 . VAR8 == VAR8
  ORIGINAL[2]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7
  ORIGINAL[3]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6
  ORIGINAL[4]: bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4
  ORIGINAL[5]: bufHdr -> tag . forkNum == forkNum
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3 == VAR3
  ORIGINAL[6]: bufHdr -> tag . forkNum
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: bufHdr -> tag
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: tag
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: forkNum
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: bufHdr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: forkNum
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771159
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *stonesoup_s != (char)0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_s != ( char ) 0
  ORIGINAL[1]: stonesoup_s++
  TYPE[1]: CALL
  TOKENIZED[1]: stonesoup_s++
  ORIGINAL[2]: for (stonesoup_s = stonesoup_shm;*stonesoup_s != (char)0;stonesoup_s++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = VAR2 ; *stonesoup_s != ( char ) 0 ; stonesoup_s++ )
  ORIGINAL[3]: stonesoup_s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640540
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719477566
FRAGMENT_COUNT: 2
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772075
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ResourceOwnerEnlargeBuffers(CurrentResourceOwner)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: CurrentResourceOwner
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: flags
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771204
FRAGMENT_COUNT: 4
  ORIGINAL[0]: errstart(20,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 20 , \
  ORIGINAL[1]: (48 - 48 & 0x3F) + ((65 - 48 & 0x3F) << 6) + ((48 - 48 & 0x3F) << 12) + ((48 - 48 & 0x3F) << 18) + ((48 - 48 & 0x3F) << 24)
  TYPE[1]: CALL
  TOKENIZED[1]: ( 48 - 48 & 0x3F ) + ( ( 65 - 48 & 0x3F ) << 6 ) + ( ( 48 - 48 & 0x3F ) << 12 ) + ( ( 48 - 48 & 0x3F ) << 18 ) + ( ( 48 - 48 & 0x3F ) << 24 )
  ORIGINAL[2]: (48 - 48 & 0x3F) << 24
  TYPE[2]: CALL
  TOKENIZED[2]: ( 48 - 48 & 0x3F ) << 24
  ORIGINAL[3]: 48 - 48 & 0x3F
  TYPE[3]: CALL
  TOKENIZED[3]: 48 - 48 & 0x3F

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 1
  ORIGINAL[0]: LocalRefCount[-buffer - 1] != 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ -buffer - 1 ] != 1

CENTER_NODE: 47244640461
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640536
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772263
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[1]: &bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &bufHdr -> VAR1
  ORIGINAL[2]: s_lock(&bufHdr -> buf_hdr_lock,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &bufHdr -> VAR1 , \
  ORIGINAL[3]: &bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &bufHdr -> VAR1
  ORIGINAL[4]: bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf_hdr_lock
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640276
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477698
FRAGMENT_COUNT: 5
  ORIGINAL[0]: rnode . backend != - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != - 1
  ORIGINAL[1]: rnode . backend
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: rnode . backend
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: backend
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rnode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640480
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477968
FRAGMENT_COUNT: 7
  ORIGINAL[0]: LWLockAcquire(buf -> io_in_progress_lock,LW_EXCLUSIVE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: buf -> io_in_progress_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: !((buf -> flags) & 1 << 3)
  TYPE[4]: CALL
  TOKENIZED[4]: ! ( ( VAR1 -> VAR2 ) & 1 << 3 )
  ORIGINAL[5]: buf_hdr_lock
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064773321
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (char *)((void *)schoolfellow_hayrake)
  TYPE[0]: CALL
  TOKENIZED[0]: ( char * ) ( ( void * ) VAR1 )
  ORIGINAL[1]: (void *)schoolfellow_hayrake
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) VAR1
  ORIGINAL[2]: schoolfellow_hayrake
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477842
FRAGMENT_COUNT: 5
  ORIGINAL[0]: PrivateRefCount[buffer - 1] > 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 - 1 ] > 1
  ORIGINAL[1]: PrivateRefCount[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[2]: PrivateRefCount[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[3]: PrivateRefCount
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

