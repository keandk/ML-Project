# Tokenized code fragments for 152189-v1.0.0-bad
# Total center nodes processed: 99
# Total code fragments found: 527

CENTER_NODE: 68719477108
FRAGMENT_COUNT: 3
  ORIGINAL[0]: se_alloc(len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477376
FRAGMENT_COUNT: 10
  ORIGINAL[0]: key > node -> key32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2 -> VAR3
  ORIGINAL[1]: key > node -> key32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > VAR2 -> VAR3
  ORIGINAL[2]: node -> key32
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: node = node -> parent
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR1 -> VAR2
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: while (node)
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: while ( VAR1 )
  ORIGINAL[6]: key32
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: key
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477067
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ep_alloc(size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478102
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !strbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf
  ORIGINAL[1]: strbuf
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: strbuf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477424
FRAGMENT_COUNT: 3
  ORIGINAL[0]: node -> parent
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: parent
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: node
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772346
FRAGMENT_COUNT: 26
  ORIGINAL[0]: i < cur_key -> length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: cur_key -> length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: !lookup_tree
  TYPE[3]: CALL
  TOKENIZED[3]: !lookup_tree
  ORIGINAL[4]: lookup_tree = se_tree
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = VAR2
  ORIGINAL[5]: lookup_tree = (emem_tree_lookup32(lookup_tree,lookup_key32))
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[6]: emem_tree_lookup32(lookup_tree,lookup_key32)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[7]: !lookup_tree
  TYPE[7]: CALL
  TOKENIZED[7]: !lookup_tree
  ORIGINAL[8]: lookup_key32 = cur_key -> key[i]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[9]: cur_key -> key[i]
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[10]: cur_key -> key
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: length
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: key
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: i
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: cur_key
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: i
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: lookup_tree
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: lookup_tree
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: se_tree
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: lookup_tree
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: lookup_tree
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: lookup_key32
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: lookup_tree
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: lookup_key32
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: cur_key
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: i
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1

CENTER_NODE: 30064772460
FRAGMENT_COUNT: 5
  ORIGINAL[0]: key[0] . length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] . VAR2
  ORIGINAL[1]: key[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: key
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771287
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ep_init_chunk()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: se_init_chunk()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 68719477027
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_scrub_memory(buf,size,!0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , !0 )
  ORIGINAL[1]: buf
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477297
FRAGMENT_COUNT: 2
  ORIGINAL[0]: sizeof(struct _ep_stack_frame_t *)
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( struct VAR1 * )
  ORIGINAL[1]: struct _ep_stack_frame_t
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: struct VAR1

CENTER_NODE: 30064771416
FRAGMENT_COUNT: 34
  ORIGINAL[0]: asize > (mem -> free_list -> amount_free)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > ( VAR2 -> VAR3 -> VAR4 )
  ORIGINAL[1]: mem -> free_list -> amount_free
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: npc = mem -> free_list
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 -> VAR3
  ORIGINAL[3]: mem -> free_list
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: mem -> free_list = mem -> free_list -> next
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 = VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: mem -> free_list
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: mem -> free_list -> next
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[7]: mem -> free_list
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: npc -> next = mem -> used_list
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 = VAR3 -> VAR4
  ORIGINAL[9]: npc -> next
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: mem -> used_list
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: mem -> used_list = npc
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 = VAR3
  ORIGINAL[12]: mem -> used_list
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: !mem -> free_list
  TYPE[13]: CALL
  TOKENIZED[13]: !mem -> VAR1
  ORIGINAL[14]: mem -> free_list
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: free_list
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: free_list
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: free_list
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: next
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: next
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: used_list
  TYPE[20]: FIELD_IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: used_list
  TYPE[21]: FIELD_IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: free_list
  TYPE[22]: FIELD_IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: asize
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: npc
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: mem
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: mem
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: mem
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: npc
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: mem
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: mem
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: npc
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: mem
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: free_list
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1

CENTER_NODE: 47244640285
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ep_packet_mem . debug_verify_pointers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 47244640426
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cur_key = key
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: cur_key -> length > 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 > 0
  ORIGINAL[2]: cur_key++
  TYPE[2]: CALL
  TOKENIZED[2]: cur_key++
  ORIGINAL[3]: for (cur_key = key;cur_key -> length > 0;cur_key++)
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( VAR1 = VAR2 ; VAR1 -> VAR3 > 0 ; cur_key++ )

CENTER_NODE: 30064772666
FRAGMENT_COUNT: 3
  ORIGINAL[0]: strbuf -> len = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 0
  ORIGINAL[1]: strbuf -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: strbuf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477457
FRAGMENT_COUNT: 6
  ORIGINAL[0]: node == parent -> left && parent == grandparent -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 -> VAR3 && VAR2 == VAR4 -> VAR3
  ORIGINAL[1]: grandparent -> left
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: rotate_left(se_tree,grandparent)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: grandparent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: se_tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: grandparent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771572
FRAGMENT_COUNT: 8
  ORIGINAL[0]: i < len && src[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 && VAR3 [ VAR1 ]
  ORIGINAL[1]: dst[i] = src[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = VAR3 [ VAR2 ]
  ORIGINAL[2]: dst[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: src[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]
  ORIGINAL[4]: dst
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: src
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dst
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477401
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !grandparent
  TYPE[0]: CALL
  TOKENIZED[0]: !grandparent
  ORIGINAL[1]: grandparent -> left
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: left
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: grandparent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: parent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: grandparent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771074
FRAGMENT_COUNT: 2
  ORIGINAL[0]: 8 * 2 - 1
  TYPE[0]: CALL
  TOKENIZED[0]: 8 * 2 - 1
  ORIGINAL[1]: 8 * 2
  TYPE[1]: CALL
  TOKENIZED[1]: 8 * 2

CENTER_NODE: 68719477740
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *lookup_tree = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *lookup_tree = ( ( void * ) 0 )
  ORIGINAL[1]: lookup_key32 = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: lookup_key32
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: lookup_key32
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: lookup_key32
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772282
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_tree_create_subtree(se_tree,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: se_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476891
FRAGMENT_COUNT: 10
  ORIGINAL[0]: chunk -> next
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: chunk -> buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: chunk -> free_offset_init
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: chunk -> buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: chunk -> free_offset
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: free_offset_init
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: chunk
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: chunk
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: chunk
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: chunk
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771315
FRAGMENT_COUNT: 4
  ORIGINAL[0]: se_packet_mem . debug_verify_pointers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: emem_verify_pointer((&se_packet_mem),ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &se_packet_mem ) , VAR1 )
  ORIGINAL[2]: &se_packet_mem
  TYPE[2]: CALL
  TOKENIZED[2]: &se_packet_mem
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477233
FRAGMENT_COUNT: 6
  ORIGINAL[0]: g_stpcpy(ptr,s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772527
FRAGMENT_COUNT: 5
  ORIGINAL[0]: key[0] . length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] . VAR2
  ORIGINAL[1]: key[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: length
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: key
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 6
  ORIGINAL[0]: se_packet_mem . debug_verify_pointers = getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = FUN1 ( \
  ORIGINAL[1]: se_packet_mem . debug_verify_pointers
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: debug_verify_pointers
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> se_packet_mem
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> se_packet_mem
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 68719477031
FRAGMENT_COUNT: 3
  ORIGINAL[0]: &se_packet_mem
  TYPE[0]: CALL
  TOKENIZED[0]: &se_packet_mem
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> se_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640282
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (getenv(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 68719477316
FRAGMENT_COUNT: 8
  ORIGINAL[0]: frame -> below
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: frame -> above
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: frame -> payload
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: *stack = frame
  TYPE[3]: CALL
  TOKENIZED[3]: *stack = VAR1
  ORIGINAL[4]: *stack
  TYPE[4]: CALL
  TOKENIZED[4]: *stack
  ORIGINAL[5]: frame
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: frame
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: frame
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772564
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !emem_tree
  TYPE[0]: CALL
  TOKENIZED[0]: !emem_tree
  ORIGINAL[1]: !emem_tree -> tree
  TYPE[1]: CALL
  TOKENIZED[1]: !emem_tree -> VAR1
  ORIGINAL[2]: emem_tree -> tree
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: emem_tree_foreach_nodes(emem_tree -> tree,callback,user_data)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[4]: emem_tree -> tree
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: tree
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: emem_tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: callback
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: user_data
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477929
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_print_subtree(emem_tree,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: emem_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477917
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !emem_tree
  TYPE[0]: CALL
  TOKENIZED[0]: !emem_tree
  ORIGINAL[1]: emem_tree -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: emem_tree -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: emem_tree -> tree
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: emem_tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: emem_tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: emem_tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: emem_tree
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: emem_tree
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477127
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771466
FRAGMENT_COUNT: 4
  ORIGINAL[0]: npc = ((emem_chunk_t *)(g_malloc_n(1,sizeof(emem_chunk_t ))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( VAR2 * ) ( FUN1 ( 1 , sizeof ( VAR2 ) ) ) )
  ORIGINAL[1]: (emem_chunk_t *)(g_malloc_n(1,sizeof(emem_chunk_t )))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( FUN1 ( 1 , sizeof ( VAR1 ) ) )
  ORIGINAL[2]: g_malloc_n(1,sizeof(emem_chunk_t ))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 1 , sizeof ( VAR1 ) )
  ORIGINAL[3]: npc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476896
FRAGMENT_COUNT: 4
  ORIGINAL[0]: emem_verify_pointer_list((hdr -> free_list),ptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 )
  ORIGINAL[1]: hdr -> free_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772256
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tree_list -> tree = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: tree_list -> tree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: tree
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tree_list
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree_list
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tree_list
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tree_list
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771234
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ep_packet_mem . used_list = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: ep_packet_mem . used_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: <global> ep_packet_mem
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719478074
FRAGMENT_COUNT: 8
  ORIGINAL[0]: strbuf -> alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: full_len < add_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: strbuf -> alloc_len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: strbuf -> len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: len
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: strbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640413
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476846
FRAGMENT_COUNT: 12
  ORIGINAL[0]: canary[i] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == '\\0'
  ORIGINAL[1]: memcpy((&ptr),(&canary[i + 1]),sizeof(void *))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &ptr ) , ( &canary [ VAR1 + 1 ] ) , sizeof ( void * ) )
  ORIGINAL[2]: *len = ((i + 1) + sizeof(void *))
  TYPE[2]: CALL
  TOKENIZED[2]: *len = ( ( VAR1 + 1 ) + sizeof ( void * ) )
  ORIGINAL[3]: *len
  TYPE[3]: CALL
  TOKENIZED[3]: *len
  ORIGINAL[4]: (i + 1) + sizeof(void *)
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 + 1 ) + sizeof ( void * )
  ORIGINAL[5]: i + 1
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 + 1
  ORIGINAL[6]: sizeof(void *)
  TYPE[6]: CALL
  TOKENIZED[6]: sizeof ( void * )
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: void
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: void
  ORIGINAL[11]: ptr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771554
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !src
  TYPE[0]: CALL
  TOKENIZED[0]: !src
  ORIGINAL[1]: len = ((guint )(strlen(src)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 ) ( FUN1 ( VAR3 ) ) )
  ORIGINAL[2]: (guint )(strlen(src))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( FUN1 ( VAR2 ) )
  ORIGINAL[3]: strlen(src)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: guint
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771927
FRAGMENT_COUNT: 5
  ORIGINAL[0]: node -> right
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: node -> right -> parent = node
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 = VAR1
  ORIGINAL[2]: node -> right -> parent
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477390
FRAGMENT_COUNT: 6
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_parent(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: parent -> parent
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR1
  ORIGINAL[3]: parent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: parent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: adeps_sweeties = {0}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { 0 }
  ORIGINAL[1]: obliquation_maryly(&adeps_sweeties)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &adeps_sweeties )
  ORIGINAL[2]: obliquation_maryly
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: adeps_sweeties
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477048
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(chunk = mem_chunk -> chunk_list) || chunk -> amount_free < ((guint )(mem_chunk -> item_size))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 = VAR2 -> VAR3 ) || VAR1 -> VAR4 < ( ( VAR5 ) ( VAR2 -> VAR6 ) )
  ORIGINAL[1]: emem_create_chunk(alloc_size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: alloc_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: chunk
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: alloc_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477500
FRAGMENT_COUNT: 5
  ORIGINAL[0]: parent -> u . rb_color == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 == 1
  ORIGINAL[1]: rb_insert_case3(se_tree,node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: node
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: se_tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477101
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772805
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !strbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf
  ORIGINAL[1]: strbuf -> len = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = 0
  ORIGINAL[2]: strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478122
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !strbuf || len >= strbuf -> len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 >= VAR2 -> VAR1
  ORIGINAL[1]: strbuf -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: strbuf -> str[len] = '\\0'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] = '\\0'
  ORIGINAL[3]: strbuf -> len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476936
FRAGMENT_COUNT: 2
  ORIGINAL[0]: sizeof(emem_chunk_t )
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( VAR1 )
  ORIGINAL[1]: emem_chunk_t
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772546
FRAGMENT_COUNT: 12
  ORIGINAL[0]: node -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: emem_tree_foreach_nodes(node -> left,callback,user_data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: node -> left
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: left
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: callback
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: node
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: node
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771087
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: size_dirpath = strlen(ss_tc_root) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(ss_tc_root) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: strlen(ss_tc_root) + strlen(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[4]: size_dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771561
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772801
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_start(ap,format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: strbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640479
FRAGMENT_COUNT: 1
  ORIGINAL[0]: cur_alloc_len < 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 1

CENTER_NODE: 68719477653
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tree_list -> next = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: tree_list -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tree_list -> type
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: type
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tree_list
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree_list
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771129
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_printf_context != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context != stderr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> stonesoup_printf_context
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: stderr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772959
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (key = strtol(optarg, NULL, 10)) < 1000
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 10 ) ) < 1000
  ORIGINAL[1]: key = strtol(optarg, NULL, 10)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 , 10 )
  ORIGINAL[2]: fprintf(stderr, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: errors++
  TYPE[3]: CALL
  TOKENIZED[3]: errors++
  ORIGINAL[4]: break;
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: break ;
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stderr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: errors
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772569
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !node
  TYPE[0]: CALL
  TOKENIZED[0]: !node
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: for (i = 0;i < level;i++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = 0 ; VAR1 < VAR2 ; i++ )
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476855
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pad = (8 - allocation % 8)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( 8 - VAR2 % 8 )
  ORIGINAL[1]: 8 - allocation % 8
  TYPE[1]: CALL
  TOKENIZED[1]: 8 - VAR1 % 8
  ORIGINAL[2]: pad
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pad
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477028
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_alloc(size,&ep_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &ep_packet_mem )
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> ep_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771224
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mem -> debug_use_canary
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: emem_canary_init(mem -> canary)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: mem -> canary
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: mem
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771591
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772849
FRAGMENT_COUNT: 12
  ORIGINAL[0]: copulatively_telethermograph != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: wangles_suspicionable . malasapsap_holloman = ((char *)copulatively_telethermograph)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = ( ( char * ) VAR3 )
  ORIGINAL[2]: wangles_suspicionable . malasapsap_holloman
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: (char *)copulatively_telethermograph
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) VAR1
  ORIGINAL[4]: *cynara_visually = wangles_suspicionable
  TYPE[4]: CALL
  TOKENIZED[4]: *cynara_visually = VAR1
  ORIGINAL[5]: *cynara_visually
  TYPE[5]: CALL
  TOKENIZED[5]: *cynara_visually
  ORIGINAL[6]: malasapsap_holloman
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: copulatively_telethermograph
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: wangles_suspicionable
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: copulatively_telethermograph
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: cynara_visually
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: wangles_suspicionable
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771834
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void *)0
  TYPE[0]: CALL
  TOKENIZED[0]: ( void * ) 0
  ORIGINAL[1]: node
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771798
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ( *stack) -> below
  TYPE[0]: CALL
  TOKENIZED[0]: ( *stack ) -> VAR1
  ORIGINAL[1]: *stack = ( *stack) -> below
  TYPE[1]: CALL
  TOKENIZED[1]: *stack = ( *stack ) -> VAR1
  ORIGINAL[2]: *stack
  TYPE[2]: CALL
  TOKENIZED[2]: *stack
  ORIGINAL[3]: ( *stack) -> below
  TYPE[3]: CALL
  TOKENIZED[3]: ( *stack ) -> VAR1
  ORIGINAL[4]: *stack
  TYPE[4]: CALL
  TOKENIZED[4]: *stack
  ORIGINAL[5]: *stack
  TYPE[5]: CALL
  TOKENIZED[5]: *stack
  ORIGINAL[6]: below
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476945
FRAGMENT_COUNT: 2
  ORIGINAL[0]: g_free(npc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: npc
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476952
FRAGMENT_COUNT: 7
  ORIGINAL[0]: npc -> amount_free
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: npc -> amount_free_init
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: npc -> free_offset = npc -> free_offset_init
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[3]: npc -> free_offset
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: npc -> free_offset_init
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: npc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: npc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640398
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477107
FRAGMENT_COUNT: 5
  ORIGINAL[0]: memcpy(ep_alloc(len),src,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR1 )
  ORIGINAL[1]: ep_alloc(len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 12
  ORIGINAL[0]: !node -> left
  TYPE[0]: CALL
  TOKENIZED[0]: !node -> VAR1
  ORIGINAL[1]: new_node -> parent = node
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: new_node -> parent
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: parent
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: new_node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: new_node
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: new_node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: new_node
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: new_node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: new_node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: new_node
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771547
FRAGMENT_COUNT: 3
  ORIGINAL[0]: memset(se_alloc(size),'\\0',size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , VAR1 )
  ORIGINAL[1]: se_alloc(size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772941
FRAGMENT_COUNT: 8
  ORIGINAL[0]: mockups_crinkliness . malasapsap_holloman != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != 0
  ORIGINAL[1]: mockups_crinkliness . malasapsap_holloman
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: free(((char *)mockups_crinkliness . malasapsap_holloman))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( char * ) VAR1 . VAR2 ) )
  ORIGINAL[3]: (char *)mockups_crinkliness . malasapsap_holloman
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) VAR1 . VAR2
  ORIGINAL[4]: mockups_crinkliness . malasapsap_holloman
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: stonesoup_close_printf_context()
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( )
  ORIGINAL[6]: malasapsap_holloman
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: mockups_crinkliness
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640328
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771596
FRAGMENT_COUNT: 3
  ORIGINAL[0]: __builtin_va_end(ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476929
FRAGMENT_COUNT: 6
  ORIGINAL[0]: offset < size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: *((guint8 *)(buf + offset)) = (scrubbed_value >> 16 & 0xFF)
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( VAR1 * ) ( VAR2 + VAR3 ) ) = ( VAR4 >> 16 & 0xFF )
  ORIGINAL[2]: offset++
  TYPE[2]: CALL
  TOKENIZED[2]: offset++
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771751
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_free_all(&se_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &se_packet_mem )
  ORIGINAL[1]: &se_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &se_packet_mem

CENTER_NODE: 30064771749
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_free_all(&ep_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &ep_packet_mem )
  ORIGINAL[1]: &ep_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &ep_packet_mem

CENTER_NODE: 68719477287
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mem_chunk -> chunk_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: chunk_list
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: chunk_list
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: mem_chunk
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771577
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476829
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < 8 * 2 - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 8 * 2 - 1
  ORIGINAL[1]: canary[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: (guint8 )(g_rand_int_range(rand_state,1,0x100))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( FUN1 ( VAR2 , 1 , 0x100 ) )
  ORIGINAL[3]: guint8
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rand_state
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771820
FRAGMENT_COUNT: 5
  ORIGINAL[0]: se_packet_mem . trees = tree_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = VAR3
  ORIGINAL[1]: se_packet_mem . trees
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: trees
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> se_packet_mem
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: tree_list
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477462
FRAGMENT_COUNT: 8
  ORIGINAL[0]: grandparent = emem_tree_parent(parent)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: !grandparent
  TYPE[1]: CALL
  TOKENIZED[1]: !grandparent
  ORIGINAL[2]: grandparent -> left
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: grandparent -> right
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: grandparent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: grandparent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: grandparent
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: grandparent
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771539
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ptr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: memcpy(ptr,(&mem_chunk -> freed),sizeof(void *))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( &mem_chunk -> VAR2 ) , sizeof ( void * ) )
  ORIGINAL[2]: &mem_chunk -> freed
  TYPE[2]: CALL
  TOKENIZED[2]: &mem_chunk -> VAR1
  ORIGINAL[3]: sizeof(void *)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( void * )
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mem_chunk
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477084
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772005
FRAGMENT_COUNT: 4
  ORIGINAL[0]: uncle = emem_tree_uncle(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_uncle(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: uncle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: uncle
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477987
FRAGMENT_COUNT: 6
  ORIGINAL[0]: strbuf -> alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: alloc_len
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: strbuf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: init
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: init
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477959
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !strbuf || wanted_alloc_len <= strbuf -> alloc_len || strbuf -> alloc_len >= strbuf -> max_alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 <= VAR2 -> VAR3 || VAR2 -> VAR3 >= VAR2 -> VAR4
  ORIGINAL[1]: strbuf -> str = new_str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: strbuf -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: new_str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: new_str
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477998
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !init
  TYPE[0]: CALL
  TOKENIZED[0]: !init
  ORIGINAL[1]: strbuf -> str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: str
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: strbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: full_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478037
FRAGMENT_COUNT: 5
  ORIGINAL[0]: full_len < add_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: strbuf -> len + full_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 + VAR3
  ORIGINAL[2]: strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: full_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: full_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640414
FRAGMENT_COUNT: 1
  ORIGINAL[0]: key == node -> key32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 -> VAR3

CENTER_NODE: 68719477183
FRAGMENT_COUNT: 3
  ORIGINAL[0]: state
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: AT_START
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: splitted
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477502
FRAGMENT_COUNT: 6
  ORIGINAL[0]: emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: node -> u
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771719
FRAGMENT_COUNT: 13
  ORIGINAL[0]: npc -> free_offset - npc -> free_offset_init
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[1]: npc -> free_offset
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: npc -> free_offset_init
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: npc -> free_offset
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: free_offset
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: npc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: use_chunks
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: npc
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: npc
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: npc
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: npc
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: npc
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: npc
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 47244640329
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719477114
FRAGMENT_COUNT: 5
  ORIGINAL[0]: g_printf_string_upper_bound(fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fmt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477141
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dst = se_strdup_vprintf(fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: __builtin_va_end(ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 1
  ORIGINAL[0]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0

CENTER_NODE: 30064772272
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tree_list -> type = parent_tree -> type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3 -> VAR2
  ORIGINAL[1]: tree_list -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: parent_tree -> type
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: type
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: parent_tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: parent_tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771551
FRAGMENT_COUNT: 6
  ORIGINAL[0]: memset(sl_alloc(mem_chunk),'\\0',(mem_chunk -> item_size))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , ( VAR1 -> VAR2 ) )
  ORIGINAL[1]: sl_alloc(mem_chunk)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: mem_chunk -> item_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: item_size
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mem_chunk
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mem_chunk
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

