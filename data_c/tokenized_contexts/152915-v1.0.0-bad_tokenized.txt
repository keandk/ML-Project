# Tokenized code fragments for 152915-v1.0.0-bad
# Total center nodes processed: 89
# Total code fragments found: 280

CENTER_NODE: 47244640437
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773129
FRAGMENT_COUNT: 10
  ORIGINAL[0]: &buf -> buf_hdr_lock
  TYPE[0]: CALL
  TOKENIZED[0]: &buf -> VAR1
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &buf -> VAR1
  ORIGINAL[3]: buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: forInput?(buf -> flags) & 1 << 1 : !((buf -> flags) & 1 << 0)
  TYPE[4]: CALL
  TOKENIZED[4]: forInput? ( VAR1 -> VAR2 ) & 1 << 1 : ! ( ( VAR1 -> VAR2 ) & 1 << 0 )
  ORIGINAL[5]: &buf -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &buf -> VAR1
  ORIGINAL[6]: buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf_hdr_lock
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064772287
FRAGMENT_COUNT: 2
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640547
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640278
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640443
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773023
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bufid < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: PrivateRefCount[bufid] > 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] > 0
  ORIGINAL[2]: PrivateRefCount[bufid]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: (bool )1
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) 1
  ORIGINAL[4]: (bool )0
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 ) 0

CENTER_NODE: 47244640365
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771128
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ReadBufferExtended(reln,MAIN_FORKNUM,blockNum,RBM_NORMAL,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640297
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640473
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771191
FRAGMENT_COUNT: 3
  ORIGINAL[0]: smgropen(rnode,- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , - 1 )
  ORIGINAL[1]: - 1
  TYPE[1]: CALL
  TOKENIZED[1]: - 1
  ORIGINAL[2]: rnode
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477808
FRAGMENT_COUNT: 4
  ORIGINAL[0]: LockBuffer(buffer,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: ReleaseBuffer(buffer)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476740
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mg_vprintf_data((struct mg_connection*) stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( struct mg_connection* ) VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: (struct mg_connection*) stonesoup_printf_context
  TYPE[1]: CALL
  TOKENIZED[1]: ( struct mg_connection* ) VAR1
  ORIGINAL[2]: argptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: argptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640521
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640534
FRAGMENT_COUNT: 1
  ORIGINAL[0]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bufHdr -> VAR1 )

CENTER_NODE: 30064773067
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tas(&buf -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &buf -> VAR1 )
  ORIGINAL[1]: &buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &buf -> VAR1
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &buf -> VAR1
  ORIGINAL[4]: buf -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &buf -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &buf -> VAR1
  ORIGINAL[6]: buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: !(sv_flags & 1 << 3)
  TYPE[7]: CALL
  TOKENIZED[7]: ! ( VAR1 & 1 << 3 )

CENTER_NODE: 47244640327
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772257
FRAGMENT_COUNT: 1
  ORIGINAL[0]: on_shmem_exit(AtProcExit_Buffers,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )

CENTER_NODE: 30064772256
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AtEOXact_LocalBuffers(isCommit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: isCommit
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640445
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640469
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640316
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477068
FRAGMENT_COUNT: 7
  ORIGINAL[0]: oldFlags & 1 << 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 1 << 2
  ORIGINAL[1]: oldHash = BufTableHashCode(&oldTag)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( &oldTag )
  ORIGINAL[2]: oldPartitionLock = ((LWLockId )(FirstBufMappingLock + oldHash % 16))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( VAR2 ) ( VAR3 + VAR4 % 16 ) )
  ORIGINAL[3]: (LWLockId )(FirstBufMappingLock + oldHash % 16)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) ( VAR2 + VAR3 % 16 )
  ORIGINAL[4]: oldPartitionLock
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: LWLockId
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: oldPartitionLock
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640453
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771134
FRAGMENT_COUNT: 15
  ORIGINAL[0]: reln -> rd_smgr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: reln -> rd_smgr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &reln -> rd_smgr
  TYPE[2]: CALL
  TOKENIZED[2]: &reln -> VAR1
  ORIGINAL[3]: reln -> rd_smgr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: reln -> rd_smgr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: rd_smgr
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: reln
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: reln
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: reln
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: reln
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: reln
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: reln
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: reln
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: reln
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: reln
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 30064772852
FRAGMENT_COUNT: 13
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: LocalRefCount[-buffer - 1]++
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ -buffer - 1 ] ++
  ORIGINAL[2]: LocalRefCount[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ -buffer - 1 ]
  ORIGINAL[3]: -buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: -buffer - 1
  ORIGINAL[4]: -buffer
  TYPE[4]: CALL
  TOKENIZED[4]: -buffer
  ORIGINAL[5]: PrivateRefCount[buffer - 1]++
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ VAR2 - 1 ] ++
  ORIGINAL[6]: PrivateRefCount[buffer - 1]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[7]: buffer - 1
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 - 1
  ORIGINAL[8]: buffer
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: LocalRefCount
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buffer
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: PrivateRefCount
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buffer
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719478050
FRAGMENT_COUNT: 4
  ORIGINAL[0]: menderes_saurian != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: (char *)menderes_saurian
  TYPE[1]: CALL
  TOKENIZED[1]: ( char * ) VAR1
  ORIGINAL[2]: menderes_saurian
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: menderes_saurian
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640441
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !isExtend
  TYPE[0]: CALL
  TOKENIZED[0]: !isExtend
  ORIGINAL[1]: bufBlock = (isLocalBuf?LocalBufferBlockPointers[-(bufHdr -> buf_id + 2)] : ((Block )(BufferBlocks + ((Size )(bufHdr -> buf_id)) * 8192)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( isLocalBuf?LocalBufferBlockPointers [ - ( VAR2 -> VAR3 + 2 ) ] : ( ( VAR4 ) ( VAR5 + ( ( VAR6 ) ( VAR2 -> VAR3 ) ) * 8192 ) ) )
  ORIGINAL[2]: isLocalBuf?LocalBufferBlockPointers[-(bufHdr -> buf_id + 2)] : ((Block )(BufferBlocks + ((Size )(bufHdr -> buf_id)) * 8192))
  TYPE[2]: CALL
  TOKENIZED[2]: isLocalBuf?LocalBufferBlockPointers [ - ( VAR1 -> VAR2 + 2 ) ] : ( ( VAR3 ) ( VAR4 + ( ( VAR5 ) ( VAR1 -> VAR2 ) ) * 8192 ) )
  ORIGINAL[3]: LocalBufferBlockPointers[-(bufHdr -> buf_id + 2)]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ - ( VAR2 -> VAR3 + 2 ) ]
  ORIGINAL[4]: (Block )(BufferBlocks + ((Size )(bufHdr -> buf_id)) * 8192)
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 ) ( VAR2 + ( ( VAR3 ) ( VAR4 -> VAR5 ) ) * 8192 )
  ORIGINAL[5]: found
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufBlock
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: isLocalBuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640356
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772259
FRAGMENT_COUNT: 3
  ORIGINAL[0]: AbortBufferIO()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: UnlockBuffers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: AtProcExit_LocalBuffers()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 30064773156
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buf -> flags |= set_flag_bits
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 |= VAR3
  ORIGINAL[1]: buf -> flags
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: set_flag_bits
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772567
FRAGMENT_COUNT: 11
  ORIGINAL[0]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6
  ORIGINAL[1]: bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4
  ORIGINAL[2]: bufHdr -> tag . rnode . spcNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[3]: bufHdr -> tag . rnode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: rnode . node . spcNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2 . VAR3
  ORIGINAL[5]: bufHdr -> tag . rnode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3
  ORIGINAL[6]: bufHdr -> tag . rnode
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: bufHdr -> tag . rnode . spcNode
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[8]: bufHdr -> tag . rnode
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 . VAR3
  ORIGINAL[9]: spcNode
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: rnode
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640542
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640377
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640488
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772938
FRAGMENT_COUNT: 7
  ORIGINAL[0]: mode == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: LWLockAcquire(buf -> content_lock,LW_SHARED)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[2]: buf -> content_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: content_lock
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: LW_SHARED
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772789
FRAGMENT_COUNT: 8
  ORIGINAL[0]: i < NBuffers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: bufHdr -> tag . rnode . dbNode != dbid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 != VAR5
  ORIGINAL[2]: bufHdr -> tag . rnode . dbNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[3]: bufHdr -> tag . rnode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: bufHdr -> tag . rnode . dbNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[5]: bufHdr -> tag . rnode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3
  ORIGINAL[6]: dbNode
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dbid
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064773266
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hot_scungilli != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: wordle_backcourtman = ((char *)(malloc(downhearted_disgress + 1)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( char * ) ( FUN1 ( VAR2 + 1 ) ) )
  ORIGINAL[2]: (char *)(malloc(downhearted_disgress + 1))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) ( FUN1 ( VAR1 + 1 ) )
  ORIGINAL[3]: wordle_backcourtman
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: wordle_backcourtman
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640533
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772317
FRAGMENT_COUNT: 18
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&LocalBufferDescriptors[-buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &LocalBufferDescriptors [ -buffer - 1 ] )
  ORIGINAL[2]: &LocalBufferDescriptors[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &LocalBufferDescriptors [ -buffer - 1 ]
  ORIGINAL[3]: LocalBufferDescriptors[-buffer - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ -buffer - 1 ]
  ORIGINAL[4]: -buffer - 1
  TYPE[4]: CALL
  TOKENIZED[4]: -buffer - 1
  ORIGINAL[5]: -buffer
  TYPE[5]: CALL
  TOKENIZED[5]: -buffer
  ORIGINAL[6]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[7]: &BufferDescriptors[buffer - 1]
  TYPE[7]: CALL
  TOKENIZED[7]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[8]: BufferDescriptors[buffer - 1]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[9]: buffer - 1
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 - 1
  ORIGINAL[10]: buffer
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: bufHdr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: LocalBufferDescriptors
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: buffer
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: bufHdr
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: BufferDescriptors
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: buffer
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: rnode
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 30064771935
FRAGMENT_COUNT: 8
  ORIGINAL[0]: PrivateRefCount[b] == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 0
  ORIGINAL[1]: tas(&buf -> buf_hdr_lock)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &buf -> VAR1 )
  ORIGINAL[2]: &buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &buf -> VAR1
  ORIGINAL[3]: buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: &buf -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: &buf -> VAR1
  ORIGINAL[5]: buf -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &buf -> VAR1
  ORIGINAL[7]: buf -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2

CENTER_NODE: 30064772877
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: 1 << 0 | 1 << 5
  TYPE[1]: CALL
  TOKENIZED[1]: 1 << 0 | 1 << 5
  ORIGINAL[2]: 1 << 0
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << 0
  ORIGINAL[3]: 1 << 5
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 5

CENTER_NODE: 30064771971
FRAGMENT_COUNT: 6
  ORIGINAL[0]: PrivateRefCount[b] == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 0
  ORIGINAL[1]: PrivateRefCount[b]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: buf -> refcount++
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> refcount++
  ORIGINAL[3]: buf -> refcount
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: refcount
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640506
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772450
FRAGMENT_COUNT: 8
  ORIGINAL[0]: relation -> rd_smgr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: smgropen(relation -> rd_node,relation -> rd_backend)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR1 -> VAR3 )
  ORIGINAL[2]: relation -> rd_node
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: relation -> rd_backend
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: rd_node
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: relation
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: relation
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: relation
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477624
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buffer - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BufferDescriptors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772468
FRAGMENT_COUNT: 8
  ORIGINAL[0]: rnode . backend != - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != - 1
  ORIGINAL[1]: rnode . backend
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: rnode . backend == MyBackendId
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 == VAR3
  ORIGINAL[3]: rnode . backend
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: backend
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: rnode
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: MyBackendId
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: rnode
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640556
FRAGMENT_COUNT: 1
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )

CENTER_NODE: 30064772948
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: &BufferDescriptors[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[2]: BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[3]: buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 1
  ORIGINAL[4]: BufferDescriptors
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640501
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477543
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: -buffer
  TYPE[1]: CALL
  TOKENIZED[1]: -buffer
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: LocalBufferDescriptors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477196
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !((((void )((bool )1)) , buffer != 0))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( ( void ) ( ( VAR1 ) 1 ) ) , VAR2 != 0 ) )
  ORIGINAL[1]: elog_start(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __func__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771714
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tas(&buf -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &buf -> VAR1 )
  ORIGINAL[1]: &buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &buf -> VAR1
  ORIGINAL[2]: s_lock(&buf -> buf_hdr_lock,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &buf -> VAR1 , \
  ORIGINAL[3]: &buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &buf -> VAR1
  ORIGINAL[4]: buf -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf -> refcount != 0
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 != 0
  ORIGINAL[6]: buf_hdr_lock
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772213
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &BufferDescriptors[buf_id]
  TYPE[0]: CALL
  TOKENIZED[0]: &BufferDescriptors [ VAR1 ]
  ORIGINAL[1]: BufferDescriptors[buf_id]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: BufferDescriptors
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf_id
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 1
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2

CENTER_NODE: 47244640423
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772041
FRAGMENT_COUNT: 8
  ORIGINAL[0]: buf_id < NBuffers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[2]: &bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &bufHdr -> VAR1
  ORIGINAL[3]: s_lock(&bufHdr -> buf_hdr_lock,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( &bufHdr -> VAR1 , \
  ORIGINAL[4]: &bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: &bufHdr -> VAR1
  ORIGINAL[5]: bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf_hdr_lock
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: bufHdr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640520
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640541
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772825
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (void )((bool )1)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( VAR1 ) 1 )
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640462
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640481
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478062
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stonesoup_exit_flag = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: <global> stonesoup_exit_flag
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: stonesoup_exit_flag
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773309
FRAGMENT_COUNT: 3
  ORIGINAL[0]: hardheaded_folacins(unspiritually_turpis,zealotic_chesterfields)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: unspiritually_turpis
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: zealotic_chesterfields
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640536
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640537
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772760
FRAGMENT_COUNT: 11
  ORIGINAL[0]: rel -> rd_node
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: rel -> rd_node . dbNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: rel -> rd_node . spcNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: bufHdr -> tag . rnode . relNode == rel -> rd_node . relNode && bufHdr -> tag . rnode . dbNode == rel -> rd_node . dbNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 -> VAR6 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR5 -> VAR6 . VAR7
  ORIGINAL[4]: rel -> rd_node . relNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: rel -> rd_node . dbNode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3
  ORIGINAL[6]: rel -> rd_node . spcNode
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: rel -> rd_node
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: rd_node
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: spcNode
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: rel
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640345
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477287
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buf -> buf_id
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: buf_id
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772615
FRAGMENT_COUNT: 8
  ORIGINAL[0]: bufHdr -> tag . rnode . dbNode != dbid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 != VAR5
  ORIGINAL[1]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[2]: &bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &bufHdr -> VAR1
  ORIGINAL[3]: bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: &bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: &bufHdr -> VAR1
  ORIGINAL[5]: bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &bufHdr -> VAR1
  ORIGINAL[7]: bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2

CENTER_NODE: 30064772284
FRAGMENT_COUNT: 7
  ORIGINAL[0]: buf -> tag . rnode
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: buf -> tag
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tag
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: rnode
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476789
FRAGMENT_COUNT: 5
  ORIGINAL[0]: var_len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: &fct_ptr_addr
  TYPE[1]: CALL
  TOKENIZED[1]: &fct_ptr_addr
  ORIGINAL[2]: fct_ptr_addr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fct_ptr_addr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fct_ptr_addr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477996
FRAGMENT_COUNT: 6
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: errcontext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: bufHdr -> tag . blockNum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477537
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CheckpointStats . ckpt_write_t = GetCurrentTimestamp()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: BufferSync(flags)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: flags
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640551
FRAGMENT_COUNT: 0

