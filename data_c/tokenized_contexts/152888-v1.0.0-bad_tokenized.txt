# Tokenized code fragments for 152888-v1.0.0-bad
# Total center nodes processed: 22
# Total code fragments found: 130

CENTER_NODE: 68719476922
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ret = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: ret
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771254
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476827
FRAGMENT_COUNT: 3
  ORIGINAL[0]: options = bits
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> options
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: bits
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771209
FRAGMENT_COUNT: 2
  ORIGINAL[0]: mem_hash(a)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771359
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ret = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: CRYPTO_is_mem_check_on()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: CRYPTO_mem_ctrl(0x3)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 0x3 )
  ORIGINAL[3]: pop_info() != ((void *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ) != ( ( void * ) 0 )
  ORIGINAL[4]: pop_info()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )
  ORIGINAL[5]: (void *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) 0
  ORIGINAL[6]: CRYPTO_mem_ctrl(0x2)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( 0x2 )
  ORIGINAL[7]: ret
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771397
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mh == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: (mh = ((struct lhash_st_MEM *)(lh_new(mem_LHASH_HASH,mem_LHASH_COMP)))) == ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( struct VAR2 * ) ( FUN1 ( VAR3 , VAR4 ) ) ) ) == ( ( void * ) 0 )
  ORIGINAL[2]: m -> num = num
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = VAR2
  ORIGINAL[3]: m -> num
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: num
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> options
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 30064771647
FRAGMENT_COUNT: 3
  ORIGINAL[0]: print_leak_doall_arg(a,b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771718
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ( *cb)(m -> order,m -> file,m -> line,m -> num,m -> addr)
  TYPE[0]: CALL
  TOKENIZED[0]: ( *cb ) ( VAR1 -> VAR2 , VAR1 -> VAR3 , VAR1 -> VAR4 , VAR1 -> VAR5 , VAR1 -> VAR6 )
  ORIGINAL[1]: *cb
  TYPE[1]: CALL
  TOKENIZED[1]: *cb
  ORIGINAL[2]: m -> order
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: m -> file
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: m -> line
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: m -> num
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: m -> addr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2

CENTER_NODE: 30064771511
FRAGMENT_COUNT: 22
  ORIGINAL[0]: CRYPTO_is_mem_check_on()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: mp != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: mp -> addr = addr2
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = VAR3
  ORIGINAL[4]: mp -> addr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: mp -> num = num
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 = VAR2
  ORIGINAL[6]: mp -> num
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: (void )((MEM *)(lh_insert(((_LHASH *)((void *)(1?mh : ((struct lhash_st_MEM *)0)))),((void *)(1?mp : ((MEM *)0))))))
  TYPE[7]: CALL
  TOKENIZED[7]: ( void ) ( ( VAR1 * ) ( FUN1 ( ( ( VAR2 * ) ( ( void * ) ( 1?mh : ( ( struct VAR3 * ) 0 ) ) ) ) , ( ( void * ) ( 1?mp : ( ( VAR1 * ) 0 ) ) ) ) ) )
  ORIGINAL[8]: (MEM *)(lh_insert(((_LHASH *)((void *)(1?mh : ((struct lhash_st_MEM *)0)))),((void *)(1?mp : ((MEM *)0)))))
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 * ) ( FUN1 ( ( ( VAR2 * ) ( ( void * ) ( 1?mh : ( ( struct VAR3 * ) 0 ) ) ) ) , ( ( void * ) ( 1?mp : ( ( VAR1 * ) 0 ) ) ) ) )
  ORIGINAL[9]: lh_insert(((_LHASH *)((void *)(1?mh : ((struct lhash_st_MEM *)0)))),((void *)(1?mp : ((MEM *)0))))
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( ( ( VAR1 * ) ( ( void * ) ( 1?mh : ( ( struct VAR2 * ) 0 ) ) ) ) , ( ( void * ) ( 1?mp : ( ( VAR3 * ) 0 ) ) ) )
  ORIGINAL[10]: (_LHASH *)((void *)(1?mh : ((struct lhash_st_MEM *)0)))
  TYPE[10]: CALL
  TOKENIZED[10]: ( VAR1 * ) ( ( void * ) ( 1?mh : ( ( struct VAR2 * ) 0 ) ) )
  ORIGINAL[11]: (void *)(1?mh : ((struct lhash_st_MEM *)0))
  TYPE[11]: CALL
  TOKENIZED[11]: ( void * ) ( 1?mh : ( ( struct VAR1 * ) 0 ) )
  ORIGINAL[12]: 1?mh : ((struct lhash_st_MEM *)0)
  TYPE[12]: CALL
  TOKENIZED[12]: 1?mh : ( ( struct VAR1 * ) 0 )
  ORIGINAL[13]: (void *)(1?mp : ((MEM *)0))
  TYPE[13]: CALL
  TOKENIZED[13]: ( void * ) ( 1?mp : ( ( VAR1 * ) 0 ) )
  ORIGINAL[14]: 1?mp : ((MEM *)0)
  TYPE[14]: CALL
  TOKENIZED[14]: 1?mp : ( ( VAR1 * ) 0 )
  ORIGINAL[15]: addr
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: num
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: mp
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: mp
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: addr2
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: mp
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: num
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1

CENTER_NODE: 30064771137
FRAGMENT_COUNT: 3
  ORIGINAL[0]: --inf -> references <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: --inf -> VAR1 <= 0
  ORIGINAL[1]: CRYPTO_free(inf)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: inf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476791
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stonesoup_printf_context != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context != stderr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: stderr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477175
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: trace_point
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_trace
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476831
FRAGMENT_COUNT: 3
  ORIGINAL[0]: b -> addr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: addr
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476764
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size_filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771219
FRAGMENT_COUNT: 3
  ORIGINAL[0]: app_info_cmp(a,b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771785
FRAGMENT_COUNT: 2
  ORIGINAL[0]: break_order_num = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: break_order_num
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771214
FRAGMENT_COUNT: 4
  ORIGINAL[0]: CRYPTO_THREADID_cmp(&((const APP_INFO *)a_void) -> threadid,&((const APP_INFO *)b_void) -> threadid)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( & ( ( const VAR1 * ) VAR2 ) -> VAR3 , & ( ( const VAR1 * ) VAR4 ) -> VAR3 )
  ORIGINAL[1]: &((const APP_INFO *)a_void) -> threadid
  TYPE[1]: CALL
  TOKENIZED[1]: & ( ( const VAR1 * ) VAR2 ) -> VAR3
  ORIGINAL[2]: &((const APP_INFO *)b_void) -> threadid
  TYPE[2]: CALL
  TOKENIZED[2]: & ( ( const VAR1 * ) VAR2 ) -> VAR3
  ORIGINAL[3]: ((const APP_INFO *)b_void) -> threadid
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( const VAR1 * ) VAR2 ) -> VAR3

CENTER_NODE: 68719476838
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = ((unsigned long )(a -> addr))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( unsigned long ) ( VAR2 -> VAR3 ) )
  ORIGINAL[1]: (unsigned long )(a -> addr)
  TYPE[1]: CALL
  TOKENIZED[1]: ( unsigned long ) ( VAR1 -> VAR2 )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771194
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771341
FRAGMENT_COUNT: 6
  ORIGINAL[0]: amih == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: (amih = ((struct lhash_st_APP_INFO *)(lh_new(app_info_LHASH_HASH,app_info_LHASH_COMP)))) == ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( struct VAR2 * ) ( FUN1 ( VAR3 , VAR4 ) ) ) ) == ( ( void * ) 0 )
  ORIGINAL[2]: (void *)((1?amih : ((struct lhash_st_APP_INFO *)0)))
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) ( ( 1?amih : ( ( struct VAR1 * ) 0 ) ) )
  ORIGINAL[3]: 1?amih : ((struct lhash_st_APP_INFO *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: 1?amih : ( ( struct VAR1 * ) 0 )
  ORIGINAL[4]: (struct lhash_st_APP_INFO *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( struct VAR1 * ) 0
  ORIGINAL[5]: <global> amih
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 30064771562
FRAGMENT_COUNT: 23
  ORIGINAL[0]: m -> addr == ((char *)(l -> bio))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( char * ) ( VAR3 -> VAR4 ) )
  ORIGINAL[1]: options & 0x2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x2
  ORIGINAL[2]: BIO_snprintf(bufp,sizeof(buf) - ((size_t )(bufp - buf)),\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , sizeof ( VAR2 ) - ( ( VAR3 ) ( VAR1 - VAR2 ) ) , \
  ORIGINAL[3]: sizeof(buf) - ((size_t )(bufp - buf))
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 ) - ( ( VAR2 ) ( VAR3 - VAR1 ) )
  ORIGINAL[4]: sizeof(buf)
  TYPE[4]: CALL
  TOKENIZED[4]: sizeof ( VAR1 )
  ORIGINAL[5]: (size_t )(bufp - buf)
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 ) ( VAR2 - VAR3 )
  ORIGINAL[6]: bufp - buf
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 - VAR2
  ORIGINAL[7]: CRYPTO_THREADID_hash(&m -> threadid)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( &m -> VAR1 )
  ORIGINAL[8]: &m -> threadid
  TYPE[8]: CALL
  TOKENIZED[8]: &m -> VAR1
  ORIGINAL[9]: m -> threadid
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: bufp += strlen(bufp)
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 += FUN1 ( VAR1 )
  ORIGINAL[11]: strlen(bufp)
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( VAR1 )
  ORIGINAL[12]: threadid
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: <global> options
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: <global> VAR1
  ORIGINAL[14]: bufp
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: buf
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: size_t
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: bufp
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: buf
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: m
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: bufp
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: bufp
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: bufp
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1

CENTER_NODE: 68719477147
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

