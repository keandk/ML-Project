# Tokenized code fragments for 501307-v1.0.1-good
# Total center nodes processed: 26
# Total code fragments found: 96

CENTER_NODE: 47244640450
FRAGMENT_COUNT: 1
  ORIGINAL[0]: n >= SIT_MSG_NUM
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= VAR2

CENTER_NODE: 30064772278
FRAGMENT_COUNT: 4
  ORIGINAL[0]: type >= 12 && type <= 200
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 12 && VAR1 <= 200
  ORIGINAL[1]: type >= 12
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 12
  ORIGINAL[2]: type <= 200
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 200
  ORIGINAL[3]: type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772294
FRAGMENT_COUNT: 6
  ORIGINAL[0]: type >= 9 && type <= 240
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 9 && VAR1 <= 240
  ORIGINAL[1]: type >= 241
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 241
  ORIGINAL[2]: val_to_str(type, vs_v2_tstype, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[3]: type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: type
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: vs_v2_tstype
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772390
FRAGMENT_COUNT: 1
  ORIGINAL[0]: { 0,	\
  TYPE[0]: CALL
  TOKENIZED[0]: { 0 , \

CENTER_NODE: 68719477655
FRAGMENT_COUNT: 6
  ORIGINAL[0]: type >= 5 && type <= 127
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 5 && VAR1 <= 127
  ORIGINAL[1]: type >= 128
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 128
  ORIGINAL[2]: type
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: type
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: type
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771515
FRAGMENT_COUNT: 6
  ORIGINAL[0]: aft < 14 || (aft > 14 && aft < 18)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 14 || ( VAR1 > 14 && VAR1 < 18 )
  ORIGINAL[1]: aft < 14
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 14
  ORIGINAL[2]: aft > 14 && aft < 18
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > 14 && VAR1 < 18
  ORIGINAL[3]: aft > 14
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 > 14
  ORIGINAL[4]: aft
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: aft
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476740
FRAGMENT_COUNT: 4
  ORIGINAL[0]: last_cbc[MAX_DIGEST_SIZE]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: last_p1_cbc[MAX_DIGEST_SIZE]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: MAX_DIGEST_SIZE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: MAX_DIGEST_SIZE
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tvb
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477525
FRAGMENT_COUNT: 4
  ORIGINAL[0]: isakmp_version == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: isakmp_version == 2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 2
  ORIGINAL[2]: isakmp_version
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: isakmp_version
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772424
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *num_p = tvb_get_ntohl(tvb, offset)
  TYPE[0]: CALL
  TOKENIZED[0]: *num_p = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: *num_p
  TYPE[1]: CALL
  TOKENIZED[1]: *num_p
  ORIGINAL[2]: tvb_get_ntohl(tvb, offset)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tvb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477509
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (f = getpayload_func(type, isakmp_version)) != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 ) ) != VAR4
  ORIGINAL[1]: isakmp_version == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 1
  ORIGINAL[2]: isakmp_version
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: isakmp_version
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: isakmp_version
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772077
FRAGMENT_COUNT: 3
  ORIGINAL[0]: value = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: att_type
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477883
FRAGMENT_COUNT: 6
  ORIGINAL[0]: {\
  TYPE[0]: CALL
  TOKENIZED[0]: { \
  ORIGINAL[1]: BASE_NONE
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: FT_FRAMENUM
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: BASE_NONE
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: BASE_NONE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477690
FRAGMENT_COUNT: 3
  ORIGINAL[0]: { 0,	NULL }
  TYPE[0]: CALL
  TOKENIZED[0]: { 0 , VAR1 }
  ORIGINAL[1]: NULL
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771526
FRAGMENT_COUNT: 1
  ORIGINAL[0]: { 1,	\
  TYPE[0]: CALL
  TOKENIZED[0]: { 1 , \

CENTER_NODE: 30064771974
FRAGMENT_COUNT: 1
  ORIGINAL[0]: {    24,	\
  TYPE[0]: CALL
  TOKENIZED[0]: { 24 , \

CENTER_NODE: 30064771508
FRAGMENT_COUNT: 5
  ORIGINAL[0]: type < ARLEN(v2_tid_func) && v2_tid_func[type].func != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < FUN1 ( VAR2 ) && VAR2 [ VAR1 ] . VAR3 != VAR4
  ORIGINAL[1]: type < ARLEN(v2_tid_func)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < FUN1 ( VAR2 )
  ORIGINAL[2]: v2_tid_func[type].func != NULL
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ] . VAR3 != VAR4
  ORIGINAL[3]: v2_tid_func[type].func
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772560
FRAGMENT_COUNT: 2
  ORIGINAL[0]: register_init_routine(&isakmp_init_protocol)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &isakmp_init_protocol )
  ORIGINAL[1]: &isakmp_init_protocol
  TYPE[1]: CALL
  TOKENIZED[1]: &isakmp_init_protocol

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 2
  ORIGINAL[0]: iv[MAX_DIGEST_SIZE]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: MAX_DIGEST_SIZE
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771499
FRAGMENT_COUNT: 7
  ORIGINAL[0]: type < ARLEN(v2_tid_func)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < FUN1 ( VAR2 )
  ORIGINAL[1]: v2_tid_func[type].str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[2]: v2_tid_func[type]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: str
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> v2_tid_func
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> v2_tid_func
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: type
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772157
FRAGMENT_COUNT: 1
  ORIGINAL[0]: { 65002,	\
  TYPE[0]: CALL
  TOKENIZED[0]: { 65002 , \

CENTER_NODE: 68719477954
FRAGMENT_COUNT: 4
  ORIGINAL[0]: isakmp_handle = find_dissector(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( \
  ORIGINAL[1]: eap_handle = find_dissector(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( \
  ORIGINAL[2]: find_dissector(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: <global> eap_handle
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 2
  ORIGINAL[0]: secret[MAX_KEY_SIZE]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: MAX_KEY_SIZE
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477308
FRAGMENT_COUNT: 6
  ORIGINAL[0]: memcmp(pVID,  VID_SSH_SENTINEL, isakmp_min(VID_LEN, length)) == 0
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , FUN2 ( VAR3 , VAR4 ) ) == 0
  ORIGINAL[1]: memcmp(pVID,  VID_SSH_SENTINEL_1_1, isakmp_min(VID_LEN, length))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , FUN2 ( VAR3 , VAR4 ) )
  ORIGINAL[2]: isakmp_min(VID_LEN, length)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: pVID
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> VID_SSH_SENTINEL_1_1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477687
FRAGMENT_COUNT: 5
  ORIGINAL[0]: type >= 201
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 201
  ORIGINAL[1]: val_to_str(type, vs_v2_authmeth, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: type
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: vs_v2_authmeth
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640430
FRAGMENT_COUNT: 2
  ORIGINAL[0]: type == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: if (type == 1) return \
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 == 1 ) return \

