# Tokenized code fragments for 153519-v1.0.0-bad
# Total center nodes processed: 49
# Total code fragments found: 129

CENTER_NODE: 30064771676
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *outstr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *outstr == ( ( void * ) 0 )
  ORIGINAL[1]: *outstr = svn_stringbuf_create_empty(pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *outstr = FUN1 ( VAR1 )
  ORIGINAL[2]: *outstr
  TYPE[2]: CALL
  TOKENIZED[2]: *outstr
  ORIGINAL[3]: svn_stringbuf_create_empty(pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: sorted_props
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771708
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !force_interactive && !non_interactive
  TYPE[0]: CALL
  TOKENIZED[0]: !force_interactive && !non_interactive
  ORIGINAL[1]: isatty(0) != 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 0 ) != 0
  ORIGINAL[2]: isatty(0)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 0 )

CENTER_NODE: 68719477227
FRAGMENT_COUNT: 11
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i < sorted_props -> nelts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2 -> VAR3
  ORIGINAL[2]: sorted_props -> nelts
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i++
  TYPE[3]: CALL
  TOKENIZED[3]: i++
  ORIGINAL[4]: !names_only
  TYPE[4]: CALL
  TOKENIZED[4]: !names_only
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: sorted_props
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: out
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771322
FRAGMENT_COUNT: 4
  ORIGINAL[0]: failures == 0 || failures == 0x00000008
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 || VAR1 == 0x00000008
  ORIGINAL[1]: failures == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: failures == 0x00000008
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0x00000008
  ORIGINAL[3]: failures
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640412
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771484
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_xml_is_xml_safe(propval -> data,propval -> len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR1 -> VAR3 )
  ORIGINAL[1]: propval -> data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: propval -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: len
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: propval
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: propval
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: propval
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640355
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771473
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_error_wrap_apr(apr_err,(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( FUN2 ( \
  ORIGINAL[1]: dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477219
FRAGMENT_COUNT: 8
  ORIGINAL[0]: line = next_line(&str,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &str , VAR2 )
  ORIGINAL[1]: svn_stringbuf_appendcstr(out,indent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: svn_stringbuf_appendcstr(out,line)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: out -> data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: out
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: out
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: line
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: out
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771594
FRAGMENT_COUNT: 11
  ORIGINAL[0]: ( *p) != 13 && ( *p) != 10 && ( *p) != '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 13 && ( *p ) != 10 && ( *p ) != '\\0'
  ORIGINAL[1]: ( *p) != 13
  TYPE[1]: CALL
  TOKENIZED[1]: ( *p ) != 13
  ORIGINAL[2]: *p
  TYPE[2]: CALL
  TOKENIZED[2]: *p
  ORIGINAL[3]: *p
  TYPE[3]: CALL
  TOKENIZED[3]: *p
  ORIGINAL[4]: *p
  TYPE[4]: CALL
  TOKENIZED[4]: *p
  ORIGINAL[5]: *p
  TYPE[5]: CALL
  TOKENIZED[5]: *p
  ORIGINAL[6]: p
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: p
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: p
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: p
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: p
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771133
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[8]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 8 ]

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477331
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !e
  TYPE[0]: CALL
  TOKENIZED[0]: !e
  ORIGINAL[1]: cfg = ((config?apr_hash_get(config,\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( config?apr_hash_get ( VAR2 , \
  ORIGINAL[2]: config?apr_hash_get(config,\
  TYPE[2]: CALL
  TOKENIZED[2]: config?apr_hash_get ( VAR1 , \
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: config
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640309
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771115
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context = fopen(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(filepath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476877
FRAGMENT_COUNT: 6
  ORIGINAL[0]: output_encoding == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_utf_cstring_from_utf8_ex2(dest,src,output_encoding,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: dest
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> output_encoding
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476881
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_cmdline_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771204
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !( *env_var)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( *env_var )
  ORIGINAL[1]: env_val = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = \
  ORIGINAL[2]: env_val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: error_stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771123
FRAGMENT_COUNT: 3
  ORIGINAL[0]: va_end(argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640327
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477358
FRAGMENT_COUNT: 4
  ORIGINAL[0]: find_editor_binary(&editor,editor_cmd,config)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &editor , VAR1 , VAR2 )
  ORIGINAL[1]: &editor
  TYPE[1]: CALL
  TOKENIZED[1]: &editor
  ORIGINAL[2]: editor_cmd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: config
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 1
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122

CENTER_NODE: 68719477170
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < config_options -> nelts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: config_options -> nelts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: config_options -> elts
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: elts
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: config_options
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640324
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771940
FRAGMENT_COUNT: 3
  ORIGINAL[0]: * stonesoup_data = 0
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = 0
  ORIGINAL[1]: stonesoup_data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: snatches_phonying
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771375
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *svn_err__temp = svn_auth_get_platform_specific_provider(&provider,\
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( &provider , \
  ORIGINAL[1]: svn_auth_get_platform_specific_provider(&provider,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &provider , \
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476927
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *__errno_location()
  TYPE[0]: CALL
  TOKENIZED[0]: *__errno_location ( )
  ORIGINAL[1]: svn_error_create(SVN_ERR_IO_WRITE_ERROR,((void *)0),((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: SVN_ERR_IO_WRITE_ERROR
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640400
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640397
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771261
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_cmdline_fputs(message,stream,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: message
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771306
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *__errno_location() == 32
  TYPE[0]: CALL
  TOKENIZED[0]: *__errno_location ( ) == 32
  ORIGINAL[1]: svn_error_wrap_apr( *__errno_location(),(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( *__errno_location ( ) , ( FUN2 ( \
  ORIGINAL[2]: *__errno_location()
  TYPE[2]: CALL
  TOKENIZED[2]: *__errno_location ( )
  ORIGINAL[3]: dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \

CENTER_NODE: 68719476893
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_dirent_local_style(src,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477161
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !strchr(config_option -> option,':')
  TYPE[0]: CALL
  TOKENIZED[0]: !strchr ( VAR1 -> VAR2 , ':' )
  ORIGINAL[1]: opt_arg + len - equals_sign
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2 - VAR3
  ORIGINAL[2]: opt_arg + len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2
  ORIGINAL[3]: equals_sign
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: equals_sign
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640418
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640350
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477570
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *edited_contents
  TYPE[0]: CALL
  TOKENIZED[0]: *edited_contents
  ORIGINAL[1]: *edited_contents
  TYPE[1]: CALL
  TOKENIZED[1]: *edited_contents
  ORIGINAL[2]: as_text
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: edited_contents
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640416
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640304
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640302
FRAGMENT_COUNT: 1
  ORIGINAL[0]: pool
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 47244640357
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640362
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640372
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640406
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640370
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476903
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_cmdline_fputs(message,stdout,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: message
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stdout
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 0

