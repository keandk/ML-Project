# Tokenized code fragments for 153223-v1.0.0-bad
# Total center nodes processed: 27
# Total code fragments found: 222

CENTER_NODE: 47244640394
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !ret
  TYPE[0]: CALL
  TOKENIZED[0]: !ret

CENTER_NODE: 30064771520
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (&key -> addr2) -> data
  TYPE[0]: CALL
  TOKENIZED[0]: ( &key -> VAR1 ) -> VAR2
  ORIGINAL[1]: &key -> addr2
  TYPE[1]: CALL
  TOKENIZED[1]: &key -> VAR1
  ORIGINAL[2]: key -> addr2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ADD_ADDRESS_TO_HASH_index < (&key -> addr2) -> len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 < ( &key -> VAR2 ) -> VAR3
  ORIGINAL[4]: (&key -> addr2) -> len
  TYPE[4]: CALL
  TOKENIZED[4]: ( &key -> VAR1 ) -> VAR2
  ORIGINAL[5]: &key -> addr2
  TYPE[5]: CALL
  TOKENIZED[5]: &key -> VAR1
  ORIGINAL[6]: key -> addr2
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: len
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771142
FRAGMENT_COUNT: 11
  ORIGINAL[0]: sscanf(stonesoup_envKey, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0
  ORIGINAL[2]: stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , 0666 )
  ORIGINAL[3]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[4]: stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 )
  ORIGINAL[5]: shmat(stonesoup_shmid, NULL, 0)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , VAR2 , 0 )
  ORIGINAL[6]: (char *) -1
  TYPE[6]: CALL
  TOKENIZED[6]: ( char * ) -1
  ORIGINAL[7]: -1
  TYPE[7]: CALL
  TOKENIZED[7]: -1
  ORIGINAL[8]: stonesoup_shm
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stonesoup_shmid
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: NULL
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719477212
FRAGMENT_COUNT: 11
  ORIGINAL[0]: ((void *)0) == conv -> next
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( void * ) 0 ) == VAR1 -> VAR2
  ORIGINAL[1]: chain_head = conv -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3
  ORIGINAL[2]: conv -> next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: chain_head -> key_ptr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: chain_head
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: conv
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: chain_head
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: chain_head
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: chain_head
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: chain_head
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: chain_head
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719477175
FRAGMENT_COUNT: 8
  ORIGINAL[0]: conv -> key_ptr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: conv -> setup_frame >= chain_tail -> setup_frame
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 >= VAR3 -> VAR2
  ORIGINAL[2]: conv -> setup_frame
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: conv -> next = ((void *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[4]: conv -> next
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: conv -> last
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: last
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: conv
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772275
FRAGMENT_COUNT: 5
  ORIGINAL[0]: conversation -> dissector_handle = handle
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3
  ORIGINAL[1]: conversation -> dissector_handle
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: dissector_handle
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: conversation
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: handle
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477134
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *conv = (conversation_t *)value
  TYPE[0]: CALL
  TOKENIZED[0]: *conv = ( VAR1 * ) VAR2
  ORIGINAL[1]: (conversation_t *)value
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) VAR2
  ORIGINAL[2]: conv -> data_list
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: conv
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: conv
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: conv
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477573
FRAGMENT_COUNT: 8
  ORIGINAL[0]: *ap = (const conv_proto_data *)a
  TYPE[0]: CALL
  TOKENIZED[0]: *ap = ( const VAR1 * ) VAR2
  ORIGINAL[1]: *bp = (const conv_proto_data *)b
  TYPE[1]: CALL
  TOKENIZED[1]: *bp = ( const VAR1 * ) VAR2
  ORIGINAL[2]: (const conv_proto_data *)b
  TYPE[2]: CALL
  TOKENIZED[2]: ( const VAR1 * ) VAR2
  ORIGINAL[3]: bp -> proto
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bp -> proto
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: bp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: bp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477627
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *conv = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *conv = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: conv
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476764
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size_filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477587
FRAGMENT_COUNT: 5
  ORIGINAL[0]: p1 -> proto
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: p1 -> proto_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (gpointer *)p1
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) VAR2
  ORIGINAL[3]: p1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771185
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477694
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[1]: s = shm
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: shm
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771168
FRAGMENT_COUNT: 3
  ORIGINAL[0]: function_found = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: function_found
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771771
FRAGMENT_COUNT: 2
  ORIGINAL[0]: new_index = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: <global> new_index
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064771430
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *key = (const conversation_key *)v
  TYPE[0]: CALL
  TOKENIZED[0]: *key = ( const VAR1 * ) VAR2
  ORIGINAL[1]: (const conversation_key *)v
  TYPE[1]: CALL
  TOKENIZED[1]: ( const VAR1 * ) VAR2
  ORIGINAL[2]: key
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hash_val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772064
FRAGMENT_COUNT: 4
  ORIGINAL[0]: g_hash_table_lookup(hashtable,(&key))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( &key ) )
  ORIGINAL[1]: &key
  TYPE[1]: CALL
  TOKENIZED[1]: &key
  ORIGINAL[2]: hashtable
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771660
FRAGMENT_COUNT: 9
  ORIGINAL[0]: daemons_bellefonte != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: *(classicalities_nonmaliciously - 5) != 0
  TYPE[1]: CALL
  TOKENIZED[1]: * ( VAR1 - 5 ) != 0
  ORIGINAL[2]: *(classicalities_nonmaliciously - 5)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( VAR1 - 5 )
  ORIGINAL[3]: free(((char *)( *(classicalities_nonmaliciously - 5))))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ( ( char * ) ( * ( VAR1 - 5 ) ) ) )
  ORIGINAL[4]: (char *)( *(classicalities_nonmaliciously - 5))
  TYPE[4]: CALL
  TOKENIZED[4]: ( char * ) ( * ( VAR1 - 5 ) )
  ORIGINAL[5]: *(classicalities_nonmaliciously - 5)
  TYPE[5]: CALL
  TOKENIZED[5]: * ( VAR1 - 5 )
  ORIGINAL[6]: classicalities_nonmaliciously - 5
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 - 5
  ORIGINAL[7]: stonesoup_close_printf_context()
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( )
  ORIGINAL[8]: classicalities_nonmaliciously
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771194
FRAGMENT_COUNT: 6
  ORIGINAL[0]: conversation -> options & 0x08 && (conversation -> key_ptr -> ptype) != PT_UDP
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 & 0x08 && ( VAR1 -> VAR3 -> VAR4 ) != VAR5
  ORIGINAL[1]: options = conversation -> options & (~(0x08 | 0x01 | 0x02))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR1 & ( ~ ( 0x08 | 0x01 | 0x02 ) )
  ORIGINAL[2]: conversation -> options & (~(0x08 | 0x01 | 0x02))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 & ( ~ ( 0x08 | 0x01 | 0x02 ) )
  ORIGINAL[3]: conversation -> options
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ~(0x08 | 0x01 | 0x02)
  TYPE[4]: CALL
  TOKENIZED[4]: ~ ( 0x08 | 0x01 | 0x02 )
  ORIGINAL[5]: options
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477607
FRAGMENT_COUNT: 8
  ORIGINAL[0]: conv -> data_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: item -> data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: item -> next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: data
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: item
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: item
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: item
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: item
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772250
FRAGMENT_COUNT: 13
  ORIGINAL[0]: item != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: p1 = ((conv_proto_data *)(item -> data))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( VAR2 * ) ( VAR3 -> VAR4 ) )
  ORIGINAL[3]: (conv_proto_data *)(item -> data)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[4]: item -> data
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: p1 -> proto_data
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: (void *)0
  TYPE[6]: CALL
  TOKENIZED[6]: ( void * ) 0
  ORIGINAL[7]: data
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: proto_data
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: item
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: p1
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: item
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: p1
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719477119
FRAGMENT_COUNT: 14
  ORIGINAL[0]: *v1 = (const conversation_key *)v
  TYPE[0]: CALL
  TOKENIZED[0]: *v1 = ( const VAR1 * ) VAR2
  ORIGINAL[1]: *v2 = (const conversation_key *)w
  TYPE[1]: CALL
  TOKENIZED[1]: *v2 = ( const VAR1 * ) VAR2
  ORIGINAL[2]: (const conversation_key *)w
  TYPE[2]: CALL
  TOKENIZED[2]: ( const VAR1 * ) VAR2
  ORIGINAL[3]: v2 -> ptype
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: v2 -> port1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: v2 -> addr1
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: v2 -> addr1
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: v2 -> addr1
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: v2
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: v2
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: v2
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: v2
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: v2
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: v2
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064771341
FRAGMENT_COUNT: 24
  ORIGINAL[0]: &v1 -> addr2
  TYPE[0]: CALL
  TOKENIZED[0]: &v1 -> VAR1
  ORIGINAL[1]: v1 -> addr2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ((&v1 -> addr2) -> type) == AT_NONE
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( &v1 -> VAR1 ) -> VAR2 ) == VAR3
  ORIGINAL[3]: (&v1 -> addr2) -> type
  TYPE[3]: CALL
  TOKENIZED[3]: ( &v1 -> VAR1 ) -> VAR2
  ORIGINAL[4]: &v1 -> addr2
  TYPE[4]: CALL
  TOKENIZED[4]: &v1 -> VAR1
  ORIGINAL[5]: v1 -> addr2
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: (&v1 -> addr2) -> len
  TYPE[6]: CALL
  TOKENIZED[6]: ( &v1 -> VAR1 ) -> VAR2
  ORIGINAL[7]: &v1 -> addr2
  TYPE[7]: CALL
  TOKENIZED[7]: &v1 -> VAR1
  ORIGINAL[8]: v1 -> addr2
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: &v1 -> addr2
  TYPE[9]: CALL
  TOKENIZED[9]: &v1 -> VAR1
  ORIGINAL[10]: v1 -> addr2
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: &v1 -> addr2
  TYPE[11]: CALL
  TOKENIZED[11]: &v1 -> VAR1
  ORIGINAL[12]: v1 -> addr2
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: &v1 -> addr2
  TYPE[13]: CALL
  TOKENIZED[13]: &v1 -> VAR1
  ORIGINAL[14]: v1 -> addr2
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: &v1 -> addr2
  TYPE[15]: CALL
  TOKENIZED[15]: &v1 -> VAR1
  ORIGINAL[16]: v1 -> addr2
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: &v1 -> addr2
  TYPE[17]: CALL
  TOKENIZED[17]: &v1 -> VAR1
  ORIGINAL[18]: v1 -> addr2
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 -> VAR2
  ORIGINAL[19]: &v1 -> addr2
  TYPE[19]: CALL
  TOKENIZED[19]: &v1 -> VAR1
  ORIGINAL[20]: v1 -> addr2
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 -> VAR2
  ORIGINAL[21]: &v1 -> addr2
  TYPE[21]: CALL
  TOKENIZED[21]: &v1 -> VAR1
  ORIGINAL[22]: v1 -> addr2
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 -> VAR2
  ORIGINAL[23]: len
  TYPE[23]: FIELD_IDENTIFIER
  TOKENIZED[23]: VAR1

CENTER_NODE: 68719476888
FRAGMENT_COUNT: 15
  ORIGINAL[0]: *key = (const conversation_key *)v
  TYPE[0]: CALL
  TOKENIZED[0]: *key = ( const VAR1 * ) VAR2
  ORIGINAL[1]: (const conversation_key *)v
  TYPE[1]: CALL
  TOKENIZED[1]: ( const VAR1 * ) VAR2
  ORIGINAL[2]: key -> addr1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: key -> addr1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: key -> port1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: key -> addr2
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: key -> addr2
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: key -> port2
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: key
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: key
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: key
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: key
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: key
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: key
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: key
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 30064771562
FRAGMENT_COUNT: 20
  ORIGINAL[0]: &v1 -> addr1
  TYPE[0]: CALL
  TOKENIZED[0]: &v1 -> VAR1
  ORIGINAL[1]: v1 -> addr1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &v1 -> addr1
  TYPE[2]: CALL
  TOKENIZED[2]: &v1 -> VAR1
  ORIGINAL[3]: v1 -> addr1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (&v1 -> addr1) -> len == (&v2 -> addr1) -> len
  TYPE[4]: CALL
  TOKENIZED[4]: ( &v1 -> VAR1 ) -> VAR2 == ( &v2 -> VAR1 ) -> VAR2
  ORIGINAL[5]: &v1 -> addr1
  TYPE[5]: CALL
  TOKENIZED[5]: &v1 -> VAR1
  ORIGINAL[6]: v1 -> addr1
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &v1 -> addr1
  TYPE[7]: CALL
  TOKENIZED[7]: &v1 -> VAR1
  ORIGINAL[8]: v1 -> addr1
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: &v1 -> addr1
  TYPE[9]: CALL
  TOKENIZED[9]: &v1 -> VAR1
  ORIGINAL[10]: v1 -> addr1
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: addr1
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: v1
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: v1
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: v1
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: v1
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: v1
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: v1
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: v1
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: v1
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064771933
FRAGMENT_COUNT: 4
  ORIGINAL[0]: new_key -> ptype = ptype
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: new_key -> ptype
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ptype
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: new_key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771489
FRAGMENT_COUNT: 15
  ORIGINAL[0]: &v1 -> addr1
  TYPE[0]: CALL
  TOKENIZED[0]: &v1 -> VAR1
  ORIGINAL[1]: v1 -> addr1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &v1 -> addr1
  TYPE[2]: CALL
  TOKENIZED[2]: &v1 -> VAR1
  ORIGINAL[3]: v1 -> addr1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (&v1 -> addr1) -> len == (&v2 -> addr1) -> len
  TYPE[4]: CALL
  TOKENIZED[4]: ( &v1 -> VAR1 ) -> VAR2 == ( &v2 -> VAR1 ) -> VAR2
  ORIGINAL[5]: &v1 -> addr1
  TYPE[5]: CALL
  TOKENIZED[5]: &v1 -> VAR1
  ORIGINAL[6]: v1 -> addr1
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &v1 -> addr1
  TYPE[7]: CALL
  TOKENIZED[7]: &v1 -> VAR1
  ORIGINAL[8]: v1 -> addr1
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: &v1 -> addr1
  TYPE[9]: CALL
  TOKENIZED[9]: &v1 -> VAR1
  ORIGINAL[10]: v1 -> addr1
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: addr1
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: v1
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: v1
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: v1
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

