# Tokenized code fragments for 153633-v1.0.0-bad
# Total center nodes processed: 89
# Total code fragments found: 265

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772287
FRAGMENT_COUNT: 2
  ORIGINAL[0]: pfree(path)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: path
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477196
FRAGMENT_COUNT: 7
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf_hdr_lock
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bufHdr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477608
FRAGMENT_COUNT: 3
  ORIGINAL[0]: relation -> rd_smgr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: rd_smgr
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: relation
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640484
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640389
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640441
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640439
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772760
FRAGMENT_COUNT: 4
  ORIGINAL[0]: bufHdr -> tag . rnode . relNode == rel -> rd_node . relNode && bufHdr -> tag . rnode . dbNode == rel -> rd_node . dbNode && bufHdr -> tag . rnode . spcNode == rel -> rd_node . spcNode && (bufHdr -> flags) & 1 << 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 -> VAR6 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR5 -> VAR6 . VAR7 && VAR1 -> VAR2 . VAR3 . VAR8 == VAR5 -> VAR6 . VAR8 && ( VAR1 -> VAR9 ) & 1 << 1
  ORIGINAL[1]: (bufHdr -> flags) & 1 << 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 1 << 0
  ORIGINAL[2]: bufHdr -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 1 << 0
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 0

CENTER_NODE: 30064773014
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bufid = GetStartupBufferPinWaitBufId()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( )
  ORIGINAL[1]: GetStartupBufferPinWaitBufId()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: bufid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772251
FRAGMENT_COUNT: 1
  ORIGINAL[0]: on_shmem_exit(AtProcExit_Buffers,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )

CENTER_NODE: 47244640299
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476782
FRAGMENT_COUNT: 4
  ORIGINAL[0]: first_char = buffer_param[0] - 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 [ 0 ] - 97
  ORIGINAL[1]: buffer_param[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: free(buffer_param)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: buffer_param
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640514
FRAGMENT_COUNT: 1
  ORIGINAL[0]: LocalRefCount[-buffer - 1] != 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ -buffer - 1 ] != 1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772208
FRAGMENT_COUNT: 3
  ORIGINAL[0]: result = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: result
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: bufHdr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772877
FRAGMENT_COUNT: 14
  ORIGINAL[0]: ((bufHdr -> flags) & (1 << 0 | 1 << 5)) != (1 << 0 | 1 << 5)
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 -> VAR2 ) & ( 1 << 0 | 1 << 5 ) ) != ( 1 << 0 | 1 << 5 )
  ORIGINAL[1]: &bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &bufHdr -> VAR1
  ORIGINAL[2]: bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &bufHdr -> VAR1
  ORIGINAL[4]: bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &bufHdr -> VAR1
  ORIGINAL[6]: bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf_hdr_lock
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: bufHdr
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: bufHdr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: bufHdr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: bufHdr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: bufHdr
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: bufHdr
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476784
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ReadBufferExtended(reln,MAIN_FORKNUM,blockNum,RBM_NORMAL,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: reln
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: MAIN_FORKNUM
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772567
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !(bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7 )
  ORIGINAL[1]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[2]: &bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &bufHdr -> VAR1
  ORIGINAL[3]: bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: &bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: &bufHdr -> VAR1
  ORIGINAL[5]: bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &bufHdr -> VAR1
  ORIGINAL[7]: bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2

CENTER_NODE: 68719477521
FRAGMENT_COUNT: 2
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772789
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[1]: s_lock(&bufHdr -> buf_hdr_lock,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &bufHdr -> VAR1 , \
  ORIGINAL[2]: &bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &bufHdr -> VAR1

CENTER_NODE: 30064773224
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *bufHdr = (volatile BufferDesc *)arg
  TYPE[0]: CALL
  TOKENIZED[0]: *bufHdr = ( volatile VAR1 * ) VAR2
  ORIGINAL[1]: (volatile BufferDesc *)arg
  TYPE[1]: CALL
  TOKENIZED[1]: ( volatile VAR1 * ) VAR2
  ORIGINAL[2]: bufHdr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640537
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640534
FRAGMENT_COUNT: 1
  ORIGINAL[0]: tas(&buf -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &buf -> VAR1 )

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773091
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !((buf -> flags) & 1 << 3)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) & 1 << 3 )
  ORIGINAL[1]: (buf -> flags) & 1 << 3
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 1 << 3
  ORIGINAL[2]: buf -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 1 << 3
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 3

CENTER_NODE: 68719477068
FRAGMENT_COUNT: 8
  ORIGINAL[0]: oldPartitionLock < newPartitionLock
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: LWLockAcquire(oldPartitionLock,LW_EXCLUSIVE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: oldPartitionLock
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: LW_EXCLUSIVE
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: LW_EXCLUSIVE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: LW_EXCLUSIVE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: LW_EXCLUSIVE
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: LW_EXCLUSIVE
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477531
FRAGMENT_COUNT: 5
  ORIGINAL[0]: CheckpointStats . ckpt_write_t
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: BufferSync(flags)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: CheckpointStats . ckpt_sync_t
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: ckpt_sync_t
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: CheckpointStats
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640367
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772300
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&LocalBufferDescriptors[-buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &LocalBufferDescriptors [ -buffer - 1 ] )
  ORIGINAL[2]: &LocalBufferDescriptors[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &LocalBufferDescriptors [ -buffer - 1 ]
  ORIGINAL[3]: bufHdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772450
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: bufHdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476810
FRAGMENT_COUNT: 4
  ORIGINAL[0]: smgropen(rnode,- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , - 1 )
  ORIGINAL[1]: - 1
  TYPE[1]: CALL
  TOKENIZED[1]: - 1
  ORIGINAL[2]: smgr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: rnode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640323
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064771971
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *((volatile slock_t *)(&buf -> buf_hdr_lock))
  TYPE[0]: CALL
  TOKENIZED[0]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) )
  ORIGINAL[1]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[1]: CALL
  TOKENIZED[1]: ( volatile VAR1 * ) ( &buf -> VAR2 )
  ORIGINAL[2]: &buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &buf -> VAR1

CENTER_NODE: 30064771935
FRAGMENT_COUNT: 12
  ORIGINAL[0]: PrivateRefCount[b] == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 0
  ORIGINAL[1]: buf -> refcount++
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> refcount++
  ORIGINAL[2]: buf -> refcount
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: refcount
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640543
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640502
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772253
FRAGMENT_COUNT: 3
  ORIGINAL[0]: AbortBufferIO()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: UnlockBuffers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: AtProcExit_LocalBuffers()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 47244640383
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477622
FRAGMENT_COUNT: 5
  ORIGINAL[0]: rnode . backend == MyBackendId
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 == VAR3
  ORIGINAL[1]: rnode . backend
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: rnode . node
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: node
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rnode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477681
FRAGMENT_COUNT: 3
  ORIGINAL[0]: i < NBuffers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NBuffers
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773129
FRAGMENT_COUNT: 15
  ORIGINAL[0]: &buf -> buf_hdr_lock
  TYPE[0]: CALL
  TOKENIZED[0]: &buf -> VAR1
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &buf -> VAR1
  ORIGINAL[3]: buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: &buf -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: &buf -> VAR1
  ORIGINAL[5]: buf -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf_hdr_lock
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: buf
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: buf
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 68719477500
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AtEOXact_LocalBuffers(isCommit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: isCommit
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (Block )(BufferBlocks + ((Size )(bufHdr -> buf_id)) * 8192)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( VAR2 + ( ( VAR3 ) ( VAR4 -> VAR5 ) ) * 8192 )
  ORIGINAL[1]: BufferBlocks + ((Size )(bufHdr -> buf_id)) * 8192
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + ( ( VAR2 ) ( VAR3 -> VAR4 ) ) * 8192
  ORIGINAL[2]: ((Size )(bufHdr -> buf_id)) * 8192
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 ) ( VAR2 -> VAR3 ) ) * 8192
  ORIGINAL[3]: isLocalBuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: BufferBlocks
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771714
FRAGMENT_COUNT: 15
  ORIGINAL[0]: !(buf -> tag . rnode . relNode == oldTag . rnode . relNode && buf -> tag . rnode . dbNode == oldTag . rnode . dbNode && buf -> tag . rnode . spcNode == oldTag . rnode . spcNode && buf -> tag . blockNum == oldTag . blockNum && buf -> tag . forkNum == oldTag . forkNum)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 . VAR3 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR5 . VAR3 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR5 . VAR3 . VAR7 && VAR1 -> VAR2 . VAR8 == VAR5 . VAR8 && VAR1 -> VAR2 . VAR9 == VAR5 . VAR9 )
  ORIGINAL[1]: buf -> tag . rnode . relNode == oldTag . rnode . relNode && buf -> tag . rnode . dbNode == oldTag . rnode . dbNode && buf -> tag . rnode . spcNode == oldTag . rnode . spcNode && buf -> tag . blockNum == oldTag . blockNum && buf -> tag . forkNum == oldTag . forkNum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 . VAR3 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR5 . VAR3 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR5 . VAR3 . VAR7 && VAR1 -> VAR2 . VAR8 == VAR5 . VAR8 && VAR1 -> VAR2 . VAR9 == VAR5 . VAR9
  ORIGINAL[2]: *((volatile slock_t *)(&buf -> buf_hdr_lock)) = 0
  TYPE[2]: CALL
  TOKENIZED[2]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) ) = 0
  ORIGINAL[3]: *((volatile slock_t *)(&buf -> buf_hdr_lock))
  TYPE[3]: CALL
  TOKENIZED[3]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) )
  ORIGINAL[4]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[4]: CALL
  TOKENIZED[4]: ( volatile VAR1 * ) ( &buf -> VAR2 )
  ORIGINAL[5]: &buf -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &buf -> VAR1
  ORIGINAL[6]: buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: LWLockRelease(oldPartitionLock)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 )
  ORIGINAL[8]: buf -> refcount != 0
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 != 0
  ORIGINAL[9]: buf -> refcount
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: buf_hdr_lock
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: refcount
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: oldPartitionLock
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: buf
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 30064772938
FRAGMENT_COUNT: 15
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1
  ORIGINAL[2]: buf = (&BufferDescriptors[buffer - 1])
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[3]: &BufferDescriptors[buffer - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[4]: BufferDescriptors[buffer - 1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[5]: buffer - 1
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 - 1
  ORIGINAL[6]: LWLockConditionalAcquire(buf -> content_lock,LW_EXCLUSIVE)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[7]: buf -> content_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: content_lock
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buffer
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: BufferDescriptors
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buffer
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: buf
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: LW_EXCLUSIVE
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 47244640433
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476740
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mg_vprintf_data((struct mg_connection*) stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( struct mg_connection* ) VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: (struct mg_connection*) stonesoup_printf_context
  TYPE[1]: CALL
  TOKENIZED[1]: ( struct mg_connection* ) VAR1
  ORIGINAL[2]: argptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: argptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640458
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640532
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640556
FRAGMENT_COUNT: 1
  ORIGINAL[0]: stonesoup_buffer == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0

CENTER_NODE: 47244640373
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640341
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640533
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772842
FRAGMENT_COUNT: 3
  ORIGINAL[0]: LockBuffer(buffer,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477287
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PrivateRefCount[b]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: PrivateRefCount
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640547
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773052
FRAGMENT_COUNT: 2
  ORIGINAL[0]: bufHdr -> refcount == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 1
  ORIGINAL[1]: (bool )1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 1

CENTER_NODE: 30064772852
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: PrivateRefCount[buffer - 1]++
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 - 1 ] ++
  ORIGINAL[2]: PrivateRefCount[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[3]: buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 1
  ORIGINAL[4]: PrivateRefCount
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773266
FRAGMENT_COUNT: 4
  ORIGINAL[0]: GREYING_CHAIRWOMAN(coefficacy_bedwell)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: northerners_yowie((lickspittle_eroding)coefficacy_bedwell)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 ) VAR2 )
  ORIGINAL[2]: (lickspittle_eroding)coefficacy_bedwell
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2
  ORIGINAL[3]: coefficacy_bedwell
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771108
FRAGMENT_COUNT: 5
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: *stonesoup_server = mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_server = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: stonesoup_server
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772825
FRAGMENT_COUNT: 20
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: LocalRefCount[-buffer - 1]--
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ -buffer - 1 ] --
  ORIGINAL[2]: LocalRefCount[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ -buffer - 1 ]
  ORIGINAL[3]: -buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: -buffer - 1
  ORIGINAL[4]: -buffer
  TYPE[4]: CALL
  TOKENIZED[4]: -buffer
  ORIGINAL[5]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[6]: &BufferDescriptors[buffer - 1]
  TYPE[6]: CALL
  TOKENIZED[6]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[7]: BufferDescriptors[buffer - 1]
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[8]: buffer - 1
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 - 1
  ORIGINAL[9]: PrivateRefCount[buffer - 1] > 1
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 [ VAR2 - 1 ] > 1
  ORIGINAL[10]: PrivateRefCount[buffer - 1]
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[11]: buffer - 1
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 - 1
  ORIGINAL[12]: buffer
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: LocalRefCount
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: buffer
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: bufHdr
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: BufferDescriptors
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buffer
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: PrivateRefCount
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: buffer
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064772924
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buf = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: BufferDescriptors[buffer - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477984
FRAGMENT_COUNT: 6
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: *path = relpathbackend(bufHdr -> tag . rnode,MyBackendId,bufHdr -> tag . forkNum)
  TYPE[1]: CALL
  TOKENIZED[1]: *path = FUN1 ( VAR1 -> VAR2 . VAR3 , VAR4 , VAR1 -> VAR2 . VAR5 )
  ORIGINAL[2]: relpathbackend(bufHdr -> tag . rnode,MyBackendId,bufHdr -> tag . forkNum)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 . VAR3 , VAR4 , VAR1 -> VAR2 . VAR5 )
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771134
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (reln -> rd_rel -> relpersistence) == 't'
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 -> VAR3 ) == 't'
  ORIGINAL[1]: reln -> rd_rel -> relpersistence
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: reln -> rd_rel
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: reln -> rd_rel -> relpersistence
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: reln -> rd_rel
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: relpersistence
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640516
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064772041
FRAGMENT_COUNT: 11
  ORIGINAL[0]: buf_id < NBuffers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: ((bufHdr -> flags) & mask) == mask
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 -> VAR2 ) & VAR3 ) == VAR3
  ORIGINAL[2]: (bufHdr -> flags) & mask
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) & VAR3
  ORIGINAL[3]: bufHdr -> flags |= 1 << 7
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 |= 1 << 7
  ORIGINAL[4]: bufHdr -> flags
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: 1 << 7
  TYPE[5]: CALL
  TOKENIZED[5]: 1 << 7
  ORIGINAL[6]: num_to_write++
  TYPE[6]: CALL
  TOKENIZED[6]: num_to_write++
  ORIGINAL[7]: flags
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: mask
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: bufHdr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: num_to_write
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640469
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640437
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772317
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: bufHdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rnode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640465
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640477
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640449
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640538
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477992
FRAGMENT_COUNT: 3
  ORIGINAL[0]: yarvis_semigravel = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: ++stonesoup_global_variable
  TYPE[1]: CALL
  TOKENIZED[1]: ++stonesoup_global_variable
  ORIGINAL[2]: <global> stonesoup_global_variable
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640497
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640259
FRAGMENT_COUNT: 1
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2

CENTER_NODE: 47244640529
FRAGMENT_COUNT: 0

