# Tokenized code fragments for 152369-v1.0.0-bad
# Total center nodes processed: 71
# Total code fragments found: 255

CENTER_NODE: 47244640340
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476849
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ref -> buf
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ref -> perms
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ref -> pts
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ref -> pos
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ref
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ref
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771270
FRAGMENT_COUNT: 3
  ORIGINAL[0]: 3 << 16 | 42 << 8
  TYPE[0]: CALL
  TOKENIZED[0]: 3 << 16 | 42 << 8
  ORIGINAL[1]: 3 << 16
  TYPE[1]: CALL
  TOKENIZED[1]: 3 << 16
  ORIGINAL[2]: 42 << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 42 << 8

CENTER_NODE: 30064772118
FRAGMENT_COUNT: 3
  ORIGINAL[0]: pads[pad_idx] . type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[1]: pads[pad_idx]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: type
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771852
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &registered_avfilters[0]
  TYPE[0]: CALL
  TOKENIZED[0]: &registered_avfilters [ 0 ]
  ORIGINAL[1]: registered_avfilters[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: filter
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> registered_avfilters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771561
FRAGMENT_COUNT: 2
  ORIGINAL[0]: link -> src -> nb_inputs != 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 != 1
  ORIGINAL[1]: - 22
  TYPE[1]: CALL
  TOKENIZED[1]: - 22

CENTER_NODE: 68719477451
FRAGMENT_COUNT: 13
  ORIGINAL[0]: link -> srcpad
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: link -> dstpad
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: link -> dst
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: link -> w
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: link -> h
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: out -> pts
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: link -> time_base
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: link -> dst
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: time_base
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: link
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: link
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: cmd
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: link
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064772305
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640416
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771263
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(103 >= 100)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( 103 >= 100 )
  ORIGINAL[1]: 103 >= 100
  TYPE[1]: CALL
  TOKENIZED[1]: 103 >= 100
  ORIGINAL[2]: av_log(((void *)0),0,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( void * ) 0 ) , 0 , \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: abort()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )

CENTER_NODE: 30064771784
FRAGMENT_COUNT: 3
  ORIGINAL[0]: pts == ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( VAR2 ) 0x8000000000000000UL )
  ORIGINAL[1]: (int64_t )0x8000000000000000UL
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[2]: pts
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477608
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = filter_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640282
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640289
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477144
FRAGMENT_COUNT: 20
  ORIGINAL[0]: ff_tlog_link(((void *)0),link,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , VAR1 , 1 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: link -> srcpad
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: link -> srcpad
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: link -> src
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: link -> src
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: link -> partial_buf
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: link -> partial_buf
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: link
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: link
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: link
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: link
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: link
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: link
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: link
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: link
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: link
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: link
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: link
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: link
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064772308
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064771804
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !strcmp(cmd,\
  TYPE[0]: CALL
  TOKENIZED[0]: !strcmp ( VAR1 , \
  ORIGINAL[1]: filter -> filter -> process_command
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[2]: filter -> filter
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR1
  ORIGINAL[3]: filter
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: process_command
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filter
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477300
FRAGMENT_COUNT: 15
  ORIGINAL[0]: ret -> av_class
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ret -> filter
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ret -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ret -> priv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ret -> nb_inputs
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: ret -> input_pads
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: ret -> nb_inputs
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: ret -> inputs
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: ret -> nb_outputs
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: ret -> nb_outputs
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: sizeof(AVFilterPad )
  TYPE[10]: CALL
  TOKENIZED[10]: sizeof ( VAR1 )
  ORIGINAL[11]: ret -> nb_outputs
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: nb_outputs
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: ret
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: ret
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 30064771702
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064771847
FRAGMENT_COUNT: 6
  ORIGINAL[0]: next_registered_avfilter_idx == 256
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 256
  ORIGINAL[1]: registered_avfilters[next_registered_avfilter_idx++] = filter
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ next_registered_avfilter_idx++ ] = VAR2
  ORIGINAL[2]: registered_avfilters[next_registered_avfilter_idx++]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ next_registered_avfilter_idx++ ]
  ORIGINAL[3]: next_registered_avfilter_idx++
  TYPE[3]: CALL
  TOKENIZED[3]: next_registered_avfilter_idx++
  ORIGINAL[4]: <global> registered_avfilters
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: filter
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771300
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *c = filter -> command_queue
  TYPE[0]: CALL
  TOKENIZED[0]: *c = VAR1 -> VAR2
  ORIGINAL[1]: filter -> command_queue
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: command_queue
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filter
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filter
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477607
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = filter_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 5
  ORIGINAL[0]: nonvanishing_tetterwort != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: ((unsigned long )blemish_syzygy) * watchdogs_panguingue * watchdogs_panguingue
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( unsigned long ) VAR1 ) * VAR2 * VAR2
  ORIGINAL[2]: ((unsigned long )blemish_syzygy) * watchdogs_panguingue
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( unsigned long ) VAR1 ) * VAR2
  ORIGINAL[3]: watchdogs_panguingue
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: watchdogs_panguingue
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772117
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pads[pad_idx] . name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[1]: pads[pad_idx]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pads
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pad_idx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477207
FRAGMENT_COUNT: 4
  ORIGINAL[0]: registered_avfilters[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: registered_avfilters[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: <global> registered_avfilters
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640338
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772341
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (link -> type) == AVMEDIA_TYPE_AUDIO && link -> min_samples && (link -> partial_buf || frame -> audio -> nb_samples < link -> min_samples || frame -> audio -> nb_samples > link -> max_samples)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == VAR3 && VAR1 -> VAR4 && ( VAR1 -> VAR5 || VAR6 -> VAR7 -> VAR8 < VAR1 -> VAR4 || VAR6 -> VAR7 -> VAR8 > VAR1 -> VAR9 )
  ORIGINAL[1]: ff_filter_frame_needs_framing(link,frame)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: link
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: frame
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477606
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .category = AV_CLASS_CATEGORY_FILTER
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: category
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: AV_CLASS_CATEGORY_FILTER
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640339
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771297
FRAGMENT_COUNT: 3
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: sizeof(\
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( \

CENTER_NODE: 68719477258
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *filter_ptr
  TYPE[0]: CALL
  TOKENIZED[0]: *filter_ptr
  ORIGINAL[1]: filter_ptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: filter_ptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: prev
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filter_ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640414
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771452
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !( *link)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( *link )
  ORIGINAL[1]: *link
  TYPE[1]: CALL
  TOKENIZED[1]: *link
  ORIGINAL[2]: *link
  TYPE[2]: CALL
  TOKENIZED[2]: *link
  ORIGINAL[3]: *link
  TYPE[3]: CALL
  TOKENIZED[3]: *link
  ORIGINAL[4]: *link
  TYPE[4]: CALL
  TOKENIZED[4]: *link
  ORIGINAL[5]: link
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: link
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: link
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: link
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: link
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771197
FRAGMENT_COUNT: 3
  ORIGINAL[0]: perms & 0x1?\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x1?\
  ORIGINAL[1]: perms & 0x1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x1
  ORIGINAL[2]: perms
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640285
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771187
FRAGMENT_COUNT: 12
  ORIGINAL[0]: src[i] != '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] != '\\0'
  ORIGINAL[1]: src[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: src[i] == '|'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ] == '|'
  ORIGINAL[3]: src[i] == '&'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] == '&'
  ORIGINAL[4]: src[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ]
  ORIGINAL[5]: i == 0 || src[i-1] != '\\\\'
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[6]: i == 0
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 == 0
  ORIGINAL[7]: i++
  TYPE[7]: CALL
  TOKENIZED[7]: i++
  ORIGINAL[8]: src
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: i
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640334
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476945
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i <  *count
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < *count
  ORIGINAL[1]: links[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: links
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771208
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buf[16]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 16 ]
  ORIGINAL[1]: buf[16]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 16 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477603
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .item_name = default_filter_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772121
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ff_filter_frame(link -> dst -> outputs[0],frame)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 -> VAR3 [ 0 ] , VAR4 )
  ORIGINAL[1]: link -> dst -> outputs[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 [ 0 ]
  ORIGINAL[2]: link -> dst -> outputs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: frame
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477247
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *ctx = obj
  TYPE[0]: CALL
  TOKENIZED[0]: *ctx = VAR1
  ORIGINAL[1]: !prev
  TYPE[1]: CALL
  TOKENIZED[1]: !prev
  ORIGINAL[2]: prev
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640359
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771866
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ctx -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ctx -> filter -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: ctx -> filter
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: filter
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: name
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477234
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !pads
  TYPE[0]: CALL
  TOKENIZED[0]: !pads
  ORIGINAL[1]: pads
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pads
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pads
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640415
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771463
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> channels
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: channels
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: link
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640335
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640287
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640337
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477173
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !link -> src -> inputs[i]
  TYPE[0]: CALL
  TOKENIZED[0]: !link -> VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: val = ff_poll_frame(link -> src -> inputs[i])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 -> VAR3 -> VAR4 [ VAR5 ] )
  ORIGINAL[2]: ff_poll_frame(link -> src -> inputs[i])
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 -> VAR3 [ VAR4 ] )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: link
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: val
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772374
FRAGMENT_COUNT: 6
  ORIGINAL[0]: isValid(gonadotrope_spay) == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) == 1
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: variable_buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_command_buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_trace
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772387
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: chiropodical_testify
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772400
FRAGMENT_COUNT: 4
  ORIGINAL[0]: 52 << 16 | 18 << 8 | 100
  TYPE[0]: CALL
  TOKENIZED[0]: 52 << 16 | 18 << 8 | 100
  ORIGINAL[1]: 52 << 16 | 18 << 8
  TYPE[1]: CALL
  TOKENIZED[1]: 52 << 16 | 18 << 8
  ORIGINAL[2]: 52 << 16
  TYPE[2]: CALL
  TOKENIZED[2]: 52 << 16
  ORIGINAL[3]: 18 << 8
  TYPE[3]: CALL
  TOKENIZED[3]: 18 << 8

CENTER_NODE: 30064771854
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memset(registered_avfilters,0,sizeof(registered_avfilters))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , sizeof ( VAR1 ) )
  ORIGINAL[1]: sizeof(registered_avfilters)
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: <global> registered_avfilters
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> registered_avfilters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !filter
  TYPE[0]: CALL
  TOKENIZED[0]: !filter
  ORIGINAL[1]: av_freep((&filter -> name))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &filter -> VAR1 ) )
  ORIGINAL[2]: &filter -> name
  TYPE[2]: CALL
  TOKENIZED[2]: &filter -> VAR1
  ORIGINAL[3]: filter -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2

CENTER_NODE: 68719476964
FRAGMENT_COUNT: 5
  ORIGINAL[0]: src -> nb_outputs
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: src -> output_pads[srcpad] . type != dst -> input_pads[dstpad] . type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] . VAR4 != VAR5 -> VAR6 [ VAR7 ] . VAR4
  ORIGINAL[2]: src -> output_pads
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: output_pads
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771464
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> closed = closed
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: link -> closed
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: closed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476798
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *src
  TYPE[0]: CALL
  TOKENIZED[0]: *src
  ORIGINAL[1]: a = src[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 [ 1 ]
  ORIGINAL[2]: src[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ]
  ORIGINAL[3]: src[2]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 2 ]
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: src
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477007
FRAGMENT_COUNT: 6
  ORIGINAL[0]: link -> dstpad
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: av_log((link -> dst),40,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 -> VAR2 ) , 40 , \
  ORIGINAL[2]: link -> dst
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: link -> dst
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dst
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: link
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772271
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !pbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !pbuf
  ORIGINAL[1]: !pbuf
  TYPE[1]: CALL
  TOKENIZED[1]: !pbuf
  ORIGINAL[2]: nb_samples = (insamples > link -> partial_buf_size - pbuf -> audio -> nb_samples?link -> partial_buf_size - pbuf -> audio -> nb_samples : insamples)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( VAR2 > VAR3 -> VAR4 - VAR5 -> VAR6 -> nb_samples?link -> VAR4 - VAR5 -> VAR6 -> VAR1 : VAR2 )
  ORIGINAL[3]: insamples > link -> partial_buf_size - pbuf -> audio -> nb_samples?link -> partial_buf_size - pbuf -> audio -> nb_samples : insamples
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 > VAR2 -> VAR3 - VAR4 -> VAR5 -> nb_samples?link -> VAR3 - VAR4 -> VAR5 -> VAR6 : VAR1
  ORIGINAL[4]: nb_samples
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477118
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (link -> type) == AVMEDIA_TYPE_VIDEO
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == VAR3
  ORIGINAL[1]: link -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: AVMEDIA_TYPE_VIDEO
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772114
FRAGMENT_COUNT: 6
  ORIGINAL[0]: filter -> filter -> init
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[1]: (filter -> filter -> init)(filter,args)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR1 -> VAR2 ) ( VAR1 , VAR3 )
  ORIGINAL[2]: filter -> filter -> init
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[3]: filter -> filter
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR1
  ORIGINAL[4]: init
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filter
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

