# Tokenized code fragments for 153605-v1.0.0-bad
# Total center nodes processed: 22
# Total code fragments found: 101

CENTER_NODE: 68719476875
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771359
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CRYPTO_is_mem_check_on()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: CRYPTO_mem_ctrl(0x2)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 0x2 )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771345
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ret = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: CRYPTO_is_mem_check_on()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: CRYPTO_mem_ctrl(0x3)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 0x3 )
  ORIGINAL[3]: ret = pop_info() != ((void *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( ) != ( ( void * ) 0 )
  ORIGINAL[4]: pop_info() != ((void *)0)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( ) != ( ( void * ) 0 )
  ORIGINAL[5]: pop_info()
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( )
  ORIGINAL[6]: (void *)0
  TYPE[6]: CALL
  TOKENIZED[6]: ( void * ) 0
  ORIGINAL[7]: CRYPTO_mem_ctrl(0x2)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( 0x2 )
  ORIGINAL[8]: ret
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ret
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771223
FRAGMENT_COUNT: 3
  ORIGINAL[0]: app_info_cmp(a,b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771562
FRAGMENT_COUNT: 6
  ORIGINAL[0]: options & 0x2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x2
  ORIGINAL[1]: BIO_snprintf(bufp,sizeof(buf) - ((size_t )(bufp - buf)),\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( VAR2 ) - ( ( VAR3 ) ( VAR1 - VAR2 ) ) , \
  ORIGINAL[2]: sizeof(buf) - ((size_t )(bufp - buf))
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 ) - ( ( VAR2 ) ( VAR3 - VAR1 ) )
  ORIGINAL[3]: CRYPTO_THREADID_hash(&m -> threadid)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( &m -> VAR1 )
  ORIGINAL[4]: &m -> threadid
  TYPE[4]: CALL
  TOKENIZED[4]: &m -> VAR1
  ORIGINAL[5]: bufp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771194
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((const char *)(a -> addr)) - ((const char *)(b -> addr))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( const char * ) ( VAR1 -> VAR2 ) ) - ( ( const char * ) ( VAR3 -> VAR2 ) )
  ORIGINAL[1]: (const char *)(a -> addr)
  TYPE[1]: CALL
  TOKENIZED[1]: ( const char * ) ( VAR1 -> VAR2 )
  ORIGINAL[2]: a -> addr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (const char *)(b -> addr)
  TYPE[3]: CALL
  TOKENIZED[3]: ( const char * ) ( VAR1 -> VAR2 )

CENTER_NODE: 30064771341
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (amim = ((APP_INFO *)(lh_insert(((_LHASH *)((void *)((1?amih : ((struct lhash_st_APP_INFO *)0))))),((void *)((1?ami : ((APP_INFO *)0)))))))) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = ( ( VAR2 * ) ( FUN1 ( ( ( VAR3 * ) ( ( void * ) ( ( 1?amih : ( ( struct VAR4 * ) 0 ) ) ) ) ) , ( ( void * ) ( ( 1?ami : ( ( VAR2 * ) 0 ) ) ) ) ) ) ) ) != ( ( void * ) 0 )
  ORIGINAL[1]: ami -> next = amim
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: ami -> next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: amim
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771639
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477175
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_file_desc > -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > -1
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: trace_point
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: trace_point
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: trace_point
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771137
FRAGMENT_COUNT: 9
  ORIGINAL[0]: --inf -> references <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: --inf -> VAR1 <= 0
  ORIGINAL[1]: inf -> next != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[2]: inf -> next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: inf -> next
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: next
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: inf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: inf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: inf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476764
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size_filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476831
FRAGMENT_COUNT: 3
  ORIGINAL[0]: options = bits
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> options
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: bits
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771397
FRAGMENT_COUNT: 5
  ORIGINAL[0]: options & 0x2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x2
  ORIGINAL[1]: memset((&m -> threadid),0,sizeof(m -> threadid))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &m -> VAR1 ) , 0 , sizeof ( VAR2 -> VAR1 ) )
  ORIGINAL[2]: &m -> threadid
  TYPE[2]: CALL
  TOKENIZED[2]: &m -> VAR1
  ORIGINAL[3]: sizeof(m -> threadid)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 -> VAR2 )
  ORIGINAL[4]: <global> order
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 30064771718
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ( *cb)(m -> order,m -> file,m -> line,m -> num,m -> addr)
  TYPE[0]: CALL
  TOKENIZED[0]: ( *cb ) ( VAR1 -> VAR2 , VAR1 -> VAR3 , VAR1 -> VAR4 , VAR1 -> VAR5 , VAR1 -> VAR6 )
  ORIGINAL[1]: m -> order
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: m -> file
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: m -> line
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: m -> num
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: m -> addr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: addr
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: m
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771511
FRAGMENT_COUNT: 3
  ORIGINAL[0]: mp != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: (void )((MEM *)(lh_insert(((_LHASH *)((void *)(1?mh : ((struct lhash_st_MEM *)0)))),((void *)(1?mp : ((MEM *)0))))))
  TYPE[1]: CALL
  TOKENIZED[1]: ( void ) ( ( VAR1 * ) ( FUN1 ( ( ( VAR2 * ) ( ( void * ) ( 1?mh : ( ( struct VAR3 * ) 0 ) ) ) ) , ( ( void * ) ( 1?mp : ( ( VAR1 * ) 0 ) ) ) ) ) )
  ORIGINAL[2]: (MEM *)(lh_insert(((_LHASH *)((void *)(1?mh : ((struct lhash_st_MEM *)0)))),((void *)(1?mp : ((MEM *)0)))))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) ( FUN1 ( ( ( VAR2 * ) ( ( void * ) ( 1?mh : ( ( struct VAR3 * ) 0 ) ) ) ) , ( ( void * ) ( 1?mp : ( ( VAR1 * ) 0 ) ) ) ) )

CENTER_NODE: 30064771785
FRAGMENT_COUNT: 2
  ORIGINAL[0]: break_order_num = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: break_order_num
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771214
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CRYPTO_THREADID_cmp(&((const APP_INFO *)a_void) -> threadid,&((const APP_INFO *)b_void) -> threadid)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( & ( ( const VAR1 * ) VAR2 ) -> VAR3 , & ( ( const VAR1 * ) VAR4 ) -> VAR3 )
  ORIGINAL[1]: &((const APP_INFO *)a_void) -> threadid
  TYPE[1]: CALL
  TOKENIZED[1]: & ( ( const VAR1 * ) VAR2 ) -> VAR3
  ORIGINAL[2]: &((const APP_INFO *)b_void) -> threadid
  TYPE[2]: CALL
  TOKENIZED[2]: & ( ( const VAR1 * ) VAR2 ) -> VAR3

CENTER_NODE: 68719476838
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: *b = arg2
  TYPE[1]: CALL
  TOKENIZED[1]: *b = VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771212
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477146
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771210
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ret * 17851 + (ret >> 14) * 7 + (ret >> 4) * 251
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 * 17851 + ( VAR1 >> 14 ) * 7 + ( VAR1 >> 4 ) * 251
  ORIGINAL[1]: (ret >> 4) * 251
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 >> 4 ) * 251
  ORIGINAL[2]: ret >> 4
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >> 4

