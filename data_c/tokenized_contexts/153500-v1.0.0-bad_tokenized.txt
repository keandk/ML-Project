# Tokenized code fragments for 153500-v1.0.0-bad
# Total center nodes processed: 82
# Total code fragments found: 380

CENTER_NODE: 68719478280
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: overhear_chak = ((char *)((char *)inversable_orinasality))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( char * ) ( ( char * ) VAR2 ) )
  ORIGINAL[2]: (char *)((char *)inversable_orinasality)
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) ( ( char * ) VAR1 )
  ORIGINAL[3]: overhear_chak
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: overhear_chak
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640485
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477714
FRAGMENT_COUNT: 4
  ORIGINAL[0]: canonicalize(type_relpath,relpath,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640428
FRAGMENT_COUNT: 1
  ORIGINAL[0]: root_len > len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !dirent
  TYPE[0]: CALL
  TOKENIZED[0]: !dirent
  ORIGINAL[1]: dirent[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477441
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len == dirent_root_length(dirent,len)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == FUN1 ( VAR2 , VAR1 )
  ORIGINAL[1]: apr_pstrmemdup(pool,dirent,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772928
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fspath[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47
  ORIGINAL[1]: relpath_is_canonical(fspath + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 + 1 )
  ORIGINAL[2]: fspath + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: fspath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640450
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ( *ptr) == 47
  TYPE[0]: CALL
  TOKENIZED[0]: ( *ptr ) == 47

CENTER_NODE: 47244640508
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772213
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_uri_is_canonical(parent_uri,((void *)0))?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_uri_is_canonical(parent_uri,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: (void )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void ) 0

CENTER_NODE: 30064772056
FRAGMENT_COUNT: 8
  ORIGINAL[0]: start > 0 && relpath[start - 1] != 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0 && VAR2 [ VAR1 - 1 ] != 47
  ORIGINAL[1]: start > 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 0
  ORIGINAL[2]: relpath[start - 1] != 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ] != 47
  ORIGINAL[3]: relpath[start - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[4]: start - 1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 - 1
  ORIGINAL[5]: start
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: relpath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: start
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640561
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772847
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *under_root = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *under_root = 0
  ORIGINAL[1]: *under_root
  TYPE[1]: CALL
  TOKENIZED[1]: *under_root
  ORIGINAL[2]: result_path
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476738
FRAGMENT_COUNT: 3
  ORIGINAL[0]: type_dirent=1
  TYPE[0]: CALL
  TOKENIZED[0]: type_dirent=1
  ORIGINAL[1]: type_relpath=2
  TYPE[1]: CALL
  TOKENIZED[1]: type_relpath=2
  ORIGINAL[2]: type_relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773002
FRAGMENT_COUNT: 6
  ORIGINAL[0]: relpath[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: result = apr_pstrdup(result_pool,fspath)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[2]: apr_pstrdup(result_pool,fspath)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: fspath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771233
FRAGMENT_COUNT: 7
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: dirent_root_length(dirent,len + 1) == len + 1
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 + 1 ) == VAR2 + 1
  ORIGINAL[2]: dirent_root_length(dirent,len + 1)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 + 1 )
  ORIGINAL[3]: len + 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 + 1
  ORIGINAL[4]: len + 1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 + 1
  ORIGINAL[5]: dirent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771868
FRAGMENT_COUNT: 7
  ORIGINAL[0]: dirent[blen] = 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] = 47
  ORIGINAL[1]: dirent[blen]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: add_separator
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: blen
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dirent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dirent
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640442
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772880
FRAGMENT_COUNT: 5
  ORIGINAL[0]: strncmp(url,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: hostname = url + 7
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 + 7
  ORIGINAL[2]: url + 7
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 7
  ORIGINAL[3]: hostname
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: url
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476897
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: --len
  TYPE[1]: CALL
  TOKENIZED[1]: --len
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478004
FRAGMENT_COUNT: 5
  ORIGINAL[0]: targets -> nelts <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 <= 0
  ORIGINAL[1]: svn_uri_canonicalize(((const char **)(targets -> elts))[0],scratch_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( const char ** ) ( VAR1 -> VAR2 ) ) [ 0 ] , VAR3 )
  ORIGINAL[2]: ((const char **)(targets -> elts))[0]
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( const char ** ) ( VAR1 -> VAR2 ) ) [ 0 ]
  ORIGINAL[3]: scratch_pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: scratch_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640503
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477749
FRAGMENT_COUNT: 2
  ORIGINAL[0]: relpath_is_canonical(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772956
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_fspath__is_canonical(fspath)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_fspath__is_canonical(fspath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: __assert_fail(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: <global> __PRETTY_FUNCTION__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719477711
FRAGMENT_COUNT: 4
  ORIGINAL[0]: canonicalize(type_uri,uri,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772300
FRAGMENT_COUNT: 5
  ORIGINAL[0]: seglen == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: ( *seg) == 46
  TYPE[1]: CALL
  TOKENIZED[1]: ( *seg ) == 46
  ORIGINAL[2]: *seg
  TYPE[2]: CALL
  TOKENIZED[2]: *seg
  ORIGINAL[3]: seg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: seg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772036
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *dirpath = (svn_dirent_dirname(dirent,pool))
  TYPE[0]: CALL
  TOKENIZED[0]: *dirpath = ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[1]: *dirpath
  TYPE[1]: CALL
  TOKENIZED[1]: *dirpath
  ORIGINAL[2]: svn_dirent_dirname(dirent,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476911
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: len > root_length && uri[i] != 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > VAR2 && VAR3 [ VAR4 ] != 47
  ORIGINAL[2]: len > root_length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > VAR2
  ORIGINAL[3]: root_length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: root_length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772487
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ( *ptr) == 37
  TYPE[0]: CALL
  TOKENIZED[0]: ( *ptr ) == 37
  ORIGINAL[1]: (( *(ptr + 1)) < 48 || ( *(ptr + 1)) > '9') && (( *(ptr + 1)) < 65 || ( *(ptr + 1)) > 'F')
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( * ( VAR1 + 1 ) ) < 48 || ( * ( VAR1 + 1 ) ) > '9' ) && ( ( * ( VAR1 + 1 ) ) < 65 || ( * ( VAR1 + 1 ) ) > 'F' )
  ORIGINAL[2]: ( *(ptr + 1)) < 48 || ( *(ptr + 1)) > '9'
  TYPE[2]: CALL
  TOKENIZED[2]: ( * ( VAR1 + 1 ) ) < 48 || ( * ( VAR1 + 1 ) ) > '9'
  ORIGINAL[3]: ( *(ptr + 1)) < 48
  TYPE[3]: CALL
  TOKENIZED[3]: ( * ( VAR1 + 1 ) ) < 48
  ORIGINAL[4]: ( *(ptr + 1)) > '9'
  TYPE[4]: CALL
  TOKENIZED[4]: ( * ( VAR1 + 1 ) ) > '9'
  ORIGINAL[5]: ( *(ptr + 1)) < 65 || ( *(ptr + 1)) > 'F'
  TYPE[5]: CALL
  TOKENIZED[5]: ( * ( VAR1 + 1 ) ) < 65 || ( * ( VAR1 + 1 ) ) > 'F'
  ORIGINAL[6]: ( *(ptr + 1)) < 65
  TYPE[6]: CALL
  TOKENIZED[6]: ( * ( VAR1 + 1 ) ) < 65
  ORIGINAL[7]: *(ptr + 1)
  TYPE[7]: CALL
  TOKENIZED[7]: * ( VAR1 + 1 )
  ORIGINAL[8]: ptr + 1
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 + 1
  ORIGINAL[9]: ptr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719476852
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c < 65 || c > 'Z'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 65 || VAR1 > 'Z'
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771115
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath * sizeof(char)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 * sizeof ( char )
  ORIGINAL[2]: sizeof(char)
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( char )
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: char
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: char

CENTER_NODE: 68719477607
FRAGMENT_COUNT: 3
  ORIGINAL[0]: is_child(type_dirent,parent_dirent,child_dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: type_dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: parent_dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476877
FRAGMENT_COUNT: 8
  ORIGINAL[0]: uri[i] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 47
  ORIGINAL[1]: i > 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 0
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772942
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_fspath__is_canonical(parent_fspath)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_fspath__is_canonical(parent_fspath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: __assert_fail(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: child_fspath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477532
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len = strlen(uri)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: svn_uri_is_canonical(uri,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[2]: uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771824
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: dirent[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: dirent[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_uri_is_root(uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: apr_pstrmemdup(pool,uri,uri_previous_segment(uri,len))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , FUN2 ( VAR2 , VAR3 ) )
  ORIGINAL[2]: uri_previous_segment(uri,len)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640572
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476797
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97
  ORIGINAL[1]: c <= 122
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 122
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477415
FRAGMENT_COUNT: 7
  ORIGINAL[0]: clen == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: apr_pmemdup(pool,base,blen + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 + 1 )
  ORIGINAL[2]: blen + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: base
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: base
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: blen
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772938
FRAGMENT_COUNT: 3
  ORIGINAL[0]: len == 1 && fspath[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: len == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 1
  ORIGINAL[2]: fspath[0] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 47

CENTER_NODE: 30064772240
FRAGMENT_COUNT: 3
  ORIGINAL[0]: uri_skip_ancestor(parent_uri,child_uri) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 ) != ( ( void * ) 0 )
  ORIGINAL[1]: uri_skip_ancestor(parent_uri,child_uri)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771819
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_relpath_canonicalize(internal_style(relpath,pool),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , VAR2 ) , VAR2 )
  ORIGINAL[1]: internal_style(relpath,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478323
FRAGMENT_COUNT: 3
  ORIGINAL[0]: nonvindication_polson = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: <global> nonvindication_polson
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: nonvindication_polson
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772281
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *dst = canonicalize(type_dirent,dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *dst = FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: canonicalize(type_dirent,dirent,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dst
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477582
FRAGMENT_COUNT: 6
  ORIGINAL[0]: uri1[i] != uri2[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] != VAR3 [ VAR2 ]
  ORIGINAL[1]: uri1[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: uri1[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: uri1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uri1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640379
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 68719477212
FRAGMENT_COUNT: 4
  ORIGINAL[0]: type == type_uri
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: type == type_dirent
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == VAR2
  ORIGINAL[2]: type
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: type_dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478210
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_fspath__is_canonical(fspath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: fspath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fspath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772070
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *dirpath = (svn_relpath_dirname(relpath,pool))
  TYPE[0]: CALL
  TOKENIZED[0]: *dirpath = ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[1]: *dirpath
  TYPE[1]: CALL
  TOKENIZED[1]: *dirpath
  ORIGINAL[2]: svn_relpath_dirname(relpath,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: relpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477549
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *dirpath
  TYPE[0]: CALL
  TOKENIZED[0]: *dirpath
  ORIGINAL[1]: dirpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771828
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_uri_is_canonical(uri,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064772263
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_dirent_is_absolute(relative) && svn_dirent_is_canonical(relative,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) && FUN2 ( VAR1 , VAR2 )
  ORIGINAL[1]: !svn_path_is_backpath_present(relative)
  TYPE[1]: CALL
  TOKENIZED[1]: !svn_path_is_backpath_present ( VAR1 )
  ORIGINAL[2]: svn_path_is_backpath_present(relative)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: relative
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477256
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dirent[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: dirent[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476977
FRAGMENT_COUNT: 64
  ORIGINAL[0]: ( *src) == '['
  TYPE[0]: CALL
  TOKENIZED[0]: ( *src ) == ' [ '
  ORIGINAL[1]: *src
  TYPE[1]: CALL
  TOKENIZED[1]: *src
  ORIGINAL[2]: *(dst++)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( dst++ )
  ORIGINAL[3]: src++
  TYPE[3]: CALL
  TOKENIZED[3]: src++
  ORIGINAL[4]: src[1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 1 ]
  ORIGINAL[5]: src[2]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ 2 ]
  ORIGINAL[6]: src[3]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ 3 ]
  ORIGINAL[7]: src[3]
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 [ 3 ]
  ORIGINAL[8]: src[1]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 [ 1 ]
  ORIGINAL[9]: src[2]
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 [ 2 ]
  ORIGINAL[10]: src[3]
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 [ 3 ]
  ORIGINAL[11]: src[4]
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 [ 4 ]
  ORIGINAL[12]: src[4]
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 [ 4 ]
  ORIGINAL[13]: src[1]
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 [ 1 ]
  ORIGINAL[14]: src[2]
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 [ 2 ]
  ORIGINAL[15]: src[3]
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 [ 3 ]
  ORIGINAL[16]: src[4]
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 [ 4 ]
  ORIGINAL[17]: src[5]
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 [ 5 ]
  ORIGINAL[18]: src[5]
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 [ 5 ]
  ORIGINAL[19]: src[1]
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 [ 1 ]
  ORIGINAL[20]: src[1]
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 [ 1 ]
  ORIGINAL[21]: src
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: src
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: src
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: src
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: src
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: src
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: src
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: src
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: src
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: src
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: src
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: src
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: src
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: src
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: src
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: src
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: src
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: src
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: src
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: src
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: src
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: src
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: src
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: src
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: src
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: src
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: src
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: VAR1
  ORIGINAL[48]: src
  TYPE[48]: IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: src
  TYPE[49]: IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: src
  TYPE[50]: IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: src
  TYPE[51]: IDENTIFIER
  TOKENIZED[51]: VAR1
  ORIGINAL[52]: src
  TYPE[52]: IDENTIFIER
  TOKENIZED[52]: VAR1
  ORIGINAL[53]: src
  TYPE[53]: IDENTIFIER
  TOKENIZED[53]: VAR1
  ORIGINAL[54]: src
  TYPE[54]: IDENTIFIER
  TOKENIZED[54]: VAR1
  ORIGINAL[55]: src
  TYPE[55]: IDENTIFIER
  TOKENIZED[55]: VAR1
  ORIGINAL[56]: src
  TYPE[56]: IDENTIFIER
  TOKENIZED[56]: VAR1
  ORIGINAL[57]: src
  TYPE[57]: IDENTIFIER
  TOKENIZED[57]: VAR1
  ORIGINAL[58]: src
  TYPE[58]: IDENTIFIER
  TOKENIZED[58]: VAR1
  ORIGINAL[59]: src
  TYPE[59]: IDENTIFIER
  TOKENIZED[59]: VAR1
  ORIGINAL[60]: src
  TYPE[60]: IDENTIFIER
  TOKENIZED[60]: VAR1
  ORIGINAL[61]: src
  TYPE[61]: IDENTIFIER
  TOKENIZED[61]: VAR1
  ORIGINAL[62]: src
  TYPE[62]: IDENTIFIER
  TOKENIZED[62]: VAR1
  ORIGINAL[63]: src
  TYPE[63]: IDENTIFIER
  TOKENIZED[63]: VAR1

CENTER_NODE: 68719478272
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_path_is_url(uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: svn_path_uri_encode(uri,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640453
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771940
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: s[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: ++nargs < base_arg
  TYPE[2]: CALL
  TOKENIZED[2]: ++nargs < VAR1
  ORIGINAL[3]: ++nargs
  TYPE[3]: CALL
  TOKENIZED[3]: ++nargs
  ORIGINAL[4]: continue;
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: continue ;
  ORIGINAL[5]: nargs
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: base_arg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477968
FRAGMENT_COUNT: 8
  ORIGINAL[0]: removed[j]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: removed[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: strcmp(abs_targets_i, *pcommon) == 0 && !removed[i]
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , *pcommon ) == 0 && !removed [ VAR2 ]
  ORIGINAL[3]: removed[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]
  ORIGINAL[4]: removed[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ]
  ORIGINAL[5]: removed
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: removed
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640440
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719478248
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_fspath__is_canonical(fspath1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: fspath1
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fspath1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477560
FRAGMENT_COUNT: 4
  ORIGINAL[0]: get_longest_ancestor_length(type_dirent,dirent1,dirent2,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: dirent1
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirent2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477570
FRAGMENT_COUNT: 5
  ORIGINAL[0]: get_longest_ancestor_length(type_relpath,relpath1,relpath2,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: relpath2
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: relpath1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relpath2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772230
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *result = uri_skip_ancestor(parent_uri,child_uri)
  TYPE[0]: CALL
  TOKENIZED[0]: *result = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: uri_skip_ancestor(parent_uri,child_uri)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640448
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477669
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_dirent_skip_ancestor(parent_dirent,child_dirent)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: parent_dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: child_dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772929
FRAGMENT_COUNT: 10
  ORIGINAL[0]: fspath[0] == 47 && fspath[1] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47 && VAR1 [ 1 ] == '\\0'
  ORIGINAL[1]: fspath[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: fspath[1] == '\\0'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ] == '\\0'
  ORIGINAL[3]: apr_pstrcat(pool,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , \
  ORIGINAL[4]: svn_relpath_canonicalize(fspath,pool)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: (char *)((void *)0)
  TYPE[5]: CALL
  TOKENIZED[5]: ( char * ) ( ( void * ) 0 )
  ORIGINAL[6]: (void *)0
  TYPE[6]: CALL
  TOKENIZED[6]: ( void * ) 0
  ORIGINAL[7]: pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: fspath
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pool
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719478226
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *base_name
  TYPE[0]: CALL
  TOKENIZED[0]: *base_name
  ORIGINAL[1]: base_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: base_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: base_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640563
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772920
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *url = (apr_pstrcat(pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: *url = ( FUN1 ( VAR1 , \
  ORIGINAL[1]: *url
  TYPE[1]: CALL
  TOKENIZED[1]: *url
  ORIGINAL[2]: apr_pstrcat(pool,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: url
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477252
FRAGMENT_COUNT: 3
  ORIGINAL[0]: internal_style(dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772202
FRAGMENT_COUNT: 8
  ORIGINAL[0]: 0 != strncmp(parent_relpath,child_relpath,len)
  TYPE[0]: CALL
  TOKENIZED[0]: 0 != FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: child_relpath[len] == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] == 0
  ORIGINAL[2]: child_relpath[len]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: child_relpath[len]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]
  ORIGINAL[4]: child_relpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: child_relpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: child_relpath
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640438
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !dirent
  TYPE[0]: CALL
  TOKENIZED[0]: !dirent

CENTER_NODE: 30064771221
FRAGMENT_COUNT: 3
  ORIGINAL[0]: len >= 1 && dirent[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: len >= 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 1
  ORIGINAL[2]: dirent[0] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 47

CENTER_NODE: 68719478275
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: sanctioning_slammakin(lesli_newfanglement)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: lesli_newfanglement
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477449
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !pool
  TYPE[0]: CALL
  TOKENIZED[0]: !pool
  ORIGINAL[1]: svn_dirent_is_canonical(dirent,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dirent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771759
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i == path2_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: i == path2_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == VAR2
  ORIGINAL[2]: i == path1_len && i == path2_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == VAR2 && VAR1 == VAR3
  ORIGINAL[3]: i == path1_len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == VAR2
  ORIGINAL[4]: i == path2_len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == VAR2
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: path2_len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772043
FRAGMENT_COUNT: 6
  ORIGINAL[0]: relpath_is_canonical(relpath)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: relpath_is_canonical(relpath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: __assert_fail(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: relpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> __PRETTY_FUNCTION__
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 0

