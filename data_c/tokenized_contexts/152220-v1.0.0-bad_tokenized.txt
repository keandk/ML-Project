# Tokenized code fragments for 152220-v1.0.0-bad
# Total center nodes processed: 72
# Total code fragments found: 276

CENTER_NODE: 68719477556
FRAGMENT_COUNT: 8
  ORIGINAL[0]: link -> type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: link -> min_samples
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: link -> partial_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: frame -> audio -> nb_samples
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: link -> min_samples
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: min_samples
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: link
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: link
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477383
FRAGMENT_COUNT: 15
  ORIGINAL[0]: filter -> nb_inputs
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: filter -> nb_outputs
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: filter -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: filter -> input_pads
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: filter -> output_pads
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: filter -> inputs
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: filter -> outputs
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: filter -> priv
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: filter -> command_queue
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: ff_command_queue_pop(filter)
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 )
  ORIGINAL[10]: filter
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: filter
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: filter
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: filter
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: filter
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *stonesoup_tainted_buff != 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_tainted_buff != 0
  ORIGINAL[1]: fread(*stonesoup_tainted_buff,1,stonesoup_lsize,stonesoup_tainted_file)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( *stonesoup_tainted_buff , 1 , VAR1 , VAR2 )
  ORIGINAL[2]: *stonesoup_tainted_buff
  TYPE[2]: CALL
  TOKENIZED[2]: *stonesoup_tainted_buff
  ORIGINAL[3]: stonesoup_lsize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_lsize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_lsize
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640340
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772302
FRAGMENT_COUNT: 19
  ORIGINAL[0]: !pbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !pbuf
  ORIGINAL[1]: link -> partial_buf_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !pbuf
  TYPE[2]: CALL
  TOKENIZED[2]: !pbuf
  ORIGINAL[3]: link -> partial_buf_size - pbuf -> audio -> nb_samples
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 - VAR3 -> VAR4 -> VAR5
  ORIGINAL[4]: link -> partial_buf_size
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: pbuf -> audio -> nb_samples
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[6]: link -> partial_buf_size
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: partial_buf_size
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: link
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: link
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: link
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: link
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: link
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: pbuf
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: link
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: link
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: link
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: link
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: link
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 68719477625
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .category = AV_CLASS_CATEGORY_FILTER
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: category
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: AV_CLASS_CATEGORY_FILTER
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640364
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771308
FRAGMENT_COUNT: 3
  ORIGINAL[0]: 3 << 16 | 42 << 8
  TYPE[0]: CALL
  TOKENIZED[0]: 3 << 16 | 42 << 8
  ORIGINAL[1]: 3 << 16
  TYPE[1]: CALL
  TOKENIZED[1]: 3 << 16
  ORIGINAL[2]: 42 << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 42 << 8

CENTER_NODE: 30064771124
FRAGMENT_COUNT: 2
  ORIGINAL[0]: fflush(stonesoup_printf_context)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_freep((&c -> command))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( &c -> VAR1 ) )
  ORIGINAL[1]: &c -> command
  TYPE[1]: CALL
  TOKENIZED[1]: &c -> VAR1
  ORIGINAL[2]: filter
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771247
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buf[16]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 16 ]
  ORIGINAL[1]: buf[16]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 16 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477304
FRAGMENT_COUNT: 8
  ORIGINAL[0]: filter -> priv_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: filter -> inputs
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !ret -> input_pads
  TYPE[2]: CALL
  TOKENIZED[2]: !ret -> VAR1
  ORIGINAL[3]: ret -> input_pads
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: filter -> inputs
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: inputs
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: filter
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: filter
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771695
FRAGMENT_COUNT: 5
  ORIGINAL[0]: link -> src?link -> src -> filter -> name : \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> src?link -> VAR2 -> VAR3 -> VAR4 : \
  ORIGINAL[1]: link -> src
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: link -> src -> filter -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 -> VAR4
  ORIGINAL[3]: link -> src -> filter
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: name
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771884
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !pads
  TYPE[0]: CALL
  TOKENIZED[0]: !pads
  ORIGINAL[1]: count = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: for (count = 0;pads -> name;count++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = 0 ; VAR2 -> VAR3 ; count++ )
  ORIGINAL[3]: count
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pads
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640289
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771729
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064771296
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ref -> audio -> channel_layout
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: ref -> audio -> nb_samples
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: ref -> audio
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ref -> audio -> sample_rate
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: audio
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: nb_samples
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ref
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ref
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477052
FRAGMENT_COUNT: 7
  ORIGINAL[0]: filt -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: link -> out_channel_layouts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &link -> out_channel_layouts
  TYPE[2]: CALL
  TOKENIZED[2]: &link -> VAR1
  ORIGINAL[3]: filt -> outputs
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: outputs
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: filt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771810
FRAGMENT_COUNT: 18
  ORIGINAL[0]: pts == ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( VAR2 ) 0x8000000000000000UL )
  ORIGINAL[1]: (int64_t )0x8000000000000000UL
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[2]: link -> current_pts = av_rescale_q(pts,link -> time_base,((AVRational ){(1), (1000000)}))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = FUN1 ( VAR3 , VAR1 -> VAR4 , ( ( VAR5 ) { ( 1 ) , ( 1000000 ) } ) )
  ORIGINAL[3]: link -> current_pts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: av_rescale_q(pts,link -> time_base,((AVRational ){(1), (1000000)}))
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 -> VAR3 , ( ( VAR4 ) { ( 1 ) , ( 1000000 ) } ) )
  ORIGINAL[5]: link -> time_base
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: (AVRational ){(1), (1000000)}
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 ) { ( 1 ) , ( 1000000 ) }
  ORIGINAL[7]: {(1), (1000000)}
  TYPE[7]: CALL
  TOKENIZED[7]: { ( 1 ) , ( 1000000 ) }
  ORIGINAL[8]: link -> graph && link -> age_index >= 0
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 && VAR1 -> VAR3 >= 0
  ORIGINAL[9]: link -> graph
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: current_pts
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: time_base
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: graph
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: pts
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: link
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: pts
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: link
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: link
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 30064771384
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ( *links)[idx] = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( *links ) [ VAR1 ] = ( ( void * ) 0 )
  ORIGINAL[1]: ( *links)[idx]
  TYPE[1]: CALL
  TOKENIZED[1]: ( *links ) [ VAR1 ]
  ORIGINAL[2]: *links
  TYPE[2]: CALL
  TOKENIZED[2]: *links
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: idx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477400
FRAGMENT_COUNT: 3
  ORIGINAL[0]: pads[pad_idx]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: pads
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pad_idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771923
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *(filter_ptr = av_filter_next(filter_ptr))
  TYPE[0]: CALL
  TOKENIZED[0]: * ( VAR1 = FUN1 ( VAR1 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477013
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> channels
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: channels
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: link
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477249
FRAGMENT_COUNT: 3
  ORIGINAL[0]: memset(registered_avfilters,0,sizeof(registered_avfilters))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , sizeof ( VAR1 ) )
  ORIGINAL[1]: next_registered_avfilter_idx = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: <global> next_registered_avfilter_idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771170
FRAGMENT_COUNT: 8
  ORIGINAL[0]: *src
  TYPE[0]: CALL
  TOKENIZED[0]: *src
  ORIGINAL[1]: *src == '%'
  TYPE[1]: CALL
  TOKENIZED[1]: *src == '%'
  ORIGINAL[2]: *src
  TYPE[2]: CALL
  TOKENIZED[2]: *src
  ORIGINAL[3]: (a = src[1]) && (b = src[2])
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 = VAR2 [ 1 ] ) && ( VAR3 = VAR2 [ 2 ] )
  ORIGINAL[4]: a = src[1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = VAR2 [ 1 ]
  ORIGINAL[5]: src[1]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ 1 ]
  ORIGINAL[6]: a
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: src
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771301
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(103 >= 100)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( 103 >= 100 )
  ORIGINAL[1]: 103 >= 100
  TYPE[1]: CALL
  TOKENIZED[1]: 103 >= 100
  ORIGINAL[2]: av_log(((void *)0),0,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( void * ) 0 ) , 0 , \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: abort()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )

CENTER_NODE: 47244640343
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640286
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772332
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 68719477207
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !strcmp(cmd,\
  TYPE[0]: CALL
  TOKENIZED[0]: !strcmp ( VAR1 , \
  ORIGINAL[1]: av_strlcatf(res,res_len,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: filter -> filter -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[3]: filter -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: res
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: res_len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640421
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772434
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .item_name = default_filter_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477389
FRAGMENT_COUNT: 6
  ORIGINAL[0]: filter -> filter -> init_opaque
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[1]: (filter -> filter -> init_opaque)(filter,args,opaque)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR1 -> VAR2 ) ( VAR1 , VAR3 , VAR4 )
  ORIGINAL[2]: filter -> filter -> init_opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR1 -> VAR2
  ORIGINAL[3]: filter
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: args
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: opaque
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477228
FRAGMENT_COUNT: 4
  ORIGINAL[0]: next_registered_avfilter_idx == 256
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 256
  ORIGINAL[1]: <global> next_registered_avfilter_idx
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: <global> next_registered_avfilter_idx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: next_registered_avfilter_idx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771840
FRAGMENT_COUNT: 5
  ORIGINAL[0]: registered_avfilters[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: !strcmp(registered_avfilters[i] -> name,name)
  TYPE[1]: CALL
  TOKENIZED[1]: !strcmp ( VAR1 [ VAR2 ] -> VAR3 , VAR3 )
  ORIGINAL[2]: strcmp(registered_avfilters[i] -> name,name)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 [ VAR2 ] -> VAR3 , VAR3 )
  ORIGINAL[3]: registered_avfilters[i] -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] -> VAR3
  ORIGINAL[4]: name
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477011
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !( *link)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( *link )
  ORIGINAL[1]: *link
  TYPE[1]: CALL
  TOKENIZED[1]: *link
  ORIGINAL[2]: ( *link) -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: ( *link ) -> VAR1
  ORIGINAL[3]: ff_free_pool(( *link) -> pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ( *link ) -> VAR1 )
  ORIGINAL[4]: *link
  TYPE[4]: CALL
  TOKENIZED[4]: *link
  ORIGINAL[5]: link
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477259
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ctx -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ctx -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ctx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772438
FRAGMENT_COUNT: 3
  ORIGINAL[0]: 52 << 16 | 18 << 8
  TYPE[0]: CALL
  TOKENIZED[0]: 52 << 16 | 18 << 8
  ORIGINAL[1]: 52 << 16
  TYPE[1]: CALL
  TOKENIZED[1]: 52 << 16
  ORIGINAL[2]: 18 << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 18 << 8

CENTER_NODE: 30064772143
FRAGMENT_COUNT: 3
  ORIGINAL[0]: pads[pad_idx] . name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] . VAR3
  ORIGINAL[1]: pads[pad_idx]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640339
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640295
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771609
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (AVRational ){(1), (1000000)}
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) { ( 1 ) , ( 1000000 ) }
  ORIGINAL[1]: {(1), (1000000)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( 1 ) , ( 1000000 ) }
  ORIGINAL[2]: inlink
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771234
FRAGMENT_COUNT: 11
  ORIGINAL[0]: snprintf(buf,buf_size,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: perms & 0x1?\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0x1?\
  ORIGINAL[2]: perms & 0x1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 & 0x1
  ORIGINAL[3]: perms & 0x02?\
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 & 0x02?\
  ORIGINAL[4]: perms & 0x04?\
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 & 0x04?\
  ORIGINAL[5]: perms & 0x08?\
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 & 0x08?\
  ORIGINAL[6]: perms & 0x10?\
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 & 0x10?\
  ORIGINAL[7]: perms & 0x20?\
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 & 0x20?\
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf_size
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: perms
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477403
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ff_filter_frame(link -> dst -> outputs[0],frame)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 -> VAR3 [ 0 ] , VAR4 )
  ORIGINAL[1]: link -> dst -> outputs[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 [ 0 ]
  ORIGINAL[2]: frame
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640344
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771876
FRAGMENT_COUNT: 4
  ORIGINAL[0]: filter?++filter : &registered_avfilters[0]
  TYPE[0]: CALL
  TOKENIZED[0]: filter?++filter : &registered_avfilters [ 0 ]
  ORIGINAL[1]: ++filter
  TYPE[1]: CALL
  TOKENIZED[1]: ++filter
  ORIGINAL[2]: &registered_avfilters[0]
  TYPE[2]: CALL
  TOKENIZED[2]: &registered_avfilters [ 0 ]
  ORIGINAL[3]: filter
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771324
FRAGMENT_COUNT: 3
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: \
  TYPE[1]: CALL
  TOKENIZED[1]: \
  ORIGINAL[2]: sizeof(\
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( \

CENTER_NODE: 30064771779
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ret == -((int )(('E' | 'O' << 8 | 'F' << 16) | ((unsigned int )32) << 24)) && link -> partial_buf
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == - ( ( int ) ( ( 'E' | 'O' << 8 | 'F' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) && VAR2 -> VAR3
  ORIGINAL[1]: 'E' | 'O' << 8 | 'F' << 16
  TYPE[1]: CALL
  TOKENIZED[1]: 'E' | 'O' << 8 | 'F' << 16
  ORIGINAL[2]: 'E' | 'O' << 8
  TYPE[2]: CALL
  TOKENIZED[2]: 'E' | 'O' << 8
  ORIGINAL[3]: 'O' << 8
  TYPE[3]: CALL
  TOKENIZED[3]: 'O' << 8
  ORIGINAL[4]: 'F' << 16
  TYPE[4]: CALL
  TOKENIZED[4]: 'F' << 16

CENTER_NODE: 47244640287
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476864
FRAGMENT_COUNT: 18
  ORIGINAL[0]: src[i] == ';'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == ' ; '
  ORIGINAL[1]: i == 0 || src[i-1] != '\\\\'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[2]: i == 0 || src[i-1] != '\\\\'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[3]: src[i] == '&'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] == '&'
  ORIGINAL[4]: i == 0 || src[i-1] != '\\\\'
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[5]: i++
  TYPE[5]: CALL
  TOKENIZED[5]: i++
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: i
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: i
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: i
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: i
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: i
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: i
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: i
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 68719477597
FRAGMENT_COUNT: 6
  ORIGINAL[0]: isValid(shipman_pozzuoli) == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) == 1
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: variable_buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: variable_buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_command_buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477187
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i < link -> src -> nb_inputs
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3 -> VAR4
  ORIGINAL[1]: link -> src
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: src
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: link
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772336
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 68719476997
FRAGMENT_COUNT: 7
  ORIGINAL[0]: src -> nb_outputs
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: src -> output_pads[srcpad] . type != dst -> input_pads[dstpad] . type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] . VAR4 != VAR5 -> VAR6 [ VAR7 ] . VAR4
  ORIGINAL[2]: link -> srcpad
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: src -> output_pads
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: output_pads
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: src
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: src
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477626
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = filter_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771491
FRAGMENT_COUNT: 3
  ORIGINAL[0]: link -> closed = closed
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: link -> closed
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: closed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772155
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *cmd = link -> dst -> command_queue
  TYPE[0]: CALL
  TOKENIZED[0]: *cmd = VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: link -> dst -> command_queue
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: cmd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: link
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640345
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771317
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mkdir(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: stonesoup_read_taint(&chabot_trenchboard,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &chabot_trenchboard , \
  ORIGINAL[2]: &chabot_trenchboard
  TYPE[2]: CALL
  TOKENIZED[2]: &chabot_trenchboard
  ORIGINAL[3]: chabot_trenchboard
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: chabot_trenchboard
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: chabot_trenchboard
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772442
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = filter_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !prev && ctx -> filter && ctx -> filter -> priv_class
  TYPE[0]: CALL
  TOKENIZED[0]: !prev && VAR1 -> VAR2 && VAR1 -> VAR2 -> VAR3

