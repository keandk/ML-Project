# Tokenized code fragments for 152778-v1.0.0-bad
# Total center nodes processed: 49
# Total code fragments found: 123

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477030
FRAGMENT_COUNT: 10
  ORIGINAL[0]: src_orig < src_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: !(0 != (svn_ctype_table[(unsigned char )( *src_orig)] & 0x0080)) || src_orig == '\\0'
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( 0 != ( VAR1 [ ( unsigned char ) ( *src_orig ) ] & 0x0080 ) ) || VAR2 == '\\0'
  ORIGINAL[2]: *src_orig
  TYPE[2]: CALL
  TOKENIZED[2]: *src_orig
  ORIGINAL[3]: new += 5
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 += 5
  ORIGINAL[4]: *src_orig
  TYPE[4]: CALL
  TOKENIZED[4]: *src_orig
  ORIGINAL[5]: new += 1
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 += 1
  ORIGINAL[6]: src_orig++
  TYPE[6]: CALL
  TOKENIZED[6]: src_orig++
  ORIGINAL[7]: src_orig
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: src_orig
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: src_orig
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477408
FRAGMENT_COUNT: 3
  ORIGINAL[0]: strlen(src)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640384
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640350
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719476852
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_err == 22 || apr_err == 20000 + 50000 + 23
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 22 || VAR1 == 20000 + 50000 + 23
  ORIGINAL[1]: apr_err != 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 0
  ORIGINAL[2]: sizeof(xlate_handle_node_t )
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: xlate_handle_node_t
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640394
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771115
FRAGMENT_COUNT: 4
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: mg_destroy_server(&stonesoup_server)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &stonesoup_server )
  ORIGINAL[2]: &stonesoup_server
  TYPE[2]: CALL
  TOKENIZED[2]: &stonesoup_server
  ORIGINAL[3]: stonesoup_server
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477549
FRAGMENT_COUNT: 7
  ORIGINAL[0]: dbhost != 0 && dbport != 0 && dbuser != 0 && dbpassword != 0 && dbdatabase != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0 && VAR2 != 0 && VAR3 != 0 && VAR4 != 0 && VAR5 != 0
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_trace
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: trace_point
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_trace
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640388
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771120
FRAGMENT_COUNT: 3
  ORIGINAL[0]: xlat_uton_static_handle = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> xlat_uton_static_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771465
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(0 != (svn_ctype_table[(unsigned char )( *data)] & 0x0080))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( 0 != ( VAR1 [ ( unsigned char ) ( *data ) ] & 0x0080 ) )
  ORIGINAL[1]: 0 != (svn_ctype_table[(unsigned char )( *data)] & 0x0002)
  TYPE[1]: CALL
  TOKENIZED[1]: 0 != ( VAR1 [ ( unsigned char ) ( *data ) ] & 0x0002 )
  ORIGINAL[2]: svn_ctype_table[(unsigned char )( *data)] & 0x0002
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ ( unsigned char ) ( *data ) ] & 0x0002
  ORIGINAL[3]: svn_ctype_table[(unsigned char )( *data)]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ ( unsigned char ) ( *data ) ]

CENTER_NODE: 47244640382
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771585
FRAGMENT_COUNT: 25
  ORIGINAL[0]: node -> handle
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *svn_err__temp = convert_to_stringbuf(node,src,strlen(src),&destbuf,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 , VAR2 , FUN2 ( VAR2 ) , &destbuf , VAR3 )
  ORIGINAL[2]: convert_to_stringbuf(node,src,strlen(src),&destbuf,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , FUN2 ( VAR2 ) , &destbuf , VAR3 )
  ORIGINAL[3]: strlen(src)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: &destbuf
  TYPE[4]: CALL
  TOKENIZED[4]: &destbuf
  ORIGINAL[5]: len = strlen(src)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[6]: strlen(src)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 )
  ORIGINAL[7]: *svn_err__temp = check_non_ascii(src,len,pool)
  TYPE[7]: CALL
  TOKENIZED[7]: *svn_err__temp = FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[8]: check_non_ascii(src,len,pool)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[9]: handle
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: svn_err__temp
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: node
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: src
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: src
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: destbuf
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: pool
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: svn_err__temp
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: len
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: src
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: svn_err__temp
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: src
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: len
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: pool
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: svn_err__temp
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1

CENTER_NODE: 47244640365
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640316
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477285
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_utf_cstring_to_utf8_ex2(dest,src,frompage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: dest
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: frompage
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477139
FRAGMENT_COUNT: 8
  ORIGINAL[0]: i < invalid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: apr_pstrcat(pool,invalid_txt,apr_psprintf(pool,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , FUN2 ( VAR1 , \
  ORIGINAL[2]: apr_psprintf(pool,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: (char *)((void *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) ( ( void * ) 0 )
  ORIGINAL[4]: invalid_txt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: invalid_txt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771094
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_exit_flag = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: <global> stonesoup_exit_flag
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640358
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477151
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_is_valid(data)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640369
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771407
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *dest
  TYPE[0]: CALL
  TOKENIZED[0]: *dest
  ORIGINAL[1]: src_length == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: ( *dest) -> len
  TYPE[2]: CALL
  TOKENIZED[2]: ( *dest ) -> VAR1
  ORIGINAL[3]: ( *dest) -> data
  TYPE[3]: CALL
  TOKENIZED[3]: ( *dest ) -> VAR1
  ORIGINAL[4]: ( *dest) -> len
  TYPE[4]: CALL
  TOKENIZED[4]: ( *dest ) -> VAR1
  ORIGINAL[5]: *dest
  TYPE[5]: CALL
  TOKENIZED[5]: *dest
  ORIGINAL[6]: apr_err == 0 && srclen != 0
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 == 0 && VAR2 != 0
  ORIGINAL[7]: len
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: dest
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640396
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477426
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771124
FRAGMENT_COUNT: 4
  ORIGINAL[0]: node -> valid = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 0
  ORIGINAL[1]: node -> valid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: valid
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771303
FRAGMENT_COUNT: 5
  ORIGINAL[0]: node_p == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: *node_p = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: *node_p = ( ( void * ) 0 )
  ORIGINAL[2]: *node_p
  TYPE[2]: CALL
  TOKENIZED[2]: *node_p
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: <global> xlate_handle_hash
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 68719477405
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf_cstring_from_utf8_ex2(dest,src,topage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: topage
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771707
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_utf_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640304
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771140
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !assume_native_charset_is_utf8
  TYPE[0]: CALL
  TOKENIZED[0]: !assume_native_charset_is_utf8
  ORIGINAL[1]: assume_native_charset_is_utf8 = assume_native_utf8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: <global> assume_native_charset_is_utf8
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: assume_native_utf8
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640377
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640344
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640367
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477147
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_utf__is_valid(data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

