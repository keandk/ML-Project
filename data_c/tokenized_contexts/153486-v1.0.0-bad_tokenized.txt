# Tokenized code fragments for 153486-v1.0.0-bad
# Total center nodes processed: 84
# Total code fragments found: 307

CENTER_NODE: 68719476977
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mode == RBM_ZERO_ON_ERROR || zero_damaged_pages
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 || VAR3
  ORIGINAL[1]: (char *)bufBlock
  TYPE[1]: CALL
  TOKENIZED[1]: ( char * ) VAR1
  ORIGINAL[2]: bufBlock
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bufBlock
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771979
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *((volatile slock_t *)(&buf -> buf_hdr_lock))
  TYPE[0]: CALL
  TOKENIZED[0]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) )
  ORIGINAL[1]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[1]: CALL
  TOKENIZED[1]: ( volatile VAR1 * ) ( &buf -> VAR2 )
  ORIGINAL[2]: &buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &buf -> VAR1

CENTER_NODE: 30064773249
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: bufHdr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772554
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < NBuffers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: !(bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode)
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7 )
  ORIGINAL[2]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7
  ORIGINAL[3]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6
  ORIGINAL[4]: bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640453
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477507
FRAGMENT_COUNT: 12
  ORIGINAL[0]: bufHdr -> buf_hdr_lock
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: bufHdr -> refcount
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: bufHdr -> usage_count
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: !((bufHdr -> flags) & 1 << 1) || !((bufHdr -> flags) & 1 << 0)
  TYPE[4]: CALL
  TOKENIZED[4]: ! ( ( VAR1 -> VAR2 ) & 1 << 1 ) || ! ( ( VAR1 -> VAR2 ) & 1 << 0 )
  ORIGINAL[5]: bufHdr -> flags
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: bufHdr -> flags
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: LWLockRelease(bufHdr -> content_lock)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[8]: bufHdr -> content_lock
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: UnpinBuffer(bufHdr,((bool )1))
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 , ( ( VAR2 ) 1 ) )
  ORIGINAL[10]: bufHdr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: bufHdr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064773234
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: bufHdr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640434
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640511
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640524
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771800
FRAGMENT_COUNT: 7
  ORIGINAL[0]: buf -> refcount != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != 0
  ORIGINAL[1]: buf -> usage_count = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = 0
  ORIGINAL[2]: buf -> usage_count
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: usage_count
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640532
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064772448
FRAGMENT_COUNT: 4
  ORIGINAL[0]: relation -> rd_smgr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: smgrsetowner(&relation -> rd_smgr,smgropen(relation -> rd_node,relation -> rd_backend))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &relation -> VAR1 , FUN2 ( VAR2 -> VAR3 , VAR2 -> VAR4 ) )
  ORIGINAL[2]: &relation -> rd_smgr
  TYPE[2]: CALL
  TOKENIZED[2]: &relation -> VAR1
  ORIGINAL[3]: smgropen(relation -> rd_node,relation -> rd_backend)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , VAR1 -> VAR3 )

CENTER_NODE: 30064772880
FRAGMENT_COUNT: 6
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: ((bufHdr -> flags) & (1 << 0 | 1 << 5)) != (1 << 0 | 1 << 5)
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 -> VAR2 ) & ( 1 << 0 | 1 << 5 ) ) != ( 1 << 0 | 1 << 5 )
  ORIGINAL[2]: (bufHdr -> flags) & (1 << 0 | 1 << 5)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) & ( 1 << 0 | 1 << 5 )
  ORIGINAL[3]: 1 << 0 | 1 << 5
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 0 | 1 << 5
  ORIGINAL[4]: 1 << 0
  TYPE[4]: CALL
  TOKENIZED[4]: 1 << 0
  ORIGINAL[5]: 1 << 5
  TYPE[5]: CALL
  TOKENIZED[5]: 1 << 5

CENTER_NODE: 30064772075
FRAGMENT_COUNT: 4
  ORIGINAL[0]: num_to_scan-- > 0
  TYPE[0]: CALL
  TOKENIZED[0]: num_to_scan-- > 0
  ORIGINAL[1]: (bufHdr -> flags) & 1 << 7
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 1 << 7
  ORIGINAL[2]: bufHdr -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 1 << 7
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 7

CENTER_NODE: 47244640464
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771192
FRAGMENT_COUNT: 5
  ORIGINAL[0]: smgr = smgropen(rnode,- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , - 1 )
  ORIGINAL[1]: smgropen(rnode,- 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , - 1 )
  ORIGINAL[2]: - 1
  TYPE[2]: CALL
  TOKENIZED[2]: - 1
  ORIGINAL[3]: smgr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rnode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772465
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: (bufHdr -> flags) & 1 << 8
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 1 << 8
  ORIGINAL[2]: bufHdr -> flags
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: 1 << 8
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 8

CENTER_NODE: 47244640384
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772259
FRAGMENT_COUNT: 1
  ORIGINAL[0]: on_shmem_exit(AtProcExit_Buffers,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )

CENTER_NODE: 30064771994
FRAGMENT_COUNT: 17
  ORIGINAL[0]: PrivateRefCount[b] == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 0
  ORIGINAL[1]: PrivateRefCount[b]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: tas(&buf -> buf_hdr_lock)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &buf -> VAR1 )
  ORIGINAL[3]: &buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &buf -> VAR1
  ORIGINAL[4]: buf -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf -> refcount--
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> refcount--
  ORIGINAL[6]: buf -> refcount
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: (buf -> flags) & 1 << 6 && buf -> refcount == 1
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 -> VAR2 ) & 1 << 6 && VAR1 -> VAR3 == 1
  ORIGINAL[8]: (buf -> flags) & 1 << 6
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 -> VAR2 ) & 1 << 6
  ORIGINAL[9]: buf -> flags
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: 1 << 6
  TYPE[10]: CALL
  TOKENIZED[10]: 1 << 6
  ORIGINAL[11]: buf_hdr_lock
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: refcount
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: flags
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: buf
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: buf
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: buf
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 47244640432
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640347
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771940
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tas(&buf -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &buf -> VAR1 )
  ORIGINAL[1]: &buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &buf -> VAR1
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s_lock(&buf -> buf_hdr_lock,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( &buf -> VAR1 , \
  ORIGINAL[4]: &buf -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: &buf -> VAR1
  ORIGINAL[5]: buf -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &buf -> VAR1
  ORIGINAL[7]: buf -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2

CENTER_NODE: 47244640533
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640428
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772856
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: LocalRefCount[-buffer - 1]++
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ -buffer - 1 ] ++
  ORIGINAL[2]: LocalRefCount[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ -buffer - 1 ]
  ORIGINAL[3]: -buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: -buffer - 1
  ORIGINAL[4]: LocalRefCount
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477549
FRAGMENT_COUNT: 8
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&LocalBufferDescriptors[-buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &LocalBufferDescriptors [ -buffer - 1 ] )
  ORIGINAL[2]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[3]: bufHdr -> tag
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tag
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bufHdr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: bufHdr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771115
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context = fopen(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(filepath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477644
FRAGMENT_COUNT: 6
  ORIGINAL[0]: rnode . backend
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: bufHdr -> tag . rnode . relNode == rnode . node . relNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4
  ORIGINAL[2]: bufHdr -> tag . rnode . dbNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[3]: rnode . node
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: node
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: rnode
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771828
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[1]: &bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &bufHdr -> VAR1
  ORIGINAL[2]: bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s_lock(&bufHdr -> buf_hdr_lock,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( &bufHdr -> VAR1 , \
  ORIGINAL[4]: &bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: &bufHdr -> VAR1
  ORIGINAL[5]: bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &bufHdr -> VAR1
  ORIGINAL[7]: bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640492
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773022
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bufid = GetStartupBufferPinWaitBufId()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( )
  ORIGINAL[1]: GetStartupBufferPinWaitBufId()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: bufid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640542
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640460
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477024
FRAGMENT_COUNT: 6
  ORIGINAL[0]: LWLockAcquire(newPartitionLock,LW_SHARED)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: buf_id = BufTableLookup(&newTag,newHash)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( &newTag , VAR2 )
  ORIGINAL[2]: BufTableLookup(&newTag,newHash)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &newTag , VAR1 )
  ORIGINAL[3]: buf_id
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: newTag
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf_id
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640301
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640472
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640479
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640497
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772298
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CheckpointStats . ckpt_write_t = GetCurrentTimestamp()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = FUN1 ( )
  ORIGINAL[1]: CheckpointStats . ckpt_write_t
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: GetCurrentTimestamp()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 30064772262
FRAGMENT_COUNT: 2
  ORIGINAL[0]: UnlockBuffers()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: AtProcExit_LocalBuffers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 30064773049
FRAGMENT_COUNT: 16
  ORIGINAL[0]: !ConditionalLockBuffer(buffer)
  TYPE[0]: CALL
  TOKENIZED[0]: !ConditionalLockBuffer ( VAR1 )
  ORIGINAL[1]: &bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &bufHdr -> VAR1
  ORIGINAL[2]: bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &bufHdr -> VAR1
  ORIGINAL[4]: bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &bufHdr -> VAR1
  ORIGINAL[6]: bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: &bufHdr -> VAR1
  ORIGINAL[8]: bufHdr -> buf_hdr_lock
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: buf_hdr_lock
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: bufHdr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: bufHdr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: bufHdr
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: bufHdr
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: bufHdr
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: bufHdr
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 68719478055
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_heap_buff_64 != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: variable_buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: variable_buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_heap_buff_64
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640436
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640538
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640512
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772748
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !(bufHdr -> tag . rnode . relNode == rel -> rd_node . relNode && bufHdr -> tag . rnode . dbNode == rel -> rd_node . dbNode && bufHdr -> tag . rnode . spcNode == rel -> rd_node . spcNode)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 -> VAR6 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR5 -> VAR6 . VAR7 && VAR1 -> VAR2 . VAR3 . VAR8 == VAR5 -> VAR6 . VAR8 )
  ORIGINAL[1]: bufHdr -> tag . rnode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: bufHdr -> tag
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tag
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rnode
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bufHdr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640378
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477698
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[1]: bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf_hdr_lock
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bufHdr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bufHdr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772847
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PrivateRefCount[buffer - 1] > 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 - 1 ] > 1
  ORIGINAL[1]: PrivateRefCount[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[2]: buffer - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773147
FRAGMENT_COUNT: 12
  ORIGINAL[0]: clear_dirty && !((buf -> flags) & 1 << 5)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && ! ( ( VAR2 -> VAR3 ) & 1 << 5 )
  ORIGINAL[1]: !((buf -> flags) & 1 << 5)
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( ( VAR1 -> VAR2 ) & 1 << 5 )
  ORIGINAL[2]: buf -> flags &= ~(1 << 0 | 1 << 7)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 &= ~ ( 1 << 0 | 1 << 7 )
  ORIGINAL[3]: buf -> flags
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ~(1 << 0 | 1 << 7)
  TYPE[4]: CALL
  TOKENIZED[4]: ~ ( 1 << 0 | 1 << 7 )
  ORIGINAL[5]: 1 << 0 | 1 << 7
  TYPE[5]: CALL
  TOKENIZED[5]: 1 << 0 | 1 << 7
  ORIGINAL[6]: 1 << 0
  TYPE[6]: CALL
  TOKENIZED[6]: 1 << 0
  ORIGINAL[7]: 1 << 7
  TYPE[7]: CALL
  TOKENIZED[7]: 1 << 7
  ORIGINAL[8]: flags
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: clear_dirty
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064772258
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AtEOXact_LocalBuffers(isCommit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: isCommit
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772263
FRAGMENT_COUNT: 37
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buf = (&LocalBufferDescriptors[-buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &LocalBufferDescriptors [ -buffer - 1 ] )
  ORIGINAL[2]: &LocalBufferDescriptors[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &LocalBufferDescriptors [ -buffer - 1 ]
  ORIGINAL[3]: LocalBufferDescriptors[-buffer - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ -buffer - 1 ]
  ORIGINAL[4]: -buffer - 1
  TYPE[4]: CALL
  TOKENIZED[4]: -buffer - 1
  ORIGINAL[5]: -buffer
  TYPE[5]: CALL
  TOKENIZED[5]: -buffer
  ORIGINAL[6]: loccount = LocalRefCount[-buffer - 1]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = VAR2 [ -buffer - 1 ]
  ORIGINAL[7]: LocalRefCount[-buffer - 1]
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 [ -buffer - 1 ]
  ORIGINAL[8]: -buffer - 1
  TYPE[8]: CALL
  TOKENIZED[8]: -buffer - 1
  ORIGINAL[9]: -buffer
  TYPE[9]: CALL
  TOKENIZED[9]: -buffer
  ORIGINAL[10]: backend = MyBackendId
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 = VAR2
  ORIGINAL[11]: buf = (&BufferDescriptors[buffer - 1])
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[12]: &BufferDescriptors[buffer - 1]
  TYPE[12]: CALL
  TOKENIZED[12]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[13]: BufferDescriptors[buffer - 1]
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[14]: buffer - 1
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 - 1
  ORIGINAL[15]: loccount = PrivateRefCount[buffer - 1]
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 = VAR2 [ VAR3 - 1 ]
  ORIGINAL[16]: PrivateRefCount[buffer - 1]
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[17]: buffer - 1
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 - 1
  ORIGINAL[18]: backend = - 1
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 = - 1
  ORIGINAL[19]: - 1
  TYPE[19]: CALL
  TOKENIZED[19]: - 1
  ORIGINAL[20]: buffer
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: buf
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: LocalBufferDescriptors
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: buffer
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: loccount
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: LocalRefCount
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: buffer
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: backend
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: MyBackendId
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: buf
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: BufferDescriptors
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: buffer
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: loccount
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: PrivateRefCount
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: buffer
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: backend
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: path
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1

CENTER_NODE: 47244640362
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477770
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ResourceOwnerEnlargeBuffers(CurrentResourceOwner)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: CurrentResourceOwner
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640336
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773108
FRAGMENT_COUNT: 35
  ORIGINAL[0]: forInput?(buf -> flags) & 1 << 1 : !((buf -> flags) & 1 << 0)
  TYPE[0]: CALL
  TOKENIZED[0]: forInput? ( VAR1 -> VAR2 ) & 1 << 1 : ! ( ( VAR1 -> VAR2 ) & 1 << 0 )
  ORIGINAL[1]: (buf -> flags) & 1 << 1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) & 1 << 1
  ORIGINAL[2]: !((buf -> flags) & 1 << 0)
  TYPE[2]: CALL
  TOKENIZED[2]: ! ( ( VAR1 -> VAR2 ) & 1 << 0 )
  ORIGINAL[3]: *((volatile slock_t *)(&buf -> buf_hdr_lock)) = 0
  TYPE[3]: CALL
  TOKENIZED[3]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) ) = 0
  ORIGINAL[4]: *((volatile slock_t *)(&buf -> buf_hdr_lock))
  TYPE[4]: CALL
  TOKENIZED[4]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) )
  ORIGINAL[5]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[5]: CALL
  TOKENIZED[5]: ( volatile VAR1 * ) ( &buf -> VAR2 )
  ORIGINAL[6]: &buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &buf -> VAR1
  ORIGINAL[7]: buf -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: LWLockRelease(buf -> io_in_progress_lock)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[9]: buf -> io_in_progress_lock
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: (bool )0
  TYPE[10]: CALL
  TOKENIZED[10]: ( VAR1 ) 0
  ORIGINAL[11]: buf -> flags |= 1 << 3
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 |= 1 << 3
  ORIGINAL[12]: buf -> flags
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: 1 << 3
  TYPE[13]: CALL
  TOKENIZED[13]: 1 << 3
  ORIGINAL[14]: *((volatile slock_t *)(&buf -> buf_hdr_lock)) = 0
  TYPE[14]: CALL
  TOKENIZED[14]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) ) = 0
  ORIGINAL[15]: *((volatile slock_t *)(&buf -> buf_hdr_lock))
  TYPE[15]: CALL
  TOKENIZED[15]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) )
  ORIGINAL[16]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[16]: CALL
  TOKENIZED[16]: ( volatile VAR1 * ) ( &buf -> VAR2 )
  ORIGINAL[17]: &buf -> buf_hdr_lock
  TYPE[17]: CALL
  TOKENIZED[17]: &buf -> VAR1
  ORIGINAL[18]: buf -> buf_hdr_lock
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 -> VAR2
  ORIGINAL[19]: InProgressBuf = buf
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 = VAR2
  ORIGINAL[20]: IsForInput = forInput
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 = VAR2
  ORIGINAL[21]: (bool )1
  TYPE[21]: CALL
  TOKENIZED[21]: ( VAR1 ) 1
  ORIGINAL[22]: buf_hdr_lock
  TYPE[22]: FIELD_IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: io_in_progress_lock
  TYPE[23]: FIELD_IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: flags
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: buf_hdr_lock
  TYPE[25]: FIELD_IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: forInput
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: buf
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: buf
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: buf
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: buf
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: <global> InProgressBuf
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: <global> VAR1
  ORIGINAL[32]: buf
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: <global> IsForInput
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: <global> VAR1
  ORIGINAL[34]: forInput
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1

CENTER_NODE: 68719477852
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buf = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: mode == 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0
  ORIGINAL[3]: mode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640285
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064772331
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *rnode = bufHdr -> tag . rnode
  TYPE[0]: CALL
  TOKENIZED[0]: *rnode = VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: *rnode
  TYPE[1]: CALL
  TOKENIZED[1]: *rnode
  ORIGINAL[2]: bufHdr -> tag . rnode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: bufHdr -> tag
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr -> tag
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: bufHdr -> tag
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: rnode
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064773075
FRAGMENT_COUNT: 9
  ORIGINAL[0]: sv_flags = buf -> flags
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: buf -> flags
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !(sv_flags & 1 << 3)
  TYPE[2]: CALL
  TOKENIZED[2]: ! ( VAR1 & 1 << 3 )
  ORIGINAL[3]: flags
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sv_flags
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477862
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640528
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772850
FRAGMENT_COUNT: 3
  ORIGINAL[0]: LockBuffer(buffer,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771158
FRAGMENT_COUNT: 4
  ORIGINAL[0]: errstart(20,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 20 , \
  ORIGINAL[1]: (65 - 48 & 0x3F) << 6
  TYPE[1]: CALL
  TOKENIZED[1]: ( 65 - 48 & 0x3F ) << 6
  ORIGINAL[2]: 65 - 48 & 0x3F
  TYPE[2]: CALL
  TOKENIZED[2]: 65 - 48 & 0x3F
  ORIGINAL[3]: 65 - 48
  TYPE[3]: CALL
  TOKENIZED[3]: 65 - 48

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640527
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640356
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478004
FRAGMENT_COUNT: 5
  ORIGINAL[0]: impeyan_unshell != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: *conoscopic_semiluminous = impeyan_unshell
  TYPE[1]: CALL
  TOKENIZED[1]: *conoscopic_semiluminous = VAR1
  ORIGINAL[2]: *conoscopic_semiluminous
  TYPE[2]: CALL
  TOKENIZED[2]: *conoscopic_semiluminous
  ORIGINAL[3]: impeyan_unshell
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: impeyan_unshell
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772289
FRAGMENT_COUNT: 2
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064771130
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ReadBufferExtended(reln,MAIN_FORKNUM,blockNum,RBM_NORMAL,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640414
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478066
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 0

