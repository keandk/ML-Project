# Tokenized code fragments for 152954-v1.0.0-bad
# Total center nodes processed: 62
# Total code fragments found: 218

CENTER_NODE: 30064771258
FRAGMENT_COUNT: 6
  ORIGINAL[0]: sec_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(sec_ndx,((void *)0),((void *)0),&sec_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , &sec_ptr )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: &sec_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: &sec_ptr
  ORIGINAL[5]: sec_ndx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771596
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_set(cfg,section,option,(apr_psprintf(cfg -> pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( FUN2 ( VAR1 -> VAR4 , \
  ORIGINAL[1]: apr_psprintf(cfg -> pool,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , \
  ORIGINAL[2]: cfg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640364
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477002
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ( *p) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 0
  ORIGINAL[1]: *p
  TYPE[1]: CALL
  TOKENIZED[1]: *p
  ORIGINAL[2]: *p
  TYPE[2]: CALL
  TOKENIZED[2]: *p
  ORIGINAL[3]: p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *cfg = (apr_palloc(result_pool,sizeof(( *cfg))))
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg = ( FUN1 ( VAR1 , sizeof ( ( *cfg ) ) ) )
  ORIGINAL[1]: apr_palloc(result_pool,sizeof(( *cfg)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( ( *cfg ) ) )
  ORIGINAL[2]: cfg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771676
FRAGMENT_COUNT: 3
  ORIGINAL[0]: find_option(cfg,section,((void *)0),&sec)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( ( void * ) 0 ) , &sec )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: sec
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640349
FRAGMENT_COUNT: 1
  ORIGINAL[0]: x_default
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771249
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sizeof(\
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( \
  ORIGINAL[1]: sizeof(\
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( \
  ORIGINAL[2]: cfg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640313
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771113
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mg_poll_server(stonesoup_server, 1000) == 0 && stonesoup_exit_flag == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 1000 ) == 0 && VAR2 == 1
  ORIGINAL[1]: mg_poll_server(stonesoup_server, 1000) == 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 1000 ) == 0
  ORIGINAL[2]: stonesoup_exit_flag == 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 1
  ORIGINAL[3]: <global> stonesoup_exit_flag
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 47244640394
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640302
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640278
FRAGMENT_COUNT: 1
  ORIGINAL[0]: err == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0

CENTER_NODE: 30064771746
FRAGMENT_COUNT: 4
  ORIGINAL[0]: gb . key = key
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = VAR2
  ORIGINAL[1]: gb . key
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: key
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: gb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476990
FRAGMENT_COUNT: 4
  ORIGINAL[0]: option -> expanded
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: option -> x_value
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: x_value
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476986
FRAGMENT_COUNT: 5
  ORIGINAL[0]: &merge_cfg
  TYPE[0]: CALL
  TOKENIZED[0]: &merge_cfg
  ORIGINAL[1]: for_each_option(merge_cfg,cfg,merge_cfg -> pool,merge_callback)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR1 -> VAR3 , VAR4 )
  ORIGINAL[2]: merge_cfg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: merge_cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476973
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_config_set(baton,section -> name,option -> name,option -> value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR4 -> VAR3 , VAR4 -> VAR5 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771637
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sec_ndx = apr_hash_first(subpool,cfg -> sections)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 )
  ORIGINAL[1]: apr_hash_first(subpool,cfg -> sections)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 )
  ORIGINAL[2]: cfg -> sections
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: sec_ndx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subpool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477572
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_oc_i < stonesoup_buffer_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_buffer[stonesoup_oc_i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: stonesoup_oc_i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_oc_i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771302
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !cfg -> x_values
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: apr_pool_clear(cfg -> x_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: cfg -> x_pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771803
FRAGMENT_COUNT: 8
  ORIGINAL[0]: optidx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(optidx,&optkey,&optkeyLength,&optval)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &optkey , &optkeyLength , &optval )
  ORIGINAL[2]: &optkey
  TYPE[2]: CALL
  TOKENIZED[2]: &optkey
  ORIGINAL[3]: &optkeyLength
  TYPE[3]: CALL
  TOKENIZED[3]: &optkeyLength
  ORIGINAL[4]: &optval
  TYPE[4]: CALL
  TOKENIZED[4]: &optval
  ORIGINAL[5]: optidx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: optval
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: optval
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771858
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tmp_value == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: ( *end_pos) != 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( *end_pos ) != 0
  ORIGINAL[2]: *end_pos
  TYPE[2]: CALL
  TOKENIZED[2]: *end_pos
  ORIGINAL[3]: svn_error_createf(SVN_ERR_BAD_CONFIG_VALUE,((void *)0),(dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: dgettext(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: SVN_ERR_BAD_CONFIG_VALUE
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tmp_value
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771864
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tmp_value = svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: tmp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: server_group
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: option_name
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477139
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sizeof(cfg_option_t )
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( VAR1 )
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cfg_option_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !red_config
  TYPE[0]: CALL
  TOKENIZED[0]: !red_config
  ORIGINAL[1]: *svn_err__temp = svn_config_create2(cfgp,0,0,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 , 0 , 0 , VAR2 )
  ORIGINAL[2]: svn_config_create2(cfgp,0,0,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0 , 0 , VAR2 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfgp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771229
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !config_dir
  TYPE[0]: CALL
  TOKENIZED[0]: !config_dir
  ORIGINAL[1]: err && err -> apr_err == SVN_ERR_BAD_FILENAME
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 && VAR1 -> VAR2 == VAR3
  ORIGINAL[2]: *svn_err__temp = svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: *svn_err__temp = FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: svn_err__temp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477410
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_get(cfg,&retval,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &retval , \
  ORIGINAL[1]: option_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476804
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97
  ORIGINAL[1]: c <= 122
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 122
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ev == MG_AUTH
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477384
FRAGMENT_COUNT: 6
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: callback(opt -> name,temp_value,baton,iteration_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: opt -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: temp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: iteration_pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477230
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_get(cfg,&tmp_value,section,option,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &tmp_value , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: get_bool(valuep,tmp_value,default_value,section,option)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: valuep
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tmp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477045
FRAGMENT_COUNT: 7
  ORIGINAL[0]: opt -> expanded
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: opt -> value && strchr(opt -> value,37)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 && FUN1 ( VAR1 -> VAR2 , 37 )
  ORIGINAL[2]: opt -> value
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: opt -> value
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: opt -> x_value
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: x_value
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771128
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: stonesoup_trace
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: trace_point
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640370
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771619
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !tmp_value
  TYPE[0]: CALL
  TOKENIZED[0]: !tmp_value
  ORIGINAL[1]: *valuep = default_value
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep = VAR1
  ORIGINAL[2]: *valuep
  TYPE[2]: CALL
  TOKENIZED[2]: *valuep
  ORIGINAL[3]: default_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477238
FRAGMENT_COUNT: 3
  ORIGINAL[0]: value?\
  TYPE[0]: CALL
  TOKENIZED[0]: value?\
  ORIGINAL[1]: option
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640389
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771568
FRAGMENT_COUNT: 4
  ORIGINAL[0]: value == svn_tristate_true
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: *boolp = !0
  TYPE[1]: CALL
  TOKENIZED[1]: *boolp = !0
  ORIGINAL[2]: *boolp
  TYPE[2]: CALL
  TOKENIZED[2]: *boolp
  ORIGINAL[3]: !0
  TYPE[3]: CALL
  TOKENIZED[3]: !0

CENTER_NODE: 47244640282
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640289
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640285
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477271
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *valuep
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep
  ORIGINAL[1]: bool_val?\
  TYPE[1]: CALL
  TOKENIZED[1]: bool_val?\
  ORIGINAL[2]: bool_val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771607
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tmp_value && 0 == svn_cstring_casecmp(tmp_value,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && 0 == FUN1 ( VAR1 , \
  ORIGINAL[1]: *valuep = \
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep = \
  ORIGINAL[2]: *valuep
  TYPE[2]: CALL
  TOKENIZED[2]: *valuep

CENTER_NODE: 30064771074
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mg_vprintf_data((struct mg_connection*) stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( struct mg_connection* ) VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: (struct mg_connection*) stonesoup_printf_context
  TYPE[1]: CALL
  TOKENIZED[1]: ( struct mg_connection* ) VAR1
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477070
FRAGMENT_COUNT: 10
  ORIGINAL[0]: parse_from != ((void *)0) && ( *parse_from) != '\\0' && (name_start = (strstr(parse_from,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 ) && ( *parse_from ) != '\\0' && ( VAR2 = ( FUN1 ( VAR1 , \
  ORIGINAL[1]: name_start += sizeof(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += sizeof ( \
  ORIGINAL[2]: sizeof(\
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( \
  ORIGINAL[3]: *name_start
  TYPE[3]: CALL
  TOKENIZED[3]: *name_start
  ORIGINAL[4]: name_start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: name_start
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: name_start
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: name_start
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: name_start
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: name_start
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640304
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771744
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_cstring_match_glob_list(b -> key,list)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: apr_pstrdup(b -> pool,name)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[2]: b -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pool
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: name
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477124
FRAGMENT_COUNT: 4
  ORIGINAL[0]: apr_pstrdup(cfg -> pool,section)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: cfg -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640377
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !callback(sec -> name,baton,iteration_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: !callback ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: break;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: break ;
  ORIGINAL[2]: iteration_pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477188
FRAGMENT_COUNT: 5
  ORIGINAL[0]: find_option(cfg,section,option,&sec)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , &sec )
  ORIGINAL[1]: section
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: option
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477012
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cfg -> tmp_key
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cfg -> tmp_key -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: cfg -> tmp_key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tmp_key
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771593
FRAGMENT_COUNT: 3
  ORIGINAL[0]: - 9223372036854775807L - 1
  TYPE[0]: CALL
  TOKENIZED[0]: - 9223372036854775807L - 1
  ORIGINAL[1]: - 9223372036854775807L
  TYPE[1]: CALL
  TOKENIZED[1]: - 9223372036854775807L
  ORIGINAL[2]: tmp_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771834
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cidx = apr_hash_next(cidx)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[1]: apr_hash_next(cidx)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: cidx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cidx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476840
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config__parse_file(cfg,file,must_exist,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: must_exist
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477291
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *valuep
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep
  ORIGINAL[1]: bool_val?svn_tristate_true : svn_tristate_false
  TYPE[1]: CALL
  TOKENIZED[1]: bool_val?svn_tristate_true : VAR1
  ORIGINAL[2]: bool_val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_tristate_true
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_tristate_false
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771872
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: make_hash_key(cfg -> tmp_key -> data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 -> VAR3 )
  ORIGINAL[2]: cfg -> tmp_key -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: cfg -> tmp_key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cfg -> tmp_key -> data
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: cfg -> tmp_key
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: data
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640295
FRAGMENT_COUNT: 0

