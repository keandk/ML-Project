# Tokenized code fragments for 153078-v1.0.0-bad
# Total center nodes processed: 30
# Total code fragments found: 173

CENTER_NODE: 68719477233
FRAGMENT_COUNT: 11
  ORIGINAL[0]: xctx -> stream
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: AES_set_encrypt_key(key,ctx -> key_len * 4,&xctx -> ks1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 * 4 , &xctx -> VAR4 )
  ORIGINAL[2]: xctx -> ks1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: xctx -> xts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: xctx -> ks1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: xctx -> ks2
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: xctx -> ks1
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: xts
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: xctx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: enc
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: xctx
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476812
FRAGMENT_COUNT: 6
  ORIGINAL[0]: dat -> ks
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ctx -> encrypt
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: dat -> block
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: block
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dat
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772682
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(914), (1), (((0x10001 == 0x10001?2 : 1)) * 256 / 8), (16), ((0x4000 | (0x1000 | 0x10 | 0x20 | 0x40) | 0x10001)), (aesni_xts_init_key), (aes_xts_cipher), (((void *)0)), ((sizeof(EVP_AES_XTS_CTX ))), (((void *)0)), (((void *)0)), (aes_xts_ctrl), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 914 ) , ( 1 ) , ( ( ( 0x10001 == 0x10001?2 : 1 ) ) * 256 / 8 ) , ( 16 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x20 | 0x40 ) | 0x10001 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR4 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064772300
FRAGMENT_COUNT: 3
  ORIGINAL[0]: {(424), (1), (192 / 8), (16), ((0x4000 | 0x1000 | 0x4)), (aes_init_key), (aes_ofb_cipher), (((void *)0)), ((sizeof(EVP_AES_KEY ))), (((void *)0)), (((void *)0)), (((void *)0)), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 424 ) , ( 1 ) , ( 192 / 8 ) , ( 16 ) , ( ( 0x4000 | 0x1000 | 0x4 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: sizeof(EVP_AES_KEY )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: EVP_AES_KEY
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771770
FRAGMENT_COUNT: 4
  ORIGINAL[0]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ] & ( 1 << 57 - 32 )
  ORIGINAL[1]: OPENSSL_ia32cap_P[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ]
  ORIGINAL[2]: 1 << 57 - 32
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << 57 - 32
  ORIGINAL[3]: 57 - 32
  TYPE[3]: CALL
  TOKENIZED[3]: 57 - 32

CENTER_NODE: 68719477650
FRAGMENT_COUNT: 10
  ORIGINAL[0]: out_file = fopen(out_filename, \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: fprintf(stderr, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: stderr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stderr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stderr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stderr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stderr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stderr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: out_filename
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stderr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 1
  ORIGINAL[0]: gctx -> iv != c -> iv
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != VAR3 -> VAR2

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 2
  ORIGINAL[0]: len >= ((size_t )1) << sizeof(size_t ) * 8 - 4
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= ( ( VAR2 ) 1 ) << sizeof ( VAR2 ) * 8 - 4
  ORIGINAL[1]: while (len >= ((size_t )1) << sizeof(size_t ) * 8 - 4)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( VAR1 >= ( ( VAR2 ) 1 ) << sizeof ( VAR2 ) * 8 - 4 )

CENTER_NODE: 47244640260
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771957
FRAGMENT_COUNT: 6
  ORIGINAL[0]: memcpy((ctx -> iv),iv,(15 - cctx -> L))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( VAR1 -> VAR2 ) , VAR2 , ( 15 - VAR3 -> VAR4 ) )
  ORIGINAL[1]: ctx -> iv
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: 15 - cctx -> L
  TYPE[2]: CALL
  TOKENIZED[2]: 15 - VAR1 -> VAR2
  ORIGINAL[3]: iv
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: iv
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476782
FRAGMENT_COUNT: 7
  ORIGINAL[0]: len < bl
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: len -= bl
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -= VAR2
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bl
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772771
FRAGMENT_COUNT: 3
  ORIGINAL[0]: {(902), (1), (((0x7 == 0x10001?2 : 1)) * 256 / 8), (12), ((0x4000 | (0x1000 | 0x10 | 0x100000 | 0x20 | 0x40) | 0x7)), (aesni_ccm_init_key), (aes_ccm_cipher), (((void *)0)), ((sizeof(EVP_AES_CCM_CTX ))), (((void *)0)), (((void *)0)), (aes_ccm_ctrl), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 902 ) , ( 1 ) , ( ( ( 0x7 == 0x10001?2 : 1 ) ) * 256 / 8 ) , ( 12 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40 ) | 0x7 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR4 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: ((0x7 == 0x10001?2 : 1)) * 256 / 8
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( 0x7 == 0x10001?2 : 1 ) ) * 256 / 8
  ORIGINAL[2]: ((0x7 == 0x10001?2 : 1)) * 256
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( 0x7 == 0x10001?2 : 1 ) ) * 256

CENTER_NODE: 30064771350
FRAGMENT_COUNT: 4
  ORIGINAL[0]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ] & ( 1 << 57 - 32 )
  ORIGINAL[1]: OPENSSL_ia32cap_P[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ]
  ORIGINAL[2]: 1 << 57 - 32
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << 57 - 32
  ORIGINAL[3]: 57 - 32
  TYPE[3]: CALL
  TOKENIZED[3]: 57 - 32

CENTER_NODE: 30064771089
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (mode == 0x1 || mode == 0x2) && !enc
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 == 0x1 || VAR1 == 0x2 ) && !enc
  ORIGINAL[1]: &dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: &dat -> VAR1
  ORIGINAL[2]: dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ks
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dat
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dat
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dat
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477421
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mystificatory_caretta = ((char *)( *bicyclical_preanticipate))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( char * ) ( *bicyclical_preanticipate ) )
  ORIGINAL[1]: tracepoint(stonesoup_trace, weakness_start, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: weakness_start
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_trace
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ctx -> cipher_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: !ctx -> encrypt
  TYPE[1]: CALL
  TOKENIZED[1]: !ctx -> VAR1
  ORIGINAL[2]: ctx -> encrypt
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &gctx -> gcm
  TYPE[3]: CALL
  TOKENIZED[3]: &gctx -> VAR1
  ORIGINAL[4]: ctx -> buf
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477359
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !out
  TYPE[0]: CALL
  TOKENIZED[0]: !out
  ORIGINAL[1]: !in
  TYPE[1]: CALL
  TOKENIZED[1]: !in
  ORIGINAL[2]: in
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: in
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: in
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: in
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: in
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 1
  ORIGINAL[0]: arg <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0

CENTER_NODE: 47244640343
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771612
FRAGMENT_COUNT: 11
  ORIGINAL[0]: iv == ((void *)0) && gctx -> iv_set
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 ) && VAR2 -> VAR3
  ORIGINAL[1]: iv = (gctx -> iv)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR2 -> VAR1 )
  ORIGINAL[2]: gctx -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: iv
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: gctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: iv
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: gctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: gctx
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: gctx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: gctx
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: gctx
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719476970
FRAGMENT_COUNT: 16
  ORIGINAL[0]: --n
  TYPE[0]: CALL
  TOKENIZED[0]: --n
  ORIGINAL[1]: c = counter[n]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 [ VAR3 ]
  ORIGINAL[2]: counter[n]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: ++c
  TYPE[3]: CALL
  TOKENIZED[3]: ++c
  ORIGINAL[4]: counter[n] = c
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ] = VAR3
  ORIGINAL[5]: counter[n]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ VAR2 ]
  ORIGINAL[6]: n
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: c
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: counter
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: n
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: c
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: counter
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: n
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: c
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: c
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: n
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 30064771774
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *xctx = (c -> cipher_data)
  TYPE[0]: CALL
  TOKENIZED[0]: *xctx = ( VAR1 -> VAR2 )
  ORIGINAL[1]: c -> cipher_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: xctx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *dat = (EVP_AES_KEY *)(ctx -> cipher_data)
  TYPE[0]: CALL
  TOKENIZED[0]: *dat = ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[1]: (EVP_AES_KEY *)(ctx -> cipher_data)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[2]: dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: dat -> block
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dat
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dat
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771145
FRAGMENT_COUNT: 8
  ORIGINAL[0]: CRYPTO_ofb128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,&ctx -> num,dat -> block)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , &ctx -> VAR7 , VAR8 -> VAR9 )
  ORIGINAL[1]: &dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: &dat -> VAR1
  ORIGINAL[2]: ctx -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &ctx -> num
  TYPE[3]: CALL
  TOKENIZED[3]: &ctx -> VAR1
  ORIGINAL[4]: dat -> block
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: in
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: out
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771924
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !c -> encrypt || !cctx -> tag_set
  TYPE[0]: CALL
  TOKENIZED[0]: !c -> VAR1 || !cctx -> VAR2
  ORIGINAL[1]: CRYPTO_ccm128_tag(&cctx -> ccm,ptr,((size_t )arg))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &cctx -> VAR1 , VAR2 , ( ( VAR3 ) VAR4 ) )
  ORIGINAL[2]: &cctx -> ccm
  TYPE[2]: CALL
  TOKENIZED[2]: &cctx -> VAR1
  ORIGINAL[3]: cctx -> ccm
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (size_t )arg
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 ) VAR2
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 12
  ORIGINAL[0]: &gctx -> gcm
  TYPE[0]: CALL
  TOKENIZED[0]: &gctx -> VAR1
  ORIGINAL[1]: gctx -> gcm
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: gctx -> ctr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: CRYPTO_gcm128_encrypt_ctr32(&gctx -> gcm,in,out,len,gctx -> ctr)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( &gctx -> VAR1 , VAR2 , VAR3 , VAR4 , VAR5 -> VAR6 )
  ORIGINAL[4]: &gctx -> gcm
  TYPE[4]: CALL
  TOKENIZED[4]: &gctx -> VAR1
  ORIGINAL[5]: gctx -> gcm
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: gctx -> ctr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &gctx -> gcm
  TYPE[7]: CALL
  TOKENIZED[7]: &gctx -> VAR1
  ORIGINAL[8]: gctx -> gcm
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: in
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: out
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: len
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 12
  ORIGINAL[0]: dat -> stream . ctr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: CRYPTO_ctr128_encrypt_ctr32(in,out,len,(&dat -> ks),ctx -> iv,ctx -> buf,&num,dat -> stream . ctr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , VAR5 -> VAR7 , &num , VAR8 -> VAR9 . VAR10 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: dat -> ks
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ctx -> iv
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: ctx -> buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &num
  TYPE[6]: CALL
  TOKENIZED[6]: &num
  ORIGINAL[7]: dat -> stream . ctr
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 . VAR3
  ORIGINAL[8]: in
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: out
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: len
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ctx
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771855
FRAGMENT_COUNT: 9
  ORIGINAL[0]: xctx -> xts . key1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: xctx -> xts . key2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: xctx -> stream
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: xctx -> xts . key1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: xctx -> xts
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: xts
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: key1
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: xctx
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: xctx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

