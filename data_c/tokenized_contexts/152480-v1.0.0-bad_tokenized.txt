# Tokenized code fragments for 152480-v1.0.0-bad
# Total center nodes processed: 11
# Total code fragments found: 42

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771157
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *((const Bitmapset *const *)key2)
  TYPE[0]: CALL
  TOKENIZED[0]: * ( ( const VAR1 *const * ) VAR2 )
  ORIGINAL[1]: (const Bitmapset *const *)key2
  TYPE[1]: CALL
  TOKENIZED[1]: ( const VAR1 *const * ) VAR2
  ORIGINAL[2]: key2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476782
FRAGMENT_COUNT: 4
  ORIGINAL[0]: keysize - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - 1
  ORIGINAL[1]: s_len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: keysize
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: keysize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (getenv(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 14
  ORIGINAL[0]: stonesoup_i < strlen(unblock_impartibilibly)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(unblock_impartibilibly)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: ++stonesoup_i
  TYPE[2]: CALL
  TOKENIZED[2]: ++stonesoup_i
  ORIGINAL[3]: unblock_impartibilibly[stonesoup_i] == '&'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] == '&'
  ORIGINAL[4]: stonesoup_i == 0 || unblock_impartibilibly[stonesoup_i - 1] != '\\\\'
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == 0 || VAR2 [ VAR1 - 1 ] != '\\\\'
  ORIGINAL[5]: unblock_impartibilibly[stonesoup_i] == '&'
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ VAR2 ] == '&'
  ORIGINAL[6]: unblock_impartibilibly[stonesoup_i]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ VAR2 ]
  ORIGINAL[7]: stonesoup_i == 0 || unblock_impartibilibly[stonesoup_i - 1] != '&'
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 == 0 || VAR2 [ VAR1 - 1 ] != '&'
  ORIGINAL[8]: stonesoup_i == 0
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 == 0
  ORIGINAL[9]: stonesoup_i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: unblock_impartibilibly
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stonesoup_i
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: stonesoup_i
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: stonesoup_trace
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 47244640260
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_exit_flag = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771150
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bms_hash_value( *((const Bitmapset *const *)key))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( * ( ( const VAR1 *const * ) VAR2 ) )
  ORIGINAL[1]: *((const Bitmapset *const *)key)
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( const VAR1 *const * ) VAR2 )
  ORIGINAL[2]: (const Bitmapset *const *)key
  TYPE[2]: CALL
  TOKENIZED[2]: ( const VAR1 *const * ) VAR2

CENTER_NODE: 68719476792
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (int )keysize
  TYPE[0]: CALL
  TOKENIZED[0]: ( int ) VAR1
  ORIGINAL[1]: keysize
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771144
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((Datum )(hash_uint32(((uint32 )( *((const Oid *)key)))))) & 0xffffffff
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 ) ( FUN1 ( ( ( VAR2 ) ( * ( ( const VAR3 * ) VAR4 ) ) ) ) ) ) & 0xffffffff
  ORIGINAL[1]: (Datum )(hash_uint32(((uint32 )( *((const Oid *)key)))))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( FUN1 ( ( ( VAR2 ) ( * ( ( const VAR3 * ) VAR4 ) ) ) ) )
  ORIGINAL[2]: hash_uint32(((uint32 )( *((const Oid *)key))))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( VAR1 ) ( * ( ( const VAR2 * ) VAR3 ) ) ) )
  ORIGINAL[3]: Datum
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

