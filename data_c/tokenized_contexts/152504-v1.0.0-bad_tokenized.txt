# Tokenized code fragments for 152504-v1.0.0-bad
# Total center nodes processed: 47
# Total code fragments found: 131

CENTER_NODE: 30064771370
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_log(((void *)0),- 8,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , - 8 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: - 8
  TYPE[2]: CALL
  TOKENIZED[2]: - 8

CENTER_NODE: 30064776472
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int_cb = {(decode_interrupt_cb), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { ( VAR2 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: {(decode_interrupt_cb), ((void *)0)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( VAR1 ) , ( ( void * ) 0 ) }
  ORIGINAL[2]: int_cb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640542
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ist -> st -> sample_aspect_ratio . num
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 . VAR4

CENTER_NODE: 47244640559
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776416
FRAGMENT_COUNT: 5
  ORIGINAL[0]: isValid(characterical_mulishnesses) == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) == 1
  ORIGINAL[1]: stonesoup_parsed_input = malloc((strlen(characterical_mulishnesses)+1) * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( ( FUN2 ( VAR2 ) +1 ) * sizeof ( char ) )
  ORIGINAL[2]: malloc((strlen(characterical_mulishnesses)+1) * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( FUN2 ( VAR1 ) +1 ) * sizeof ( char ) )
  ORIGINAL[3]: (strlen(characterical_mulishnesses)+1) * sizeof(char)
  TYPE[3]: CALL
  TOKENIZED[3]: ( FUN1 ( VAR1 ) +1 ) * sizeof ( char )
  ORIGINAL[4]: stonesoup_parsed_input
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771380
FRAGMENT_COUNT: 1
  ORIGINAL[0]: signal(15,sigterm_handler)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 15 , VAR1 )

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640832
FRAGMENT_COUNT: 0

CENTER_NODE: 68719479220
FRAGMENT_COUNT: 8
  ORIGINAL[0]: dec -> subtitle_header
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: dec -> subtitle_header_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !ost -> st -> codec -> subtitle_header
  TYPE[2]: CALL
  TOKENIZED[2]: !ost -> VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: dec -> subtitle_header
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dec -> subtitle_header_size
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: subtitle_header_size
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dec
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dec
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 4
  ORIGINAL[0]: a >= 'a'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 'a'
  ORIGINAL[1]: a -= 'a'-'A'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -= 'a'-'A'
  ORIGINAL[2]: 'a'-'A'
  TYPE[2]: CALL
  TOKENIZED[2]: 'a'-'A'
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476771
FRAGMENT_COUNT: 4
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771162
FRAGMENT_COUNT: 10
  ORIGINAL[0]: src[i] != '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] != '\\0'
  ORIGINAL[1]: src[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: src[i] == ';'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ] == ' ; '
  ORIGINAL[3]: i == 0 || src[i-1] != '\\\\'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[4]: i == 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == 0
  ORIGINAL[5]: src[i-1] != '\\\\'
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ i-1 ] != '\\\\'
  ORIGINAL[6]: i++
  TYPE[6]: CALL
  TOKENIZED[6]: i++
  ORIGINAL[7]: src
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640475
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640620
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640635
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640549
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771199
FRAGMENT_COUNT: 9
  ORIGINAL[0]: r -> x < 0 || r -> x + r -> w > w || r -> y < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 < 0 || VAR1 -> VAR2 + VAR1 -> VAR3 > VAR3 || VAR1 -> VAR4 < 0
  ORIGINAL[1]: r -> y
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: r -> y + r -> h
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 + VAR1 -> VAR3
  ORIGINAL[3]: r -> y
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: r -> y
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: y
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: r
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: r
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: r
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771559
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_dict_get(m,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: m
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476954
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < ist -> nb_filters
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: ist -> nb_filters
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: nb_filters
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ist
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771381
FRAGMENT_COUNT: 1
  ORIGINAL[0]: - 1
  TYPE[0]: CALL
  TOKENIZED[0]: - 1

CENTER_NODE: 68719476739
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mg_vprintf_data((struct mg_connection*) stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( struct mg_connection* ) VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: (struct mg_connection*) stonesoup_printf_context
  TYPE[1]: CALL
  TOKENIZED[1]: ( struct mg_connection* ) VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640560
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771575
FRAGMENT_COUNT: 4
  ORIGINAL[0]: current_time = t
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: do_benchmark_all
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> current_time
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: t
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478259
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i < nb_filtergraphs
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: ist_in_filtergraph(filtergraphs[i],ist)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 [ VAR2 ] , VAR3 )
  ORIGINAL[3]: j < fg -> nb_outputs
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 < VAR2 -> VAR3
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476914
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !ref
  TYPE[0]: CALL
  TOKENIZED[0]: !ref
  ORIGINAL[1]: sub2video_push_ref(ist,pts)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pts
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pts
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ist
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pts
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719480022
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064776341
FRAGMENT_COUNT: 3
  ORIGINAL[0]: setvbuf(stderr,((void *)0),2,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , 2 , 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: stderr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771564
FRAGMENT_COUNT: 1
  ORIGINAL[0]: exit(1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1 )

CENTER_NODE: 47244640433
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478174
FRAGMENT_COUNT: 8
  ORIGINAL[0]: dec -> channels
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: !dec -> channel_layout
  TYPE[1]: CALL
  TOKENIZED[1]: !dec -> VAR1
  ORIGINAL[2]: dec -> channel_layout
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: dec -> channels
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dec -> channel_layout
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: channel_layout
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dec
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dec
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064776470
FRAGMENT_COUNT: 3
  ORIGINAL[0]: received_sigterm = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: received_sigterm
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: received_nb_signals
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771374
FRAGMENT_COUNT: 3
  ORIGINAL[0]: received_nb_signals++
  TYPE[0]: CALL
  TOKENIZED[0]: received_nb_signals++
  ORIGINAL[1]: term_exit()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: <global> received_nb_signals
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771624
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ost -> st -> cur_dts && ost -> st -> cur_dts != ((int64_t )0x8000000000000000UL) && max > pkt -> dts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 && VAR1 -> VAR2 -> VAR3 != ( ( VAR4 ) 0x8000000000000000UL ) && VAR5 > VAR6 -> VAR7
  ORIGINAL[1]: max - pkt -> dts > 2 || (avctx -> codec_type) == AVMEDIA_TYPE_VIDEO?24 : 48
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2 -> VAR3 > 2 || ( VAR4 -> VAR5 ) == AVMEDIA_TYPE_VIDEO?24 : 48
  ORIGINAL[2]: max - pkt -> dts > 2 || (avctx -> codec_type) == AVMEDIA_TYPE_VIDEO
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - VAR2 -> VAR3 > 2 || ( VAR4 -> VAR5 ) == VAR6
  ORIGINAL[3]: max - pkt -> dts > 2
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - VAR2 -> VAR3 > 2
  ORIGINAL[4]: (avctx -> codec_type) == AVMEDIA_TYPE_VIDEO
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 -> VAR2 ) == VAR3

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771246
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ist -> sub2video . last_pts = ref -> pts = pts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 = VAR4 -> VAR5 = VAR5
  ORIGINAL[1]: ist -> sub2video . last_pts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: ref -> pts = pts
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = VAR2
  ORIGINAL[3]: ref -> pts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pts
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479557
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_read_frame(f -> ctx,pkt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: f -> ctx
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pkt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771378
FRAGMENT_COUNT: 1
  ORIGINAL[0]: avformat_network_deinit()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )

CENTER_NODE: 47244640398
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477562
FRAGMENT_COUNT: 3
  ORIGINAL[0]: - 10.0
  TYPE[0]: CALL
  TOKENIZED[0]: - 10 . 0
  ORIGINAL[1]: log(d)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: d
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640399
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640558
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476762
FRAGMENT_COUNT: 6
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: buffer_size = buffer_size * 2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 * 2
  ORIGINAL[2]: free(stonesoup_tainted_buff)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: stonesoup_tainted_buff
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_tainted_buff
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_buff
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771379
FRAGMENT_COUNT: 1
  ORIGINAL[0]: signal(2,sigterm_handler)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 , VAR1 )

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774233
FRAGMENT_COUNT: 5
  ORIGINAL[0]: va < vb?- 1 : ((va > vb?+1 : 0))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < vb?- 1 : ( ( VAR1 > vb?+1 : 0 ) )
  ORIGINAL[1]: va < vb
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: va > vb?+1 : 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > vb?+1 : 0
  ORIGINAL[3]: va > vb
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 > VAR2
  ORIGINAL[4]: +1
  TYPE[4]: CALL
  TOKENIZED[4]: +1

