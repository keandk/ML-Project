# Tokenized code fragments for 153662-v1.0.0-bad
# Total center nodes processed: 26
# Total code fragments found: 201

CENTER_NODE: 68719477250
FRAGMENT_COUNT: 2
  ORIGINAL[0]: break_order_num = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: break_order_num
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476859
FRAGMENT_COUNT: 4
  ORIGINAL[0]: app_info_cmp(a,b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 1
  ORIGINAL[0]: m -> addr == ((char *)(l -> bio))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( char * ) ( VAR3 -> VAR4 ) )

CENTER_NODE: 30064771303
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CRYPTO_is_mem_check_on()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: CRYPTO_mem_ctrl(0x3)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 0x3 )
  ORIGINAL[2]: ami
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477239
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: sporadosiderite_polyandria(metroradioscope_blepharoplast,novemperfoliate_pretastes)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: metroradioscope_blepharoplast
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: novemperfoliate_pretastes
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771363
FRAGMENT_COUNT: 4
  ORIGINAL[0]: CRYPTO_is_mem_check_on()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: pop_info() != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ) != ( ( void * ) 0 )
  ORIGINAL[2]: pop_info()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 30064771199
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771133
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]

CENTER_NODE: 30064771352
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CRYPTO_is_mem_check_on()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: CRYPTO_mem_ctrl(0x3)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 0x3 )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476835
FRAGMENT_COUNT: 3
  ORIGINAL[0]: b -> addr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: addr
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771482
FRAGMENT_COUNT: 4
  ORIGINAL[0]: CRYPTO_is_mem_check_on() && mh != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ) && VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: (void *)(&m)
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) ( &m )
  ORIGINAL[2]: &m
  TYPE[2]: CALL
  TOKENIZED[2]: &m
  ORIGINAL[3]: m
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771202
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = ((unsigned long )(a -> addr))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( unsigned long ) ( VAR2 -> VAR3 ) )
  ORIGINAL[1]: (unsigned long )(a -> addr)
  TYPE[1]: CALL
  TOKENIZED[1]: ( unsigned long ) ( VAR1 -> VAR2 )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771080
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ss_tc_root = getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: ss_tc_root
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ss_tc_root
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476831
FRAGMENT_COUNT: 3
  ORIGINAL[0]: options = bits
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> options
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: bits
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771646
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771132
FRAGMENT_COUNT: 3
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c - 32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 32
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771216
FRAGMENT_COUNT: 4
  ORIGINAL[0]: CRYPTO_THREADID_cmp(&((const APP_INFO *)a_void) -> threadid,&((const APP_INFO *)b_void) -> threadid)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( & ( ( const VAR1 * ) VAR2 ) -> VAR3 , & ( ( const VAR1 * ) VAR4 ) -> VAR3 )
  ORIGINAL[1]: &((const APP_INFO *)a_void) -> threadid
  TYPE[1]: CALL
  TOKENIZED[1]: & ( ( const VAR1 * ) VAR2 ) -> VAR3
  ORIGINAL[2]: ((const APP_INFO *)a_void) -> threadid
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( const VAR1 * ) VAR2 ) -> VAR3
  ORIGINAL[3]: &((const APP_INFO *)b_void) -> threadid
  TYPE[3]: CALL
  TOKENIZED[3]: & ( ( const VAR1 * ) VAR2 ) -> VAR3

CENTER_NODE: 30064771747
FRAGMENT_COUNT: 115
  ORIGINAL[0]: lathworks_unparolable > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: cetacean_unpuffing(lathworks_unparolable,unwhiglike_antimechanist)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: dendrites_vanillinic = ((char *)unwhiglike_antimechanist . redominating_victimizers)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( char * ) VAR2 . VAR3 )
  ORIGINAL[3]: (char *)unwhiglike_antimechanist . redominating_victimizers
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) VAR1 . VAR2
  ORIGINAL[4]: unwhiglike_antimechanist . redominating_victimizers
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: tracepoint(stonesoup_trace, weakness_start, \
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[6]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[7]: &stonesoup_i
  TYPE[7]: CALL
  TOKENIZED[7]: &stonesoup_i
  ORIGINAL[8]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[9]: &stonesoup_buff_size
  TYPE[9]: CALL
  TOKENIZED[9]: &stonesoup_buff_size
  ORIGINAL[10]: stonesoup_data.before = stonesoup_toupper
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 . VAR2 = VAR3
  ORIGINAL[11]: stonesoup_data.before
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 . VAR2
  ORIGINAL[12]: stonesoup_i = 0
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 = 0
  ORIGINAL[13]: stonesoup_i < 64
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 < 64
  ORIGINAL[14]: stonesoup_data.buffer[63] = '\\0'
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 . VAR2 [ 63 ] = '\\0'
  ORIGINAL[15]: stonesoup_data.buffer[63]
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 . VAR2 [ 63 ]
  ORIGINAL[16]: stonesoup_data.buffer
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 . VAR2
  ORIGINAL[17]: stonesoup_data.after = stonesoup_toupper
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 . VAR2 = VAR3
  ORIGINAL[18]: stonesoup_data.after
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 . VAR2
  ORIGINAL[19]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[19]: CALL
  TOKENIZED[19]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[20]: stonesoup_data.before
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 . VAR2
  ORIGINAL[21]: &stonesoup_data.before
  TYPE[21]: CALL
  TOKENIZED[21]: &stonesoup_data . VAR1
  ORIGINAL[22]: stonesoup_data.before
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 . VAR2
  ORIGINAL[23]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[23]: CALL
  TOKENIZED[23]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[24]: stonesoup_data.buffer
  TYPE[24]: CALL
  TOKENIZED[24]: VAR1 . VAR2
  ORIGINAL[25]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[25]: CALL
  TOKENIZED[25]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[26]: stonesoup_data.after
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 . VAR2
  ORIGINAL[27]: &stonesoup_data.after
  TYPE[27]: CALL
  TOKENIZED[27]: &stonesoup_data . VAR1
  ORIGINAL[28]: stonesoup_data.after
  TYPE[28]: CALL
  TOKENIZED[28]: VAR1 . VAR2
  ORIGINAL[29]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[29]: CALL
  TOKENIZED[29]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[30]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[30]: CALL
  TOKENIZED[30]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[31]: stonesoup_taint_len = ((int )(strlen(dendrites_vanillinic)))
  TYPE[31]: CALL
  TOKENIZED[31]: VAR1 = ( ( int ) ( FUN1 ( VAR2 ) ) )
  ORIGINAL[32]: (int )(strlen(dendrites_vanillinic))
  TYPE[32]: CALL
  TOKENIZED[32]: ( int ) ( FUN1 ( VAR1 ) )
  ORIGINAL[33]: strlen(dendrites_vanillinic)
  TYPE[33]: CALL
  TOKENIZED[33]: FUN1 ( VAR1 )
  ORIGINAL[34]: stonesoup_taint_len >= 0
  TYPE[34]: CALL
  TOKENIZED[34]: VAR1 >= 0
  ORIGINAL[35]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[35]: CALL
  TOKENIZED[35]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[36]: stonesoup_data.buffer
  TYPE[36]: CALL
  TOKENIZED[36]: VAR1 . VAR2
  ORIGINAL[37]: stonesoup_i = 0
  TYPE[37]: CALL
  TOKENIZED[37]: VAR1 = 0
  ORIGINAL[38]: stonesoup_i < 64
  TYPE[38]: CALL
  TOKENIZED[38]: VAR1 < 64
  ORIGINAL[39]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[39]: CALL
  TOKENIZED[39]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[40]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[40]: CALL
  TOKENIZED[40]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[41]: stonesoup_printf(\
  TYPE[41]: CALL
  TOKENIZED[41]: FUN1 ( \
  ORIGINAL[42]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[42]: CALL
  TOKENIZED[42]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[43]: &stonesoup_i
  TYPE[43]: CALL
  TOKENIZED[43]: &stonesoup_i
  ORIGINAL[44]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[44]: CALL
  TOKENIZED[44]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[45]: stonesoup_data.buffer
  TYPE[45]: CALL
  TOKENIZED[45]: VAR1 . VAR2
  ORIGINAL[46]: tracepoint(stonesoup_trace, weakness_end)
  TYPE[46]: CALL
  TOKENIZED[46]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[47]: stonesoup_close_printf_context()
  TYPE[47]: CALL
  TOKENIZED[47]: FUN1 ( )
  ORIGINAL[48]: redominating_victimizers
  TYPE[48]: FIELD_IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: before
  TYPE[49]: FIELD_IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: buffer
  TYPE[50]: FIELD_IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: after
  TYPE[51]: FIELD_IDENTIFIER
  TOKENIZED[51]: VAR1
  ORIGINAL[52]: before
  TYPE[52]: FIELD_IDENTIFIER
  TOKENIZED[52]: VAR1
  ORIGINAL[53]: before
  TYPE[53]: FIELD_IDENTIFIER
  TOKENIZED[53]: VAR1
  ORIGINAL[54]: buffer
  TYPE[54]: FIELD_IDENTIFIER
  TOKENIZED[54]: VAR1
  ORIGINAL[55]: after
  TYPE[55]: FIELD_IDENTIFIER
  TOKENIZED[55]: VAR1
  ORIGINAL[56]: after
  TYPE[56]: FIELD_IDENTIFIER
  TOKENIZED[56]: VAR1
  ORIGINAL[57]: buffer
  TYPE[57]: FIELD_IDENTIFIER
  TOKENIZED[57]: VAR1
  ORIGINAL[58]: buffer
  TYPE[58]: FIELD_IDENTIFIER
  TOKENIZED[58]: VAR1
  ORIGINAL[59]: lathworks_unparolable
  TYPE[59]: IDENTIFIER
  TOKENIZED[59]: VAR1
  ORIGINAL[60]: lathworks_unparolable
  TYPE[60]: IDENTIFIER
  TOKENIZED[60]: VAR1
  ORIGINAL[61]: unwhiglike_antimechanist
  TYPE[61]: IDENTIFIER
  TOKENIZED[61]: VAR1
  ORIGINAL[62]: dendrites_vanillinic
  TYPE[62]: IDENTIFIER
  TOKENIZED[62]: VAR1
  ORIGINAL[63]: unwhiglike_antimechanist
  TYPE[63]: IDENTIFIER
  TOKENIZED[63]: VAR1
  ORIGINAL[64]: stonesoup_trace
  TYPE[64]: IDENTIFIER
  TOKENIZED[64]: VAR1
  ORIGINAL[65]: weakness_start
  TYPE[65]: IDENTIFIER
  TOKENIZED[65]: VAR1
  ORIGINAL[66]: stonesoup_trace
  TYPE[66]: IDENTIFIER
  TOKENIZED[66]: VAR1
  ORIGINAL[67]: variable_signed_integral
  TYPE[67]: IDENTIFIER
  TOKENIZED[67]: VAR1
  ORIGINAL[68]: stonesoup_i
  TYPE[68]: IDENTIFIER
  TOKENIZED[68]: VAR1
  ORIGINAL[69]: stonesoup_i
  TYPE[69]: IDENTIFIER
  TOKENIZED[69]: VAR1
  ORIGINAL[70]: stonesoup_trace
  TYPE[70]: IDENTIFIER
  TOKENIZED[70]: VAR1
  ORIGINAL[71]: variable_signed_integral
  TYPE[71]: IDENTIFIER
  TOKENIZED[71]: VAR1
  ORIGINAL[72]: stonesoup_buff_size
  TYPE[72]: IDENTIFIER
  TOKENIZED[72]: VAR1
  ORIGINAL[73]: stonesoup_buff_size
  TYPE[73]: IDENTIFIER
  TOKENIZED[73]: VAR1
  ORIGINAL[74]: stonesoup_data
  TYPE[74]: IDENTIFIER
  TOKENIZED[74]: VAR1
  ORIGINAL[75]: stonesoup_i
  TYPE[75]: IDENTIFIER
  TOKENIZED[75]: VAR1
  ORIGINAL[76]: stonesoup_i
  TYPE[76]: IDENTIFIER
  TOKENIZED[76]: VAR1
  ORIGINAL[77]: stonesoup_data
  TYPE[77]: IDENTIFIER
  TOKENIZED[77]: VAR1
  ORIGINAL[78]: stonesoup_data
  TYPE[78]: IDENTIFIER
  TOKENIZED[78]: VAR1
  ORIGINAL[79]: stonesoup_trace
  TYPE[79]: IDENTIFIER
  TOKENIZED[79]: VAR1
  ORIGINAL[80]: variable_signed_integral
  TYPE[80]: IDENTIFIER
  TOKENIZED[80]: VAR1
  ORIGINAL[81]: stonesoup_data
  TYPE[81]: IDENTIFIER
  TOKENIZED[81]: VAR1
  ORIGINAL[82]: stonesoup_data
  TYPE[82]: IDENTIFIER
  TOKENIZED[82]: VAR1
  ORIGINAL[83]: stonesoup_trace
  TYPE[83]: IDENTIFIER
  TOKENIZED[83]: VAR1
  ORIGINAL[84]: variable_buffer
  TYPE[84]: IDENTIFIER
  TOKENIZED[84]: VAR1
  ORIGINAL[85]: stonesoup_data
  TYPE[85]: IDENTIFIER
  TOKENIZED[85]: VAR1
  ORIGINAL[86]: stonesoup_trace
  TYPE[86]: IDENTIFIER
  TOKENIZED[86]: VAR1
  ORIGINAL[87]: variable_signed_integral
  TYPE[87]: IDENTIFIER
  TOKENIZED[87]: VAR1
  ORIGINAL[88]: stonesoup_data
  TYPE[88]: IDENTIFIER
  TOKENIZED[88]: VAR1
  ORIGINAL[89]: stonesoup_data
  TYPE[89]: IDENTIFIER
  TOKENIZED[89]: VAR1
  ORIGINAL[90]: stonesoup_trace
  TYPE[90]: IDENTIFIER
  TOKENIZED[90]: VAR1
  ORIGINAL[91]: trace_point
  TYPE[91]: IDENTIFIER
  TOKENIZED[91]: VAR1
  ORIGINAL[92]: stonesoup_trace
  TYPE[92]: IDENTIFIER
  TOKENIZED[92]: VAR1
  ORIGINAL[93]: trace_point
  TYPE[93]: IDENTIFIER
  TOKENIZED[93]: VAR1
  ORIGINAL[94]: stonesoup_taint_len
  TYPE[94]: IDENTIFIER
  TOKENIZED[94]: VAR1
  ORIGINAL[95]: dendrites_vanillinic
  TYPE[95]: IDENTIFIER
  TOKENIZED[95]: VAR1
  ORIGINAL[96]: stonesoup_taint_len
  TYPE[96]: IDENTIFIER
  TOKENIZED[96]: VAR1
  ORIGINAL[97]: stonesoup_trace
  TYPE[97]: IDENTIFIER
  TOKENIZED[97]: VAR1
  ORIGINAL[98]: variable_buffer
  TYPE[98]: IDENTIFIER
  TOKENIZED[98]: VAR1
  ORIGINAL[99]: stonesoup_data
  TYPE[99]: IDENTIFIER
  TOKENIZED[99]: VAR1
  ORIGINAL[100]: stonesoup_i
  TYPE[100]: IDENTIFIER
  TOKENIZED[100]: VAR1
  ORIGINAL[101]: stonesoup_i
  TYPE[101]: IDENTIFIER
  TOKENIZED[101]: VAR1
  ORIGINAL[102]: stonesoup_trace
  TYPE[102]: IDENTIFIER
  TOKENIZED[102]: VAR1
  ORIGINAL[103]: trace_point
  TYPE[103]: IDENTIFIER
  TOKENIZED[103]: VAR1
  ORIGINAL[104]: stonesoup_trace
  TYPE[104]: IDENTIFIER
  TOKENIZED[104]: VAR1
  ORIGINAL[105]: trace_point
  TYPE[105]: IDENTIFIER
  TOKENIZED[105]: VAR1
  ORIGINAL[106]: stonesoup_trace
  TYPE[106]: IDENTIFIER
  TOKENIZED[106]: VAR1
  ORIGINAL[107]: variable_signed_integral
  TYPE[107]: IDENTIFIER
  TOKENIZED[107]: VAR1
  ORIGINAL[108]: stonesoup_i
  TYPE[108]: IDENTIFIER
  TOKENIZED[108]: VAR1
  ORIGINAL[109]: stonesoup_i
  TYPE[109]: IDENTIFIER
  TOKENIZED[109]: VAR1
  ORIGINAL[110]: stonesoup_trace
  TYPE[110]: IDENTIFIER
  TOKENIZED[110]: VAR1
  ORIGINAL[111]: variable_buffer
  TYPE[111]: IDENTIFIER
  TOKENIZED[111]: VAR1
  ORIGINAL[112]: stonesoup_data
  TYPE[112]: IDENTIFIER
  TOKENIZED[112]: VAR1
  ORIGINAL[113]: stonesoup_trace
  TYPE[113]: IDENTIFIER
  TOKENIZED[113]: VAR1
  ORIGINAL[114]: weakness_end
  TYPE[114]: IDENTIFIER
  TOKENIZED[114]: VAR1

CENTER_NODE: 68719477150
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476949
FRAGMENT_COUNT: 9
  ORIGINAL[0]: m -> addr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: m -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: m -> line
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: m -> num
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: options & 0x2
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 & 0x2
  ORIGINAL[5]: m -> threadid
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: threadid
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: m
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: m
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771121
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771142
FRAGMENT_COUNT: 3
  ORIGINAL[0]: --inf -> references <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: --inf -> VAR1 <= 0
  ORIGINAL[1]: CRYPTO_free(inf)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: inf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771213
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771255
FRAGMENT_COUNT: 2
  ORIGINAL[0]: app_info_hash(a)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477146
FRAGMENT_COUNT: 4
  ORIGINAL[0]: m -> file
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: m -> line
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: line
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: m
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477159
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: latterll_humanitarian
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

