# Tokenized code fragments for 153709-v1.0.0-bad
# Total center nodes processed: 45
# Total code fragments found: 177

CENTER_NODE: 30064771377
FRAGMENT_COUNT: 1
  ORIGINAL[0]: - 1
  TYPE[0]: CALL
  TOKENIZED[0]: - 1

CENTER_NODE: 47244640547
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771560
FRAGMENT_COUNT: 1
  ORIGINAL[0]: exit(1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1 )

CENTER_NODE: 30064773407
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ist_in_filtergraph(filtergraphs[i],ist)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 [ VAR2 ] , VAR3 )
  ORIGINAL[1]: configure_filtergraph(fg) < 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) < 0
  ORIGINAL[2]: configure_filtergraph(fg)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: av_log(((void *)0),8,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ( ( void * ) 0 ) , 8 , \
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: exit(1)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( 1 )
  ORIGINAL[6]: j
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476845
FRAGMENT_COUNT: 12
  ORIGINAL[0]: r -> type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: r -> x < 0 || r -> x + r -> w > w || r -> y < 0 || r -> y + r -> h > h
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 < 0 || VAR1 -> VAR2 + VAR1 -> VAR3 > VAR3 || VAR1 -> VAR4 < 0 || VAR1 -> VAR4 + VAR1 -> VAR5 > VAR5
  ORIGINAL[2]: r -> x
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: r -> x
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: r -> w
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: r -> y
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: r -> y
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: r -> h
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: r -> y
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: y
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: dst
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: r
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0
  ORIGINAL[1]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[2]: stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 )
  ORIGINAL[3]: (char *) -1
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) -1
  ORIGINAL[4]: -1
  TYPE[4]: CALL
  TOKENIZED[4]: -1

CENTER_NODE: 30064771375
FRAGMENT_COUNT: 1
  ORIGINAL[0]: signal(2,sigterm_handler)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 , VAR1 )

CENTER_NODE: 47244640820
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771124
FRAGMENT_COUNT: 2
  ORIGINAL[0]: fflush(stonesoup_printf_context)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719479956
FRAGMENT_COUNT: 4
  ORIGINAL[0]: atexit(exit_program)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: setvbuf(stderr,((void *)0),2,0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , 2 , 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: stderr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772369
FRAGMENT_COUNT: 4
  ORIGINAL[0]: enc -> flags & 0x8000
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 & 0x8000
  ORIGINAL[1]: (enc -> width * enc -> height) * 255.0 * 255.0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 * VAR1 -> VAR3 ) * 255 . 0 * 255 . 0
  ORIGINAL[2]: (enc -> width * enc -> height) * 255.0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 * VAR1 -> VAR3 ) * 255 . 0
  ORIGINAL[3]: enc -> width * enc -> height
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 * VAR1 -> VAR3

CENTER_NODE: 30064772340
FRAGMENT_COUNT: 3
  ORIGINAL[0]: - 10.0 * log(d) / log(10.0)
  TYPE[0]: CALL
  TOKENIZED[0]: - 10 . 0 * FUN1 ( VAR1 ) / FUN1 ( 10 . 0 )
  ORIGINAL[1]: - 10.0 * log(d)
  TYPE[1]: CALL
  TOKENIZED[1]: - 10 . 0 * FUN1 ( VAR1 )
  ORIGINAL[2]: log(10.0)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 10 . 0 )

CENTER_NODE: 30064771243
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ref -> pts = pts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: ref -> pts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pts
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ref
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pts
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ref
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776428
FRAGMENT_COUNT: 8
  ORIGINAL[0]: kinoos_bombycidae . epilobe_cajuputene != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != 0
  ORIGINAL[1]: ( *uncarnivorously_pacien) . epilobe_cajuputene
  TYPE[1]: CALL
  TOKENIZED[1]: ( *uncarnivorously_pacien ) . VAR1
  ORIGINAL[2]: ( *uncarnivorously_pacien) . epilobe_cajuputene != 0
  TYPE[2]: CALL
  TOKENIZED[2]: ( *uncarnivorously_pacien ) . VAR1 != 0
  ORIGINAL[3]: ( *uncarnivorously_pacien) . epilobe_cajuputene
  TYPE[3]: CALL
  TOKENIZED[3]: ( *uncarnivorously_pacien ) . VAR1
  ORIGINAL[4]: *uncarnivorously_pacien
  TYPE[4]: CALL
  TOKENIZED[4]: *uncarnivorously_pacien
  ORIGINAL[5]: ( *uncarnivorously_pacien) . epilobe_cajuputene
  TYPE[5]: CALL
  TOKENIZED[5]: ( *uncarnivorously_pacien ) . VAR1
  ORIGINAL[6]: *uncarnivorously_pacien
  TYPE[6]: CALL
  TOKENIZED[6]: *uncarnivorously_pacien
  ORIGINAL[7]: epilobe_cajuputene
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640408
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640421
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771358
FRAGMENT_COUNT: 17
  ORIGINAL[0]: i < ist -> nb_filters
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: ist -> nb_filters
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: av_buffersrc_add_ref(ist -> filters[i] -> filter,((void *)0),0)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] -> VAR4 , ( ( void * ) 0 ) , 0 )
  ORIGINAL[4]: ist -> filters[i] -> filter
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ] -> VAR4
  ORIGINAL[5]: ist -> filters[i]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[6]: ist -> filters
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: (void *)0
  TYPE[7]: CALL
  TOKENIZED[7]: ( void * ) 0
  ORIGINAL[8]: for (i = 0;i < ist -> nb_filters;i++)
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: for ( VAR1 = 0 ; VAR1 < VAR2 -> VAR3 ; i++ )
  ORIGINAL[9]: nb_filters
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: filters
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: filter
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: i
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: ist
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: i
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ist
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: i
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 68719476896
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sub -> pts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: sub -> start_display_time
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: start_display_time
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sub
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sub
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640608
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776467
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(decode_interrupt_cb), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( VAR1 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 68719477164
FRAGMENT_COUNT: 17
  ORIGINAL[0]: avctx -> codec_type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: avctx -> codec
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: av_bitstream_filter_filter(bsfc,avctx,((void *)0),&new_pkt . data,&new_pkt . size,(pkt -> data),pkt -> size,pkt -> flags & 0000001)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , ( ( void * ) 0 ) , &new_pkt . VAR3 , &new_pkt . VAR4 , ( VAR5 -> VAR3 ) , VAR5 -> VAR4 , VAR5 -> VAR6 & 0000001 )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: &new_pkt . data
  TYPE[4]: CALL
  TOKENIZED[4]: &new_pkt . VAR1
  ORIGINAL[5]: &new_pkt . size
  TYPE[5]: CALL
  TOKENIZED[5]: &new_pkt . VAR1
  ORIGINAL[6]: pkt -> data
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: pkt -> size
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: pkt -> flags & 0000001
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 & 0000001
  ORIGINAL[9]: avctx -> codec
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: avctx -> codec
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: avctx
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: bsfc
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: bsfc
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: avctx
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: avctx
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: avctx
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 47244640546
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640623
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478741
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va =  *((int64_t *)a)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = * ( ( VAR2 * ) VAR3 )
  ORIGINAL[1]: *((int64_t *)a)
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( VAR1 * ) VAR2 )
  ORIGINAL[2]: va
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: va
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064776392
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dipodomyinae_caporals != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: *wondercraft_pigwidgin = maniacal_abstracters
  TYPE[1]: CALL
  TOKENIZED[1]: *wondercraft_pigwidgin = VAR1
  ORIGINAL[2]: *wondercraft_pigwidgin
  TYPE[2]: CALL
  TOKENIZED[2]: *wondercraft_pigwidgin
  ORIGINAL[3]: maniacal_abstracters
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477097
FRAGMENT_COUNT: 20
  ORIGINAL[0]: buf[1024]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1024 ]
  ORIGINAL[1]: __builtin_va_start(va,fmt)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: vsnprintf(buf,sizeof(buf),fmt,va)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , sizeof ( VAR1 ) , VAR2 , VAR3 )
  ORIGINAL[3]: sizeof(buf)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 )
  ORIGINAL[4]: __builtin_va_end(va)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: printf(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: t - current_time
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 - VAR2
  ORIGINAL[7]: do_benchmark_all
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: fmt
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: va
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: fmt
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: fmt
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: va
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: va
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: t
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: <global> current_time
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: <global> VAR1
  ORIGINAL[18]: buf
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: <global> current_time
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: <global> VAR1

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640548
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476826
FRAGMENT_COUNT: 4
  ORIGINAL[0]: strlen(param)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: var_len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: param
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: param
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771374
FRAGMENT_COUNT: 1
  ORIGINAL[0]: avformat_network_deinit()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )

CENTER_NODE: 68719478174
FRAGMENT_COUNT: 17
  ORIGINAL[0]: *dec = ist -> st -> codec
  TYPE[0]: CALL
  TOKENIZED[0]: *dec = VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: ist -> st -> codec
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: dec -> channel_layout
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: dec -> channels
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dec -> channels
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: dec -> channel_layout
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: dec -> channels
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: dec -> channel_layout
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: dec
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ist
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: dec
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: dec
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: dec
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: dec
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: dec
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: dec
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: dec
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 30064771368
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_log(((void *)0),- 8,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , - 8 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: - 8
  TYPE[2]: CALL
  TOKENIZED[2]: - 8

CENTER_NODE: 30064771376
FRAGMENT_COUNT: 1
  ORIGINAL[0]: signal(15,sigterm_handler)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 15 , VAR1 )

CENTER_NODE: 68719480051
FRAGMENT_COUNT: 2
  ORIGINAL[0]: received_sigterm = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: received_sigterm
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064775613
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_read_frame(f -> ctx,pkt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: f -> ctx
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pkt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773667
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < ist -> nb_filters
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: changed = ist -> st -> codec -> width != ist -> filters[i] -> filter -> outputs[0] -> w || ist -> st -> codec -> height != ist -> filters[i] -> filter -> outputs[0] -> h || (ist -> st -> codec -> pix_fmt) != ist -> filters[i] -> filter -> outputs[0] -> format
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3 -> VAR4 -> VAR5 != VAR2 -> VAR6 [ VAR7 ] -> VAR8 -> VAR9 [ 0 ] -> VAR10 || VAR2 -> VAR3 -> VAR4 -> VAR11 != VAR2 -> VAR6 [ VAR7 ] -> VAR8 -> VAR9 [ 0 ] -> VAR12 || ( VAR2 -> VAR3 -> VAR4 -> VAR13 ) != VAR2 -> VAR6 [ VAR7 ] -> VAR8 -> VAR9 [ 0 ] -> VAR14
  ORIGINAL[2]: ist -> st -> codec -> width != ist -> filters[i] -> filter -> outputs[0] -> w || ist -> st -> codec -> height != ist -> filters[i] -> filter -> outputs[0] -> h || (ist -> st -> codec -> pix_fmt) != ist -> filters[i] -> filter -> outputs[0] -> format
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 -> VAR4 != VAR1 -> VAR5 [ VAR6 ] -> VAR7 -> VAR8 [ 0 ] -> VAR9 || VAR1 -> VAR2 -> VAR3 -> VAR10 != VAR1 -> VAR5 [ VAR6 ] -> VAR7 -> VAR8 [ 0 ] -> VAR11 || ( VAR1 -> VAR2 -> VAR3 -> VAR12 ) != VAR1 -> VAR5 [ VAR6 ] -> VAR7 -> VAR8 [ 0 ] -> VAR13
  ORIGINAL[3]: changed
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: frame_sample_aspect
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476973
FRAGMENT_COUNT: 4
  ORIGINAL[0]: term_exit()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: received_nb_signals > 3
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 3
  ORIGINAL[2]: <global> received_nb_signals
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> received_nb_signals
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stat(dirpath, &st) == -1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &st ) == -1
  ORIGINAL[1]: retval = mkdir(dirpath, 0700)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , 0700 )
  ORIGINAL[2]: mkdir(dirpath, 0700)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0700 )
  ORIGINAL[3]: retval
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640463
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719480113
FRAGMENT_COUNT: 5
  ORIGINAL[0]: out_file = fopen(out_filename, \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: fprintf(stderr, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: out_filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stderr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: out_filename
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640537
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 2
  ORIGINAL[0]: t = av_dict_get(m,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: if (t = av_dict_get(m,\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 = FUN1 ( VAR2 , \

