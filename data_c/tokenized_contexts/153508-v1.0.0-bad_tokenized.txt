# Tokenized code fragments for 153508-v1.0.0-bad
# Total center nodes processed: 29
# Total code fragments found: 176

CENTER_NODE: 30064772122
FRAGMENT_COUNT: 4
  ORIGINAL[0]: g_slist_find_custom(conv -> data_list,((gpointer *)(&temp)),p_compare)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , ( ( VAR3 * ) ( &temp ) ) , VAR4 )
  ORIGINAL[1]: conv -> data_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (gpointer *)(&temp)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) ( &temp )
  ORIGINAL[3]: &temp
  TYPE[3]: CALL
  TOKENIZED[3]: &temp

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477493
FRAGMENT_COUNT: 3
  ORIGINAL[0]: conversation -> dissector_handle
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: dissector_handle
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: conversation
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771554
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ADD_ADDRESS_TO_HASH_index < (&key -> addr1) -> len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < ( &key -> VAR2 ) -> VAR3
  ORIGINAL[1]: hash_val += ADD_ADDRESS_TO_HASH_data[ADD_ADDRESS_TO_HASH_index]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += VAR2 [ VAR3 ]
  ORIGINAL[2]: ADD_ADDRESS_TO_HASH_data[ADD_ADDRESS_TO_HASH_index]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: ADD_ADDRESS_TO_HASH_data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hash_val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ADD_ADDRESS_TO_HASH_data
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ADD_ADDRESS_TO_HASH_index
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477516
FRAGMENT_COUNT: 6
  ORIGINAL[0]: pinfo -> src
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pinfo -> dst
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pinfo -> ptype
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pinfo -> srcport
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: srcport
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771466
FRAGMENT_COUNT: 19
  ORIGINAL[0]: (v1 -> ptype) != (v2 -> ptype)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) != ( VAR3 -> VAR2 )
  ORIGINAL[1]: v1 -> port1 == v2 -> port1 && (((&v1 -> addr1) -> type) == ((&v2 -> addr1) -> type) && (((&v1 -> addr1) -> type) == AT_NONE || (&v1 -> addr1) -> len == (&v2 -> addr1) -> len && memcmp((&v1 -> addr1) -> data,(&v2 -> addr1) -> data,((&v1 -> addr1) -> len)) == 0)) && (((&v1 -> addr2) -> type) == ((&v2 -> addr2) -> type) && (((&v1 -> addr2) -> type) == AT_NONE || (&v1 -> addr2) -> len == (&v2 -> addr2) -> len && memcmp((&v1 -> addr2) -> data,(&v2 -> addr2) -> data,((&v1 -> addr2) -> len)) == 0))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 == VAR3 -> VAR2 && ( ( ( &v1 -> VAR4 ) -> VAR5 ) == ( ( &v2 -> VAR4 ) -> VAR5 ) && ( ( ( &v1 -> VAR4 ) -> VAR5 ) == VAR6 || ( &v1 -> VAR4 ) -> VAR7 == ( &v2 -> VAR4 ) -> VAR7 && FUN1 ( ( &v1 -> VAR4 ) -> VAR8 , ( &v2 -> VAR4 ) -> VAR8 , ( ( &v1 -> VAR4 ) -> VAR7 ) ) == 0 ) ) && ( ( ( &v1 -> VAR9 ) -> VAR5 ) == ( ( &v2 -> VAR9 ) -> VAR5 ) && ( ( ( &v1 -> VAR9 ) -> VAR5 ) == VAR6 || ( &v1 -> VAR9 ) -> VAR7 == ( &v2 -> VAR9 ) -> VAR7 && FUN1 ( ( &v1 -> VAR9 ) -> VAR8 , ( &v2 -> VAR9 ) -> VAR8 , ( ( &v1 -> VAR9 ) -> VAR7 ) ) == 0 ) )
  ORIGINAL[2]: v1 -> port1 == v2 -> port1 && (((&v1 -> addr1) -> type) == ((&v2 -> addr1) -> type) && (((&v1 -> addr1) -> type) == AT_NONE || (&v1 -> addr1) -> len == (&v2 -> addr1) -> len && memcmp((&v1 -> addr1) -> data,(&v2 -> addr1) -> data,((&v1 -> addr1) -> len)) == 0))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 == VAR3 -> VAR2 && ( ( ( &v1 -> VAR4 ) -> VAR5 ) == ( ( &v2 -> VAR4 ) -> VAR5 ) && ( ( ( &v1 -> VAR4 ) -> VAR5 ) == VAR6 || ( &v1 -> VAR4 ) -> VAR7 == ( &v2 -> VAR4 ) -> VAR7 && FUN1 ( ( &v1 -> VAR4 ) -> VAR8 , ( &v2 -> VAR4 ) -> VAR8 , ( ( &v1 -> VAR4 ) -> VAR7 ) ) == 0 ) )
  ORIGINAL[3]: v1 -> port1 == v2 -> port1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 == VAR3 -> VAR2
  ORIGINAL[4]: ((&v1 -> addr1) -> type) == ((&v2 -> addr1) -> type) && (((&v1 -> addr1) -> type) == AT_NONE || (&v1 -> addr1) -> len == (&v2 -> addr1) -> len && memcmp((&v1 -> addr1) -> data,(&v2 -> addr1) -> data,((&v1 -> addr1) -> len)) == 0)
  TYPE[4]: CALL
  TOKENIZED[4]: ( ( &v1 -> VAR1 ) -> VAR2 ) == ( ( &v2 -> VAR1 ) -> VAR2 ) && ( ( ( &v1 -> VAR1 ) -> VAR2 ) == VAR3 || ( &v1 -> VAR1 ) -> VAR4 == ( &v2 -> VAR1 ) -> VAR4 && FUN1 ( ( &v1 -> VAR1 ) -> VAR5 , ( &v2 -> VAR1 ) -> VAR5 , ( ( &v1 -> VAR1 ) -> VAR4 ) ) == 0 )
  ORIGINAL[5]: ((&v1 -> addr2) -> type) == ((&v2 -> addr2) -> type) && (((&v1 -> addr2) -> type) == AT_NONE || (&v1 -> addr2) -> len == (&v2 -> addr2) -> len && memcmp((&v1 -> addr2) -> data,(&v2 -> addr2) -> data,((&v1 -> addr2) -> len)) == 0)
  TYPE[5]: CALL
  TOKENIZED[5]: ( ( &v1 -> VAR1 ) -> VAR2 ) == ( ( &v2 -> VAR1 ) -> VAR2 ) && ( ( ( &v1 -> VAR1 ) -> VAR2 ) == VAR3 || ( &v1 -> VAR1 ) -> VAR4 == ( &v2 -> VAR1 ) -> VAR4 && FUN1 ( ( &v1 -> VAR1 ) -> VAR5 , ( &v2 -> VAR1 ) -> VAR5 , ( ( &v1 -> VAR1 ) -> VAR4 ) ) == 0 )
  ORIGINAL[6]: ((&v1 -> addr2) -> type) == ((&v2 -> addr2) -> type)
  TYPE[6]: CALL
  TOKENIZED[6]: ( ( &v1 -> VAR1 ) -> VAR2 ) == ( ( &v2 -> VAR1 ) -> VAR2 )
  ORIGINAL[7]: (&v1 -> addr2) -> type
  TYPE[7]: CALL
  TOKENIZED[7]: ( &v1 -> VAR1 ) -> VAR2
  ORIGINAL[8]: &v1 -> addr2
  TYPE[8]: CALL
  TOKENIZED[8]: &v1 -> VAR1
  ORIGINAL[9]: v1 -> addr2
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: (&v2 -> addr2) -> type
  TYPE[10]: CALL
  TOKENIZED[10]: ( &v2 -> VAR1 ) -> VAR2
  ORIGINAL[11]: &v2 -> addr2
  TYPE[11]: CALL
  TOKENIZED[11]: &v2 -> VAR1
  ORIGINAL[12]: v2 -> addr2
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: addr2
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: type
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: addr2
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: type
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: v1
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: v2
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 30064771129
FRAGMENT_COUNT: 5
  ORIGINAL[0]: conversation -> options & 0x08 && (conversation -> key_ptr -> ptype) != PT_UDP
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 & 0x08 && ( VAR1 -> VAR3 -> VAR4 ) != VAR5
  ORIGINAL[1]: conversation -> options & (~(0x08 | 0x01 | 0x02))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 & ( ~ ( 0x08 | 0x01 | 0x02 ) )
  ORIGINAL[2]: conversation -> options
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ~(0x08 | 0x01 | 0x02)
  TYPE[3]: CALL
  TOKENIZED[3]: ~ ( 0x08 | 0x01 | 0x02 )
  ORIGINAL[4]: 0x08 | 0x01 | 0x02
  TYPE[4]: CALL
  TOKENIZED[4]: 0x08 | 0x01 | 0x02

CENTER_NODE: 30064771408
FRAGMENT_COUNT: 14
  ORIGINAL[0]: ((&v1 -> addr1) -> type) == ((&v2 -> addr1) -> type)
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( &v1 -> VAR1 ) -> VAR2 ) == ( ( &v2 -> VAR1 ) -> VAR2 )
  ORIGINAL[1]: (&v1 -> addr1) -> type
  TYPE[1]: CALL
  TOKENIZED[1]: ( &v1 -> VAR1 ) -> VAR2
  ORIGINAL[2]: &v1 -> addr1
  TYPE[2]: CALL
  TOKENIZED[2]: &v1 -> VAR1
  ORIGINAL[3]: v1 -> addr1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (&v1 -> addr1) -> type
  TYPE[4]: CALL
  TOKENIZED[4]: ( &v1 -> VAR1 ) -> VAR2
  ORIGINAL[5]: &v1 -> addr1
  TYPE[5]: CALL
  TOKENIZED[5]: &v1 -> VAR1
  ORIGINAL[6]: v1 -> addr1
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &v1 -> addr1
  TYPE[7]: CALL
  TOKENIZED[7]: &v1 -> VAR1
  ORIGINAL[8]: v1 -> addr1
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: &v1 -> addr1
  TYPE[9]: CALL
  TOKENIZED[9]: &v1 -> VAR1
  ORIGINAL[10]: v1 -> addr1
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: &v1 -> addr1
  TYPE[11]: CALL
  TOKENIZED[11]: &v1 -> VAR1
  ORIGINAL[12]: v1 -> addr1
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: type
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064771572
FRAGMENT_COUNT: 18
  ORIGINAL[0]: v1 -> port1 == v2 -> port1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == VAR3 -> VAR2
  ORIGINAL[1]: &v1 -> addr1
  TYPE[1]: CALL
  TOKENIZED[1]: &v1 -> VAR1
  ORIGINAL[2]: v1 -> addr1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &v1 -> addr1
  TYPE[3]: CALL
  TOKENIZED[3]: &v1 -> VAR1
  ORIGINAL[4]: v1 -> addr1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &v1 -> addr1
  TYPE[5]: CALL
  TOKENIZED[5]: &v1 -> VAR1
  ORIGINAL[6]: v1 -> addr1
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &v1 -> addr1
  TYPE[7]: CALL
  TOKENIZED[7]: &v1 -> VAR1
  ORIGINAL[8]: v1 -> addr1
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: &v1 -> addr1
  TYPE[9]: CALL
  TOKENIZED[9]: &v1 -> VAR1
  ORIGINAL[10]: v1 -> addr1
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: addr1
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: v1
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: v1
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: v1
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: v1
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: v1
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: v1
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 68719476897
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (const conversation_key *)v
  TYPE[0]: CALL
  TOKENIZED[0]: ( const VAR1 * ) VAR2
  ORIGINAL[1]: v
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476778
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c >= 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771075
FRAGMENT_COUNT: 2
  ORIGINAL[0]: va_end(argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772106
FRAGMENT_COUNT: 7
  ORIGINAL[0]: p1 -> proto = proto
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: p1 -> proto
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: proto
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: p1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: proto
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: p1
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: p1
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477018
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (conversation_t *)value
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 * ) VAR2
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772255
FRAGMENT_COUNT: 13
  ORIGINAL[0]: stonesoup_oc_i < stonesoup_buf_ptr_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_path_buf[stonesoup_oc_i] = stonesoup_toupper(stonesoup_path_buf[stonesoup_oc_i])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = FUN1 ( VAR1 [ VAR2 ] )
  ORIGINAL[2]: stonesoup_path_buf[stonesoup_oc_i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: stonesoup_toupper(stonesoup_path_buf[stonesoup_oc_i])
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 [ VAR2 ] )
  ORIGINAL[4]: stonesoup_path_buf[stonesoup_oc_i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ]
  ORIGINAL[5]: stonesoup_path_buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_oc_i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_path_buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stonesoup_path_buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stonesoup_path_buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: stonesoup_path_buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stonesoup_path_buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: stonesoup_path_buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771751
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *conversation = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *conversation = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: conversation
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477270
FRAGMENT_COUNT: 7
  ORIGINAL[0]: convo && convo -> setup_frame <= frame_num
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 <= VAR3
  ORIGINAL[1]: convo -> setup_frame
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: convo -> next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: convo -> setup_frame
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: setup_frame
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: convo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: convo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477486
FRAGMENT_COUNT: 4
  ORIGINAL[0]: temp . proto
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: temp . proto_data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: &temp
  TYPE[2]: CALL
  TOKENIZED[2]: &temp
  ORIGINAL[3]: temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477083
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cur -> setup_frame
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cur -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ((void *)0) == prev
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( void * ) 0 ) == VAR1
  ORIGINAL[3]: conv -> next = cur
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = VAR3
  ORIGINAL[4]: conv -> next
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cur
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cur
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cur
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771447
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ADD_ADDRESS_TO_HASH_data = ((&key -> addr2) -> data)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( &key -> VAR2 ) -> VAR3 )
  ORIGINAL[1]: (&key -> addr2) -> data
  TYPE[1]: CALL
  TOKENIZED[1]: ( &key -> VAR1 ) -> VAR2
  ORIGINAL[2]: &key -> addr2
  TYPE[2]: CALL
  TOKENIZED[2]: &key -> VAR1
  ORIGINAL[3]: &key -> addr2
  TYPE[3]: CALL
  TOKENIZED[3]: &key -> VAR1
  ORIGINAL[4]: data
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ADD_ADDRESS_TO_HASH_data
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771638
FRAGMENT_COUNT: 3
  ORIGINAL[0]: conversation_hashtable_exact = g_hash_table_new(conversation_hash_exact,conversation_match_exact)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: g_hash_table_new(conversation_hash_exact,conversation_match_exact)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: <global> conversation_hashtable_exact
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719476855
FRAGMENT_COUNT: 8
  ORIGINAL[0]: v2 -> ptype
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: v1 -> port1 == v2 -> port1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 == VAR3 -> VAR2
  ORIGINAL[2]: v2 -> port1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: v1 -> port2
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: v2 -> port2
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: port2
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: v2
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: v2
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477457
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (const conv_proto_data *)b
  TYPE[0]: CALL
  TOKENIZED[0]: ( const VAR1 * ) VAR2
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477500
FRAGMENT_COUNT: 4
  ORIGINAL[0]: find_conversation(pinfo -> fd -> num,addr_a,addr_b,ptype,port_a,port_b,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 -> VAR3 , VAR4 , VAR5 , VAR6 , VAR7 , VAR8 , 0 )
  ORIGINAL[1]: ptype
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: port_a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: port_b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771077
FRAGMENT_COUNT: 3
  ORIGINAL[0]: data_size = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: data_size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ev
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771106
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: strcmp(getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( \
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \

CENTER_NODE: 68719476829
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ADD_ADDRESS_TO_HASH_index < (&key -> addr1) -> len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < ( &key -> VAR2 ) -> VAR3
  ORIGINAL[1]: hash_val += ADD_ADDRESS_TO_HASH_data[ADD_ADDRESS_TO_HASH_index]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += VAR2 [ VAR3 ]
  ORIGINAL[2]: ADD_ADDRESS_TO_HASH_data[ADD_ADDRESS_TO_HASH_index]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: hash_val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hash_val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ADD_ADDRESS_TO_HASH_data
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: hash_val
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771719
FRAGMENT_COUNT: 9
  ORIGINAL[0]: ((void *)0) == conv -> next
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( void * ) 0 ) == VAR1 -> VAR2
  ORIGINAL[1]: conv -> latest_found == conv
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 == VAR1
  ORIGINAL[2]: conv -> latest_found
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: conv -> latest_found
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: latest_found
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: conv
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: conv
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: conv
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: conv
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

