# Tokenized code fragments for 152844-v1.0.0-bad
# Total center nodes processed: 25
# Total code fragments found: 103

CENTER_NODE: 30064771596
FRAGMENT_COUNT: 2
  ORIGINAL[0]: OPENSSL_NONPIC_relocated = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: OPENSSL_NONPIC_relocated
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771483
FRAGMENT_COUNT: 2
  ORIGINAL[0]: __builtin_va_end(ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771359
FRAGMENT_COUNT: 5
  ORIGINAL[0]: id -> val = val
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: id -> val
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: val
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: id
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477033
FRAGMENT_COUNT: 1
  ORIGINAL[0]: stderr
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719476900
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dynlock_lock_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> dynlock_lock_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771142
FRAGMENT_COUNT: 11
  ORIGINAL[0]: sscanf(stonesoup_envKey, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0
  ORIGINAL[2]: stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , 0666 )
  ORIGINAL[3]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[4]: stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 )
  ORIGINAL[5]: shmat(stonesoup_shmid, NULL, 0)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , VAR2 , 0 )
  ORIGINAL[6]: (char *) -1
  TYPE[6]: CALL
  TOKENIZED[6]: ( char * ) -1
  ORIGINAL[7]: -1
  TYPE[7]: CALL
  TOKENIZED[7]: -1
  ORIGINAL[8]: stonesoup_shm
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stonesoup_shmid
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: NULL
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771413
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memcpy(dest,src,sizeof(( *src)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , sizeof ( ( *src ) ) )
  ORIGINAL[1]: sizeof(( *src))
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( ( *src ) )
  ORIGINAL[2]: dest
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476936
FRAGMENT_COUNT: 6
  ORIGINAL[0]: snum--
  TYPE[0]: CALL
  TOKENIZED[0]: snum--
  ORIGINAL[1]: snum + dnum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2
  ORIGINAL[2]: snum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> hash_coeffs
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: snum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dnum
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477175
FRAGMENT_COUNT: 15
  ORIGINAL[0]: (c = getopt(argc, argv, \
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , \
  ORIGINAL[1]: !str
  TYPE[1]: CALL
  TOKENIZED[1]: !str
  ORIGINAL[2]: errors++
  TYPE[2]: CALL
  TOKENIZED[2]: errors++
  ORIGINAL[3]: strlen(str) >= shmsz
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) >= VAR2
  ORIGINAL[4]: errors++
  TYPE[4]: CALL
  TOKENIZED[4]: errors++
  ORIGINAL[5]: printf(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: (shmid = shmget(key, shmsz, IPC_CREAT | 0666)) < 0
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 | 0666 ) ) < 0
  ORIGINAL[7]: shmid = shmget(key, shmsz, IPC_CREAT | 0666)
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 | 0666 )
  ORIGINAL[8]: shmget(key, shmsz, IPC_CREAT | 0666)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , VAR2 , VAR3 | 0666 )
  ORIGINAL[9]: IPC_CREAT | 0666
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 | 0666
  ORIGINAL[10]: errors
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: shmid
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: key
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: shmsz
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: IPC_CREAT
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 30064771349
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dynlock_create_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> dynlock_create_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771416
FRAGMENT_COUNT: 3
  ORIGINAL[0]: id -> val
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: val
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: id
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476969
FRAGMENT_COUNT: 4
  ORIGINAL[0]: type < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: type
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: type
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476764
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size_filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771351
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dynlock_destroy_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> dynlock_destroy_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771595
FRAGMENT_COUNT: 1
  ORIGINAL[0]: OPENSSL_ia32cap_P[2]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 2 ]

CENTER_NODE: 68719477045
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: a[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476906
FRAGMENT_COUNT: 4
  ORIGINAL[0]: OPENSSL_init()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: locking_callback = func
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: <global> locking_callback
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: func
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476945
FRAGMENT_COUNT: 1
  ORIGINAL[0]: <global> threadid_callback
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: <global> VAR1

CENTER_NODE: 68719477031
FRAGMENT_COUNT: 4
  ORIGINAL[0]: OPENSSL_showfatal(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: file
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: line
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: assertion
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476962
FRAGMENT_COUNT: 3
  ORIGINAL[0]: id_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> id_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476955
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *a
  TYPE[0]: CALL
  TOKENIZED[0]: *a
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476909
FRAGMENT_COUNT: 3
  ORIGINAL[0]: add_lock_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> add_lock_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771403
FRAGMENT_COUNT: 4
  ORIGINAL[0]: threadid_callback = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> threadid_callback
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: <global> threadid_callback
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: func
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477119
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_fpipe != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: fgets(stonesoup_buffer,100,stonesoup_fpipe) != 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 100 , VAR2 ) != 0
  ORIGINAL[2]: pclose(stonesoup_fpipe)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: stonesoup_fpipe
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_fpipe
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 2
  ORIGINAL[0]: <global> dynlock_create_callback
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: <global> VAR1
  ORIGINAL[1]: 
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: 

