# Tokenized code fragments for 231338-v2.0.0-bad
# Total center nodes processed: 53
# Total code fragments found: 257

CENTER_NODE: 68719477763
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = *p
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = *p
  ORIGINAL[1]: *p
  TYPE[1]: CALL
  TOKENIZED[1]: *p
  ORIGINAL[2]: *p
  TYPE[2]: CALL
  TOKENIZED[2]: *p
  ORIGINAL[3]: p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477342
FRAGMENT_COUNT: 7
  ORIGINAL[0]: src == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: dst = src
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dst
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dst
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dst
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477489
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: ofs == len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == VAR2
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ofs
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *start == '\\\\'
  TYPE[0]: CALL
  TOKENIZED[0]: *start == '\\\\'
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477169
FRAGMENT_COUNT: 7
  ORIGINAL[0]: a = ast_malloc(sizeof(*a))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( sizeof ( *a ) )
  ORIGINAL[1]: data = a
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: pthread_create(thread, attr, start_routine, data)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[3]: thread
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: attr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: start_routine
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: data
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477416
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tvfix(b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476899
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ptr = output
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: x = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: x
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: x
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771527
FRAGMENT_COUNT: 11
  ORIGINAL[0]: ast_test_flag(&spec, AST_URI_LEGACY_SPACE) && *s == '+'
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &spec , VAR1 ) && *s == '+'
  ORIGINAL[1]: *s == '%' && s[1] != '\\0' && s[2] != '\\0' && sscanf(s + 1, \
  TYPE[1]: CALL
  TOKENIZED[1]: *s == '%' && VAR1 [ 1 ] != '\\0' && VAR1 [ 2 ] != '\\0' && FUN1 ( VAR1 + 1 , \
  ORIGINAL[2]: *s == '%' && s[1] != '\\0' && s[2] != '\\0'
  TYPE[2]: CALL
  TOKENIZED[2]: *s == '%' && VAR1 [ 1 ] != '\\0' && VAR1 [ 2 ] != '\\0'
  ORIGINAL[3]: *s == '%' && s[1] != '\\0'
  TYPE[3]: CALL
  TOKENIZED[3]: *s == '%' && VAR1 [ 1 ] != '\\0'
  ORIGINAL[4]: s[2] != '\\0'
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 2 ] != '\\0'
  ORIGINAL[5]: sscanf(s + 1, \
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 + 1 , \
  ORIGINAL[6]: sscanf(s + 1, \
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 + 1 , \
  ORIGINAL[7]: s + 1
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 + 1
  ORIGINAL[8]: &tmp
  TYPE[8]: CALL
  TOKENIZED[8]: &tmp
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: tmp
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772018
FRAGMENT_COUNT: 1
  ORIGINAL[0]: string[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]

CENTER_NODE: 68719477967
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *envPATH = getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: *envPATH = FUN1 ( \
  ORIGINAL[1]: !envPATH
  TYPE[1]: CALL
  TOKENIZED[1]: !envPATH
  ORIGINAL[2]: envPATH
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: envPATH
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: envPATH
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772106
FRAGMENT_COUNT: 4
  ORIGINAL[0]: to_alloc = ast_make_room_for(needed, ast_string_field_allocation)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: ast_make_room_for(needed, ast_string_field_allocation)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: to_alloc
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: to_alloc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772593
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AST_CLI_DEFINE(handle_show_locks, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: handle_show_locks
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772394
FRAGMENT_COUNT: 1
  ORIGINAL[0]: base64_init()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )

CENTER_NODE: 30064771891
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !strcasecmp(s, \
  TYPE[0]: CALL
  TOKENIZED[0]: !strcasecmp ( VAR1 , \
  ORIGINAL[1]: !strcasecmp(s, \
  TYPE[1]: CALL
  TOKENIZED[1]: !strcasecmp ( VAR1 , \
  ORIGINAL[2]: !strcasecmp(s, \
  TYPE[2]: CALL
  TOKENIZED[2]: !strcasecmp ( VAR1 , \
  ORIGINAL[3]: strcasecmp(s, \
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , \

CENTER_NODE: 68719477830
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *fullpath
  TYPE[0]: CALL
  TOKENIZED[0]: *fullpath
  ORIGINAL[1]: x < piececount
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: strcat(fullpath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: strcat(fullpath, pieces[x])
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 [ VAR3 ] )
  ORIGINAL[4]: pieces[x]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ]
  ORIGINAL[5]: fullpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: fullpath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pieces
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: fullpath
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476995
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ast_base64encode_full(dst, src, srclen, max, 0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , 0 )
  ORIGINAL[1]: dst
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771249
FRAGMENT_COUNT: 4
  ORIGINAL[0]: res || !result || !hp->hp.h_addr_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 || !result || !hp->hp . VAR2
  ORIGINAL[1]: !hp->hp.h_addr_list[0]
  TYPE[1]: CALL
  TOKENIZED[1]: !hp->hp . VAR1 [ 0 ]
  ORIGINAL[2]: hp->hp.h_addr_list[0]
  TYPE[2]: CALL
  TOKENIZED[2]: hp->hp . VAR1 [ 0 ]
  ORIGINAL[3]: hp->hp.h_addr_list
  TYPE[3]: CALL
  TOKENIZED[3]: hp->hp . VAR1

CENTER_NODE: 68719477129
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (struct thr_arg *) data
  TYPE[0]: CALL
  TOKENIZED[0]: ( struct VAR1 * ) VAR2
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477955
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(ap, fmt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477259
FRAGMENT_COUNT: 7
  ORIGINAL[0]: res < 0 && errno != EAGAIN && errno != EINTR
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0 && VAR2 != VAR3 && VAR2 != VAR4
  ORIGINAL[1]: res = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: elapsed = ast_tvdiff_ms(ast_tvnow(), start)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( FUN2 ( ) , VAR2 )
  ORIGINAL[3]: ast_tvdiff_ms(ast_tvnow(), start)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( FUN2 ( ) , VAR1 )
  ORIGINAL[4]: ast_tvnow()
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( )
  ORIGINAL[5]: elapsed
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: elapsed
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477190
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stacksize
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: file
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: caller
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771597
FRAGMENT_COUNT: 2
  ORIGINAL[0]: locks[AST_MAX_LOCKS]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: AST_MAX_LOCKS
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772326
FRAGMENT_COUNT: 9
  ORIGINAL[0]: sscanf(src, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: dst->tv_sec = dtv
  TYPE[1]: CALL
  TOKENIZED[1]: dst->tv_sec = VAR1
  ORIGINAL[2]: dst->tv_sec
  TYPE[2]: CALL
  TOKENIZED[2]: dst->tv_sec
  ORIGINAL[3]: dst->tv_sec
  TYPE[3]: CALL
  TOKENIZED[3]: dst->tv_sec
  ORIGINAL[4]: tv_sec
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dst
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dtv
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dst
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: dst
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771809
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (e > work) && (*(e-1) == '\\\\')
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 > VAR2 ) && ( * ( e-1 ) == '\\\\' )
  ORIGINAL[1]: work = e + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 + 1
  ORIGINAL[2]: e + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: work
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771265
FRAGMENT_COUNT: 4
  ORIGINAL[0]: x = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: for (x = 0;x < 16;x++)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( VAR1 = 0 ; VAR1 < 16 ; x++ )
  ORIGINAL[2]: x
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: x
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772534
FRAGMENT_COUNT: 2
  ORIGINAL[0]: sscanf(val, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1

CENTER_NODE: 30064771833
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !buffer || !*buffer || !space || !*space
  TYPE[0]: CALL
  TOKENIZED[0]: !buffer || !*buffer || !space || !*space
  ORIGINAL[1]: !buffer || !*buffer || !space
  TYPE[1]: CALL
  TOKENIZED[1]: !buffer || !*buffer || !space
  ORIGINAL[2]: !buffer || !*buffer
  TYPE[2]: CALL
  TOKENIZED[2]: !buffer || !*buffer
  ORIGINAL[3]: !space
  TYPE[3]: CALL
  TOKENIZED[3]: !space
  ORIGINAL[4]: !*space
  TYPE[4]: CALL
  TOKENIZED[4]: !*space
  ORIGINAL[5]: *space
  TYPE[5]: CALL
  TOKENIZED[5]: *space
  ORIGINAL[6]: space
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477036
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *ptr
  TYPE[0]: CALL
  TOKENIZED[0]: *ptr
  ORIGINAL[1]: out - outbuf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2
  ORIGINAL[2]: buflen - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: buflen
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buflen
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477500
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *pool
  TYPE[0]: CALL
  TOKENIZED[0]: *pool
  ORIGINAL[1]: alloc_size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771312
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bits >= 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 8
  ORIGINAL[1]: (byte >> bits) & 0xff
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 >> VAR2 ) & 0xff
  ORIGINAL[2]: byte >> bits
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >> VAR2
  ORIGINAL[3]: byte
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bits
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477126
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !(buf = ast_threadstorage_get(&inet_ntoa_buf, INET_ADDRSTRLEN))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 = FUN1 ( &inet_ntoa_buf , VAR2 ) )
  ORIGINAL[1]: inet_ntop(AF_INET, &ia, buf, INET_ADDRSTRLEN)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &ia , VAR2 , VAR3 )
  ORIGINAL[2]: &ia
  TYPE[2]: CALL
  TOKENIZED[2]: &ia
  ORIGINAL[3]: INET_ADDRSTRLEN
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: AF_INET
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: INET_ADDRSTRLEN
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771956
FRAGMENT_COUNT: 9
  ORIGINAL[0]: a.tv_usec < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 < 0
  ORIGINAL[1]: a.tv_usec
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: a.tv_usec += ONE_MILLION
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 += VAR3
  ORIGINAL[3]: a.tv_usec
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: ONE_MILLION
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tv_usec
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: a
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: a
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: a
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771959
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ast_mutex_lock(&randomlock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &randomlock )
  ORIGINAL[1]: &randomlock
  TYPE[1]: CALL
  TOKENIZED[1]: &randomlock
  ORIGINAL[2]: &randomlock
  TYPE[2]: CALL
  TOKENIZED[2]: &randomlock
  ORIGINAL[3]: randomlock
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: randomlock
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477099
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *ptr
  TYPE[0]: CALL
  TOKENIZED[0]: *ptr
  ORIGINAL[1]: out - outbuf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2
  ORIGINAL[2]: buflen - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: buflen
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buflen
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477513
FRAGMENT_COUNT: 4
  ORIGINAL[0]: **p = (const char **) pool_head + 1
  TYPE[0]: CALL
  TOKENIZED[0]: **p = ( const char ** ) VAR1 + 1
  ORIGINAL[1]: (const char **) pool_head + 1
  TYPE[1]: CALL
  TOKENIZED[1]: ( const char ** ) VAR1 + 1
  ORIGINAL[2]: p
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772337
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dst == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: *dst = _default
  TYPE[1]: CALL
  TOKENIZED[1]: *dst = VAR1
  ORIGINAL[2]: *dst
  TYPE[2]: CALL
  TOKENIZED[2]: *dst
  ORIGINAL[3]: _default
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477390
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !strcasecmp(s, \
  TYPE[0]: CALL
  TOKENIZED[0]: !strcasecmp ( VAR1 , \
  ORIGINAL[1]: strcasecmp(s, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772583
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ast_uri_http = {AST_URI_UNRESERVED}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { VAR2 }
  ORIGINAL[1]: {AST_URI_UNRESERVED}
  TYPE[1]: CALL
  TOKENIZED[1]: { VAR1 }
  ORIGINAL[2]: ast_uri_http
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ast_uri_http_legacy
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771859
FRAGMENT_COUNT: 3
  ORIGINAL[0]: va_end(ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476794
FRAGMENT_COUNT: 11
  ORIGINAL[0]: ph->h_length
  TYPE[0]: CALL
  TOKENIZED[0]: ph->h_length
  ORIGINAL[1]: ph->h_aliases
  TYPE[1]: CALL
  TOKENIZED[1]: ph->h_aliases
  ORIGINAL[2]: *ph
  TYPE[2]: CALL
  TOKENIZED[2]: *ph
  ORIGINAL[3]: ph->h_addr_list
  TYPE[3]: CALL
  TOKENIZED[3]: ph->h_addr_list
  ORIGINAL[4]: *p != 0
  TYPE[4]: CALL
  TOKENIZED[4]: *p != 0
  ORIGINAL[5]: *p
  TYPE[5]: CALL
  TOKENIZED[5]: *p
  ORIGINAL[6]: ph->h_length
  TYPE[6]: CALL
  TOKENIZED[6]: ph->h_length
  ORIGINAL[7]: ph->h_length
  TYPE[7]: CALL
  TOKENIZED[7]: ph->h_length
  ORIGINAL[8]: h_length
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ph
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ph
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719477496
FRAGMENT_COUNT: 4
  ORIGINAL[0]: size >>= 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >>= 1
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772161
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *ptr
  TYPE[0]: CALL
  TOKENIZED[0]: *ptr
  ORIGINAL[1]: space < grow
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: AST_STRING_FIELD_ALLOCATION(*ptr)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( *ptr )
  ORIGINAL[3]: *ptr
  TYPE[3]: CALL
  TOKENIZED[3]: *ptr
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771377
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *dst++
  TYPE[0]: CALL
  TOKENIZED[0]: *dst++
  ORIGINAL[1]: *dst++
  TYPE[1]: CALL
  TOKENIZED[1]: *dst++
  ORIGINAL[2]: bits && (cnt + 4 <= max)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 && ( VAR2 + 4 <= VAR3 )
  ORIGINAL[3]: *dst++
  TYPE[3]: CALL
  TOKENIZED[3]: *dst++
  ORIGINAL[4]: dst++
  TYPE[4]: CALL
  TOKENIZED[4]: dst++
  ORIGINAL[5]: dst
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477211
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .events = POLLOUT
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: events
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: POLLOUT
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771659
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pfd[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]
  ORIGINAL[1]: pfd[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ]
  ORIGINAL[2]: pfd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pfd
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477277
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ast_wait_for_output(fd, timeoutms - elapsed)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 - VAR3 )
  ORIGINAL[1]: fwrite(src, 1, len, f)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 1 , VAR2 , VAR3 )
  ORIGINAL[2]: f
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: f
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: f
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772568
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = -1
  ORIGINAL[1]: -1
  TYPE[1]: CALL
  TOKENIZED[1]: -1
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 2
  ORIGINAL[0]: a.tv_usec >= ONE_MILLION
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 >= VAR3
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064772264
FRAGMENT_COUNT: 7
  ORIGINAL[0]: __ast_string_field_ptr_build_va(mgr, pool_head, ptr, format, ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: mgr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool_head
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: format
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ap
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ap
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772582
FRAGMENT_COUNT: 1
  ORIGINAL[0]: b2a[256]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 256 ]

CENTER_NODE: 30064771682
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ast_poll(&pfd, 1, timeoutms - elapsed)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &pfd , 1 , VAR1 - VAR2 )
  ORIGINAL[1]: &pfd
  TYPE[1]: CALL
  TOKENIZED[1]: &pfd
  ORIGINAL[2]: timeoutms - elapsed
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - VAR2
  ORIGINAL[3]: elapsed >= timeoutms
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 >= VAR2
  ORIGINAL[4]: elapsed >= timeoutms
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 >= VAR2
  ORIGINAL[5]: timeoutms
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: elapsed
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477310
FRAGMENT_COUNT: 6
  ORIGINAL[0]: strchr(beg_quotes, *s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , *s )
  ORIGINAL[1]: *s
  TYPE[1]: CALL
  TOKENIZED[1]: *s
  ORIGINAL[2]: q
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: beg_quotes
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: beg_quotes
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477015
FRAGMENT_COUNT: 6
  ORIGINAL[0]: x < 26
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 26
  ORIGINAL[1]: b2a['a' + x]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 'a' + VAR2 ]
  ORIGINAL[2]: x + 26
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 26
  ORIGINAL[3]: x
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: x
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: x
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

