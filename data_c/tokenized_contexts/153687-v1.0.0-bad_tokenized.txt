# Tokenized code fragments for 153687-v1.0.0-bad
# Total center nodes processed: 12
# Total code fragments found: 67

CENTER_NODE: 68719477378
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[1]: memset(s, 0, shmsz)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[2]: strcpy(shm, str)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: shm
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: shm
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: str
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 3
  ORIGINAL[0]: COL_BLK=10
  TYPE[0]: CALL
  TOKENIZED[0]: COL_BLK=10
  ORIGINAL[1]: COL_BLK
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: COL_CHR
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 4
  ORIGINAL[0]: {{(latin1_3), (\
  TYPE[0]: CALL
  TOKENIZED[0]: { { ( VAR1 ) , ( \
  ORIGINAL[1]: {(ibm_ps2), (\
  TYPE[1]: CALL
  TOKENIZED[1]: { ( VAR1 ) , ( \
  ORIGINAL[2]: ibm_ps2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ibm_gr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771196
FRAGMENT_COUNT: 3
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c - 32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 32
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477063
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(\
  TYPE[0]: CALL
  TOKENIZED[0]: { ( \
  ORIGINAL[1]: COL_SOCK
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476861
FRAGMENT_COUNT: 6
  ORIGINAL[0]: buff[0] >= 79
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] >= 79
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_trace
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: trace_point
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477097
FRAGMENT_COUNT: 6
  ORIGINAL[0]: fprintf(outfile,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: <global> orphan_flgs
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: <global> outfile
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> leftcode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: <global> orphan_flgs
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> rightcode
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[1]: stonesoup_s = stonesoup_shm
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: for (stonesoup_s = stonesoup_shm;*stonesoup_s != (char)0;stonesoup_s++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = VAR2 ; *stonesoup_s != ( char ) 0 ; stonesoup_s++ )
  ORIGINAL[3]: stonesoup_s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_shm
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771243
FRAGMENT_COUNT: 21
  ORIGINAL[0]: s == ((void *)0) || !force_color && (nocolor || !isatty(1))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 ) || !force_color && ( VAR2 || !isatty ( 1 ) )
  ORIGINAL[1]: arg[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: c = split(arg[i],\
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( VAR2 [ VAR3 ] , \
  ORIGINAL[4]: split(arg[i],\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 [ VAR2 ] , \
  ORIGINAL[5]: arg[i]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ VAR2 ]
  ORIGINAL[6]: &n
  TYPE[6]: CALL
  TOKENIZED[6]: &n
  ORIGINAL[7]: cmd(c[0])
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 [ 0 ] )
  ORIGINAL[8]: c[0]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 [ 0 ]
  ORIGINAL[9]: free(c)
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 )
  ORIGINAL[10]: for (i = 0;arg[i];i++)
  TYPE[10]: CONTROL_STRUCTURE
  TOKENIZED[10]: for ( VAR1 = 0 ; VAR2 [ VAR1 ] ; i++ )
  ORIGINAL[11]: arg
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: i
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: i
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: c
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: arg
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: i
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: n
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: c
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: c
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: arg
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 30064771598
FRAGMENT_COUNT: 1
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 4
  ORIGINAL[0]: * dirpath = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: dirpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size_dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771483
FRAGMENT_COUNT: 5
  ORIGINAL[0]: w[ *nwrds]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ *nwrds ]
  ORIGINAL[1]: *nwrds == n - 2
  TYPE[1]: CALL
  TOKENIZED[1]: *nwrds == VAR1 - 2
  ORIGINAL[2]: *nwrds
  TYPE[2]: CALL
  TOKENIZED[2]: *nwrds
  ORIGINAL[3]: n - 2
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 2
  ORIGINAL[4]: n
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

