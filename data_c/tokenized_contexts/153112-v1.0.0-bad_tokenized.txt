# Tokenized code fragments for 153112-v1.0.0-bad
# Total center nodes processed: 246
# Total code fragments found: 1010

CENTER_NODE: 68719481407
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: lmt_stratous(pseudisodomic_reif)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: pseudisodomic_reif
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476737
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771495
FRAGMENT_COUNT: 14
  ORIGINAL[0]: ic -> iformat -> read_header
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: err < 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 0
  ORIGINAL[2]: ic -> pb && !ic -> data_offset
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 && !ic -> VAR3
  ORIGINAL[3]: ic -> pb
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: !ic -> data_offset
  TYPE[4]: CALL
  TOKENIZED[4]: !ic -> VAR1
  ORIGINAL[5]: ic -> data_offset
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: ic -> pb
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: pb
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: data_offset
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ic
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ic
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ic
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: ic
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: ic
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 68719481418
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719480370
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < ac -> nb_programs
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: ac -> programs[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: ac -> programs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640832
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773776
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stream_index >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 0
  ORIGINAL[1]: s -> streams[stream_index]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: s -> streams
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: streams
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream_index
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244641186
FRAGMENT_COUNT: 1
  ORIGINAL[0]: port_ptr
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771687
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !pktl
  TYPE[0]: CALL
  TOKENIZED[0]: !pktl
  ORIGINAL[1]: *plast_pktl = pktl
  TYPE[1]: CALL
  TOKENIZED[1]: *plast_pktl = VAR1
  ORIGINAL[2]: *plast_pktl
  TYPE[2]: CALL
  TOKENIZED[2]: *plast_pktl
  ORIGINAL[3]: pktl
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pktl
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719481484
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719479549
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tags && tags[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 [ VAR2 ]
  ORIGINAL[1]: AV_CODEC_ID_NONE
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: AV_CODEC_ID_NONE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772205
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !desc
  TYPE[0]: CALL
  TOKENIZED[0]: !desc
  ORIGINAL[1]: avcodec_descriptor_get(enc -> codec_id)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: enc -> codec_id
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: codec_id
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: enc
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: enc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: enc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244641182
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774650
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ic -> pb
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: (!strcmp(ic -> iformat -> name,\
  TYPE[1]: CALL
  TOKENIZED[1]: ( !strcmp ( VAR1 -> VAR2 -> VAR3 , \
  ORIGINAL[2]: ic -> pb -> seekable
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: ic -> pb
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pb
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: seekable
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ic
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064773822
FRAGMENT_COUNT: 4
  ORIGINAL[0]: index == 0?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0? ( ( void ) 0 ) : FUN1 ( \
  ORIGINAL[1]: index == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: (void )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void ) 0

CENTER_NODE: 30064776428
FRAGMENT_COUNT: 20
  ORIGINAL[0]: tag = av_dict_get(m,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: strcmp(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: tag -> key
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: *p = (tag -> value)
  TYPE[3]: CALL
  TOKENIZED[3]: *p = ( VAR1 -> VAR2 )
  ORIGINAL[4]: tag -> value
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: av_log(ctx,32,\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , 32 , \
  ORIGINAL[6]: tag -> key
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: *p
  TYPE[7]: CALL
  TOKENIZED[7]: *p
  ORIGINAL[8]: av_log(ctx,32,\
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , 32 , \
  ORIGINAL[9]: if (strcmp(\
  TYPE[9]: CONTROL_STRUCTURE
  TOKENIZED[9]: if ( FUN1 ( \
  ORIGINAL[10]: value
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: key
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: tag
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: p
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: tag
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ctx
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: indent
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: tag
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: p
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: ctx
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064774005
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pos_min = s -> data_offset
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: s -> data_offset
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pos_min
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pos_max
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064775039
FRAGMENT_COUNT: 8
  ORIGINAL[0]: c -> time_base . den >= 101L * c -> time_base . num || c -> time_base . den < 5L * c -> time_base . num || c -> codec_tag == ((const union unaligned_32 *)\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 >= 101L * VAR1 -> VAR2 . VAR4 || VAR1 -> VAR2 . VAR3 < 5L * VAR1 -> VAR2 . VAR4 || VAR1 -> VAR5 == ( ( const union VAR6 * ) \
  ORIGINAL[1]: (c -> codec_id) == AV_CODEC_ID_MPEG2VIDEO
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) == VAR3
  ORIGINAL[2]: c -> codec_id
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: c -> codec_id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: codec_id
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: AV_CODEC_ID_MPEG2VIDEO
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: c
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244641161
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776765
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_gettime() / 1000 * 1000
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ) / 1000 * 1000
  ORIGINAL[1]: av_gettime() / 1000
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ) / 1000
  ORIGINAL[2]: av_gettime()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )

CENTER_NODE: 47244641209
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719480647
FRAGMENT_COUNT: 3
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640689
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774894
FRAGMENT_COUNT: 9
  ORIGINAL[0]: (tags -> id) != AV_CODEC_ID_NONE
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) != VAR3
  ORIGINAL[1]: tags -> id
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (tags -> id) == id
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) == VAR2
  ORIGINAL[3]: tags -> id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: id
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tags
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: id
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tags
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tags
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640688
FRAGMENT_COUNT: 0

CENTER_NODE: 68719481201
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ff_codec_bmp_tags
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719480521
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ic -> duration != ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[1]: duration / 1000000
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 / 1000000
  ORIGINAL[2]: duration
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: secs
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: duration
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: duration
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719481404
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640909
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719479573
FRAGMENT_COUNT: 5
  ORIGINAL[0]: j < s -> nb_chapters
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: s -> chapters[j]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: s -> chapters
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: j
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: j
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064776012
FRAGMENT_COUNT: 3
  ORIGINAL[0]: s -> pb
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: avio_pause(s -> pb,0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , 0 )
  ORIGINAL[2]: s -> pb
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

CENTER_NODE: 68719476941
FRAGMENT_COUNT: 4
  ORIGINAL[0]: orig_size = size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: orig_size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640713
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719476984
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: av_shrink_packet(pkt,old_size + ((ret > 0?ret : 0)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 + ( ( VAR3 > 0?ret : 0 ) ) )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064777333
FRAGMENT_COUNT: 6
  ORIGINAL[0]: av_small_strptime(datestr,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: &time2
  TYPE[1]: CALL
  TOKENIZED[1]: &time2
  ORIGINAL[2]: &time2
  TYPE[2]: CALL
  TOKENIZED[2]: &time2
  ORIGINAL[3]: datestr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: time2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: time2
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064777727
FRAGMENT_COUNT: 2
  ORIGINAL[0]: therezina_guyot(untolerating_parahematin)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: untolerating_parahematin
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244641105
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064777750
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: convictable_speakableness
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064774229
FRAGMENT_COUNT: 21
  ORIGINAL[0]: i < ic -> nb_streams
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: ic -> nb_streams
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: st = ic -> streams[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[3]: ic -> streams[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: ic -> streams
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: st -> duration != ((int64_t )0x8000000000000000UL)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 != ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[6]: st -> duration
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: (int64_t )0x8000000000000000UL
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[8]: ic -> duration != ((int64_t )0x8000000000000000UL)
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 != ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[9]: ic -> duration
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: (int64_t )0x8000000000000000UL
  TYPE[10]: CALL
  TOKENIZED[10]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[11]: for (i = 0;i < ic -> nb_streams;i++)
  TYPE[11]: CONTROL_STRUCTURE
  TOKENIZED[11]: for ( VAR1 = 0 ; VAR1 < VAR2 -> VAR3 ; i++ )
  ORIGINAL[12]: streams
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: duration
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: duration
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: i
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: st
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: ic
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: i
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: st
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: ic
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 30064773563
FRAGMENT_COUNT: 4
  ORIGINAL[0]: st -> parser
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: st -> parser = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: st -> parser
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 68719480785
FRAGMENT_COUNT: 2
  ORIGINAL[0]: pkt_dump_internal(avcl,((void *)0),level,pkt,dump_payload,st -> time_base)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , VAR2 , VAR3 , VAR4 , VAR5 -> VAR6 )
  ORIGINAL[1]: avcl
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244641050
FRAGMENT_COUNT: 0

CENTER_NODE: 47244641148
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640840
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776607
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dump_metadata(((void *)0),st -> metadata,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , VAR1 -> VAR2 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: st
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771121
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !('h' >= 100)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( 'h' >= 100 )
  ORIGINAL[1]: 'h' >= 100
  TYPE[1]: CALL
  TOKENIZED[1]: 'h' >= 100

CENTER_NODE: 30064777114
FRAGMENT_COUNT: 13
  ORIGINAL[0]: &new_tb . num
  TYPE[0]: CALL
  TOKENIZED[0]: &new_tb . VAR1
  ORIGINAL[1]: new_tb . num
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: new_tb . num
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: new_tb . num
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: new_tb . num <= 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2 <= 0
  ORIGINAL[5]: new_tb . num
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: new_tb . num
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . VAR2
  ORIGINAL[7]: num
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: new_tb
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: new_tb
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: new_tb
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: new_tb
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: new_tb
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 47244640532
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777689
FRAGMENT_COUNT: 2
  ORIGINAL[0]: riveret_extragastric(easterly_improvisations)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: easterly_improvisations
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244641172
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477343
FRAGMENT_COUNT: 5
  ORIGINAL[0]: st -> codec -> codec_type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: s -> video_codec_id
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: video_codec_id
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: AVMEDIA_TYPE_VIDEO
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479521
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !av_codec_get_tag2(tags,id,&tag)
  TYPE[0]: CALL
  TOKENIZED[0]: !av_codec_get_tag2 ( VAR1 , VAR2 , &tag )
  ORIGINAL[1]: &tag
  TYPE[1]: CALL
  TOKENIZED[1]: &tag
  ORIGINAL[2]: tag
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tag
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064777067
FRAGMENT_COUNT: 3
  ORIGINAL[0]: len = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: v
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719479759
FRAGMENT_COUNT: 27
  ORIGINAL[0]: st -> time_base
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: st -> parser
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: st -> parser
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: st -> need_parsing
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: st -> need_parsing
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: st -> codec
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: st -> request_probe
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: st -> codec
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: st -> time_base
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: st -> disposition
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: st -> codec
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: st -> parser
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: st -> first_dts
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: st -> codec_info_nb_frames
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: st -> info -> fps_last_dts != ((int64_t )0x8000000000000000UL)
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2 -> VAR3 != ( ( VAR4 ) 0x8000000000000000UL )
  ORIGINAL[15]: st -> info
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2
  ORIGINAL[16]: st -> index
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: st -> index
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 -> VAR2
  ORIGINAL[18]: st -> time_base
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 -> VAR2
  ORIGINAL[19]: st -> avg_frame_rate
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 -> VAR2
  ORIGINAL[20]: st -> avg_frame_rate
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 -> VAR2
  ORIGINAL[21]: st -> parser
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 -> VAR2
  ORIGINAL[22]: st -> codec
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 -> VAR2
  ORIGINAL[23]: st -> codec_info_nb_frames
  TYPE[23]: CALL
  TOKENIZED[23]: VAR1 -> VAR2
  ORIGINAL[24]: info
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: st
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: st
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1

CENTER_NODE: 68719481474
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064774768
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ret = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: ret
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: frame
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478434
FRAGMENT_COUNT: 6
  ORIGINAL[0]: 2 * i < st -> nb_index_entries
  TYPE[0]: CALL
  TOKENIZED[0]: 2 * VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: st -> nb_index_entries
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: st -> index_entries
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: index_entries
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: st
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: st
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064777720
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: virginly_overlewdness
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064777738
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: transitival_accompanimental
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064774542
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ret != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: ic -> streams[pkt -> stream_index]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 -> VAR4 ]
  ORIGINAL[2]: pkt -> stream_index
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: stream_index
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pkt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pkt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719479535
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (codec_tags -> id) == id
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == VAR2
  ORIGINAL[1]: codec_tags -> id
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: *tag
  TYPE[2]: CALL
  TOKENIZED[2]: *tag
  ORIGINAL[3]: codec_tags -> tag
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tag
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: codec_tags
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: codec_tags
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: codec_tags
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719481444
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244641176
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771314
FRAGMENT_COUNT: 9
  ORIGINAL[0]: s -> maxsize >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 >= 0
  ORIGINAL[1]: s -> maxsize
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> maxsize
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> maxsize >= 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 >= 0
  ORIGINAL[4]: s -> maxsize
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: maxsize
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064776605
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_log(((void *)0),32,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 32 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (ret = ff_id3v2_parse_apic(s,&id3v2_extra_meta)) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , &id3v2_extra_meta ) ) < 0
  ORIGINAL[1]: goto fail;
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: goto VAR1 ;

CENTER_NODE: 68719479460
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719481503
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: gunrunning_blench(magnelectric_hynes)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: magnelectric_hynes
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064777673
FRAGMENT_COUNT: 2
  ORIGINAL[0]: sacroiliacs_denigrated(furlana_anacanthine)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: furlana_anacanthine
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640662
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640458
FRAGMENT_COUNT: 1
  ORIGINAL[0]: (st -> codec -> codec_id) != AV_CODEC_ID_H264
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 -> VAR3 ) != VAR4

CENTER_NODE: 30064776233
FRAGMENT_COUNT: 4
  ORIGINAL[0]: s -> iformat?9223372036854775807L - (1LL << 48) : 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> iformat?9223372036854775807L - ( 1LL << 48 ) : 0
  ORIGINAL[1]: s -> iformat
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: 9223372036854775807L - (1LL << 48)
  TYPE[2]: CALL
  TOKENIZED[2]: 9223372036854775807L - ( 1LL << 48 )
  ORIGINAL[3]: 1LL << 48
  TYPE[3]: CALL
  TOKENIZED[3]: 1LL << 48

CENTER_NODE: 47244640667
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640663
FRAGMENT_COUNT: 0

CENTER_NODE: 68719481426
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640836
FRAGMENT_COUNT: 0

CENTER_NODE: 68719480394
FRAGMENT_COUNT: 5
  ORIGINAL[0]: v = (lrintf((d * 100)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( ( VAR2 * 100 ) ) )
  ORIGINAL[1]: v % 100
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 % 100
  ORIGINAL[2]: v
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: v
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: v
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064777045
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hex_table_lc[16] = {(48), ('1'), ('2'), ('3'), ('4'), ('5'), ('6'), ('7'), (56), ('9'), ('a'), ('b'), ('c'), (100), ('e'), ('f')}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 16 ] = { ( 48 ) , ( '1' ) , ( '2' ) , ( '3' ) , ( '4' ) , ( '5' ) , ( '6' ) , ( '7' ) , ( 56 ) , ( '9' ) , ( 'a' ) , ( 'b' ) , ( 'c' ) , ( 100 ) , ( 'e' ) , ( 'f' ) }
  ORIGINAL[1]: hex_table_lc[16] = {(48), ('1'), ('2'), ('3'), ('4'), ('5'), ('6'), ('7'), (56), ('9'), ('a'), ('b'), ('c'), (100), ('e'), ('f')}
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 16 ] = { ( 48 ) , ( '1' ) , ( '2' ) , ( '3' ) , ( '4' ) , ( '5' ) , ( '6' ) , ( '7' ) , ( 56 ) , ( '9' ) , ( 'a' ) , ( 'b' ) , ( 'c' ) , ( 100 ) , ( 'e' ) , ( 'f' ) }
  ORIGINAL[2]: hex_table_lc
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hex_table_lc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244641125
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478502
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp = wrap_timestamp(st,timestamp)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR1 )
  ORIGINAL[1]: st -> index_entries
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: index_entries
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: st
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: st
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244641134
FRAGMENT_COUNT: 0

CENTER_NODE: 68719481468
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719481420
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719480710
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hex_dump_internal(avcl,((void *)0),level,buf,size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: level
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719481425
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: stalemated_knifers(autographed_penbard)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: autographed_penbard
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640671
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777754
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: pseudopupal_technol
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640552
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640810
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640666
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640788
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 10
  ORIGINAL[0]: st -> pts_wrap_behavior != 0 && st -> pts_wrap_reference != ((int64_t )0x8000000000000000UL) && timestamp != ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != 0 && VAR1 -> VAR3 != ( ( VAR4 ) 0x8000000000000000UL ) && VAR5 != ( ( VAR4 ) 0x8000000000000000UL )
  ORIGINAL[1]: st -> pts_wrap_behavior
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: st -> pts_wrap_behavior == 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 == 1
  ORIGINAL[3]: st -> pts_wrap_behavior
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: st -> pts_wrap_behavior
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: pts_wrap_behavior
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: st
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: st
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: st
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: st
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640825
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771134
FRAGMENT_COUNT: 4
  ORIGINAL[0]: 9223372036854775807L - (1LL << 48) - (1LL << 48)
  TYPE[0]: CALL
  TOKENIZED[0]: 9223372036854775807L - ( 1LL << 48 ) - ( 1LL << 48 )
  ORIGINAL[1]: 9223372036854775807L - (1LL << 48)
  TYPE[1]: CALL
  TOKENIZED[1]: 9223372036854775807L - ( 1LL << 48 )
  ORIGINAL[2]: 1LL << 48
  TYPE[2]: CALL
  TOKENIZED[2]: 1LL << 48
  ORIGINAL[3]: 1LL << 48
  TYPE[3]: CALL
  TOKENIZED[3]: 1LL << 48

CENTER_NODE: 30064772312
FRAGMENT_COUNT: 13
  ORIGINAL[0]: program -> pts_wrap_reference != ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[1]: program -> pts_wrap_reference
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (int64_t )0x8000000000000000UL
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[3]: program -> pts_wrap_reference
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: program -> pts_wrap_reference
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: pts_wrap_reference
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: program
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: program
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: program
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: program
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: program
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: program
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: program
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064774070
FRAGMENT_COUNT: 10
  ORIGINAL[0]: read_status < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: stream_index == pkt . stream_index
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == VAR2 . VAR1
  ORIGINAL[2]: pkt . stream_index
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: stream_index
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pkt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pkt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream_index
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pkt
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pkt
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pkt
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064774420
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ic -> start_time != ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[1]: av_rescale_q(ic -> start_time,((AVRational ){(1), (1000000)}),st -> time_base)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , ( ( VAR3 ) { ( 1 ) , ( 1000000 ) } ) , VAR4 -> VAR5 )
  ORIGINAL[2]: ic -> start_time
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (AVRational ){(1), (1000000)}
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) { ( 1 ) , ( 1000000 ) }
  ORIGINAL[4]: {(1), (1000000)}
  TYPE[4]: CALL
  TOKENIZED[4]: { ( 1 ) , ( 1000000 ) }
  ORIGINAL[5]: st -> time_base
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: st
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719481497
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: spanemic_perioesophageal(psiu_ferromagnetic)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: psiu_ferromagnetic
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640809
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771910
FRAGMENT_COUNT: 15
  ORIGINAL[0]: !new_buf
  TYPE[0]: CALL
  TOKENIZED[0]: !new_buf
  ORIGINAL[1]: pd -> buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pd -> buf + pd -> buf_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 + VAR1 -> VAR3
  ORIGINAL[3]: pd -> buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: &pd -> buf
  TYPE[4]: CALL
  TOKENIZED[4]: &pd -> VAR1
  ORIGINAL[5]: pd -> buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buf
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pd
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pd
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pd
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pd
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: pd
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: pd
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: pd
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: pd
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 47244641179
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777669
FRAGMENT_COUNT: 2
  ORIGINAL[0]: autosuggestive_nonspurious(hypoproteinosis_structure)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: hypoproteinosis_structure
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772356
FRAGMENT_COUNT: 53
  ORIGINAL[0]: st -> first_dts != ((int64_t )0x8000000000000000UL) || dts == ((int64_t )0x8000000000000000UL) || st -> cur_dts == ((int64_t )0x8000000000000000UL) || is_relative(dts)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( VAR3 ) 0x8000000000000000UL ) || VAR4 == ( ( VAR3 ) 0x8000000000000000UL ) || VAR1 -> VAR5 == ( ( VAR3 ) 0x8000000000000000UL ) || FUN1 ( VAR4 )
  ORIGINAL[1]: st -> first_dts != ((int64_t )0x8000000000000000UL) || dts == ((int64_t )0x8000000000000000UL) || st -> cur_dts == ((int64_t )0x8000000000000000UL)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 != ( ( VAR3 ) 0x8000000000000000UL ) || VAR4 == ( ( VAR3 ) 0x8000000000000000UL ) || VAR1 -> VAR5 == ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[2]: is_relative(dts)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: delay = st -> codec -> has_b_frames
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2 -> VAR3 -> VAR4
  ORIGINAL[4]: st -> codec -> has_b_frames
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: st -> codec
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: st -> first_dts = (dts - ((st -> cur_dts) - (9223372036854775807L - (1LL << 48))))
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 = ( VAR3 - ( ( VAR1 -> VAR4 ) - ( 9223372036854775807L - ( 1LL << 48 ) ) ) )
  ORIGINAL[7]: st -> first_dts
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: dts - ((st -> cur_dts) - (9223372036854775807L - (1LL << 48)))
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 - ( ( VAR2 -> VAR3 ) - ( 9223372036854775807L - ( 1LL << 48 ) ) )
  ORIGINAL[9]: (st -> cur_dts) - (9223372036854775807L - (1LL << 48))
  TYPE[9]: CALL
  TOKENIZED[9]: ( VAR1 -> VAR2 ) - ( 9223372036854775807L - ( 1LL << 48 ) )
  ORIGINAL[10]: st -> cur_dts
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: 9223372036854775807L - (1LL << 48)
  TYPE[11]: CALL
  TOKENIZED[11]: 9223372036854775807L - ( 1LL << 48 )
  ORIGINAL[12]: 1LL << 48
  TYPE[12]: CALL
  TOKENIZED[12]: 1LL << 48
  ORIGINAL[13]: st -> cur_dts = dts
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2 = VAR3
  ORIGINAL[14]: st -> cur_dts
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: shift = ((st -> first_dts) - (9223372036854775807L - (1LL << 48)))
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 = ( ( VAR2 -> VAR3 ) - ( 9223372036854775807L - ( 1LL << 48 ) ) )
  ORIGINAL[16]: (st -> first_dts) - (9223372036854775807L - (1LL << 48))
  TYPE[16]: CALL
  TOKENIZED[16]: ( VAR1 -> VAR2 ) - ( 9223372036854775807L - ( 1LL << 48 ) )
  ORIGINAL[17]: st -> first_dts
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 -> VAR2
  ORIGINAL[18]: 9223372036854775807L - (1LL << 48)
  TYPE[18]: CALL
  TOKENIZED[18]: 9223372036854775807L - ( 1LL << 48 )
  ORIGINAL[19]: 1LL << 48
  TYPE[19]: CALL
  TOKENIZED[19]: 1LL << 48
  ORIGINAL[20]: i = 0
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 = 0
  ORIGINAL[21]: i < 16 + 1
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 < 16 + 1
  ORIGINAL[22]: 16 + 1
  TYPE[22]: CALL
  TOKENIZED[22]: 16 + 1
  ORIGINAL[23]: is_relative(pts)
  TYPE[23]: CALL
  TOKENIZED[23]: FUN1 ( VAR1 )
  ORIGINAL[24]: update_wrap_reference(s,st,stream_index) && st -> pts_wrap_behavior == - 1
  TYPE[24]: CALL
  TOKENIZED[24]: FUN1 ( VAR1 , VAR2 , VAR3 ) && VAR2 -> VAR4 == - 1
  ORIGINAL[25]: update_wrap_reference(s,st,stream_index)
  TYPE[25]: CALL
  TOKENIZED[25]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[26]: st -> start_time == ((int64_t )0x8000000000000000UL)
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 -> VAR2 == ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[27]: st -> start_time
  TYPE[27]: CALL
  TOKENIZED[27]: VAR1 -> VAR2
  ORIGINAL[28]: (int64_t )0x8000000000000000UL
  TYPE[28]: CALL
  TOKENIZED[28]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[29]: codec
  TYPE[29]: FIELD_IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: has_b_frames
  TYPE[30]: FIELD_IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: first_dts
  TYPE[31]: FIELD_IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: cur_dts
  TYPE[32]: FIELD_IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: cur_dts
  TYPE[33]: FIELD_IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: first_dts
  TYPE[34]: FIELD_IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: start_time
  TYPE[35]: FIELD_IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: delay
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: st
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: st
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: dts
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: st
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: st
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: dts
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: shift
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: st
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: i
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: i
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: pts
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: VAR1
  ORIGINAL[48]: pktl
  TYPE[48]: IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: s
  TYPE[49]: IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: st
  TYPE[50]: IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: stream_index
  TYPE[51]: IDENTIFIER
  TOKENIZED[51]: VAR1
  ORIGINAL[52]: st
  TYPE[52]: IDENTIFIER
  TOKENIZED[52]: VAR1

CENTER_NODE: 47244641154
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771358
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buf[1024]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1024 ]
  ORIGINAL[1]: buf[1024]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1024 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filename
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719481458
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772971
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *pkt_buf
  TYPE[0]: CALL
  TOKENIZED[0]: *pkt_buf
  ORIGINAL[1]: *pktl =  *pkt_buf
  TYPE[1]: CALL
  TOKENIZED[1]: *pktl = *pkt_buf
  ORIGINAL[2]: *pkt_buf
  TYPE[2]: CALL
  TOKENIZED[2]: *pkt_buf
  ORIGINAL[3]: pktl
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pkt_buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pkt_buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244641165
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772151
FRAGMENT_COUNT: 8
  ORIGINAL[0]: st -> codec -> time_base . num * 1000LL > st -> codec -> time_base . den
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 . VAR4 * 1000LL > VAR1 -> VAR2 -> VAR3 . VAR5
  ORIGINAL[1]: st -> codec -> time_base . num
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[2]: *pnum = st -> codec -> time_base . num
  TYPE[2]: CALL
  TOKENIZED[2]: *pnum = VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[3]: *pnum
  TYPE[3]: CALL
  TOKENIZED[3]: *pnum
  ORIGINAL[4]: st -> codec -> time_base . num
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[5]: st -> codec -> time_base
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[6]: st -> codec -> time_base
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[7]: num
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 2
  ORIGINAL[0]: \
  TYPE[0]: CALL
  TOKENIZED[0]: \
  ORIGINAL[1]: sizeof(\
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( \

CENTER_NODE: 30064777690
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: beglads_unsweetness
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064776931
FRAGMENT_COUNT: 6
  ORIGINAL[0]: pkt_dump_internal(((void *)0),f,0,pkt,dump_payload,st -> time_base)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , VAR1 , 0 , VAR2 , VAR3 , VAR4 -> VAR5 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: st -> time_base
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: f
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pkt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dump_payload
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771439
FRAGMENT_COUNT: 5
  ORIGINAL[0]: score_ret >  *score_max
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > *score_max
  ORIGINAL[1]: *score_max = score_ret
  TYPE[1]: CALL
  TOKENIZED[1]: *score_max = VAR1
  ORIGINAL[2]: *score_max
  TYPE[2]: CALL
  TOKENIZED[2]: *score_max
  ORIGINAL[3]: score_ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fmt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640822
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777701
FRAGMENT_COUNT: 2
  ORIGINAL[0]: idiocies_pompei(postbase_septical)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: postbase_septical
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064776015
FRAGMENT_COUNT: 13
  ORIGINAL[0]: s -> iformat -> read_pause
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: s -> iformat
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (s -> iformat -> read_pause)(s)
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 -> VAR3 ) ( VAR1 )
  ORIGINAL[3]: s -> iformat -> read_pause
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: s -> iformat
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> pb
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: read_pause
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: iformat
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: read_pause
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pb
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064776114
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 0
  ORIGINAL[1]: av_freep((&s -> programs[i] -> stream_index))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &s -> VAR1 [ VAR2 ] -> VAR3 ) )
  ORIGINAL[2]: &s -> programs[i] -> stream_index
  TYPE[2]: CALL
  TOKENIZED[2]: &s -> VAR1 [ VAR2 ] -> VAR3
  ORIGINAL[3]: s -> programs[i] -> stream_index
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] -> VAR4

CENTER_NODE: 47244641130
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777136
FRAGMENT_COUNT: 13
  ORIGINAL[0]: local_pkt =  *pkt
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = *pkt
  ORIGINAL[1]: *pkt
  TYPE[1]: CALL
  TOKENIZED[1]: *pkt
  ORIGINAL[2]: local_pkt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pkt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pkt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pkt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pkt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pkt
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pkt
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pkt
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pkt
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: pkt
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: pkt
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719481422
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064771101
FRAGMENT_COUNT: 13
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: strcmp(getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( FUN2 ( \
  ORIGINAL[3]: *stonesoup_server = mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_server = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: mg_set_option(stonesoup_server, \
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , \
  ORIGINAL[6]: mg_destroy_server(&stonesoup_server)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( &stonesoup_server )
  ORIGINAL[7]: &stonesoup_server
  TYPE[7]: CALL
  TOKENIZED[7]: &stonesoup_server
  ORIGINAL[8]: if (getenv(\
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: if ( FUN1 ( \
  ORIGINAL[9]: stonesoup_server
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: NULL
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stonesoup_server
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: stonesoup_server
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064777257
FRAGMENT_COUNT: 11
  ORIGINAL[0]: i < s -> nb_streams
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: s -> nb_streams
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: s -> streams[i] -> id == id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] -> VAR4 == VAR4
  ORIGINAL[4]: s -> streams[i] -> id
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ] -> VAR4
  ORIGINAL[5]: nb_streams
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: id
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064776334
FRAGMENT_COUNT: 10
  ORIGINAL[0]: s -> chapters[i] -> id == id
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] -> VAR4 == VAR4
  ORIGINAL[1]: s -> chapters[i] -> id
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] -> VAR4
  ORIGINAL[2]: s -> chapters[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: s -> chapters
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: chapter = s -> chapters[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[5]: s -> chapters[i]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[6]: s -> chapters
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: s -> chapters
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: chapter
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640533
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640813
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777194
FRAGMENT_COUNT: 10
  ORIGINAL[0]: *ptr
  TYPE[0]: CALL
  TOKENIZED[0]: *ptr
  ORIGINAL[1]: !( *ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( *ptr )
  ORIGINAL[2]: *ptr
  TYPE[2]: CALL
  TOKENIZED[2]: *ptr
  ORIGINAL[3]: !(ptr = (strchr(key,'=')))
  TYPE[3]: CALL
  TOKENIZED[3]: ! ( VAR1 = ( FUN1 ( VAR2 , '=' ) ) )
  ORIGINAL[4]: *ptr
  TYPE[4]: CALL
  TOKENIZED[4]: *ptr
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ptr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: ptr
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ptr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719481202
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ff_codec_wav_tags
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771181
FRAGMENT_COUNT: 13
  ORIGINAL[0]: *p != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *p != ( ( void * ) 0 )
  ORIGINAL[1]: *p
  TYPE[1]: CALL
  TOKENIZED[1]: *p
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: p = &( *p) -> next
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = & ( *p ) -> VAR2
  ORIGINAL[4]: &( *p) -> next
  TYPE[4]: CALL
  TOKENIZED[4]: & ( *p ) -> VAR1
  ORIGINAL[5]: ( *p) -> next
  TYPE[5]: CALL
  TOKENIZED[5]: ( *p ) -> VAR1
  ORIGINAL[6]: *p
  TYPE[6]: CALL
  TOKENIZED[6]: *p
  ORIGINAL[7]: while (*p != ((void *)0))
  TYPE[7]: CONTROL_STRUCTURE
  TOKENIZED[7]: while ( *p != ( ( void * ) 0 ) )
  ORIGINAL[8]: next
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: p
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: p
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: p
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: p
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064773767
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ff_index_search_timestamp((st -> index_entries),st -> nb_index_entries,wanted_timestamp,flags)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( VAR1 -> VAR2 ) , VAR1 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: st -> index_entries
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: st -> nb_index_entries
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: wanted_timestamp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: flags
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719481414
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719476889
FRAGMENT_COUNT: 4
  ORIGINAL[0]: type == AVMEDIA_TYPE_VIDEO
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: type
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: AVMEDIA_TYPE_VIDEO
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772230
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pktl -> next
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pktl -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: next
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pktl
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064777723
FRAGMENT_COUNT: 2
  ORIGINAL[0]: submaximal_pippy(larkspur_syphilophobia)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: larkspur_syphilophobia
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064773932
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (char [32]){(0)}
  TYPE[0]: CALL
  TOKENIZED[0]: ( char [ 32 ] ) { ( 0 ) }
  ORIGINAL[1]: {(0)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( 0 ) }

CENTER_NODE: 68719481492
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244641036
FRAGMENT_COUNT: 1
  ORIGINAL[0]: s -> iformat
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2

CENTER_NODE: 68719476780
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c - 32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 32
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479164
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < ic -> nb_streams
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: ic -> streams[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: ic -> streams
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719481477
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: omens_mycosozin(zattare_brotherliness)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: zattare_brotherliness
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244641023
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 2
  ORIGINAL[0]: s -> streams[i] -> disposition & 0x0400 && (s -> streams[i] -> discard) < AVDISCARD_ALL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] -> VAR4 & 0x0400 && ( VAR1 -> VAR2 [ VAR3 ] -> VAR5 ) < VAR6
  ORIGINAL[1]: for (i = 0;i < s -> nb_streams;i++)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( VAR1 = 0 ; VAR1 < VAR2 -> VAR3 ; i++ )

CENTER_NODE: 30064777379
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !pkt
  TYPE[0]: CALL
  TOKENIZED[0]: !pkt
  ORIGINAL[1]: data = av_packet_new_side_data(pkt,AV_PKT_DATA_PARAM_CHANGE,size)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: av_packet_new_side_data(pkt,AV_PKT_DATA_PARAM_CHANGE,size)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pkt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: AV_PKT_DATA_PARAM_CHANGE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640807
FRAGMENT_COUNT: 0

CENTER_NODE: 30064775015
FRAGMENT_COUNT: 3
  ORIGINAL[0]: i < 60 * 12
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 60 * 12
  ORIGINAL[1]: (const int [6UL]){(24), (30), (60), (12), (15), (48)}
  TYPE[1]: CALL
  TOKENIZED[1]: ( const int [ 6UL ] ) { ( 24 ) , ( 30 ) , ( 60 ) , ( 12 ) , ( 15 ) , ( 48 ) }
  ORIGINAL[2]: {(24), (30), (60), (12), (15), (48)}
  TYPE[2]: CALL
  TOKENIZED[2]: { ( 24 ) , ( 30 ) , ( 60 ) , ( 12 ) , ( 15 ) , ( 48 ) }

CENTER_NODE: 30064772101
FRAGMENT_COUNT: 10
  ORIGINAL[0]: (enc -> codec_id) == AV_CODEC_ID_WMAV1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == VAR3
  ORIGINAL[1]: enc -> codec_id
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (enc -> codec_id) == AV_CODEC_ID_WMAV2
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) == VAR3
  ORIGINAL[3]: enc -> codec_id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: codec_id
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: enc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: enc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: AV_CODEC_ID_WMAV2
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: enc
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: enc
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719479337
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *errmsg_ptr
  TYPE[0]: CALL
  TOKENIZED[0]: *errmsg_ptr
  ORIGINAL[1]: errmsg_ptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: errmsg_ptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064777703
FRAGMENT_COUNT: 2
  ORIGINAL[0]: recent_ballottines(lactucarium_squatinoidei)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: lactucarium_squatinoidei
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640678
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719481398
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *bisectors_nonmechanically = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *bisectors_nonmechanically = 0
  ORIGINAL[1]: bisectors_nonmechanically
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244641228
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064774383
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ic -> pb && (filesize = avio_size(ic -> pb)) > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && ( VAR3 = FUN1 ( VAR1 -> VAR2 ) ) > 0
  ORIGINAL[1]: ic -> pb
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (filesize = avio_size(ic -> pb)) > 0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 = FUN1 ( VAR2 -> VAR3 ) ) > 0
  ORIGINAL[3]: filesize = avio_size(ic -> pb)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( VAR2 -> VAR3 )

CENTER_NODE: 68719477164
FRAGMENT_COUNT: 12
  ORIGINAL[0]: !buftmp
  TYPE[0]: CALL
  TOKENIZED[0]: !buftmp
  ORIGINAL[1]: buf + buf_offset
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2
  ORIGINAL[2]: buf[offset]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pb
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf_offset
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064776857
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hex_dump_internal(((void *)0),f,0,buf,size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , VAR1 , 0 , VAR2 , VAR3 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: f
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064777262
FRAGMENT_COUNT: 20
  ORIGINAL[0]: base && strstr(base,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && FUN1 ( VAR1 , \
  ORIGINAL[1]: base && strstr(base,\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 && FUN1 ( VAR1 , \
  ORIGINAL[2]: rel[0] == '/'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == '/'
  ORIGINAL[3]: base != buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 != VAR2
  ORIGINAL[4]: sep = strstr(buf,\
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[5]: strstr(buf,\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , \
  ORIGINAL[6]: av_strlcat(buf,rel,size)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[7]: !base || strstr(rel,\
  TYPE[7]: CALL
  TOKENIZED[7]: !base || FUN1 ( VAR1 , \
  ORIGINAL[8]: !base || strstr(rel,\
  TYPE[8]: CALL
  TOKENIZED[8]: !base || FUN1 ( VAR1 , \
  ORIGINAL[9]: !base
  TYPE[9]: CALL
  TOKENIZED[9]: !base
  ORIGINAL[10]: if (base && strstr(base,\
  TYPE[10]: CONTROL_STRUCTURE
  TOKENIZED[10]: if ( VAR1 && FUN1 ( VAR1 , \
  ORIGINAL[11]: base
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: sep
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: buf
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: sep
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: buf
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: rel
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: size
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: base
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 1
  ORIGINAL[0]: st -> request_probe <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 <= 0

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719481434
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719481450
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244641151
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640608
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719481366
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len_p > len_h
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2
  ORIGINAL[1]: len_h - len_p
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2
  ORIGINAL[2]: len_p
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len_h
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len_p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len_p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244641297
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777344
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ofmt -> codec_tag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: !(!av_codec_get_tag(ofmt -> codec_tag,codec_id))
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( !av_codec_get_tag ( VAR1 -> VAR2 , VAR3 ) )
  ORIGINAL[2]: !av_codec_get_tag(ofmt -> codec_tag,codec_id)
  TYPE[2]: CALL
  TOKENIZED[2]: !av_codec_get_tag ( VAR1 -> VAR2 , VAR3 )

CENTER_NODE: 47244641137
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640424
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777693
FRAGMENT_COUNT: 2
  ORIGINAL[0]: teriyakis_smerk(unracking_morike)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: unracking_morike
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640816
FRAGMENT_COUNT: 0

CENTER_NODE: 30064774133
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s -> iformat -> read_seek
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: s -> iformat -> read_seek
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: s -> iformat
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: iformat
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: read_seek
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !s -> iformat
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: s -> iformat = av_probe_input_format2(&pd,0,&score)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = FUN1 ( &pd , 0 , &score )
  ORIGINAL[2]: s -> iformat
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: av_probe_input_format2(&pd,0,&score)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( &pd , 0 , &score )
  ORIGINAL[4]: &pd
  TYPE[4]: CALL
  TOKENIZED[4]: &pd
  ORIGINAL[5]: &score
  TYPE[5]: CALL
  TOKENIZED[5]: &score

CENTER_NODE: 68719480071
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !last
  TYPE[0]: CALL
  TOKENIZED[0]: !last
  ORIGINAL[1]: ic -> programs[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: ic -> programs
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ic -> programs[i] -> stream_index[j] == s
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] -> VAR4 [ VAR5 ] == VAR6
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244641145
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719481499
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: normoblast_readopts(predriving_synedrium)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: predriving_synedrium
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478380
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (st -> codec -> codec_type) == AVMEDIA_TYPE_VIDEO && !(st -> disposition & 0x0400)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 -> VAR3 ) == VAR4 && ! ( VAR1 -> VAR5 & 0x0400 )
  ORIGINAL[1]: first_audio_index < 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 0
  ORIGINAL[2]: first_audio_index
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: first_audio_index
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: first_audio_index
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: first_audio_index
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064773645
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (((unsigned int )( *nb_index_entries)) + 1) >= (2147483647 * 2U + 1U) / sizeof(AVIndexEntry )
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( ( unsigned int ) ( *nb_index_entries ) ) + 1 ) >= ( 2147483647 * 2U + 1U ) / sizeof ( VAR1 )
  ORIGINAL[1]: timestamp == ((int64_t )0x8000000000000000UL)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == ( ( VAR2 ) 0x8000000000000000UL )
  ORIGINAL[2]: (int64_t )0x8000000000000000UL
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[3]: timestamp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064777652
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *sep
  TYPE[0]: CALL
  TOKENIZED[0]: *sep
  ORIGINAL[1]: *sep = '\\0'
  TYPE[1]: CALL
  TOKENIZED[1]: *sep = '\\0'
  ORIGINAL[2]: *sep
  TYPE[2]: CALL
  TOKENIZED[2]: *sep
  ORIGINAL[3]: start
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640670
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640829
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777741
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ovularian_morcote(wiclif_empyreans)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: wiclif_empyreans
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719478363
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s -> parse_queue
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> parse_queue_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &s -> packet_buffer
  TYPE[2]: CALL
  TOKENIZED[2]: &s -> VAR1
  ORIGINAL[3]: s -> packet_buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> packet_buffer_end
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: packet_buffer_end
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064774154
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ret = seek_frame_internal(s,stream_index,timestamp,flags)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: seek_frame_internal(s,stream_index,timestamp,flags)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream_index
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: timestamp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: flags
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640658
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478522
FRAGMENT_COUNT: 6
  ORIGINAL[0]: b - a > 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2 > 1
  ORIGINAL[1]: a + b
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: m
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: a
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064777587
FRAGMENT_COUNT: 5
  ORIGINAL[0]: st -> codec -> width == 1280
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 == 1280
  ORIGINAL[1]: data = avci100_720p_extradata
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: avci100_720p_extradata
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244641142
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476845
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !name || !names
  TYPE[0]: CALL
  TOKENIZED[0]: !name || !names
  ORIGINAL[1]: namelen = (strlen(name))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 ) )
  ORIGINAL[2]: p = (strchr(names,','))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( FUN1 ( VAR2 , ' , ' ) )
  ORIGINAL[3]: strchr(names,',')
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ' , ' )
  ORIGINAL[4]: !av_strncasecmp(name,names,len)
  TYPE[4]: CALL
  TOKENIZED[4]: !av_strncasecmp ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[5]: names = p + 1
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = VAR2 + 1
  ORIGINAL[6]: p
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: names
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: p
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064772066
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (avctx -> codec_id) == AV_CODEC_ID_MP1 || (avctx -> codec_id) == AV_CODEC_ID_MP2 || (avctx -> codec_id) == AV_CODEC_ID_MP3
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == VAR3 || ( VAR1 -> VAR2 ) == VAR4 || ( VAR1 -> VAR2 ) == VAR5
  ORIGINAL[1]: (avctx -> codec_id) == AV_CODEC_ID_MP1 || (avctx -> codec_id) == AV_CODEC_ID_MP2
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) == VAR3 || ( VAR1 -> VAR2 ) == VAR4
  ORIGINAL[2]: (avctx -> codec_id) == AV_CODEC_ID_MP3
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) == VAR3

CENTER_NODE: 30064777712
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: talipat_laccadive
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719481446
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719481487
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: swannanoa_skywriting(shiism_worksheets)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: shiism_worksheets
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244641025
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478271
FRAGMENT_COUNT: 5
  ORIGINAL[0]: genpts = s -> flags & 0x1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3 & 0x1
  ORIGINAL[1]: eof = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: eof
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: eof
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: eof
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064777764
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stonesoup_oc_i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: stonesoup_oc_i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stonesoup_buff
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064776313
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !program
  TYPE[0]: CALL
  TOKENIZED[0]: !program
  ORIGINAL[1]: !program
  TYPE[1]: CALL
  TOKENIZED[1]: !program
  ORIGINAL[2]: program -> pts_wrap_reference = ((int64_t )0x8000000000000000UL)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[3]: program -> pts_wrap_reference
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (int64_t )0x8000000000000000UL
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[5]: program
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640739
FRAGMENT_COUNT: 1
  ORIGINAL[0]: s -> seek2any > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > 0

CENTER_NODE: 68719477097
FRAGMENT_COUNT: 7
  ORIGINAL[0]: st -> request_probe
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: st -> probe_packets
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !strcmp(fmt -> name,fmt_id_type[i] . name)
  TYPE[2]: CALL
  TOKENIZED[2]: !strcmp ( VAR1 -> VAR2 , VAR3 [ VAR4 ] . VAR2 )
  ORIGINAL[3]: st -> codec -> codec_id = fmt_id_type[i] . id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3 = VAR4 [ VAR5 ] . VAR6
  ORIGINAL[4]: st -> codec
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: codec
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: st
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064773602
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < s -> nb_streams
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: st -> time_base . den
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: st -> time_base
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: time_base
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: den
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: st
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: st
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064777742
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: merosthenic_tali
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244641045
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773112
FRAGMENT_COUNT: 20
  ORIGINAL[0]: st -> parser
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: st -> parser
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: st -> parser
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: st -> parser
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: st -> parser
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: st -> parser
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: st -> parser
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: st -> parser
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: st -> parser -> key_frame == - 1
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 -> VAR3 == - 1
  ORIGINAL[9]: st -> parser
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: st -> parser -> pict_type == AV_PICTURE_TYPE_I
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2 -> VAR3 == VAR4
  ORIGINAL[11]: st -> parser -> pict_type
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[12]: st -> parser
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: st -> parser
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: st -> parser -> pict_type
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[15]: st -> parser
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2
  ORIGINAL[16]: st -> parser
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: st -> parser
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 -> VAR2
  ORIGINAL[18]: pict_type
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: AV_PICTURE_TYPE_I
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064771444
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_probe_input_format2(pd,is_opened,&score)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , &score )
  ORIGINAL[1]: &score
  TYPE[1]: CALL
  TOKENIZED[1]: &score
  ORIGINAL[2]: score
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064777676
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: preestablishes_cyanines
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ev == MG_REQUEST
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: strcmp(ifmatch_header, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: strcmp(ifmatch_header, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: stonesoup_printf_context = conn
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2
  ORIGINAL[4]: stonesoup_handle_taint(stonesoup_tainted_buff)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: if (strcmp(ifmatch_header, \
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: if ( FUN1 ( VAR1 , \
  ORIGINAL[6]: <global> stonesoup_printf_context
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: conn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stonesoup_tainted_buff
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: MG_TRUE
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064776073
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_freep((&st -> info))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( &st -> VAR1 ) )
  ORIGINAL[1]: &st -> info
  TYPE[1]: CALL
  TOKENIZED[1]: &st -> VAR1
  ORIGINAL[2]: st -> info
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

CENTER_NODE: 30064777730
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: joacima_tatuasu
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640659
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771282
FRAGMENT_COUNT: 10
  ORIGINAL[0]: fmt = av_iformat_next(fmt)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[1]: av_iformat_next(fmt)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: match_format(short_name,fmt -> name)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 -> VAR3 )
  ORIGINAL[3]: fmt -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: while (fmt = av_iformat_next(fmt))
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: while ( VAR1 = FUN1 ( VAR1 ) )
  ORIGINAL[6]: name
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: fmt
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: short_name
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: fmt
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719481439
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: ampalaya_singleness(deinocephalia_gilet)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: deinocephalia_gilet
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719481501
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: nonloyalty_osirification(irradiations_sciatica)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: irradiations_sciatica
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064777696
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: piacularity_obclude
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719481454
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064773176
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *pkt = pktl -> pkt
  TYPE[0]: CALL
  TOKENIZED[0]: *pkt = VAR1 -> VAR2
  ORIGINAL[1]: *pkt
  TYPE[1]: CALL
  TOKENIZED[1]: *pkt
  ORIGINAL[2]: pktl -> pkt
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pkt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pktl
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064777717
FRAGMENT_COUNT: 2
  ORIGINAL[0]: influencive_cachemia(rintherout_muzziest)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: rintherout_muzziest
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719481285
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ( *(endptr++)) == ':'
  TYPE[0]: CALL
  TOKENIZED[0]: ( * ( endptr++ ) ) == ':'
  ORIGINAL[1]: stream_idx = (strtol(endptr,((void *)0),0))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 , ( ( void * ) 0 ) , 0 ) )
  ORIGINAL[2]: strtol(endptr,((void *)0),0)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( ( void * ) 0 ) , 0 )
  ORIGINAL[3]: stream_idx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: endptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream_idx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064777725
FRAGMENT_COUNT: 2
  ORIGINAL[0]: presecular_lwl(jeopordizes_butles)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: jeopordizes_butles
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640699
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771382
FRAGMENT_COUNT: 5
  ORIGINAL[0]: lpd . buf_size > '\\n' && ff_id3v2_match(lpd . buf,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 > '\\n' && FUN1 ( VAR1 . VAR3 , \
  ORIGINAL[1]: id3len = ff_id3v2_tag_len(lpd . buf)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 . VAR3 )
  ORIGINAL[2]: ff_id3v2_tag_len(lpd . buf)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 . VAR2 )
  ORIGINAL[3]: lpd . buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: id3len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771125
FRAGMENT_COUNT: 2
  ORIGINAL[0]: '6' << 16 | 63 << 8 | 'h'
  TYPE[0]: CALL
  TOKENIZED[0]: '6' << 16 | 63 << 8 | 'h'
  ORIGINAL[1]: '6' << 16 | 63 << 8
  TYPE[1]: CALL
  TOKENIZED[1]: '6' << 16 | 63 << 8

CENTER_NODE: 47244640808
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640845
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771270
FRAGMENT_COUNT: 5
  ORIGINAL[0]: score > score_max
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2
  ORIGINAL[1]: fmt_found = fmt
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt_found
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fmt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479492
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bps >>= 3
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >>= 3
  ORIGINAL[1]: sflags & 1 << bps - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 1 << VAR2 - 1
  ORIGINAL[2]: 1 << bps - 1
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << VAR1 - 1
  ORIGINAL[3]: flt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sflags
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244641168
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777418
FRAGMENT_COUNT: 10
  ORIGINAL[0]: &stream_sample_aspect_ratio . num
  TYPE[0]: CALL
  TOKENIZED[0]: &stream_sample_aspect_ratio . VAR1
  ORIGINAL[1]: stream_sample_aspect_ratio . num
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: stream_sample_aspect_ratio . num <= 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 <= 0
  ORIGINAL[3]: stream_sample_aspect_ratio . num
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: num
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream_sample_aspect_ratio
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream_sample_aspect_ratio
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stream_sample_aspect_ratio
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stream_sample_aspect_ratio
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stream_sample_aspect_ratio
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064777732
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: logomaniac_plasmolytic
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772558
FRAGMENT_COUNT: 11
  ORIGINAL[0]: pktl -> pkt . stream_index != stream_index
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 != VAR3
  ORIGINAL[1]: pktl -> pkt . pts == pktl -> pkt . dts && (pktl -> pkt . dts == ((int64_t )0x8000000000000000UL) || pktl -> pkt . dts == st -> first_dts) && !pktl -> pkt . duration
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 == VAR1 -> VAR2 . VAR4 && ( VAR1 -> VAR2 . VAR4 == ( ( VAR5 ) 0x8000000000000000UL ) || VAR1 -> VAR2 . VAR4 == VAR6 -> VAR7 ) && !pktl -> VAR2 . VAR8
  ORIGINAL[2]: pktl -> pkt . pts == pktl -> pkt . dts && (pktl -> pkt . dts == ((int64_t )0x8000000000000000UL) || pktl -> pkt . dts == st -> first_dts)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 == VAR1 -> VAR2 . VAR4 && ( VAR1 -> VAR2 . VAR4 == ( ( VAR5 ) 0x8000000000000000UL ) || VAR1 -> VAR2 . VAR4 == VAR6 -> VAR7 )
  ORIGINAL[3]: pktl -> pkt . pts == pktl -> pkt . dts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 == VAR1 -> VAR2 . VAR4
  ORIGINAL[4]: pktl -> pkt . dts == ((int64_t )0x8000000000000000UL) || pktl -> pkt . dts == st -> first_dts
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 == ( ( VAR4 ) 0x8000000000000000UL ) || VAR1 -> VAR2 . VAR3 == VAR5 -> VAR6
  ORIGINAL[5]: !pktl -> pkt . duration
  TYPE[5]: CALL
  TOKENIZED[5]: !pktl -> VAR1 . VAR2
  ORIGINAL[6]: pktl -> pkt . duration
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: pktl -> pkt
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: pkt
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: duration
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pktl
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244641044
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640575
FRAGMENT_COUNT: 0

CENTER_NODE: 47244641157
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777748
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: totalizator_pantod
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064775985
FRAGMENT_COUNT: 8
  ORIGINAL[0]: best_multiframe > multiframe || best_multiframe == multiframe && best_bitrate > bitrate
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2 || VAR1 == VAR2 && VAR3 > VAR4
  ORIGINAL[1]: best_multiframe == multiframe && best_bitrate == bitrate && best_count >= count
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == VAR2 && VAR3 == VAR4 && VAR5 >= VAR6
  ORIGINAL[2]: best_multiframe == multiframe && best_bitrate == bitrate
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == VAR2 && VAR3 == VAR4
  ORIGINAL[3]: best_multiframe == multiframe
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == VAR2
  ORIGINAL[4]: best_bitrate == bitrate
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == VAR2
  ORIGINAL[5]: best_count >= count
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 >= VAR2
  ORIGINAL[6]: best_count
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: count
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064777130
FRAGMENT_COUNT: 6
  ORIGINAL[0]: av_strlcatf(str,size,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: proto
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: proto
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: authorization
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478022
FRAGMENT_COUNT: 11
  ORIGINAL[0]: av_log(((void *)0),48,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , 48 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: av_ts_make_string(((char [32]){(0)}),pkt -> pts)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( char [ 32 ] ) { ( 0 ) } ) , VAR1 -> VAR2 )
  ORIGINAL[3]: av_ts_make_string(((char [32]){(0)}),pkt -> dts)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ( ( char [ 32 ] ) { ( 0 ) } ) , VAR1 -> VAR2 )
  ORIGINAL[4]: av_ts_make_string(((char [32]){(0)}),st -> cur_dts)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( ( ( char [ 32 ] ) { ( 0 ) } ) , VAR1 -> VAR2 )
  ORIGINAL[5]: delay
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: delay
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: delay
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: delay
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: presentation_delayed
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: delay
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064776775
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *(p++)
  TYPE[0]: CALL
  TOKENIZED[0]: * ( p++ )
  ORIGINAL[1]: p++
  TYPE[1]: CALL
  TOKENIZED[1]: p++
  ORIGINAL[2]: c == '%'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == '%'
  ORIGINAL[3]: *(p++)
  TYPE[3]: CALL
  TOKENIZED[3]: * ( p++ )
  ORIGINAL[4]: q - buf + len > (buf_size - 1)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 - VAR2 + VAR3 > ( VAR4 - 1 )
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: c
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719481448
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244641055
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776887
FRAGMENT_COUNT: 8
  ORIGINAL[0]: pkt -> dts == ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[1]: pkt -> dts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (int64_t )0x8000000000000000UL
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 0x8000000000000000UL
  ORIGINAL[3]: !f
  TYPE[3]: CALL
  TOKENIZED[3]: !f
  ORIGINAL[4]: !f
  TYPE[4]: CALL
  TOKENIZED[4]: !f
  ORIGINAL[5]: f
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: f
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: f
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640286
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ( *p) == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) == '\\0'

CENTER_NODE: 47244640700
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640551
FRAGMENT_COUNT: 0

CENTER_NODE: 30064777671
FRAGMENT_COUNT: 2
  ORIGINAL[0]: tampions_cancerin(detachably_fidele)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: detachably_fidele
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640819
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773260
FRAGMENT_COUNT: 25
  ORIGINAL[0]: st -> parser
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: st -> need_parsing
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !st -> parser
  TYPE[2]: CALL
  TOKENIZED[2]: !st -> VAR1
  ORIGINAL[3]: st -> parser
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: st -> parser
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: st -> parser -> flags
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[6]: st -> parser -> flags
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[7]: st -> parser -> flags
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[8]: st -> parser
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: parser
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: st
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: st
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: st
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: st
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: st
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: st
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: st
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: st
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: st
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: st
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: st
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: st
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: st
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: st
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: st
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1

