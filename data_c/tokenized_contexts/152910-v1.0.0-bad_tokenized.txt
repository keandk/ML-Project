# Tokenized code fragments for 152910-v1.0.0-bad
# Total center nodes processed: 87
# Total code fragments found: 236

CENTER_NODE: 30064772299
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&LocalBufferDescriptors[-buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &LocalBufferDescriptors [ -buffer - 1 ] )
  ORIGINAL[2]: &LocalBufferDescriptors[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &LocalBufferDescriptors [ -buffer - 1 ]
  ORIGINAL[3]: bufHdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772750
FRAGMENT_COUNT: 10
  ORIGINAL[0]: bufHdr -> tag . rnode . dbNode
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[1]: bufHdr -> tag . rnode . spcNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[2]: bufHdr -> tag . rnode . relNode == rel -> rd_node . relNode && bufHdr -> tag . rnode . dbNode == rel -> rd_node . dbNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 -> VAR6 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR5 -> VAR6 . VAR7
  ORIGINAL[3]: bufHdr -> tag . rnode . relNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[4]: bufHdr -> tag . rnode . dbNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[5]: bufHdr -> tag . rnode . spcNode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[6]: bufHdr -> tag . rnode
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: bufHdr -> tag
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: rnode
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: spcNode
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: mg_set_option(stonesoup_server, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: stonesoup_server
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640313
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640544
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772595
FRAGMENT_COUNT: 8
  ORIGINAL[0]: &bufHdr -> buf_hdr_lock
  TYPE[0]: CALL
  TOKENIZED[0]: &bufHdr -> VAR1
  ORIGINAL[1]: bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &bufHdr -> VAR1
  ORIGINAL[3]: bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7
  ORIGINAL[5]: (volatile slock_t *)(&bufHdr -> buf_hdr_lock)
  TYPE[5]: CALL
  TOKENIZED[5]: ( volatile VAR1 * ) ( &bufHdr -> VAR2 )
  ORIGINAL[6]: &bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &bufHdr -> VAR1
  ORIGINAL[7]: bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2

CENTER_NODE: 30064771120
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ReadBufferExtended(reln,MAIN_FORKNUM,blockNum,RBM_NORMAL,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: reln
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: MAIN_FORKNUM
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: blockNum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: RBM_NORMAL
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772486
FRAGMENT_COUNT: 11
  ORIGINAL[0]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6
  ORIGINAL[1]: bufHdr -> tag . rnode . spcNode == rnode . node . spcNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4
  ORIGINAL[2]: bufHdr -> tag . rnode . spcNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[3]: bufHdr -> tag . rnode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: rnode . node . spcNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2 . VAR3
  ORIGINAL[5]: bufHdr -> tag . rnode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3
  ORIGINAL[6]: bufHdr -> tag . rnode
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: bufHdr -> tag . rnode . spcNode
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[8]: bufHdr -> tag . rnode
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 . VAR3
  ORIGINAL[9]: spcNode
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: rnode
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772442
FRAGMENT_COUNT: 6
  ORIGINAL[0]: relation -> rd_smgr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: smgrsetowner(&relation -> rd_smgr,smgropen(relation -> rd_node,relation -> rd_backend))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &relation -> VAR1 , FUN2 ( VAR2 -> VAR3 , VAR2 -> VAR4 ) )
  ORIGINAL[2]: &relation -> rd_smgr
  TYPE[2]: CALL
  TOKENIZED[2]: &relation -> VAR1
  ORIGINAL[3]: smgropen(relation -> rd_node,relation -> rd_backend)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , VAR1 -> VAR3 )
  ORIGINAL[4]: relation -> rd_node
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: relation -> rd_backend
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2

CENTER_NODE: 30064771984
FRAGMENT_COUNT: 6
  ORIGINAL[0]: PrivateRefCount[b]--
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] --
  ORIGINAL[1]: PrivateRefCount[b]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: PrivateRefCount[b]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: PrivateRefCount
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: PrivateRefCount
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640470
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477530
FRAGMENT_COUNT: 6
  ORIGINAL[0]: CheckpointStats . ckpt_write_t
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: CheckpointStats . ckpt_sync_t
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: smgrsync()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: CheckpointStats . ckpt_sync_end_t
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: ckpt_sync_end_t
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: CheckpointStats
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640485
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640548
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640530
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477937
FRAGMENT_COUNT: 5
  ORIGINAL[0]: forInput?(buf -> flags) & 1 << 1 : !((buf -> flags) & 1 << 0)
  TYPE[0]: CALL
  TOKENIZED[0]: forInput? ( VAR1 -> VAR2 ) & 1 << 1 : ! ( ( VAR1 -> VAR2 ) & 1 << 0 )
  ORIGINAL[1]: IsForInput = forInput
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: forInput
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> IsForInput
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: forInput
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771779
FRAGMENT_COUNT: 10
  ORIGINAL[0]: buf -> tag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: buf -> tag . blockNum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: buf -> tag . forkNum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: buf -> refcount != 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 != 0
  ORIGINAL[4]: buf -> tag . rnode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: buf -> tag
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: tag
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: rnode
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064773139
FRAGMENT_COUNT: 4
  ORIGINAL[0]: clear_dirty && !((buf -> flags) & 1 << 5)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && ! ( ( VAR2 -> VAR3 ) & 1 << 5 )
  ORIGINAL[1]: !((buf -> flags) & 1 << 5)
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( ( VAR1 -> VAR2 ) & 1 << 5 )
  ORIGINAL[2]: (buf -> flags) & 1 << 5
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) & 1 << 5
  ORIGINAL[3]: clear_dirty
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640534
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478008
FRAGMENT_COUNT: 3
  ORIGINAL[0]: strlen(rattails_unrecriminative) < 20
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) < 20
  ORIGINAL[1]: sizeof(char)
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( char )
  ORIGINAL[2]: char
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: char

CENTER_NODE: 30064773013
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bufid = GetStartupBufferPinWaitBufId()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( )
  ORIGINAL[1]: GetStartupBufferPinWaitBufId()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: bufid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477911
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tas(&buf -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &buf -> VAR1 )
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf_hdr_lock
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772929
FRAGMENT_COUNT: 10
  ORIGINAL[0]: mode == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: mode == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 1
  ORIGINAL[2]: LWLockAcquire(buf -> content_lock,LW_SHARED)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[3]: buf -> content_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: mode == 2
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == 2
  ORIGINAL[5]: content_lock
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: mode
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: LW_SHARED
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: mode
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477187
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !((((void )((bool )1)) , buffer != 0))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( ( void ) ( ( VAR1 ) 1 ) ) , VAR2 != 0 ) )
  ORIGINAL[1]: elog_start(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __func__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719477453
FRAGMENT_COUNT: 5
  ORIGINAL[0]: BgWriterStats . m_buf_alloc
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: ++num_written >= bgwriter_lru_maxpages
  TYPE[1]: CALL
  TOKENIZED[1]: ++num_written >= VAR1
  ORIGINAL[2]: BgWriterStats . m_maxwritten_clean
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: m_maxwritten_clean
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: BgWriterStats
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772258
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: LocalBufferDescriptors[-buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ -buffer - 1 ]
  ORIGINAL[2]: -buffer - 1
  TYPE[2]: CALL
  TOKENIZED[2]: -buffer - 1
  ORIGINAL[3]: -buffer
  TYPE[3]: CALL
  TOKENIZED[3]: -buffer

CENTER_NODE: 47244640503
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476738
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (struct mg_connection*) stonesoup_printf_context
  TYPE[0]: CALL
  TOKENIZED[0]: ( struct mg_connection* ) VAR1
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640309
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771124
FRAGMENT_COUNT: 3
  ORIGINAL[0]: reln -> rd_smgr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: reln -> rd_smgr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 30064772250
FRAGMENT_COUNT: 1
  ORIGINAL[0]: on_shmem_exit(AtProcExit_Buffers,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )

CENTER_NODE: 47244640518
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476807
FRAGMENT_COUNT: 5
  ORIGINAL[0]: smgr = smgropen(rnode,- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , - 1 )
  ORIGINAL[1]: smgropen(rnode,- 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , - 1 )
  ORIGINAL[2]: smgr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: rnode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: smgr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476751
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sizeof(char)
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( char )
  ORIGINAL[1]: buffer_size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: char
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: char

CENTER_NODE: 30064772831
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: &BufferDescriptors[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[2]: BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[3]: buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 1
  ORIGINAL[4]: BufferDescriptors
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771923
FRAGMENT_COUNT: 4
  ORIGINAL[0]: b = buf -> buf_id
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: buf -> buf_id
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: PrivateRefCount
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640326
FRAGMENT_COUNT: 1
  ORIGINAL[0]: oldFlags & 1 << 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 1 << 0

CENTER_NODE: 68719477304
FRAGMENT_COUNT: 8
  ORIGINAL[0]: buf_id = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: buf_id < NBuffers
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: buf_id++
  TYPE[2]: CALL
  TOKENIZED[2]: buf_id++
  ORIGINAL[3]: buf_id
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf_id
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NBuffers
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf_id
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: buf_id
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640466
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640459
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771972
FRAGMENT_COUNT: 5
  ORIGINAL[0]: &buf -> buf_hdr_lock
  TYPE[0]: CALL
  TOKENIZED[0]: &buf -> VAR1
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf_hdr_lock
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640533
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640442
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640324
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719477542
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: -buffer
  TYPE[1]: CALL
  TOKENIZED[1]: -buffer
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: LocalBufferDescriptors
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772861
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: bufHdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477895
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640478
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773007
FRAGMENT_COUNT: 4
  ORIGINAL[0]: standbyState >= STANDBY_SNAPSHOT_PENDING
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= VAR2
  ORIGINAL[1]: SetStartupBufferPinWaitBufId(- 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( - 1 )
  ORIGINAL[2]: - 1
  TYPE[2]: CALL
  TOKENIZED[2]: - 1
  ORIGINAL[3]: <global> PinCountWaitBuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064773223
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *bufHdr = (volatile BufferDesc *)arg
  TYPE[0]: CALL
  TOKENIZED[0]: *bufHdr = ( volatile VAR1 * ) VAR2
  ORIGINAL[1]: (volatile BufferDesc *)arg
  TYPE[1]: CALL
  TOKENIZED[1]: ( volatile VAR1 * ) VAR2
  ORIGINAL[2]: bufHdr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772280
FRAGMENT_COUNT: 2
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772213
FRAGMENT_COUNT: 24
  ORIGINAL[0]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[1]: &bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: &bufHdr -> VAR1
  ORIGINAL[2]: bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &bufHdr -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: &bufHdr -> VAR1
  ORIGINAL[4]: bufHdr -> buf_hdr_lock
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &bufHdr -> buf_hdr_lock
  TYPE[5]: CALL
  TOKENIZED[5]: &bufHdr -> VAR1
  ORIGINAL[6]: bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: &bufHdr -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: &bufHdr -> VAR1
  ORIGINAL[8]: bufHdr -> buf_hdr_lock
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: buf_hdr_lock
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: bufHdr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: bufHdr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: bufHdr
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: bufHdr
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: bufHdr
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: bufHdr
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: bufHdr
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: bufHdr
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: bufHdr
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: bufHdr
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: bufHdr
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: bufHdr
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: bufHdr
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: bufHdr
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1

CENTER_NODE: 47244640513
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0

CENTER_NODE: 68719477770
FRAGMENT_COUNT: 10
  ORIGINAL[0]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[1]: bufHdr -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: bufHdr -> flags
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr -> flags
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: bufHdr -> content_lock
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: bufHdr -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf_hdr_lock
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: bufHdr
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: bufHdr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640440
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772843
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ResourceOwnerEnlargeBuffers(CurrentResourceOwner)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: CurrentResourceOwner
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: CurrentResourceOwner
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477498
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AtEOXact_LocalBuffers(isCommit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: isCommit
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640498
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640450
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772597
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: for (i = 0;i < NBuffers;i++)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( VAR1 = 0 ; VAR1 < VAR2 ; i++ )
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640384
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640362
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771117
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640434
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640438
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477980
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (volatile BufferDesc *)arg
  TYPE[0]: CALL
  TOKENIZED[0]: ( volatile VAR1 * ) VAR2
  ORIGINAL[1]: arg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640353
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640538
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064772842
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ReleaseBuffer(buffer)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640539
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772251
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AbortBufferIO()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: UnlockBuffers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 0

