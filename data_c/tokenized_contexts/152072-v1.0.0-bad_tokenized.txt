# Tokenized code fragments for 152072-v1.0.0-bad
# Total center nodes processed: 41
# Total code fragments found: 142

CENTER_NODE: 30064776308
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ost -> encoding_needed
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: &ost -> st -> codec -> stats_in
  TYPE[1]: CALL
  TOKENIZED[1]: &ost -> VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: ost -> st -> codec -> stats_in
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 -> VAR4
  ORIGINAL[3]: ost -> st -> codec
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: ost -> st -> codec
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: ost -> st -> codec
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[6]: ost -> st -> codec
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[7]: stats_in
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771083
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: size_dirpath = strlen(ss_tc_root) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(ss_tc_root) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: size_dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640537
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640820
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478466
FRAGMENT_COUNT: 22
  ORIGINAL[0]: decoded_frame -> top_field_first
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: decoded_frame -> pts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: decoded_frame -> pts
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: decoded_frame -> key_frame
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: decoded_frame -> pict_type
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: decoded_frame -> sample_aspect_ratio
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: decoded_frame -> width
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: decoded_frame -> height
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: decoded_frame -> format
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: decoded_frame -> width
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: decoded_frame -> height
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: decoded_frame -> format
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: ist -> dr1 && decoded_frame -> type == 2 && !changed
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2 && VAR3 -> VAR4 == 2 && !changed
  ORIGINAL[13]: decoded_frame -> type
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: decoded_frame -> opaque
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: decoded_frame -> data
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2
  ORIGINAL[16]: decoded_frame -> linesize
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: linesize
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: decoded_frame
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: decoded_frame
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: decoded_frame
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: decoded_frame
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1

CENTER_NODE: 68719480031
FRAGMENT_COUNT: 4
  ORIGINAL[0]: received_sigterm = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: received_nb_signals = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: <global> received_nb_signals
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: received_nb_signals
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773334
FRAGMENT_COUNT: 19
  ORIGINAL[0]: !pkt -> size
  TYPE[0]: CALL
  TOKENIZED[0]: !pkt -> VAR1
  ORIGINAL[1]: i < ist -> nb_filters
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2 -> VAR3
  ORIGINAL[2]: ist -> nb_filters
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i++
  TYPE[3]: CALL
  TOKENIZED[3]: i++
  ORIGINAL[4]: av_buffersrc_add_ref(ist -> filters[i] -> filter,((void *)0),0)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] -> VAR4 , ( ( void * ) 0 ) , 0 )
  ORIGINAL[5]: ist -> filters[i] -> filter
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ] -> VAR4
  ORIGINAL[6]: ist -> filters[i]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[7]: ist -> filters
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: (void *)0
  TYPE[8]: CALL
  TOKENIZED[8]: ( void * ) 0
  ORIGINAL[9]: for (i = 0;i < ist -> nb_filters;i++)
  TYPE[9]: CONTROL_STRUCTURE
  TOKENIZED[9]: for ( VAR1 = 0 ; VAR1 < VAR2 -> VAR3 ; i++ )
  ORIGINAL[10]: nb_filters
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: filters
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: filter
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: i
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: ist
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: i
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: ist
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: i
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: ret
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 30064772359
FRAGMENT_COUNT: 4
  ORIGINAL[0]: - 10.0 * log(d)
  TYPE[0]: CALL
  TOKENIZED[0]: - 10 . 0 * FUN1 ( VAR1 )
  ORIGINAL[1]: - 10.0
  TYPE[1]: CALL
  TOKENIZED[1]: - 10 . 0
  ORIGINAL[2]: log(d)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: d
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640623
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 1
  ORIGINAL[0]: received_nb_signals > 3
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 3

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771667
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !((avctx -> codec_type) == AVMEDIA_TYPE_VIDEO && avctx -> codec)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( VAR1 -> VAR2 ) == VAR3 && VAR1 -> VAR4 )
  ORIGINAL[1]: (ost -> frame_number) >= ost -> max_frames
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) >= VAR1 -> VAR3
  ORIGINAL[2]: ost -> frame_number
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ost -> max_frames
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ost -> frame_number
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: frame_number
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ost
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ost
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: ost
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640546
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640421
FRAGMENT_COUNT: 0

CENTER_NODE: 30064776405
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: agreat_coatimundi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640408
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771245
FRAGMENT_COUNT: 4
  ORIGINAL[0]: w = ist -> sub2video . w
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3 . VAR1
  ORIGINAL[1]: ist -> sub2video . w
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: w
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: h
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771388
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_log(((void *)0),- 8,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , - 8 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: - 8
  TYPE[2]: CALL
  TOKENIZED[2]: - 8

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640608
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i < ist -> nb_filters
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2 -> VAR3
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: av_buffersrc_add_ref(ist -> filters[i] -> filter,((void *)0),0)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] -> VAR4 , ( ( void * ) 0 ) , 0 )
  ORIGINAL[4]: for (i = 0;i < ist -> nb_filters;i++)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: for ( VAR1 = 0 ; VAR1 < VAR2 -> VAR3 ; i++ )

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478771
FRAGMENT_COUNT: 5
  ORIGINAL[0]: va < vb
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: va > vb
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > VAR2
  ORIGINAL[2]: vb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: va
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: vb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640463
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064776359
FRAGMENT_COUNT: 3
  ORIGINAL[0]: setvbuf(stderr,((void *)0),2,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , 2 , 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: stderr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064776436
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int_cb = {(decode_interrupt_cb), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { ( VAR2 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: {(decode_interrupt_cb), ((void *)0)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( VAR1 ) , ( ( void * ) 0 ) }
  ORIGINAL[2]: int_cb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640548
FRAGMENT_COUNT: 0

CENTER_NODE: 30064775634
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_read_frame(f -> ctx,pkt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: f -> ctx
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pkt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771579
FRAGMENT_COUNT: 7
  ORIGINAL[0]: t = av_dict_get(m,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: av_log(((void *)0),8,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( void * ) 0 ) , 8 , \
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: t -> key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: key
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: t
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: t
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771397
FRAGMENT_COUNT: 1
  ORIGINAL[0]: signal(15,sigterm_handler)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 15 , VAR1 )

CENTER_NODE: 30064773283
FRAGMENT_COUNT: 11
  ORIGINAL[0]: dec -> channels
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: !dec -> channel_layout
  TYPE[1]: CALL
  TOKENIZED[1]: !dec -> VAR1
  ORIGINAL[2]: av_get_channel_layout_string(layout_name,(sizeof(layout_name)),dec -> channels,dec -> channel_layout)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( sizeof ( VAR1 ) ) , VAR2 -> VAR3 , VAR2 -> VAR4 )
  ORIGINAL[3]: sizeof(layout_name)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( VAR1 )
  ORIGINAL[4]: dec -> channels
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: dec -> channel_layout
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: channels
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dec
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: layout_name
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: dec
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: dec
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771588
FRAGMENT_COUNT: 7
  ORIGINAL[0]: vsnprintf(buf,sizeof(buf),fmt,va)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , sizeof ( VAR1 ) , VAR2 , VAR3 )
  ORIGINAL[1]: sizeof(buf)
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: fmt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: va
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476871
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i < ist -> nb_filters
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT | AV_BUFFERSRC_FLAG_NO_COPY
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 | VAR2
  ORIGINAL[2]: AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: AV_BUFFERSRC_FLAG_NO_COPY
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640547
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 1
  ORIGINAL[0]: stonesoup_tainted_file != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0

CENTER_NODE: 30064771192
FRAGMENT_COUNT: 4
  ORIGINAL[0]: r -> x < 0 || r -> x + r -> w > w || r -> y < 0 || r -> y + r -> h > h
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 < 0 || VAR1 -> VAR2 + VAR1 -> VAR3 > VAR3 || VAR1 -> VAR4 < 0 || VAR1 -> VAR4 + VAR1 -> VAR5 > VAR5
  ORIGINAL[1]: r -> y * dst_linesize + r -> x * 4
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 * VAR3 + VAR1 -> VAR4 * 4
  ORIGINAL[2]: r -> x * 4
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 * 4
  ORIGINAL[3]: r -> x
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2

CENTER_NODE: 30064771395
FRAGMENT_COUNT: 1
  ORIGINAL[0]: avformat_network_deinit()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )

CENTER_NODE: 30064771398
FRAGMENT_COUNT: 1
  ORIGINAL[0]: - 1
  TYPE[0]: CALL
  TOKENIZED[0]: - 1

CENTER_NODE: 30064771581
FRAGMENT_COUNT: 1
  ORIGINAL[0]: exit(1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1 )

CENTER_NODE: 30064771396
FRAGMENT_COUNT: 1
  ORIGINAL[0]: signal(2,sigterm_handler)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 , VAR1 )

