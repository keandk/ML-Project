# Tokenized code fragments for 153335-v1.0.0-bad
# Total center nodes processed: 94
# Total code fragments found: 423

CENTER_NODE: 68719476878
FRAGMENT_COUNT: 3
  ORIGINAL[0]: se_packet_mem . debug_verify_pointers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: debug_verify_pointers
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> se_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771716
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_free_all(&ep_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &ep_packet_mem )
  ORIGINAL[1]: &ep_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &ep_packet_mem
  ORIGINAL[2]: <global> ep_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719477080
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640323
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064771457
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *buf = (mem -> memory_alloc)(size,mem)
  TYPE[0]: CALL
  TOKENIZED[0]: *buf = ( VAR1 -> VAR2 ) ( VAR3 , VAR1 )
  ORIGINAL[1]: (mem -> memory_alloc)(size,mem)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR3 , VAR1 )
  ORIGINAL[2]: mem -> memory_alloc
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mem
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478142
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !strbuf || len >= strbuf -> len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 >= VAR2 -> VAR1
  ORIGINAL[1]: strbuf -> str[len]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: strbuf -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478077
FRAGMENT_COUNT: 4
  ORIGINAL[0]: strbuf -> alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: strbuf -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: len
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: strbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772750
FRAGMENT_COUNT: 5
  ORIGINAL[0]: full_len < add_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: ep_strbuf_grow(strbuf,strbuf -> len + full_len + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR1 -> VAR2 + VAR3 + 1 )
  ORIGINAL[2]: strbuf -> len + full_len + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 + VAR3 + 1
  ORIGINAL[3]: strbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: add_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477430
FRAGMENT_COUNT: 5
  ORIGINAL[0]: node -> parent -> left == node
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 == VAR1
  ORIGINAL[1]: node -> parent
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: parent
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640410
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771073
FRAGMENT_COUNT: 3
  ORIGINAL[0]: canary[8 * 2 - 1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 8 * 2 - 1 ]
  ORIGINAL[1]: 8 * 2 - 1
  TYPE[1]: CALL
  TOKENIZED[1]: 8 * 2 - 1
  ORIGINAL[2]: 8 * 2
  TYPE[2]: CALL
  TOKENIZED[2]: 8 * 2

CENTER_NODE: 68719477687
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tree_list -> next
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: tree_list -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tree_list -> tree = ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[3]: tree_list -> tree
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tree_list -> name
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: name
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tree_list
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tree_list
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476745
FRAGMENT_COUNT: 3
  ORIGINAL[0]: size_filepath = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: retval = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: retval
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *rand_state = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *rand_state = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: rand_state
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: rand_state
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477718
FRAGMENT_COUNT: 9
  ORIGINAL[0]: cur_key -> length > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > 0
  ORIGINAL[1]: cur_key -> length
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: i < cur_key -> length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 < VAR2 -> VAR3
  ORIGINAL[3]: cur_key -> length
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: length
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cur_key
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cur_key
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cur_key
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477083
FRAGMENT_COUNT: 5
  ORIGINAL[0]: memcpy(ep_alloc(len),src,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR1 )
  ORIGINAL[1]: ep_alloc(len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477703
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tree_list -> next
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: tree_list -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tree_list -> tree
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tree_list -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tree_list -> malloc = parent_tree -> malloc
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 = VAR3 -> VAR2
  ORIGINAL[5]: tree_list -> malloc
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: tree_list
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tree_list
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477052
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !src
  TYPE[0]: CALL
  TOKENIZED[0]: !src
  ORIGINAL[1]: strlen(src)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: guint
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: src
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477415
FRAGMENT_COUNT: 5
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_parent(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: parent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640377
FRAGMENT_COUNT: 2
  ORIGINAL[0]: node -> parent
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477044
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memset(ep_alloc(size),'\\0',size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , VAR1 )
  ORIGINAL[1]: ep_alloc(size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477104
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771200
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ep_packet_mem . used_list = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: ep_packet_mem . used_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: <global> ep_packet_mem
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064771325
FRAGMENT_COUNT: 3
  ORIGINAL[0]: npc -> next = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: npc -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 68719477913
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !emem_tree -> tree
  TYPE[0]: CALL
  TOKENIZED[0]: !emem_tree -> VAR1
  ORIGINAL[1]: emem_tree_foreach_nodes(emem_tree -> tree,callback,user_data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: emem_tree -> tree
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: callback
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: user_data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640276
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (getenv(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 68719477060
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477294
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *stack
  TYPE[0]: CALL
  TOKENIZED[0]: *stack
  ORIGINAL[1]: stack
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771549
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = g_printf_string_upper_bound(fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: g_printf_string_upper_bound(fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dst
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771400
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !mem -> free_list
  TYPE[0]: CALL
  TOKENIZED[0]: !mem -> VAR1
  ORIGINAL[1]: mem -> free_list = emem_create_chunk_gp((10 * 1024 * 1024))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = FUN1 ( ( 10 * 1024 * 1024 ) )
  ORIGINAL[2]: mem -> free_list
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: emem_create_chunk_gp((10 * 1024 * 1024))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ( 10 * 1024 * 1024 ) )
  ORIGINAL[4]: 10 * 1024 * 1024
  TYPE[4]: CALL
  TOKENIZED[4]: 10 * 1024 * 1024

CENTER_NODE: 68719478110
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_start(ap,format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ep_strbuf_append_vprintf(strbuf,format,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: strbuf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771527
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771788
FRAGMENT_COUNT: 5
  ORIGINAL[0]: node = se_tree -> tree
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: se_tree -> tree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: tree
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: se_tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477957
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cur_alloc_len < wanted_alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: cur_alloc_len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: wanted_alloc_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771254
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ep_init_chunk()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: se_init_chunk()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 30064772436
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: ch = ((unsigned char )k[i])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( unsigned char ) VAR2 [ VAR3 ] )
  ORIGINAL[2]: (unsigned char )k[i]
  TYPE[2]: CALL
  TOKENIZED[2]: ( unsigned char ) VAR1 [ VAR2 ]
  ORIGINAL[3]: k[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]
  ORIGINAL[4]: ch
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771160
FRAGMENT_COUNT: 12
  ORIGINAL[0]: i < 8 - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 8 - 1
  ORIGINAL[1]: i < 8 * 2 - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 8 * 2 - 1
  ORIGINAL[2]: 8 * 2 - 1
  TYPE[2]: CALL
  TOKENIZED[2]: 8 * 2 - 1
  ORIGINAL[3]: canary[i] == '\\0'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] == '\\0'
  ORIGINAL[4]: canary[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ]
  ORIGINAL[5]: mem_canary[i] != canary[i]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ VAR2 ] != VAR3 [ VAR2 ]
  ORIGINAL[6]: (void *)(- 1)
  TYPE[6]: CALL
  TOKENIZED[6]: ( void * ) ( - 1 )
  ORIGINAL[7]: - 1
  TYPE[7]: CALL
  TOKENIZED[7]: - 1
  ORIGINAL[8]: for (;i < 8 * 2 - 1;i++)
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: for ( ; VAR1 < 8 * 2 - 1 ; i++ )
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: canary
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: i
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719477006
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_alloc(size,&se_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &se_packet_mem )
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> se_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771258
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *cptr = ptr
  TYPE[0]: CALL
  TOKENIZED[0]: *cptr = VAR1
  ORIGINAL[1]: cptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: chunk
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771503
FRAGMENT_COUNT: 16
  ORIGINAL[0]: ptr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: memcpy(ptr,(&mem_chunk -> freed),sizeof(void *))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( &mem_chunk -> VAR2 ) , sizeof ( void * ) )
  ORIGINAL[3]: &mem_chunk -> freed
  TYPE[3]: CALL
  TOKENIZED[3]: &mem_chunk -> VAR1
  ORIGINAL[4]: mem_chunk -> freed
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: sizeof(void *)
  TYPE[5]: CALL
  TOKENIZED[5]: sizeof ( void * )
  ORIGINAL[6]: mem_chunk -> freed = ptr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 = VAR3
  ORIGINAL[7]: mem_chunk -> freed
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: freed
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: freed
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ptr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ptr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: mem_chunk
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: void
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: void
  ORIGINAL[14]: mem_chunk
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ptr
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 68719477188
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !string || !sep || !sep[0]
  TYPE[0]: CALL
  TOKENIZED[0]: !string || !sep || !sep [ 0 ]
  ORIGINAL[1]: vec[curr_tok] = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = ( ( void * ) 0 )
  ORIGINAL[2]: vec[curr_tok]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: vec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: vec
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771563
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_start(ap,fmt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dst
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640280
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719476832
FRAGMENT_COUNT: 2
  ORIGINAL[0]: allocation % 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 % 8
  ORIGINAL[1]: allocation
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477915
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !node
  TYPE[0]: CALL
  TOKENIZED[0]: !node
  ORIGINAL[1]: node
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: node
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 1
  ORIGINAL[0]: node == parent -> left && parent == grandparent -> right
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 -> VAR3 && VAR2 == VAR4 -> VAR5

CENTER_NODE: 47244640322
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477950
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_print_subtree(emem_tree,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: emem_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640464
FRAGMENT_COUNT: 1
  ORIGINAL[0]: stop_traverse
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719477102
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772702
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ep_strbuf_sized_new((240 / 10),240)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( 240 / 10 ) , 240 )
  ORIGINAL[1]: 240 / 10
  TYPE[1]: CALL
  TOKENIZED[1]: 240 / 10

CENTER_NODE: 68719476874
FRAGMENT_COUNT: 5
  ORIGINAL[0]: emem_verify_pointer_list((hdr -> free_list),ptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 )
  ORIGINAL[1]: emem_verify_pointer_list((hdr -> used_list),ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 )
  ORIGINAL[2]: hdr -> used_list
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477195
FRAGMENT_COUNT: 7
  ORIGINAL[0]: l += strlen(s)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 += FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: l
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: l
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: l
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771722
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mem_chunk -> chunk_list = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: mem_chunk -> chunk_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: chunk_list
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mem_chunk
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mem_chunk
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477655
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !node -> right
  TYPE[0]: CALL
  TOKENIZED[0]: !node -> VAR1
  ORIGINAL[1]: new_node -> parent
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: new_node -> left
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: new_node -> right = ((void *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[4]: new_node -> right
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: new_node -> key32
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: key32
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: new_node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: new_node
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064772670
FRAGMENT_COUNT: 4
  ORIGINAL[0]: strbuf -> str = (ep_alloc(alloc_len))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( FUN1 ( VAR3 ) )
  ORIGINAL[1]: strbuf -> str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ep_alloc(alloc_len)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: strbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771229
FRAGMENT_COUNT: 11
  ORIGINAL[0]: se_packet_mem . used_list = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: se_packet_mem . used_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: used_list
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> se_packet_mem
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> se_packet_mem
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: <global> se_packet_mem
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: <global> se_packet_mem
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: <global> VAR1
  ORIGINAL[8]: <global> se_packet_mem
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: <global> VAR1
  ORIGINAL[9]: <global> se_packet_mem
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: <global> VAR1
  ORIGINAL[10]: <global> se_packet_mem
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: <global> VAR1

CENTER_NODE: 68719476840
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mem -> canary
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: mem -> debug_use_chunks
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: mem -> memory_alloc
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: memory_alloc
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mem
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640317
FRAGMENT_COUNT: 2
  ORIGINAL[0]: mem -> used_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: while (mem -> used_list)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( VAR1 -> VAR2 )

CENTER_NODE: 68719477275
FRAGMENT_COUNT: 2
  ORIGINAL[0]: sizeof(struct _ep_stack_frame_t )
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( struct VAR1 )
  ORIGINAL[1]: struct _ep_stack_frame_t
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: struct VAR1

CENTER_NODE: 30064771461
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_alloc(size,&ep_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &ep_packet_mem )
  ORIGINAL[1]: &ep_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &ep_packet_mem
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477412
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: parent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: node
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477514
FRAGMENT_COUNT: 5
  ORIGINAL[0]: uncle && uncle -> u . rb_color == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 . VAR3 == 0
  ORIGINAL[1]: rb_insert_case1(se_tree,grandparent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: grandparent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: se_tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: grandparent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772838
FRAGMENT_COUNT: 8
  ORIGINAL[0]: strbuf -> alloc_len >= strbuf -> len + 1 + 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 >= VAR1 -> VAR3 + 1 + 1
  ORIGINAL[1]: strbuf -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: strbuf -> str[strbuf -> len]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR1 -> VAR3 ]
  ORIGINAL[3]: strbuf -> len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: strbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772504
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i < len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: (unsigned char )k[i]
  TYPE[1]: CALL
  TOKENIZED[1]: ( unsigned char ) VAR1 [ VAR2 ]
  ORIGINAL[2]: k[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: k
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: k
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771746
FRAGMENT_COUNT: 5
  ORIGINAL[0]: head -> above
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: frame = ((struct _ep_stack_frame_t *)(ep_alloc(sizeof(struct _ep_stack_frame_t ))))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( struct VAR2 * ) ( FUN1 ( sizeof ( struct VAR2 ) ) ) )
  ORIGINAL[2]: (struct _ep_stack_frame_t *)(ep_alloc(sizeof(struct _ep_stack_frame_t )))
  TYPE[2]: CALL
  TOKENIZED[2]: ( struct VAR1 * ) ( FUN1 ( sizeof ( struct VAR1 ) ) )
  ORIGINAL[3]: ep_alloc(sizeof(struct _ep_stack_frame_t ))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( sizeof ( struct VAR1 ) )
  ORIGINAL[4]: frame
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771542
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772251
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tree_list -> tree = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: tree_list -> tree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 30064771981
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parent -> u . rb_color = 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 = 1
  ORIGINAL[1]: parent -> u . rb_color
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: parent -> u
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: rb_color
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640395
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476794
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97
  ORIGINAL[1]: c <= 122
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 122
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771562
FRAGMENT_COUNT: 3
  ORIGINAL[0]: __builtin_va_end(ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772041
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parent -> u . rb_color == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 == 1
  ORIGINAL[1]: rb_insert_case3(se_tree,node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: se_tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772047
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !parent
  TYPE[0]: CALL
  TOKENIZED[0]: !parent
  ORIGINAL[1]: node -> u . rb_color
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: node -> u
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: u
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: rb_color
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: node
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: node
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477023
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !(chunk = mem_chunk -> chunk_list) || chunk -> amount_free < ((guint )(mem_chunk -> item_size))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 = VAR2 -> VAR3 ) || VAR1 -> VAR4 < ( ( VAR5 ) ( VAR2 -> VAR6 ) )
  ORIGINAL[1]: alloc_size = (mem_chunk -> item_size * mem_chunk -> count)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR2 -> VAR3 * VAR2 -> VAR4 )
  ORIGINAL[2]: chunk = emem_create_chunk(alloc_size)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[3]: emem_create_chunk(alloc_size)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: chunk
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: alloc_size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: chunk
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: chunk
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477261
FRAGMENT_COUNT: 2
  ORIGINAL[0]: &se_packet_mem
  TYPE[0]: CALL
  TOKENIZED[0]: &se_packet_mem
  ORIGINAL[1]: <global> se_packet_mem
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719477067
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: src[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: src[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771431
FRAGMENT_COUNT: 4
  ORIGINAL[0]: npc = ((emem_chunk_t *)(g_malloc_n(1,sizeof(emem_chunk_t ))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( VAR2 * ) ( FUN1 ( 1 , sizeof ( VAR2 ) ) ) )
  ORIGINAL[1]: (emem_chunk_t *)(g_malloc_n(1,sizeof(emem_chunk_t )))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( FUN1 ( 1 , sizeof ( VAR1 ) ) )
  ORIGINAL[2]: npc
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: npc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477946
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !emem_tree
  TYPE[0]: CALL
  TOKENIZED[0]: !emem_tree
  ORIGINAL[1]: emem_tree -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: emem_tree -> tree
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tree
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: emem_tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: emem_tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477977
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !strbuf || wanted_alloc_len <= strbuf -> alloc_len || strbuf -> alloc_len >= strbuf -> max_alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 <= VAR2 -> VAR3 || VAR2 -> VAR3 >= VAR2 -> VAR4
  ORIGINAL[1]: strbuf -> alloc_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: strbuf -> max_alloc_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: g_strlcpy(new_str,(strbuf -> str),new_alloc_len)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ( VAR2 -> VAR3 ) , VAR4 )
  ORIGINAL[4]: strbuf -> str
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: strbuf -> alloc_len
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: alloc_len
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: strbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: strbuf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477400
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_oc_i < strlen(stonesoup_data)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < FUN1 ( VAR2 )
  ORIGINAL[1]: stonesoup_data[stonesoup_oc_i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: stonesoup_data[stonesoup_oc_i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: stonesoup_data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_oc_i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771517
FRAGMENT_COUNT: 6
  ORIGINAL[0]: memset(sl_alloc(mem_chunk),'\\0',(mem_chunk -> item_size))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , ( VAR1 -> VAR2 ) )
  ORIGINAL[1]: sl_alloc(mem_chunk)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: mem_chunk -> item_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: item_size
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mem_chunk
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mem_chunk
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477085
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memcpy(se_alloc(len),src,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR1 )
  ORIGINAL[1]: se_alloc(len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477046
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memset(se_alloc(size),'\\0',size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , '\\0' , VAR1 )
  ORIGINAL[1]: se_alloc(size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478003
FRAGMENT_COUNT: 3
  ORIGINAL[0]: strlen(init)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: init
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: init
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477572
FRAGMENT_COUNT: 11
  ORIGINAL[0]: key < node -> key32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: node -> key32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: node -> left
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: node -> key32
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: node -> right
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: key32
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: node
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: key
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719477705
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *se_tree = d
  TYPE[0]: CALL
  TOKENIZED[0]: *se_tree = VAR1
  ORIGINAL[1]: se_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: d
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477740
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !se_tree || !key
  TYPE[0]: CALL
  TOKENIZED[0]: !se_tree || !key
  ORIGINAL[1]: cur_key = key
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: cur_key -> length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cur_key++
  TYPE[3]: CALL
  TOKENIZED[3]: cur_key++
  ORIGINAL[4]: i < cur_key -> length
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 < VAR2 -> VAR3
  ORIGINAL[5]: cur_key -> length
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: length
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cur_key
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cur_key
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: cur_key
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771344
FRAGMENT_COUNT: 4
  ORIGINAL[0]: npc -> free_offset = npc -> free_offset_init
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[1]: npc -> free_offset
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: npc -> free_offset_init
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: npc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771781
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tree_list -> name = name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: tree_list -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771338
FRAGMENT_COUNT: 2
  ORIGINAL[0]: g_free(npc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: npc
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477780
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !lookup_tree
  TYPE[0]: CALL
  TOKENIZED[0]: !lookup_tree
  ORIGINAL[1]: lookup_tree = se_tree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: !lookup_tree
  TYPE[2]: CALL
  TOKENIZED[2]: !lookup_tree
  ORIGINAL[3]: lookup_key32 = cur_key -> key[i]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[4]: cur_key -> key[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: lookup_key32
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: lookup_key32
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cur_key
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: lookup_key32
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064772815
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !strbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf
  ORIGINAL[1]: strbuf -> len = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = 0
  ORIGINAL[2]: strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771803
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !node
  TYPE[0]: CALL
  TOKENIZED[0]: !node
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: node
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

