# Tokenized code fragments for 153318-v1.0.0-bad
# Total center nodes processed: 51
# Total code fragments found: 138

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477052
FRAGMENT_COUNT: 10
  ORIGINAL[0]: src_length == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: buflen - ( *dest) -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - ( *dest ) -> VAR2
  ORIGINAL[2]: ( *dest) -> len
  TYPE[2]: CALL
  TOKENIZED[2]: ( *dest ) -> VAR1
  ORIGINAL[3]: apr_err == 0 && srclen != 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == 0 && VAR2 != 0
  ORIGINAL[4]: buflen
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: destlen
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buflen
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dest
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buflen
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: buflen
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640367
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476751
FRAGMENT_COUNT: 3
  ORIGINAL[0]: sizeof(char)
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( char )
  ORIGINAL[1]: buffer_size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: char
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: char

CENTER_NODE: 47244640373
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476791
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *node = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *node = VAR1
  ORIGINAL[1]: node -> valid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: valid
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477415
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fuzzy_escape(src,strlen(src),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR1 ) , VAR2 )
  ORIGINAL[1]: escaped
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 14
  ORIGINAL[0]: userdata_key == SVN_UTF_NTOU_XLATE_HANDLE
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: node = (atomic_swap(&xlat_ntou_static_handle,node))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( &xlat_ntou_static_handle , VAR1 ) )
  ORIGINAL[2]: atomic_swap(&xlat_ntou_static_handle,node)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &xlat_ntou_static_handle , VAR1 )
  ORIGINAL[3]: &xlat_ntou_static_handle
  TYPE[3]: CALL
  TOKENIZED[3]: &xlat_ntou_static_handle
  ORIGINAL[4]: userdata_key == SVN_UTF_UTON_XLATE_HANDLE
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == VAR2
  ORIGINAL[5]: <global> xlate_handle_hash
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: userdata_key
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: <global> SVN_UTF_NTOU_XLATE_HANDLE
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: <global> VAR1
  ORIGINAL[8]: node
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: <global> xlat_ntou_static_handle
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: <global> VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: userdata_key
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: <global> SVN_UTF_UTON_XLATE_HANDLE
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: <global> VAR1
  ORIGINAL[13]: node
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640320
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771239
FRAGMENT_COUNT: 6
  ORIGINAL[0]: apr_err == 22 || apr_err == 20000 + 50000 + 23
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 22 || VAR1 == 20000 + 50000 + 23
  ORIGINAL[1]: apr_err != 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 0
  ORIGINAL[2]: ( *ret) -> next = ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: ( *ret ) -> VAR1 = ( ( void * ) 0 )
  ORIGINAL[3]: ( *ret) -> next
  TYPE[3]: CALL
  TOKENIZED[3]: ( *ret ) -> VAR1
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: handle
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640379
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476738
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (struct mg_connection*) stonesoup_printf_context
  TYPE[0]: CALL
  TOKENIZED[0]: ( struct mg_connection* ) VAR1
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 47244640388
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477295
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf_cstring_to_utf8_ex2(dest,src,frompage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: frompage
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 6
  ORIGINAL[0]: apr_pool_cleanup_register(subpool,((void *)0),xlate_cleanup,apr_pool_cleanup_null)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , VAR2 , VAR3 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subpool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: apr_pool_cleanup_null
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> assume_native_charset_is_utf8
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 68719477228
FRAGMENT_COUNT: 4
  ORIGINAL[0]: node -> handle
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: strlen(src)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640317
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477117
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_utf__last_valid(data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477474
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: yeuking_heavenless != 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 0
  ORIGINAL[2]: yeuking_heavenless
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: yeuking_heavenless
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476889
FRAGMENT_COUNT: 10
  ORIGINAL[0]: old_node =  *old_node_p
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = *old_node_p
  ORIGINAL[1]: *old_node_p
  TYPE[1]: CALL
  TOKENIZED[1]: *old_node_p
  ORIGINAL[2]: old_node -> next
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: old_node_p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: old_node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: old_node_p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: old_node
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: old_node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: old_node
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: old_node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640346
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640326
FRAGMENT_COUNT: 2
  ORIGINAL[0]: src_orig < src_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: while (src_orig < src_end)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( VAR1 < VAR2 )

CENTER_NODE: 47244640369
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: mg_set_option(stonesoup_server, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: stonesoup_server
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640360
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477103
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(0 != (svn_ctype_table[(unsigned char )( *data)] & 0x0002))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( 0 != ( VAR1 [ ( unsigned char ) ( *data ) ] & 0x0002 ) )
  ORIGINAL[1]: svn_ctype_table[(unsigned char )( *data)]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ ( unsigned char ) ( *data ) ]
  ORIGINAL[2]: svn_ctype_table[(unsigned char )( *data)]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ ( unsigned char ) ( *data ) ]
  ORIGINAL[3]: svn_ctype_table
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640398
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640396
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640365
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771124
FRAGMENT_COUNT: 7
  ORIGINAL[0]: message_param -> message_type == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 1
  ORIGINAL[1]: message_param -> message_data . name_member
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: message_param -> message_data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: message_data
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: name_member
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: message_param
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: message_param
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771779
FRAGMENT_COUNT: 16
  ORIGINAL[0]: bowly_extraburghal > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: stonesoup_buf . message_type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[3]: stonesoup_buf.message_type
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: &stonesoup_buf.message_type
  TYPE[4]: CALL
  TOKENIZED[4]: &stonesoup_buf . VAR1
  ORIGINAL[5]: stonesoup_buf.message_type
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: message_type
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_trace
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: variable_signed_integral
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stonesoup_buf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: stonesoup_buf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stonesoup_buf
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: stonesoup_buf
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: stonesoup_buf
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: stonesoup_buf
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: stonesoup_buf
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 8
  ORIGINAL[0]: frompage == ((const char *)1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( const char * ) 1 )
  ORIGINAL[1]: frompage = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = \
  ORIGINAL[2]: frompage == ((const char *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == ( ( const char * ) 0 )
  ORIGINAL[3]: frompage = \
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = \
  ORIGINAL[4]: topage == ((const char *)1)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == ( ( const char * ) 1 )
  ORIGINAL[5]: (const char *)1
  TYPE[5]: CALL
  TOKENIZED[5]: ( const char * ) 1
  ORIGINAL[6]: topage
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: topage
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477162
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !svn_utf__cstring_is_valid(data)
  TYPE[0]: CALL
  TOKENIZED[0]: !svn_utf__cstring_is_valid ( VAR1 )
  ORIGINAL[1]: invalid_utf8(data,strlen(data),pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , FUN2 ( VAR1 ) , VAR2 )
  ORIGINAL[2]: strlen(data)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477411
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_utf_cstring_from_utf8_ex2(dest,src,topage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: dest
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: topage
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771718
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_utf_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640344
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !svn_utf__is_valid(data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: !svn_utf__is_valid ( VAR1 , VAR2 )

CENTER_NODE: 30064771132
FRAGMENT_COUNT: 3
  ORIGINAL[0]: xlat_uton_static_handle = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> xlat_uton_static_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771720
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *svn_err__temp = svn_utf_stringbuf_from_utf8(&destbuf,src,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( &destbuf , VAR1 , VAR2 )
  ORIGINAL[1]: svn_utf_stringbuf_from_utf8(&destbuf,src,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &destbuf , VAR1 , VAR2 )
  ORIGINAL[2]: &destbuf
  TYPE[2]: CALL
  TOKENIZED[2]: &destbuf
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 0

