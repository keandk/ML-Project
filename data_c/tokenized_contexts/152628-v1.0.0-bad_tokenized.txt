# Tokenized code fragments for 152628-v1.0.0-bad
# Total center nodes processed: 21
# Total code fragments found: 122

CENTER_NODE: 30064771303
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476839
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (lh = ((struct lhash_st_ENGINE_PILE *)(lh_new(engine_pile_LHASH_HASH,engine_pile_LHASH_COMP)))) == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = ( ( struct VAR2 * ) ( FUN1 ( VAR3 , VAR4 ) ) ) ) == ( ( void * ) 0 )
  ORIGINAL[1]: *t
  TYPE[1]: CALL
  TOKENIZED[1]: *t
  ORIGINAL[2]: t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 1
  ORIGINAL[0]: int_table_check(table,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (n = sk_find(((_STACK *)((1?pile -> sk : ((struct stack_st_ENGINE *)0)))),((void *)((1?e : ((ENGINE *)0)))))) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( ( ( VAR2 * ) ( ( 1?pile -> VAR3 : ( ( struct VAR4 * ) 0 ) ) ) ) , ( ( void * ) ( ( 1?e : ( ( VAR5 * ) 0 ) ) ) ) ) ) >= 0
  ORIGINAL[1]: sk_find(((_STACK *)((1?pile -> sk : ((struct stack_st_ENGINE *)0)))),((void *)((1?e : ((ENGINE *)0)))))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) ( ( 1?pile -> VAR2 : ( ( struct VAR3 * ) 0 ) ) ) ) , ( ( void * ) ( ( 1?e : ( ( VAR4 * ) 0 ) ) ) ) )
  ORIGINAL[2]: (_STACK *)((1?pile -> sk : ((struct stack_st_ENGINE *)0)))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) ( ( 1?pile -> VAR2 : ( ( struct VAR3 * ) 0 ) ) )
  ORIGINAL[3]: 1?pile -> sk : ((struct stack_st_ENGINE *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: 1?pile -> VAR1 : ( ( struct VAR2 * ) 0 )
  ORIGINAL[4]: (void *)((1?e : ((ENGINE *)0)))
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) ( ( 1?e : ( ( VAR1 * ) 0 ) ) )

CENTER_NODE: 30064771404
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dbhost != 0 && dbport != 0 && dbuser != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0 && VAR2 != 0 && VAR3 != 0
  ORIGINAL[1]: dbhost != 0 && dbport != 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != 0 && VAR2 != 0
  ORIGINAL[2]: dbuser != 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != 0
  ORIGINAL[3]: dbuser
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771454
FRAGMENT_COUNT: 22
  ORIGINAL[0]: *table
  TYPE[0]: CALL
  TOKENIZED[0]: *table
  ORIGINAL[1]: lh_doall(((_LHASH *)((void *)(&( *table) -> piles))),int_cleanup_cb_LHASH_DOALL)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) ( ( void * ) ( & ( *table ) -> VAR2 ) ) ) , VAR3 )
  ORIGINAL[2]: (_LHASH *)((void *)(&( *table) -> piles))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) ( ( void * ) ( & ( *table ) -> VAR2 ) )
  ORIGINAL[3]: (void *)(&( *table) -> piles)
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) ( & ( *table ) -> VAR1 )
  ORIGINAL[4]: &( *table) -> piles
  TYPE[4]: CALL
  TOKENIZED[4]: & ( *table ) -> VAR1
  ORIGINAL[5]: ( *table) -> piles
  TYPE[5]: CALL
  TOKENIZED[5]: ( *table ) -> VAR1
  ORIGINAL[6]: *table
  TYPE[6]: CALL
  TOKENIZED[6]: *table
  ORIGINAL[7]: lh_free(((_LHASH *)((void *)(&( *table) -> piles))))
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( ( ( VAR1 * ) ( ( void * ) ( & ( *table ) -> VAR2 ) ) ) )
  ORIGINAL[8]: (_LHASH *)((void *)(&( *table) -> piles))
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 * ) ( ( void * ) ( & ( *table ) -> VAR2 ) )
  ORIGINAL[9]: (void *)(&( *table) -> piles)
  TYPE[9]: CALL
  TOKENIZED[9]: ( void * ) ( & ( *table ) -> VAR1 )
  ORIGINAL[10]: &( *table) -> piles
  TYPE[10]: CALL
  TOKENIZED[10]: & ( *table ) -> VAR1
  ORIGINAL[11]: ( *table) -> piles
  TYPE[11]: CALL
  TOKENIZED[11]: ( *table ) -> VAR1
  ORIGINAL[12]: *table
  TYPE[12]: CALL
  TOKENIZED[12]: *table
  ORIGINAL[13]: *table = ((void *)0)
  TYPE[13]: CALL
  TOKENIZED[13]: *table = ( ( void * ) 0 )
  ORIGINAL[14]: *table
  TYPE[14]: CALL
  TOKENIZED[14]: *table
  ORIGINAL[15]: (void *)0
  TYPE[15]: CALL
  TOKENIZED[15]: ( void * ) 0
  ORIGINAL[16]: piles
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: piles
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: table
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: table
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: table
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: table
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1

CENTER_NODE: 30064771471
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

CENTER_NODE: 30064771556
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &table -> piles
  TYPE[0]: CALL
  TOKENIZED[0]: &table -> VAR1
  ORIGINAL[1]: table -> piles
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: piles
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: table
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771167
FRAGMENT_COUNT: 3
  ORIGINAL[0]: table_flags = flags
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> table_flags
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: flags
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771133
FRAGMENT_COUNT: 7
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: strcmp(getenv(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( FUN2 ( \
  ORIGINAL[4]: strcmp(getenv(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( FUN2 ( \
  ORIGINAL[5]: getenv(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: NULL
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771245
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !fnd
  TYPE[0]: CALL
  TOKENIZED[0]: !fnd
  ORIGINAL[1]: !fnd -> sk
  TYPE[1]: CALL
  TOKENIZED[1]: !fnd -> VAR1
  ORIGINAL[2]: (ENGINE *)(sk_delete_ptr(((_STACK *)(1?fnd -> sk : ((struct stack_st_ENGINE *)0))),((void *)(1?e : ((ENGINE *)0)))))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) ( FUN1 ( ( ( VAR2 * ) ( 1?fnd -> VAR3 : ( ( struct VAR4 * ) 0 ) ) ) , ( ( void * ) ( 1?e : ( ( VAR1 * ) 0 ) ) ) ) )
  ORIGINAL[3]: sk_delete_ptr(((_STACK *)(1?fnd -> sk : ((struct stack_st_ENGINE *)0))),((void *)(1?e : ((ENGINE *)0))))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( ( ( VAR1 * ) ( 1?fnd -> VAR2 : ( ( struct VAR3 * ) 0 ) ) ) , ( ( void * ) ( 1?e : ( ( VAR4 * ) 0 ) ) ) )
  ORIGINAL[4]: (_STACK *)(1?fnd -> sk : ((struct stack_st_ENGINE *)0))
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 * ) ( 1?fnd -> VAR2 : ( ( struct VAR3 * ) 0 ) )
  ORIGINAL[5]: (void *)(1?e : ((ENGINE *)0))
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) ( 1?e : ( ( VAR1 * ) 0 ) )

CENTER_NODE: 30064771172
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771573
FRAGMENT_COUNT: 6
  ORIGINAL[0]: key = strtol(optarg, NULL, 10)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , 10 )
  ORIGINAL[1]: strtol(optarg, NULL, 10)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , 10 )
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: optarg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NULL
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477068
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pile -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pile -> sk
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: sk
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pile
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771325
FRAGMENT_COUNT: 8
  ORIGINAL[0]: p -> funct
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: engine_unlocked_finish(p -> funct,0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , 0 )
  ORIGINAL[2]: p -> funct
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: funct
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: funct
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: p
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: p
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477071
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476824
FRAGMENT_COUNT: 3
  ORIGINAL[0]: c -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: nid
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771318
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 22
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: size_dirpath = strlen(ss_tc_root) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(ss_tc_root) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: strlen(ss_tc_root) + strlen(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[4]: strlen(ss_tc_root)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: strlen(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: dirpath = (char*) malloc (size_dirpath * sizeof(char))
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[7]: (char*) malloc (size_dirpath * sizeof(char))
  TYPE[7]: CALL
  TOKENIZED[7]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[8]: malloc (size_dirpath * sizeof(char))
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[9]: size_dirpath * sizeof(char)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 * sizeof ( char )
  ORIGINAL[10]: sizeof(char)
  TYPE[10]: CALL
  TOKENIZED[10]: sizeof ( char )
  ORIGINAL[11]: dirpath != NULL
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 != VAR2
  ORIGINAL[12]: ss_tc_root
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: NULL
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: size_dirpath
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ss_tc_root
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: dirpath
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: size_dirpath
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: char
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: char
  ORIGINAL[19]: dirpath
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: NULL
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: <global> stonesoup_printf_context
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: <global> VAR1

CENTER_NODE: 68719476832
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: *b = arg2
  TYPE[1]: CALL
  TOKENIZED[1]: *b = VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771169
FRAGMENT_COUNT: 3
  ORIGINAL[0]: a -> nid - b -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 - VAR3 -> VAR2
  ORIGINAL[1]: a -> nid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b -> nid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2

