# Tokenized code fragments for 152316-v1.0.0-bad
# Total center nodes processed: 29
# Total code fragments found: 165

CENTER_NODE: 30064771467
FRAGMENT_COUNT: 5
  ORIGINAL[0]: malfunction_handler(can_return,file,line,expr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: can_return
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: line
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: expr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771448
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (defn -> errcode) == ((svn_errno_t )statcode)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) == ( ( VAR3 ) VAR4 )
  ORIGINAL[1]: defn -> errname
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: errname
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: defn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: defn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: defn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477045
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buf[256]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 256 ]
  ORIGINAL[1]: buf[256]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 256 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477175
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stonesoup_i == 0 || babelised_outvoted[stonesoup_i - 1] != '|'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 || VAR2 [ VAR1 - 1 ] != '|'
  ORIGINAL[1]: stonesoup_is_valid = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: stonesoup_is_valid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_is_valid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771210
FRAGMENT_COUNT: 7
  ORIGINAL[0]: child == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: svn_error_create(child -> apr_err,child,new_msg)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR1 , VAR3 )
  ORIGINAL[2]: child -> apr_err
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: apr_err
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: child
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: child
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: child
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477086
FRAGMENT_COUNT: 15
  ORIGINAL[0]: svn_error__locate(file,line)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: svn_error_createf(SVN_ERR_ASSERTION_FAIL,((void *)0),(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: svn_error_createf(SVN_ERR_ASSERTION_FAIL,((void *)0),(dgettext(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[5]: (void *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) 0
  ORIGINAL[6]: dgettext(\
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( \
  ORIGINAL[7]: expr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: SVN_ERR_ASSERTION_FAIL
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: file
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: line
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: expr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: SVN_ERR_ASSERTION_FAIL
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: file
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: line
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 68719476947
FRAGMENT_COUNT: 4
  ORIGINAL[0]: err -> pool
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pool
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476817
FRAGMENT_COUNT: 4
  ORIGINAL[0]: make_error_internal(apr_err,child)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: err
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: child
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476764
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size_filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771142
FRAGMENT_COUNT: 4
  ORIGINAL[0]: memset(apr_palloc(pool,sizeof(( *new_error))),0,sizeof(( *new_error)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , sizeof ( ( *new_error ) ) ) , 0 , sizeof ( ( *new_error ) ) )
  ORIGINAL[1]: apr_palloc(pool,sizeof(( *new_error)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( ( *new_error ) ) )
  ORIGINAL[2]: sizeof(( *new_error))
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( ( *new_error ) )
  ORIGINAL[3]: *new_error
  TYPE[3]: CALL
  TOKENIZED[3]: *new_error

CENTER_NODE: 68719477011
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_handle_error2(err,stream,fatal,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , \
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fatal
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477044
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_handle_warning2(stream,err,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771466
FRAGMENT_COUNT: 4
  ORIGINAL[0]: malfunction_handler = func
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> malfunction_handler
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: old_malfunction_handler
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771245
FRAGMENT_COUNT: 5
  ORIGINAL[0]: err -> child
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: err = err -> child
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 -> VAR2
  ORIGINAL[2]: err -> child
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476915
FRAGMENT_COUNT: 8
  ORIGINAL[0]: child = child -> child
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR1 -> VAR1
  ORIGINAL[1]: child -> child
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR1
  ORIGINAL[2]: child -> apr_err == apr_err
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 == VAR2
  ORIGINAL[3]: child -> apr_err
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: child
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: child
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: child
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: child
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476874
FRAGMENT_COUNT: 1
  ORIGINAL[0]: err
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771293
FRAGMENT_COUNT: 4
  ORIGINAL[0]: err && err -> message && !strcmp(err -> message,error_tracing_link)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 && !strcmp ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: err && err -> message
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 && VAR1 -> VAR2
  ORIGINAL[2]: !strcmp(err -> message,error_tracing_link)
  TYPE[2]: CALL
  TOKENIZED[2]: !strcmp ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[3]: strcmp(err -> message,error_tracing_link)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , VAR3 )

CENTER_NODE: 68719476945
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *new_err
  TYPE[0]: CALL
  TOKENIZED[0]: *new_err
  ORIGINAL[1]: new_err
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: new_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: new_err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: new_err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476952
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *new_err = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *new_err = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: new_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: new_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771359
FRAGMENT_COUNT: 8
  ORIGINAL[0]: err -> apr_err > 20000 + 50000 + 50000 && err -> apr_err <= 20000 + 50000 + 50000 + 50000 * 10
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > 20000 + 50000 + 50000 && VAR1 -> VAR2 <= 20000 + 50000 + 50000 + 50000 * 10
  ORIGINAL[1]: svn_utf_cstring_to_utf8(&err_string,(apr_strerror(err -> apr_err,errbuf,sizeof(errbuf))),err -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &err_string , ( FUN2 ( VAR1 -> VAR2 , VAR3 , sizeof ( VAR3 ) ) ) , VAR1 -> VAR4 )
  ORIGINAL[2]: &err_string
  TYPE[2]: CALL
  TOKENIZED[2]: &err_string
  ORIGINAL[3]: apr_strerror(err -> apr_err,errbuf,sizeof(errbuf))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , VAR3 , sizeof ( VAR3 ) )
  ORIGINAL[4]: err -> pool
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: err_string
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: err_string
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771463
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_handle_error2(err,stderr,0,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 0 , \
  ORIGINAL[1]: abort()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stderr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771397
FRAGMENT_COUNT: 12
  ORIGINAL[0]: !printed_already
  TYPE[0]: CALL
  TOKENIZED[0]: !printed_already
  ORIGINAL[1]: !tmp_err -> message
  TYPE[1]: CALL
  TOKENIZED[1]: !tmp_err -> VAR1
  ORIGINAL[2]: tmp_err -> message
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: *((apr_status_t *)(apr_array_push(empties))) = tmp_err -> apr_err
  TYPE[3]: CALL
  TOKENIZED[3]: * ( ( VAR1 * ) ( FUN1 ( VAR2 ) ) ) = VAR3 -> VAR4
  ORIGINAL[4]: *((apr_status_t *)(apr_array_push(empties)))
  TYPE[4]: CALL
  TOKENIZED[4]: * ( ( VAR1 * ) ( FUN1 ( VAR2 ) ) )
  ORIGINAL[5]: (apr_status_t *)(apr_array_push(empties))
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 * ) ( FUN1 ( VAR2 ) )
  ORIGINAL[6]: apr_array_push(empties)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 )
  ORIGINAL[7]: tmp_err -> apr_err
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: apr_err
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: empties
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: tmp_err
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: tmp_err
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719477119
FRAGMENT_COUNT: 7
  ORIGINAL[0]: - 6
  TYPE[0]: CALL
  TOKENIZED[0]: - 6
  ORIGINAL[1]: status = SVN_ERR_STREAM_UNRECOGNIZED_DATA
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: zerr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: status
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: SVN_ERR_STREAM_UNRECOGNIZED_DATA
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: status
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: status
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640314
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771155
FRAGMENT_COUNT: 8
  ORIGINAL[0]: apr_pstrdup(err -> pool,message)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: err -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pool
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: message
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: message
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: err
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771194
FRAGMENT_COUNT: 4
  ORIGINAL[0]: msg_apr = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: utf8_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: msg_apr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771214
FRAGMENT_COUNT: 3
  ORIGINAL[0]: err1 && err2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR2
  ORIGINAL[1]: svn_error_quick_wrap(err2,(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( FUN2 ( \
  ORIGINAL[2]: dgettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \

CENTER_NODE: 68719476888
FRAGMENT_COUNT: 11
  ORIGINAL[0]: chain -> child
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: chain = chain -> child
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 -> VAR2
  ORIGINAL[2]: chain -> child
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: chain -> child
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: chain -> child
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: chain
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: chain
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: chain
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: chain
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: chain
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: chain
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771430
FRAGMENT_COUNT: 11
  ORIGINAL[0]: defn -> errdesc != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: defn -> errdesc
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (defn -> errcode) == ((svn_errno_t )statcode)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 -> VAR2 ) == ( ( VAR3 ) VAR4 )
  ORIGINAL[4]: defn -> errdesc
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: errdesc
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: defn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: defn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: defn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: defn
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: defn
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

