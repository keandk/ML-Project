# Tokenized code fragments for 153196-v1.0.0-bad
# Total center nodes processed: 18
# Total code fragments found: 114

CENTER_NODE: 30064771168
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477171
FRAGMENT_COUNT: 3
  ORIGINAL[0]: * stonesoup_printf_context = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771466
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (GtkWidget *)(g_type_check_instance_cast(((GTypeInstance *)filter_apply),gtk_widget_get_type()))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 * ) ( FUN1 ( ( ( VAR2 * ) VAR3 ) , FUN2 ( ) ) )
  ORIGINAL[1]: g_type_check_instance_cast(((GTypeInstance *)filter_apply),gtk_widget_get_type())
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) VAR2 ) , FUN2 ( ) )
  ORIGINAL[2]: (GTypeInstance *)filter_apply
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) VAR2
  ORIGINAL[3]: gtk_widget_get_type()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )

CENTER_NODE: 30064771719
FRAGMENT_COUNT: 24
  ORIGINAL[0]: pseudosatirical_binous > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: glub_disbeliefs(pseudosatirical_binous,hocks_lettiga)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: replevining_accusativeness = ((char *)hocks_lettiga)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( char * ) VAR2 )
  ORIGINAL[3]: (char *)hocks_lettiga
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) VAR1
  ORIGINAL[4]: tracepoint(stonesoup_trace, weakness_start, \
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[5]: stonesoup_base_path[20]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ 20 ]
  ORIGINAL[6]: stonesoup_base_path[20]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ 20 ]
  ORIGINAL[7]: strlen(replevining_accusativeness) < 20
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 ) < 20
  ORIGINAL[8]: strlen(replevining_accusativeness)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 )
  ORIGINAL[9]: tracepoint(stonesoup_trace, weakness_end)
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[10]: hocks_lettiga != 0
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 != 0
  ORIGINAL[11]: stonesoup_close_printf_context()
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( )
  ORIGINAL[12]: pseudosatirical_binous
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: pseudosatirical_binous
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: hocks_lettiga
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: replevining_accusativeness
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: hocks_lettiga
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: stonesoup_trace
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: weakness_start
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: stonesoup_base_path
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: replevining_accusativeness
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: stonesoup_trace
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: weakness_end
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: hocks_lettiga
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1

CENTER_NODE: 30064771620
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fprintf(rf,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: filter_str
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: rf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filter_str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476827
FRAGMENT_COUNT: 3
  ORIGINAL[0]: s = gtk_entry_get_text(((GtkEntry *)(g_type_check_instance_cast(((GTypeInstance *)data),gtk_entry_get_type()))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( ( ( VAR2 * ) ( FUN2 ( ( ( VAR3 * ) VAR4 ) , FUN3 ( ) ) ) ) )
  ORIGINAL[1]: &cfile
  TYPE[1]: CALL
  TOKENIZED[1]: &cfile
  ORIGINAL[2]: cfile
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771761
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: antihemorrhagic_backen
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771592
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 30064771106
FRAGMENT_COUNT: 4
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477051
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (GTypeInstance *)top_level
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 * ) VAR2
  ORIGINAL[1]: top_level
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476829
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (GTypeInstance *)data
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 * ) VAR2
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 1
  ORIGINAL[0]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0

CENTER_NODE: 30064771591
FRAGMENT_COUNT: 2
  ORIGINAL[0]: g_free(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477083
FRAGMENT_COUNT: 10
  ORIGINAL[0]: cf_status == CF_OK && strlen(s) > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 && FUN1 ( VAR3 ) > 0
  ORIGINAL[1]: dfilter_entry_match(filter_cm,s,&index)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , &index )
  ORIGINAL[2]: filter_cm
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filter_cm
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filter_cm
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filter_cm
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: filter_cm
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: filter_cm
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: filter_cm
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719476841
FRAGMENT_COUNT: 2
  ORIGINAL[0]: filter_expression_save_dlg(parent_w)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: parent_w
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771572
FRAGMENT_COUNT: 5
  ORIGINAL[0]: &value
  TYPE[0]: CALL
  TOKENIZED[0]: &value
  ORIGINAL[1]: strcmp(s,filter_str) == 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 ) == 0
  ORIGINAL[2]: g_value_unset(&value)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &value )
  ORIGINAL[3]: &value
  TYPE[3]: CALL
  TOKENIZED[3]: &value
  ORIGINAL[4]: value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477183
FRAGMENT_COUNT: 35
  ORIGINAL[0]: (c = getopt(argc, argv, \
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , \
  ORIGINAL[1]: c = getopt(argc, argv, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 , \
  ORIGINAL[2]: getopt(argc, argv, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[3]: -1
  TYPE[3]: CALL
  TOKENIZED[3]: -1
  ORIGINAL[4]: (key = strtol(optarg, NULL, 10)) < 1000
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 10 ) ) < 1000
  ORIGINAL[5]: key = strtol(optarg, NULL, 10)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = FUN1 ( VAR2 , VAR3 , 10 )
  ORIGINAL[6]: strtol(optarg, NULL, 10)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , VAR2 , 10 )
  ORIGINAL[7]: (shmsz = atoi(optarg)) <= 0
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 = FUN1 ( VAR2 ) ) <= 0
  ORIGINAL[8]: shmsz = atoi(optarg)
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[9]: atoi(optarg)
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 )
  ORIGINAL[10]: out_filename = optarg
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 = VAR2
  ORIGINAL[11]: str = optarg
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 = VAR2
  ORIGINAL[12]: printf(\
  TYPE[12]: CALL
  TOKENIZED[12]: FUN1 ( \
  ORIGINAL[13]: fprintf(stderr, \
  TYPE[13]: CALL
  TOKENIZED[13]: FUN1 ( VAR1 , \
  ORIGINAL[14]: errors++
  TYPE[14]: CALL
  TOKENIZED[14]: errors++
  ORIGINAL[15]: break;
  TYPE[15]: CONTROL_STRUCTURE
  TOKENIZED[15]: break ;
  ORIGINAL[16]: break;
  TYPE[16]: CONTROL_STRUCTURE
  TOKENIZED[16]: break ;
  ORIGINAL[17]: break;
  TYPE[17]: CONTROL_STRUCTURE
  TOKENIZED[17]: break ;
  ORIGINAL[18]: break;
  TYPE[18]: CONTROL_STRUCTURE
  TOKENIZED[18]: break ;
  ORIGINAL[19]: break;
  TYPE[19]: CONTROL_STRUCTURE
  TOKENIZED[19]: break ;
  ORIGINAL[20]: c
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: argc
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: argv
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: c
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: key
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: optarg
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: NULL
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: shmsz
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: optarg
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: out_filename
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: optarg
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: str
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: optarg
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: stderr
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: errors
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1

CENTER_NODE: 30064771211
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (GType )(20 << 2)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( 20 << 2 )
  ORIGINAL[1]: 20 << 2
  TYPE[1]: CALL
  TOKENIZED[1]: 20 << 2

