# Tokenized code fragments for 231369-v1.0.0-bad
# Total center nodes processed: 22
# Total code fragments found: 184

CENTER_NODE: 30064773158
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (pcapng_t *)wth->priv
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 * ) wth->priv
  ORIGINAL[1]: wth->priv
  TYPE[1]: CALL
  TOKENIZED[1]: wth->priv
  ORIGINAL[2]: priv
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: wth
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772735
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bytes_read <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: errno = WTAP_ERR_CANT_READ
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: errno
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: WTAP_ERR_CANT_READ
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bytes_read
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774399
FRAGMENT_COUNT: 5
  ORIGINAL[0]: wtap_encap == WTAP_ENCAP_PER_PACKET
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: wtap_wtap_encap_to_pcap_encap(wtap_encap) == -1
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) == -1
  ORIGINAL[2]: wtap_wtap_encap_to_pcap_encap(wtap_encap)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: -1
  TYPE[3]: CALL
  TOKENIZED[3]: -1
  ORIGINAL[4]: wtap_encap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773132
FRAGMENT_COUNT: 7
  ORIGINAL[0]: wth->number_of_interfaces < wblock.data.if_stats.interface_id
  TYPE[0]: CALL
  TOKENIZED[0]: wth->number_of_interfaces < VAR1 . VAR2 . VAR3 . VAR4
  ORIGINAL[1]: wblock.data.if_stats
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . VAR3
  ORIGINAL[2]: wblock.data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: data
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: if_stats
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: wblock
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: wblock
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772283
FRAGMENT_COUNT: 5
  ORIGINAL[0]: 0 >= pn->number_of_interfaces
  TYPE[0]: CALL
  TOKENIZED[0]: 0 >= pn->number_of_interfaces
  ORIGINAL[1]: memset((void *)wblock->pseudo_header, 0, sizeof(union wtap_pseudo_header))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( void * ) wblock->pseudo_header , 0 , sizeof ( union VAR1 ) )
  ORIGINAL[2]: (void *)wblock->pseudo_header
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) wblock->pseudo_header
  ORIGINAL[3]: sizeof(union wtap_pseudo_header)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( union VAR1 )
  ORIGINAL[4]: union wtap_pseudo_header
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: union VAR1

CENTER_NODE: 47244640402
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064771517
FRAGMENT_COUNT: 42
  ORIGINAL[0]: oh.option_code
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: oh.option_length == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 == 1
  ORIGINAL[2]: oh.option_length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: if_tsresol = option_content[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = VAR2 [ 0 ]
  ORIGINAL[4]: option_content[0]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 0 ]
  ORIGINAL[5]: if_tsresol & 0x80
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 & 0x80
  ORIGINAL[6]: exponent = (guint8)(if_tsresol & 0x7f)
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = ( VAR2 ) ( VAR3 & 0x7f )
  ORIGINAL[7]: (guint8)(if_tsresol & 0x7f)
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 ) ( VAR2 & 0x7f )
  ORIGINAL[8]: if_tsresol & 0x7f
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 & 0x7f
  ORIGINAL[9]: ((base == 2) && (exponent < 64)) || ((base == 10) && (exponent < 20))
  TYPE[9]: CALL
  TOKENIZED[9]: ( ( VAR1 == 2 ) && ( VAR2 < 64 ) ) || ( ( VAR1 == 10 ) && ( VAR2 < 20 ) )
  ORIGINAL[10]: (base == 2) && (exponent < 64)
  TYPE[10]: CALL
  TOKENIZED[10]: ( VAR1 == 2 ) && ( VAR2 < 64 )
  ORIGINAL[11]: base == 2
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 == 2
  ORIGINAL[12]: time_units_per_second > (((guint64)1) << 32)
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 > ( ( ( VAR2 ) 1 ) << 32 )
  ORIGINAL[13]: ((guint64)1) << 32
  TYPE[13]: CALL
  TOKENIZED[13]: ( ( VAR1 ) 1 ) << 32
  ORIGINAL[14]: (guint64)1
  TYPE[14]: CALL
  TOKENIZED[14]: ( VAR1 ) 1
  ORIGINAL[15]: wblock->data.if_descr.time_units_per_second = time_units_per_second
  TYPE[15]: CALL
  TOKENIZED[15]: wblock->data . VAR1 . VAR2 = VAR2
  ORIGINAL[16]: wblock->data.if_descr.time_units_per_second
  TYPE[16]: CALL
  TOKENIZED[16]: wblock->data . VAR1 . VAR2
  ORIGINAL[17]: wblock->data.if_descr
  TYPE[17]: CALL
  TOKENIZED[17]: wblock->data . VAR1
  ORIGINAL[18]: wblock->data
  TYPE[18]: CALL
  TOKENIZED[18]: wblock->data
  ORIGINAL[19]: wblock->data.if_descr.if_tsresol = if_tsresol
  TYPE[19]: CALL
  TOKENIZED[19]: wblock->data . VAR1 . VAR2 = VAR2
  ORIGINAL[20]: wblock->data.if_descr.if_tsresol
  TYPE[20]: CALL
  TOKENIZED[20]: wblock->data . VAR1 . VAR2
  ORIGINAL[21]: wblock->data.if_descr
  TYPE[21]: CALL
  TOKENIZED[21]: wblock->data . VAR1
  ORIGINAL[22]: wblock->data
  TYPE[22]: CALL
  TOKENIZED[22]: wblock->data
  ORIGINAL[23]: break;
  TYPE[23]: CONTROL_STRUCTURE
  TOKENIZED[23]: break ;
  ORIGINAL[24]: data
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: if_descr
  TYPE[25]: FIELD_IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: time_units_per_second
  TYPE[26]: FIELD_IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: data
  TYPE[27]: FIELD_IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: if_descr
  TYPE[28]: FIELD_IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: if_tsresol
  TYPE[29]: FIELD_IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: if_tsresol
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: option_content
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: if_tsresol
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: exponent
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: guint8
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: if_tsresol
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: base
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: time_units_per_second
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: wblock
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: time_units_per_second
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: wblock
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: if_tsresol
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1

CENTER_NODE: 30064774395
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i < (int)wdh->number_of_interfaces
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < ( int ) wdh->number_of_interfaces
  ORIGINAL[1]: !pcapng_write_if_descr_block(wdh, &int_data, err)
  TYPE[1]: CALL
  TOKENIZED[1]: !pcapng_write_if_descr_block ( VAR1 , &int_data , VAR2 )
  ORIGINAL[2]: pcapng_write_if_descr_block(wdh, &int_data, err)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , &int_data , VAR2 )
  ORIGINAL[3]: &int_data
  TYPE[3]: CALL
  TOKENIZED[3]: &int_data
  ORIGINAL[4]: wdh
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477340
FRAGMENT_COUNT: 4
  ORIGINAL[0]: file_offset64 <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: *err
  TYPE[1]: CALL
  TOKENIZED[1]: *err
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640482
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640468
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477897
FRAGMENT_COUNT: 18
  ORIGINAL[0]: wth->fh
  TYPE[0]: CALL
  TOKENIZED[0]: wth->fh
  ORIGINAL[1]: wth->file_encap
  TYPE[1]: CALL
  TOKENIZED[1]: wth->file_encap
  ORIGINAL[2]: wth->snapshot_length
  TYPE[2]: CALL
  TOKENIZED[2]: wth->snapshot_length
  ORIGINAL[3]: wth->tsprecision
  TYPE[3]: CALL
  TOKENIZED[3]: wth->tsprecision
  ORIGINAL[4]: wth->priv
  TYPE[4]: CALL
  TOKENIZED[4]: wth->priv
  ORIGINAL[5]: wth->subtype_read
  TYPE[5]: CALL
  TOKENIZED[5]: wth->subtype_read
  ORIGINAL[6]: wth->subtype_seek_read
  TYPE[6]: CALL
  TOKENIZED[6]: wth->subtype_seek_read
  ORIGINAL[7]: wth->subtype_close
  TYPE[7]: CALL
  TOKENIZED[7]: wth->subtype_close
  ORIGINAL[8]: wth->file_type
  TYPE[8]: CALL
  TOKENIZED[8]: wth->file_type
  ORIGINAL[9]: wth->interface_data
  TYPE[9]: CALL
  TOKENIZED[9]: wth->interface_data
  ORIGINAL[10]: wth->number_of_interfaces
  TYPE[10]: CALL
  TOKENIZED[10]: wth->number_of_interfaces
  ORIGINAL[11]: wth->fh
  TYPE[11]: CALL
  TOKENIZED[11]: wth->fh
  ORIGINAL[12]: wth->interface_data
  TYPE[12]: CALL
  TOKENIZED[12]: wth->interface_data
  ORIGINAL[13]: wth->number_of_interfaces
  TYPE[13]: CALL
  TOKENIZED[13]: wth->number_of_interfaces
  ORIGINAL[14]: wth->fh
  TYPE[14]: CALL
  TOKENIZED[14]: wth->fh
  ORIGINAL[15]: fh
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: bytes_read
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: wth
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 68719478569
FRAGMENT_COUNT: 13
  ORIGINAL[0]: have_options = FALSE
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: options_total_length = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: options_total_length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: options_total_length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: options_total_length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: options_total_length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: options_total_length
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: options_total_length
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: options_total_length
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: options_total_length
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: options_total_length
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: options_total_length
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: options_total_length
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771147
FRAGMENT_COUNT: 16
  ORIGINAL[0]: g_strdup_printf(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: bh->block_total_length
  TYPE[1]: CALL
  TOKENIZED[1]: bh->block_total_length
  ORIGINAL[2]: MIN_SHB_SIZE
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: (guint32)(((guint32)(sizeof (pcapng_block_header_t) + sizeof (guint32))) + sizeof (pcapng_section_header_block_t))
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) ( ( ( VAR1 ) ( sizeof ( VAR2 ) + sizeof ( VAR1 ) ) ) + sizeof ( VAR3 ) )
  ORIGINAL[4]: ((guint32)(sizeof (pcapng_block_header_t) + sizeof (guint32))) + sizeof (pcapng_section_header_block_t)
  TYPE[4]: CALL
  TOKENIZED[4]: ( ( VAR1 ) ( sizeof ( VAR2 ) + sizeof ( VAR1 ) ) ) + sizeof ( VAR3 )
  ORIGINAL[5]: (guint32)(sizeof (pcapng_block_header_t) + sizeof (guint32))
  TYPE[5]: CALL
  TOKENIZED[5]: ( VAR1 ) ( sizeof ( VAR2 ) + sizeof ( VAR1 ) )
  ORIGINAL[6]: sizeof (pcapng_block_header_t) + sizeof (guint32)
  TYPE[6]: CALL
  TOKENIZED[6]: sizeof ( VAR1 ) + sizeof ( VAR2 )
  ORIGINAL[7]: sizeof (pcapng_block_header_t)
  TYPE[7]: CALL
  TOKENIZED[7]: sizeof ( VAR1 )
  ORIGINAL[8]: sizeof (guint32)
  TYPE[8]: CALL
  TOKENIZED[8]: sizeof ( VAR1 )
  ORIGINAL[9]: sizeof (pcapng_section_header_block_t)
  TYPE[9]: CALL
  TOKENIZED[9]: sizeof ( VAR1 )
  ORIGINAL[10]: first_block
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: guint32
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: guint32
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: pcapng_block_header_t
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: guint32
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: pcapng_section_header_block_t
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 68719477549
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *p == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: *p == '\\0'
  ORIGINAL[1]: *p
  TYPE[1]: CALL
  TOKENIZED[1]: *p
  ORIGINAL[2]: p++
  TYPE[2]: CALL
  TOKENIZED[2]: p++
  ORIGINAL[3]: p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479066
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pcapng_write_enhanced_packet_block(wdh, phdr, pseudo_header, pd, err)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: phdr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pseudo_header
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pd
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478086
FRAGMENT_COUNT: 4
  ORIGINAL[0]: wdh->shb_hdr->opt_comment
  TYPE[0]: CALL
  TOKENIZED[0]: wdh->shb_hdr->opt_comment
  ORIGINAL[1]: wdh->shb_hdr
  TYPE[1]: CALL
  TOKENIZED[1]: wdh->shb_hdr
  ORIGINAL[2]: shb_hdr
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: wdh
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477560
FRAGMENT_COUNT: 4
  ORIGINAL[0]: MIN_ISB_SIZE
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: (guint32)(((guint32)(sizeof (pcapng_block_header_t) + sizeof (guint32))) + sizeof (pcapng_interface_statistics_block_t))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( ( ( VAR1 ) ( sizeof ( VAR2 ) + sizeof ( VAR1 ) ) ) + sizeof ( VAR3 ) )
  ORIGINAL[2]: guint32
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: guint32
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064774156
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !wtap_dump_file_write(wdh, &zero_pad, 4, err)
  TYPE[0]: CALL
  TOKENIZED[0]: !wtap_dump_file_write ( VAR1 , &zero_pad , 4 , VAR2 )
  ORIGINAL[1]: &bh.block_total_length
  TYPE[1]: CALL
  TOKENIZED[1]: &bh . VAR1
  ORIGINAL[2]: bh.block_total_length
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: sizeof bh.block_total_length
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof VAR1 . VAR2
  ORIGINAL[4]: bh.block_total_length
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: have_options
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: wdh
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: bh
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: err
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476781
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (oh->option_length % 4) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( oh->option_length % 4 ) != 0
  ORIGINAL[1]: file_offset64 <= 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 0
  ORIGINAL[2]: block_read += 4 - (oh->option_length % 4)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 += 4 - ( oh->option_length % 4 )
  ORIGINAL[3]: block_read
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: block_read
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: block_read
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478953
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ai->ai_family == AF_INET
  TYPE[0]: CALL
  TOKENIZED[0]: ai->ai_family == VAR1
  ORIGINAL[1]: nrb.record_type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: &nrb
  TYPE[2]: CALL
  TOKENIZED[2]: &nrb
  ORIGINAL[3]: &nrb
  TYPE[3]: CALL
  TOKENIZED[3]: &nrb
  ORIGINAL[4]: record_type
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: nrb
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: nrb
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: nrb
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064773501
FRAGMENT_COUNT: 16
  ORIGINAL[0]: int_data->link_type == (guint16)-1
  TYPE[0]: CALL
  TOKENIZED[0]: int_data->link_type == ( VAR1 ) -1
  ORIGINAL[1]: int_data->if_fcslen != 0
  TYPE[1]: CALL
  TOKENIZED[1]: int_data->if_fcslen != 0
  ORIGINAL[2]: int_data->if_fcslen
  TYPE[2]: CALL
  TOKENIZED[2]: int_data->if_fcslen
  ORIGINAL[3]: if_fcslen
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: int_data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: int_data
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: int_data
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: int_data
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: int_data
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: int_data
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: int_data
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: int_data
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: int_data
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: int_data
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: int_data
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: int_data
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

