# Tokenized code fragments for 153187-v1.0.0-bad
# Total center nodes processed: 49
# Total code fragments found: 169

CENTER_NODE: 47244640404
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477233
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *str
  TYPE[0]: CALL
  TOKENIZED[0]: *str
  ORIGINAL[1]: ( *p) == 13 || ( *p) == 10
  TYPE[1]: CALL
  TOKENIZED[1]: ( *p ) == 13 || ( *p ) == 10
  ORIGINAL[2]: c == 13 && ( *p) == 10 || c == 10 && ( *p) == 13
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 13 && ( *p ) == 10 || VAR1 == 10 && ( *p ) == 13
  ORIGINAL[3]: p++
  TYPE[3]: CALL
  TOKENIZED[3]: p++
  ORIGINAL[4]: *str
  TYPE[4]: CALL
  TOKENIZED[4]: *str
  ORIGINAL[5]: str
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476930
FRAGMENT_COUNT: 4
  ORIGINAL[0]: message = (apr_pvsprintf(pool,fmt,ap))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , VAR3 , VAR4 ) )
  ORIGINAL[1]: __builtin_va_end(ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477242
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stringbuf_create_empty(pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: out
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477270
FRAGMENT_COUNT: 10
  ORIGINAL[0]: svn_prop_needs_translation(pname)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: svn_subst_detranslate_string(&propval,propval,!0,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &propval , VAR1 , !0 , VAR2 )
  ORIGINAL[2]: &propval
  TYPE[2]: CALL
  TOKENIZED[2]: &propval
  ORIGINAL[3]: !0
  TYPE[3]: CALL
  TOKENIZED[3]: !0
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: propval
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pool
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pool
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640334
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640359
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771798
FRAGMENT_COUNT: 19
  ORIGINAL[0]: base_dir[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: base_dir[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: base_dir_apr = \
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = \
  ORIGINAL[3]: *svn_err__temp = svn_path_cstring_from_utf8(&base_dir_apr,base_dir,pool)
  TYPE[3]: CALL
  TOKENIZED[3]: *svn_err__temp = FUN1 ( &base_dir_apr , VAR1 , VAR2 )
  ORIGINAL[4]: svn_path_cstring_from_utf8(&base_dir_apr,base_dir,pool)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( &base_dir_apr , VAR1 , VAR2 )
  ORIGINAL[5]: &base_dir_apr
  TYPE[5]: CALL
  TOKENIZED[5]: &base_dir_apr
  ORIGINAL[6]: apr_err = apr_filepath_set(base_dir_apr,pool)
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[7]: apr_filepath_set(base_dir_apr,pool)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[8]: apr_err
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: base_dir_apr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: svn_err__temp
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: base_dir_apr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: base_dir
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: pool
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: svn_err__temp
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: apr_err
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: base_dir_apr
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: pool
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: apr_err
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 47244640364
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640362
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640394
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476921
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_dirent_local_style(src,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: dest
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640379
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477115
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_error_wrap_apr(apr_err,(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( FUN2 ( \
  ORIGINAL[1]: dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: apr_err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640322
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771466
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *((svn_auth_provider_object_t **)(apr_array_push(providers))) = provider
  TYPE[0]: CALL
  TOKENIZED[0]: * ( ( VAR1 ** ) ( FUN1 ( VAR2 ) ) ) = VAR3
  ORIGINAL[1]: *((svn_auth_provider_object_t **)(apr_array_push(providers)))
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( VAR1 ** ) ( FUN1 ( VAR2 ) ) )
  ORIGINAL[2]: provider
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ssl_client_cert_file_prompt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771719
FRAGMENT_COUNT: 23
  ORIGINAL[0]: i < sorted_props -> nelts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: sorted_props -> nelts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: item = ((svn_sort__item_t *)(sorted_props -> elts))[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( VAR2 * ) ( VAR3 -> VAR4 ) ) [ VAR5 ]
  ORIGINAL[3]: ((svn_sort__item_t *)(sorted_props -> elts))[i]
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( VAR1 * ) ( VAR2 -> VAR3 ) ) [ VAR4 ]
  ORIGINAL[4]: (svn_sort__item_t *)(sorted_props -> elts)
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[5]: sorted_props -> elts
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: *pname = item . key
  TYPE[6]: CALL
  TOKENIZED[6]: *pname = VAR1 . VAR2
  ORIGINAL[7]: item . key
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 . VAR2
  ORIGINAL[8]: *propval = item . value
  TYPE[8]: CALL
  TOKENIZED[8]: *propval = VAR1 . VAR2
  ORIGINAL[9]: item . value
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 . VAR2
  ORIGINAL[10]: for (i = 0;i < sorted_props -> nelts;i++)
  TYPE[10]: CONTROL_STRUCTURE
  TOKENIZED[10]: for ( VAR1 = 0 ; VAR1 < VAR2 -> VAR3 ; i++ )
  ORIGINAL[11]: elts
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: key
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: value
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: i
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: item
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: sorted_props
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: i
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: pname
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: item
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: propval
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: item
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: names_only
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1

CENTER_NODE: 68719477457
FRAGMENT_COUNT: 7
  ORIGINAL[0]: translated_contents -> data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: translated_contents -> data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: translated_contents -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: len
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: translated_contents
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: encoding
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: translated_contents
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640316
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771375
FRAGMENT_COUNT: 8
  ORIGINAL[0]: failures == 0 || failures == 0x00000008
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 || VAR1 == 0x00000008
  ORIGINAL[1]: *cred_p
  TYPE[1]: CALL
  TOKENIZED[1]: *cred_p
  ORIGINAL[2]: *( *cred_p)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( *cred_p )
  ORIGINAL[3]: ( *cred_p) -> may_save
  TYPE[3]: CALL
  TOKENIZED[3]: ( *cred_p ) -> VAR1
  ORIGINAL[4]: ( *cred_p) -> accepted_failures
  TYPE[4]: CALL
  TOKENIZED[4]: ( *cred_p ) -> VAR1
  ORIGINAL[5]: *cred_p
  TYPE[5]: CALL
  TOKENIZED[5]: *cred_p
  ORIGINAL[6]: accepted_failures
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cred_p
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476969
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_error_clear(err)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: apr_pool_destroy(pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640407
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477624
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_oc_i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: stonesoup_source[1024]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1024 ]
  ORIGINAL[2]: stonesoup_source[1024]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1024 ]
  ORIGINAL[3]: stonesoup_source
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_source
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476855
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *env_var
  TYPE[0]: CALL
  TOKENIZED[0]: *env_var
  ORIGINAL[1]: *env_var
  TYPE[1]: CALL
  TOKENIZED[1]: *env_var
  ORIGINAL[2]: env_var
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: env_val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: env_var
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: env_var
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476952
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_cmdline_cstring_from_utf8_fuzzy(string,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: string
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771282
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_cmdline_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477183
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (equals_sign = (strchr(second_colon + 1,'='))) && equals_sign != second_colon + 1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = ( FUN1 ( VAR2 + 1 , '=' ) ) ) && VAR1 != VAR2 + 1
  ORIGINAL[1]: equals_sign - second_colon
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2
  ORIGINAL[2]: second_colon
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: equals_sign
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: second_colon
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771340
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *__errno_location() == 32
  TYPE[0]: CALL
  TOKENIZED[0]: *__errno_location ( ) == 32
  ORIGINAL[1]: svn_error_wrap_apr( *__errno_location(),(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( *__errno_location ( ) , ( FUN2 ( \
  ORIGINAL[2]: *__errno_location()
  TYPE[2]: CALL
  TOKENIZED[2]: *__errno_location ( )
  ORIGINAL[3]: dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640399
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771168
FRAGMENT_COUNT: 5
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771106
FRAGMENT_COUNT: 4
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640410
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640369
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477379
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !( *c)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( *c )
  ORIGINAL[1]: *editor
  TYPE[1]: CALL
  TOKENIZED[1]: *editor
  ORIGINAL[2]: editor
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 6
  ORIGINAL[0]: output_encoding == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_utf_cstring_from_utf8_ex2(dest,src,output_encoding,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: dest
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> output_encoding
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477149
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_xml_make_close_tag(outstr,pool,(inherited_prop?\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( inherited_prop?\
  ORIGINAL[1]: inherited_prop?\
  TYPE[1]: CALL
  TOKENIZED[1]: inherited_prop?\
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: outstr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: inherited_prop
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640425
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640357
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640423
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771620
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_error_createf(SVN_ERR_CL_ARG_PARSING_ERROR,((void *)0),(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: dgettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: SVN_ERR_CL_ARG_PARSING_ERROR
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: argument_name
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (shmid = shmget(key, shmsz, IPC_CREAT | 0666)) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 | 0666 ) ) < 0
  ORIGINAL[1]: (char *) -1
  TYPE[1]: CALL
  TOKENIZED[1]: ( char * ) -1
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1

CENTER_NODE: 47244640377
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 1
  ORIGINAL[0]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0

CENTER_NODE: 30064771298
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_cmdline_fputs(message,stream,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: message
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640311
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640413
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477354
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !non_interactive
  TYPE[0]: CALL
  TOKENIZED[0]: !non_interactive
  ORIGINAL[1]: non_interactive
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: force_interactive
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: non_interactive
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

