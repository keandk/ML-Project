# Tokenized code fragments for 152912-v1.0.0-bad
# Total center nodes processed: 29
# Total code fragments found: 142

CENTER_NODE: 68719477233
FRAGMENT_COUNT: 10
  ORIGINAL[0]: gctx -> key_set
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: gctx -> tls_aad_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: gctx -> iv_set
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: !ctx -> encrypt
  TYPE[3]: CALL
  TOKENIZED[3]: !ctx -> VAR1
  ORIGINAL[4]: CRYPTO_gcm128_tag(&gctx -> gcm,ctx -> buf,16)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( &gctx -> VAR1 , VAR2 -> VAR3 , 16 )
  ORIGINAL[5]: gctx -> gcm
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: gctx -> taglen
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: taglen
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: gctx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: gctx
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476812
FRAGMENT_COUNT: 6
  ORIGINAL[0]: dat -> ks
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ctx -> encrypt
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: dat -> block
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: block
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dat
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772682
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ((0x6 == 0x10001?2 : 1)) * 256 / 8
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( 0x6 == 0x10001?2 : 1 ) ) * 256 / 8
  ORIGINAL[1]: ((0x6 == 0x10001?2 : 1)) * 256
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( 0x6 == 0x10001?2 : 1 ) ) * 256
  ORIGINAL[2]: 0x6 == 0x10001?2 : 1
  TYPE[2]: CALL
  TOKENIZED[2]: 0x6 == 0x10001?2 : 1

CENTER_NODE: 30064771878
FRAGMENT_COUNT: 9
  ORIGINAL[0]: xctx -> stream
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ( *xctx -> stream)(in,out,len,xctx -> xts . key1,xctx -> xts . key2,(ctx -> iv))
  TYPE[1]: CALL
  TOKENIZED[1]: ( *xctx -> VAR1 ) ( VAR2 , VAR3 , VAR4 , VAR5 -> VAR6 . VAR7 , VAR5 -> VAR6 . VAR8 , ( VAR9 -> VAR10 ) )
  ORIGINAL[2]: *xctx -> stream
  TYPE[2]: CALL
  TOKENIZED[2]: *xctx -> VAR1
  ORIGINAL[3]: xctx -> xts . key1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: xctx -> xts . key2
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3
  ORIGINAL[5]: ctx -> iv
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: in
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: out
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476926
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mkdir(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: tracepoint(stonesoup_trace,trace_location,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: trace_location
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772300
FRAGMENT_COUNT: 3
  ORIGINAL[0]: {(904), (1), (128 / 8), (16), ((0x4000 | 0x5)), (aesni_init_key), (aes_ctr_cipher), (((void *)0)), ((sizeof(EVP_AES_KEY ))), (((void *)0)), (((void *)0)), (((void *)0)), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 904 ) , ( 1 ) , ( 128 / 8 ) , ( 16 ) , ( ( 0x4000 | 0x5 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: sizeof(EVP_AES_KEY )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: EVP_AES_KEY
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771815
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !iv && !key
  TYPE[0]: CALL
  TOKENIZED[0]: !iv && !key
  ORIGINAL[1]: !iv
  TYPE[1]: CALL
  TOKENIZED[1]: !iv
  ORIGINAL[2]: !key
  TYPE[2]: CALL
  TOKENIZED[2]: !key
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: iv
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477427
FRAGMENT_COUNT: 7
  ORIGINAL[0]: rv == - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == - 1
  ORIGINAL[1]: OPENSSL_cleanse(out,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: out
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 2
  ORIGINAL[0]: len >= ((size_t )1) << sizeof(size_t ) * 8 - 4
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= ( ( VAR2 ) 1 ) << sizeof ( VAR2 ) * 8 - 4
  ORIGINAL[1]: while (len >= ((size_t )1) << sizeof(size_t ) * 8 - 4)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: while ( VAR1 >= ( ( VAR2 ) 1 ) << sizeof ( VAR2 ) * 8 - 4 )

CENTER_NODE: 47244640260
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719477136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ctx -> cipher_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cipher_data
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: gctx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ctx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476782
FRAGMENT_COUNT: 7
  ORIGINAL[0]: len < bl
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: len -= bl
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -= VAR2
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bl
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640292
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772771
FRAGMENT_COUNT: 2
  ORIGINAL[0]: 0x1000 | 0x10 | 0x20
  TYPE[0]: CALL
  TOKENIZED[0]: 0x1000 | 0x10 | 0x20
  ORIGINAL[1]: 0x1000 | 0x10
  TYPE[1]: CALL
  TOKENIZED[1]: 0x1000 | 0x10

CENTER_NODE: 30064771811
FRAGMENT_COUNT: 8
  ORIGINAL[0]: type != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: xctx -> xts . key1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: xctx -> xts . key2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: xctx -> xts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: xts
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: key2
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: xctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: xctx
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771089
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (mode == 0x1 || mode == 0x2) && !enc
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 == 0x1 || VAR1 == 0x2 ) && !enc
  ORIGINAL[1]: &dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: &dat -> VAR1
  ORIGINAL[2]: dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ks
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dat
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dat
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dat
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477359
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ctx -> cipher_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ctx -> key_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: ctx -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: iv
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: iv
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640343
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771612
FRAGMENT_COUNT: 4
  ORIGINAL[0]: arg != 13
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 13
  ORIGINAL[1]: c -> buf[arg - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 - 1 ]
  ORIGINAL[2]: arg - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: arg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *dat = (EVP_AES_KEY *)(ctx -> cipher_data)
  TYPE[0]: CALL
  TOKENIZED[0]: *dat = ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[1]: (EVP_AES_KEY *)(ctx -> cipher_data)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[2]: dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: dat -> block
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dat
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dat
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772068
FRAGMENT_COUNT: 8
  ORIGINAL[0]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)?&aesni_128_ccm : &aes_128_ccm
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ] & ( 1 << 57 - 32 ) ?&aesni_128_ccm : &aes_128_ccm
  ORIGINAL[1]: OPENSSL_ia32cap_P[1] & (1 << 57 - 32)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ] & ( 1 << 57 - 32 )
  ORIGINAL[2]: OPENSSL_ia32cap_P[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ]
  ORIGINAL[3]: 1 << 57 - 32
  TYPE[3]: CALL
  TOKENIZED[3]: 1 << 57 - 32
  ORIGINAL[4]: &aesni_128_ccm
  TYPE[4]: CALL
  TOKENIZED[4]: &aesni_128_ccm
  ORIGINAL[5]: &aes_128_ccm
  TYPE[5]: CALL
  TOKENIZED[5]: &aes_128_ccm
  ORIGINAL[6]: <global> aesni_128_ccm
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: <global> aes_128_ccm
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: <global> VAR1

CENTER_NODE: 30064772149
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *( *( *uncitizenly_unseveredness))
  TYPE[0]: CALL
  TOKENIZED[0]: * ( * ( *uncitizenly_unseveredness ) )
  ORIGINAL[1]: *( *uncitizenly_unseveredness)
  TYPE[1]: CALL
  TOKENIZED[1]: * ( *uncitizenly_unseveredness )
  ORIGINAL[2]: *uncitizenly_unseveredness
  TYPE[2]: CALL
  TOKENIZED[2]: *uncitizenly_unseveredness

CENTER_NODE: 30064771145
FRAGMENT_COUNT: 8
  ORIGINAL[0]: CRYPTO_ofb128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,&ctx -> num,dat -> block)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , &ctx -> VAR7 , VAR8 -> VAR9 )
  ORIGINAL[1]: &dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: &dat -> VAR1
  ORIGINAL[2]: ctx -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &ctx -> num
  TYPE[3]: CALL
  TOKENIZED[3]: &ctx -> VAR1
  ORIGINAL[4]: dat -> block
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: in
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: out
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771439
FRAGMENT_COUNT: 4
  ORIGINAL[0]: OPENSSL_cleanse((&gctx -> gcm),sizeof(gctx -> gcm))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( &gctx -> VAR1 ) , sizeof ( VAR2 -> VAR1 ) )
  ORIGINAL[1]: &gctx -> gcm
  TYPE[1]: CALL
  TOKENIZED[1]: &gctx -> VAR1
  ORIGINAL[2]: sizeof(gctx -> gcm)
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 -> VAR2 )
  ORIGINAL[3]: gctx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771924
FRAGMENT_COUNT: 4
  ORIGINAL[0]: arg < 2 || arg > 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 2 || VAR1 > 8
  ORIGINAL[1]: cctx -> L = arg
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: cctx -> L
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: arg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gctx -> iv_gen = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 0
  ORIGINAL[1]: gctx -> iv_gen
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: key
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 12
  ORIGINAL[0]: dat -> stream . ctr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: CRYPTO_ctr128_encrypt_ctr32(in,out,len,(&dat -> ks),ctx -> iv,ctx -> buf,&num,dat -> stream . ctr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , VAR5 -> VAR7 , &num , VAR8 -> VAR9 . VAR10 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: dat -> ks
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ctx -> iv
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: ctx -> buf
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: &num
  TYPE[6]: CALL
  TOKENIZED[6]: &num
  ORIGINAL[7]: dat -> stream . ctr
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 . VAR3
  ORIGINAL[8]: in
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: out
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: len
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ctx
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771453
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++c
  TYPE[0]: CALL
  TOKENIZED[0]: ++c
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: counter
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: n
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

