# Tokenized code fragments for 153353-v1.0.0-bad
# Total center nodes processed: 12
# Total code fragments found: 65

CENTER_NODE: 30064771194
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c - 32
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 32
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476795
FRAGMENT_COUNT: 7
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: filepath != NULL
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != VAR2
  ORIGINAL[3]: filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NULL
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: filepath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477337
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *missing_flgs = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *missing_flgs = ( ( void * ) 0 )
  ORIGINAL[1]: *vgacolor[] = {(\
  TYPE[1]: CALL
  TOKENIZED[1]: *vgacolor [ ] = { ( \
  ORIGINAL[2]: {(\
  TYPE[2]: CALL
  TOKENIZED[2]: { ( \
  ORIGINAL[3]: vgacolor
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477057
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(\
  TYPE[0]: CALL
  TOKENIZED[0]: { ( \
  ORIGINAL[1]: COL_EXEC
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 2
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476835
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[1]: calloc(stonesoup_shmsz, sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( char ) )
  ORIGINAL[2]: stonesoup_shmsz
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_shmsz
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: char
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: char

CENTER_NODE: 30064771632
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(\
  TYPE[0]: CALL
  TOKENIZED[0]: { ( \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064771488
FRAGMENT_COUNT: 4
  ORIGINAL[0]: w[ *nwrds] = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ *nwrds ] = ( ( void * ) 0 )
  ORIGINAL[1]: w[ *nwrds]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ *nwrds ]
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: w
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771080
FRAGMENT_COUNT: 3
  ORIGINAL[0]: COL_FIFO=8
  TYPE[0]: CALL
  TOKENIZED[0]: COL_FIFO=8
  ORIGINAL[1]: COL_FIFO
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: COL_DOOR
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771193
FRAGMENT_COUNT: 1
  ORIGINAL[0]: base_path[20]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 20 ]

CENTER_NODE: 30064771591
FRAGMENT_COUNT: 1
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \

CENTER_NODE: 30064771303
FRAGMENT_COUNT: 28
  ORIGINAL[0]: c[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]
  ORIGINAL[1]: c[1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1 ]
  ORIGINAL[2]: c[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ]
  ORIGINAL[3]: c[1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 1 ]
  ORIGINAL[4]: c[1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ 1 ]
  ORIGINAL[5]: c[1]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ 1 ]
  ORIGINAL[6]: c[1]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ 1 ]
  ORIGINAL[7]: c[1]
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 [ 1 ]
  ORIGINAL[8]: strlen(c[1])
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 [ 1 ] )
  ORIGINAL[9]: c[1]
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 [ 1 ]
  ORIGINAL[10]: c[1]
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 [ 1 ]
  ORIGINAL[11]: c[1]
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 [ 1 ]
  ORIGINAL[12]: c[1]
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 [ 1 ]
  ORIGINAL[13]: c[1]
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 [ 1 ]
  ORIGINAL[14]: c[1]
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 [ 1 ]
  ORIGINAL[15]: c[1]
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 [ 1 ]
  ORIGINAL[16]: c[1]
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 [ 1 ]
  ORIGINAL[17]: c[1]
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 [ 1 ]
  ORIGINAL[18]: c[1]
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 [ 1 ]
  ORIGINAL[19]: c[1]
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 [ 1 ]
  ORIGINAL[20]: c[1]
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 [ 1 ]
  ORIGINAL[21]: c[1]
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 [ 1 ]
  ORIGINAL[22]: c[1]
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 [ 1 ]
  ORIGINAL[23]: c[1]
  TYPE[23]: CALL
  TOKENIZED[23]: VAR1 [ 1 ]
  ORIGINAL[24]: c[1]
  TYPE[24]: CALL
  TOKENIZED[24]: VAR1 [ 1 ]
  ORIGINAL[25]: c
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: c
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: c
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1

