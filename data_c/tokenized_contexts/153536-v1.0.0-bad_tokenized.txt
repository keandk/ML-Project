# Tokenized code fragments for 153536-v1.0.0-bad
# Total center nodes processed: 155
# Total code fragments found: 478

CENTER_NODE: 68719477542
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: saved_len =  *len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = *len
  ORIGINAL[2]: *len
  TYPE[2]: CALL
  TOKENIZED[2]: *len
  ORIGINAL[3]: saved_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: saved_len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 1
  ORIGINAL[0]: btn -> read_digest
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2

CENTER_NODE: 30064771779
FRAGMENT_COUNT: 21
  ORIGINAL[0]: btn -> out == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: btn -> out
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: btn -> out
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn -> out
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: btn -> out
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: btn -> out
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: btn -> out
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: btn -> out
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: out
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: btn
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: btn
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: btn
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: btn
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: btn
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: btn
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: btn
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: btn
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: btn
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: btn
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: btn
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 47244640410
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771522
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_mark(baton,mark,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477383
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_error__wrap_zlib(zerr,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: btn -> in -> msg
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: zerr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: zerr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477201
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_set_write(s,write_handler_disown)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: svn_stream_set_mark(s,mark_handler_disown)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477937
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477182
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_read(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771206
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> is_buffered_fn = is_buffered_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> is_buffered_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: is_buffered_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476816
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> skip_fn = skip_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> skip_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: skip_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771276
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_start(ap,fmt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: message
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640399
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640356
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477636
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: proxy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719477335
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *pool = opaque
  TYPE[0]: CALL
  TOKENIZED[0]: *pool = VAR1
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: opaque
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640454
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772243
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_err = apr_file_open_stdin(&stdin_file,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &stdin_file , VAR2 )
  ORIGINAL[1]: apr_file_open_stdin(&stdin_file,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &stdin_file , VAR1 )
  ORIGINAL[2]: &stdin_file
  TYPE[2]: CALL
  TOKENIZED[2]: &stdin_file
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640457
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772186
FRAGMENT_COUNT: 7
  ORIGINAL[0]: btn -> str -> len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: btn -> str -> data
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: btn -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: str
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: data
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719478055
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: paeon_gigantesque(metasoma_patchworky,tithonia_settimo)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: metasoma_patchworky
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tithonia_settimo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640435
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 8
  ORIGINAL[0]: &baton -> read_checksum
  TYPE[0]: CALL
  TOKENIZED[0]: &baton -> VAR1
  ORIGINAL[1]: baton -> read_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: read_checksum
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: baton
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: read_digest
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: baton
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: baton
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771603
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *svn_err__temp = svn_io_file_seek(btn -> file,0,&offset,btn -> pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , 0 , &offset , VAR1 -> VAR3 )
  ORIGINAL[1]: svn_io_file_seek(btn -> file,0,&offset,btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , 0 , &offset , VAR1 -> VAR3 )
  ORIGINAL[2]: btn -> file
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &offset
  TYPE[3]: CALL
  TOKENIZED[3]: &offset
  ORIGINAL[4]: btn -> pool
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640413
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477871
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__from_spillbuf(1024,100000,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1024 , 100000 , VAR1 )
  ORIGINAL[1]: result_pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771288
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_puts(stream,translated)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: translated
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640379
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640359
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771259
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stream -> seek_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> seek_fn)(stream -> baton,mark)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 )
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: baton
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mark
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> read_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: read_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640329
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477901
FRAGMENT_COUNT: 6
  ORIGINAL[0]: lazyopen_if_unopened(b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: b -> real_stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771216
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (stream -> read_fn)(stream -> baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: stream -> read_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: read_fn
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772299
FRAGMENT_COUNT: 4
  ORIGINAL[0]: b -> real_stream == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_pool_create_ex(b -> pool,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , ( ( void * ) 0 ) )
  ORIGINAL[2]: b -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 47244640450
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477641
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: proxy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772044
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_stream_write(btn -> proxy,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: proxy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640334
FRAGMENT_COUNT: 1
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 47244640445
FRAGMENT_COUNT: 1
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064772202
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *mark = ((svn_stream_mark_t *)marker)
  TYPE[0]: CALL
  TOKENIZED[0]: *mark = ( ( VAR1 * ) VAR2 )
  ORIGINAL[1]: *mark
  TYPE[1]: CALL
  TOKENIZED[1]: *mark
  ORIGINAL[2]: (svn_stream_mark_t *)marker
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) VAR2
  ORIGINAL[3]: marker
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640407
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640448
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477207
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771575
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640462
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772224
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 30064771520
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_skip(baton,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477725
FRAGMENT_COUNT: 3
  ORIGINAL[0]: btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640452
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640267
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640439
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771923
FRAGMENT_COUNT: 5
  ORIGINAL[0]: baton -> in = baton -> out = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR1 -> VAR3 = ( ( void * ) 0 )
  ORIGINAL[1]: baton -> in
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: baton -> out = ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[3]: baton -> out
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0

CENTER_NODE: 68719477297
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_from_aprfile2(file,0,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: result_pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: result_pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640376
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640464
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772275
FRAGMENT_COUNT: 8
  ORIGINAL[0]: len < 16384
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 16384
  ORIGINAL[1]: *svn_err__temp = svn_stream_close(stream)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[2]: svn_stream_close(stream)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: break;
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: break ;
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: svn_err__temp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477186
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_write(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640333
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771478
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *mark = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *mark = ( ( void * ) 0 )
  ORIGINAL[1]: *mark
  TYPE[1]: CALL
  TOKENIZED[1]: *mark
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 30064771260
FRAGMENT_COUNT: 10
  ORIGINAL[0]: stream -> is_buffered_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> is_buffered_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (stream -> is_buffered_fn)(stream -> baton)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 )
  ORIGINAL[4]: stream -> is_buffered_fn
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: stream -> baton
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: is_buffered_fn
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stream
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stream
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477721
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: str
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771237
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_seek(stream,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772104
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *len > left_to_read?left_to_read :  *len
  TYPE[0]: CALL
  TOKENIZED[0]: *len > left_to_read?left_to_read : *len
  ORIGINAL[1]: *len > left_to_read
  TYPE[1]: CALL
  TOKENIZED[1]: *len > VAR1
  ORIGINAL[2]: *len
  TYPE[2]: CALL
  TOKENIZED[2]: *len
  ORIGINAL[3]: *len
  TYPE[3]: CALL
  TOKENIZED[3]: *len
  ORIGINAL[4]: left_to_read
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: left_to_read
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771164
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> baton = baton
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> baton
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: baton
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 5
  ORIGINAL[0]: eol_pos = (strstr(buffer,eol))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , VAR3 ) )
  ORIGINAL[1]: strstr(buffer,eol)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: eol_pos
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: eol
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772117
FRAGMENT_COUNT: 4
  ORIGINAL[0]: left_to_read = btn -> str -> len - btn -> amt_read
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3 -> VAR4 - VAR2 -> VAR5
  ORIGINAL[1]: btn -> str -> len - btn -> amt_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 - VAR1 -> VAR4
  ORIGINAL[2]: left_to_read
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477055
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stream_readline(stringbuf,eof,eol,stream,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: eof
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: eol
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640297
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640344
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640365
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477127
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640327
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640350
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640272
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771571
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: *len == 1
  ORIGINAL[1]: err = svn_io_file_write_full(btn -> file,data, *len,len,btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 -> VAR3 , VAR4 , *len , VAR5 , VAR2 -> VAR6 )
  ORIGINAL[2]: svn_io_file_write_full(btn -> file,data, *len,len,btn -> pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR3 , *len , VAR4 , VAR1 -> VAR5 )
  ORIGINAL[3]: btn -> file
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: *len
  TYPE[4]: CALL
  TOKENIZED[4]: *len
  ORIGINAL[5]: btn -> pool
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: data
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476860
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> skip_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> skip_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> skip_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: skip_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772209
FRAGMENT_COUNT: 7
  ORIGINAL[0]: mark != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: btn -> amt_read = marker -> pos
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3 -> VAR4
  ORIGINAL[2]: btn -> amt_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: marker -> pos
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: amt_read
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: marker
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772152
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 68719477228
FRAGMENT_COUNT: 3
  ORIGINAL[0]: offset = len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: offset
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stream -> close_fn = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: stream -> close_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477194
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__is_buffered(baton)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771966
FRAGMENT_COUNT: 19
  ORIGINAL[0]: btn -> write_checksum &&  *len > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && *len > 0
  ORIGINAL[1]: btn -> write_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: *len > 0
  TYPE[2]: CALL
  TOKENIZED[2]: *len > 0
  ORIGINAL[3]: *svn_err__temp = svn_checksum_update(btn -> write_ctx,buffer, *len)
  TYPE[3]: CALL
  TOKENIZED[3]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , VAR3 , *len )
  ORIGINAL[4]: svn_checksum_update(btn -> write_ctx,buffer, *len)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 -> VAR2 , VAR3 , *len )
  ORIGINAL[5]: btn -> write_ctx
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: *len
  TYPE[6]: CALL
  TOKENIZED[6]: *len
  ORIGINAL[7]: svn_stream_write(btn -> proxy,buffer,len)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[8]: btn -> proxy
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: write_ctx
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: proxy
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: svn_err__temp
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: btn
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: buffer
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: len
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: svn_err__temp
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: btn
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buffer
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: len
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 68719477954
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *svn_err__temp = svn_stream_seek(b -> real_stream,mark)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772347
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476796
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476877
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> mark_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> mark_fn)(stream -> baton,mark,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: mark
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640348
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477330
FRAGMENT_COUNT: 4
  ORIGINAL[0]: file == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> file = file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: !disown
  TYPE[2]: CALL
  TOKENIZED[2]: !disown
  ORIGINAL[3]: disown
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640373
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 1
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719477752
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: stream = svn_stream_create(baton,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[2]: svn_stream_set_read(stream,read_handler_stringbuf)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640388
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771523
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_seek(baton,mark)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771428
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_error_compose_create(svn_stream_close(from),svn_stream_close(to))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , FUN2 ( VAR2 ) )
  ORIGINAL[1]: svn_stream_close(from)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: svn_stream_close(to)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: from
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: to
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771124
FRAGMENT_COUNT: 2
  ORIGINAL[0]: fflush(stonesoup_printf_context)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719477830
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &stdout_file
  TYPE[0]: CALL
  TOKENIZED[0]: &stdout_file
  ORIGINAL[1]: apr_err
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stdout_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stdout_file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771205
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> seek_fn = seek_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> seek_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: seek_fn
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: seek_fn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771240
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> mark_fn != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: stream -> mark_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: mark_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771170
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> write_fn = write_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> write_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: write_fn
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: write_fn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771586
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *svn_err__temp = svn_io_file_seek(btn -> file,1,&mark_apr -> off,btn -> pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , 1 , &mark_apr -> VAR3 , VAR1 -> VAR4 )
  ORIGINAL[1]: svn_io_file_seek(btn -> file,1,&mark_apr -> off,btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , 1 , &mark_apr -> VAR3 , VAR1 -> VAR4 )
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640396
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640382
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771609
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (apr_file_flags_get(btn -> file) & 0x00080) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( FUN1 ( VAR1 -> VAR2 ) & 0x00080 ) != 0
  ORIGINAL[1]: apr_file_flags_get(btn -> file) & 0x00080
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 ) & 0x00080
  ORIGINAL[2]: apr_file_flags_get(btn -> file)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 )

CENTER_NODE: 30064771657
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> file
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: file
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640466
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476842
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> mark_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: mark_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477165
FRAGMENT_COUNT: 2
  ORIGINAL[0]: out1 == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: out2
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772213
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: left_to_read
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477103
FRAGMENT_COUNT: 8
  ORIGINAL[0]: &bytes_read2
  TYPE[0]: CALL
  TOKENIZED[0]: &bytes_read2
  ORIGINAL[1]: bytes_read1 != bytes_read2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: bytes_read2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bytes_read2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bytes_read2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bytes_read1
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: bytes_read2
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477512
FRAGMENT_COUNT: 12
  ORIGINAL[0]: btn -> in
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: btn -> in
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> out
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn -> pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn -> subbaton
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: btn -> out
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: btn -> close != ((void *)0)
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[7]: btn -> close
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: btn -> close
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: close
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: btn
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: btn
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640346
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477589
FRAGMENT_COUNT: 8
  ORIGINAL[0]: btn -> pool
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: btn -> read_ctx
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> read_checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn -> read_ctx
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn -> pool
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: read_ctx
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: btn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640468
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771266
FRAGMENT_COUNT: 10
  ORIGINAL[0]: stream -> close_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> close_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (stream -> close_fn)(stream -> baton)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 )
  ORIGINAL[4]: stream -> close_fn
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: stream -> baton
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: close_fn
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stream
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stream
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771488
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream__set_is_buffered(stream,is_buffered_handler_empty)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477622
FRAGMENT_COUNT: 4
  ORIGINAL[0]: read_checksum == ((void *)0) && write_checksum == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 ) && VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: baton -> proxy = stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: baton -> proxy
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771296
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *match
  TYPE[0]: CALL
  TOKENIZED[0]: *match
  ORIGINAL[1]: svn_stream_read(stream,&c,&numbytes)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &c , &numbytes )
  ORIGINAL[2]: &c
  TYPE[2]: CALL
  TOKENIZED[2]: &c
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: numbytes
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: c
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640442
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477738
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mark != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: stringbuf_stream_mark = ((const struct stringbuf_stream_mark *)mark)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( const struct VAR1 * ) VAR2 )
  ORIGINAL[2]: btn -> amt_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: amt_read
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477130
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *len
  TYPE[0]: CALL
  TOKENIZED[0]: *len
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772261
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_error_wrap_apr(apr_err,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: apr_err
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476864
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(stream -> write_fn != ((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 -> VAR2 != ( ( void * ) 0 ) )
  ORIGINAL[1]: *svn_err__temp = svn_error__malfunction(!0,\
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( !0 , \
  ORIGINAL[2]: svn_error__malfunction(!0,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( !0 , \
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478008
FRAGMENT_COUNT: 8
  ORIGINAL[0]: stonesoup_heap_buffer_64 != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: tracepoint(stonesoup_trace, variable_address, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[3]: __builtin_return_address(0)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( 0 )
  ORIGINAL[4]: stonesoup_trace
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_trace
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: variable_address
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_trace
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772334
FRAGMENT_COUNT: 7
  ORIGINAL[0]: b -> real_stream
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: svn_stream_close(b -> real_stream)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: b -> real_stream
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: real_stream
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: b
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640434
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640460
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771273
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(str)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(str)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771617
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *stream = svn_stream_from_aprfile2(file,0,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *stream = FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: *stream
  TYPE[1]: CALL
  TOKENIZED[1]: *stream
  ORIGINAL[2]: svn_stream_from_aprfile2(file,0,result_pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: file
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640280
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477304
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_io_open_unique_file3(&file,temp_path,dirpath,delete_when,result_pool,scratch_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &file , VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: &file
  TYPE[1]: CALL
  TOKENIZED[1]: &file
  ORIGINAL[2]: temp_path
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: delete_when
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: result_pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: scratch_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477817
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: svn_stream_set_mark(stream,mark_handler_string)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: svn_stream_set_seek(stream,seek_handler_string)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640446
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477347
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ( *read_fn)(baton,buffer,&apr_len)
  TYPE[0]: CALL
  TOKENIZED[0]: ( *read_fn ) ( VAR1 , VAR2 , &apr_len )
  ORIGINAL[1]: &apr_len
  TYPE[1]: CALL
  TOKENIZED[1]: &apr_len
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: apr_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477911
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[2]: lazyopen_if_unopened(b)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772366
FRAGMENT_COUNT: 4
  ORIGINAL[0]: lob -> pool = result_pool
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3
  ORIGINAL[1]: lob -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: result_pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: lob
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

