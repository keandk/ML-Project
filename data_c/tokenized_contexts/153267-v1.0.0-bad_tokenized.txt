# Tokenized code fragments for 153267-v1.0.0-bad
# Total center nodes processed: 153
# Total code fragments found: 509

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771676
FRAGMENT_COUNT: 8
  ORIGINAL[0]: svn_io_file_seek(btn -> file,1,&mark_apr -> off,btn -> pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , 1 , &mark_apr -> VAR3 , VAR1 -> VAR4 )
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &mark_apr -> off
  TYPE[2]: CALL
  TOKENIZED[2]: &mark_apr -> VAR1
  ORIGINAL[3]: btn -> pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: file
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: btn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477770
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !read_digest && !write_digest
  TYPE[0]: CALL
  TOKENIZED[0]: !read_digest && !write_digest
  ORIGINAL[1]: svn_stream_set_read(s,read_handler_md5)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: svn_stream_set_skip(s,skip_handler_md5)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477267
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_skip(baton,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477219
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_set_write(stream,write_handler_empty)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: svn_stream_set_mark(stream,mark_handler_empty)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771175
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> read_fn = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: stream -> read_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 47244640472
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640354
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771322
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (stream -> write_fn)(stream -> baton,data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: stream -> write_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640462
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772345
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_from_aprfile2(stdout_file,!0,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: apr_err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640452
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772225
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stringbuf_stream_mark -> pos = btn -> amt_read
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3 -> VAR4
  ORIGINAL[1]: stringbuf_stream_mark -> pos
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> amt_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pos
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stringbuf_stream_mark
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stringbuf_stream_mark
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477776
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: left_to_read = btn -> str -> len - btn -> amt_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3 -> VAR4 - VAR2 -> VAR5
  ORIGINAL[2]: btn -> str -> len - btn -> amt_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 - VAR1 -> VAR4
  ORIGINAL[3]: left_to_read
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: left_to_read
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476964
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> seek_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> seek_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> seek_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: seek_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640456
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640449
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772348
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_file_open_stderr(&stderr_file,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &stderr_file , VAR1 )
  ORIGINAL[1]: &stderr_file
  TYPE[1]: CALL
  TOKENIZED[1]: &stderr_file
  ORIGINAL[2]: stderr_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stderr_file
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 3
  ORIGINAL[0]: len = 16384
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 16384
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cancel_func
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477911
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_from_aprfile2(stdin_file,!0,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476839
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> skip_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: skip_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476836
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> baton = baton
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> baton
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771314
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stream -> skip_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> skip_fn)(stream -> baton,len)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 )
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: baton
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477803
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640335
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771764
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *len < orig_len?2 : 2
  TYPE[0]: CALL
  TOKENIZED[0]: *len < orig_len?2 : 2
  ORIGINAL[1]: *len < orig_len
  TYPE[1]: CALL
  TOKENIZED[1]: *len < VAR1
  ORIGINAL[2]: *len
  TYPE[2]: CALL
  TOKENIZED[2]: *len
  ORIGINAL[3]: orig_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476926
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> mark_fn = mark_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> mark_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: mark_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476929
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> is_buffered_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: is_buffered_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771628
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *len = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *len = 0
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771712
FRAGMENT_COUNT: 2
  ORIGINAL[0]: 0x00002 | 0x00080 | 0x00004
  TYPE[0]: CALL
  TOKENIZED[0]: 0x00002 | 0x00080 | 0x00004
  ORIGINAL[1]: 0x00002 | 0x00080
  TYPE[1]: CALL
  TOKENIZED[1]: 0x00002 | 0x00080

CENTER_NODE: 68719477269
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_write(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478018
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[2]: lazyopen_if_unopened(b)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771365
FRAGMENT_COUNT: 4
  ORIGINAL[0]: message = (apr_pvsprintf(pool,fmt,ap))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , VAR3 , VAR4 ) )
  ORIGINAL[1]: apr_pvsprintf(pool,fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: message
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476837
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> read_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: read_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477582
FRAGMENT_COUNT: 7
  ORIGINAL[0]: write_len > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: (btn -> write)(btn -> subbaton,buf,&write_len)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 , &write_len )
  ORIGINAL[2]: btn -> subbaton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &write_len
  TYPE[3]: CALL
  TOKENIZED[3]: &write_len
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: write_len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640478
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772312
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 47244640360
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640282
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477383
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_io_open_unique_file3(&file,temp_path,dirpath,delete_when,result_pool,scratch_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &file , VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: &file
  TYPE[1]: CALL
  TOKENIZED[1]: &file
  ORIGINAL[2]: temp_path
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: delete_when
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: result_pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: scratch_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771699
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_file_flags_get(btn -> file)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: file
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478003
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772213
FRAGMENT_COUNT: 3
  ORIGINAL[0]: btn -> amt_read += len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 += VAR3
  ORIGINAL[1]: btn -> amt_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478004
FRAGMENT_COUNT: 8
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b -> real_stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: baton
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: b
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: b
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771357
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stream -> close_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> close_fn)(stream -> baton)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 )
  ORIGINAL[2]: stream -> close_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: stream -> baton
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2

CENTER_NODE: 68719476955
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> mark_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: mark_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477331
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772309
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len > left_to_read?left_to_read : len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > left_to_read?left_to_read : VAR1
  ORIGINAL[1]: len > left_to_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > VAR2
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: left_to_read
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: left_to_read
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477417
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *pool = opaque
  TYPE[0]: CALL
  TOKENIZED[0]: *pool = VAR1
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: opaque
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477723
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772327
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: svn_stream_set_seek(stream,seek_handler_string)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772440
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *lob = (memset(apr_palloc(result_pool,sizeof(( *lob))),0,sizeof(( *lob))))
  TYPE[0]: CALL
  TOKENIZED[0]: *lob = ( FUN1 ( FUN2 ( VAR1 , sizeof ( ( *lob ) ) ) , 0 , sizeof ( ( *lob ) ) ) )
  ORIGINAL[1]: memset(apr_palloc(result_pool,sizeof(( *lob))),0,sizeof(( *lob)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( VAR1 , sizeof ( ( *lob ) ) ) , 0 , sizeof ( ( *lob ) ) )
  ORIGINAL[2]: lob
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: lob
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477415
FRAGMENT_COUNT: 7
  ORIGINAL[0]: file == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !disown
  TYPE[2]: CALL
  TOKENIZED[2]: !disown
  ORIGINAL[3]: svn_stream_set_close(stream,close_handler_apr)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640406
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477968
FRAGMENT_COUNT: 5
  ORIGINAL[0]: &stream
  TYPE[0]: CALL
  TOKENIZED[0]: &stream
  ORIGINAL[1]: b -> real_stream = stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: b -> real_stream
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640279
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477365
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_io_file_open(&file,path,0x00001 | 0x00080,0x0FFF,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &file , VAR1 , 0x00001 | 0x00080 , 0x0FFF , VAR2 )
  ORIGINAL[1]: &file
  TYPE[1]: CALL
  TOKENIZED[1]: &file
  ORIGINAL[2]: 0x00001 | 0x00080
  TYPE[2]: CALL
  TOKENIZED[2]: 0x00001 | 0x00080
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477721
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_read(btn -> proxy,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640398
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476927
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> seek_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: seek_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771612
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__is_buffered(baton)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772043
FRAGMENT_COUNT: 9
  ORIGINAL[0]: svn_stream_read(btn -> proxy,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: proxy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: btn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: btn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064772263
FRAGMENT_COUNT: 6
  ORIGINAL[0]: btn -> str -> len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: btn -> str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: str
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477833
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: *baton
  TYPE[1]: CALL
  TOKENIZED[1]: *baton
  ORIGINAL[2]: baton -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: baton -> amt_read
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: svn_stream_create(baton,pool)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: baton
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pool
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640343
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476976
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_write(stream,str,&len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , &len )
  ORIGINAL[1]: str
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477106
FRAGMENT_COUNT: 7
  ORIGINAL[0]: eol_pos == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: str -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: eol_pos - (str -> data)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - ( VAR2 -> VAR3 )
  ORIGINAL[3]: str -> data
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: eol_pos
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: eol_pos
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: str
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640358
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772107
FRAGMENT_COUNT: 12
  ORIGINAL[0]: baton -> write_ctx = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: baton -> write_ctx
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: write_ctx
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: write_checksum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: baton
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: baton
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: baton
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: baton
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: baton
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: baton
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771298
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stream -> read_fn != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: stream -> read_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: read_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477227
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_write(bt -> out1,data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: bt -> out1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640300
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640383
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640369
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477279
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_create(stream,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771325
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_seek(stream,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771261
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_heap_buff_64 != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_buff_size = ((int )(strlen(globetrotter_prechallenge)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( int ) ( FUN1 ( VAR2 ) ) )
  ORIGINAL[2]: (int )(strlen(globetrotter_prechallenge))
  TYPE[2]: CALL
  TOKENIZED[2]: ( int ) ( FUN1 ( VAR1 ) )
  ORIGINAL[3]: stonesoup_buff_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_heap_buff_64
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640313
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640470
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640474
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640339
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772407
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *svn_err__temp = svn_stream_skip(b -> real_stream,len)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: svn_stream_skip(b -> real_stream,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[2]: b -> real_stream
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640444
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771115
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context = fopen(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(filepath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772380
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__from_spillbuf(1024,100000,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1024 , 100000 , VAR1 )
  ORIGINAL[1]: result_pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476968
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> is_buffered_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> is_buffered_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> is_buffered_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: is_buffered_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772355
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *work = svn_stringbuf_create_ensure(16384,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *work = FUN1 ( 16384 , VAR1 )
  ORIGINAL[1]: svn_stringbuf_create_ensure(16384,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 16384 , VAR1 )
  ORIGINAL[2]: work
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result_pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477507
FRAGMENT_COUNT: 8
  ORIGINAL[0]: btn -> out == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: btn -> out
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn -> out -> zfree = zfree
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3 = VAR3
  ORIGINAL[4]: btn -> out
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: out
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: btn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640467
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640476
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640430
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771401
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *match
  TYPE[0]: CALL
  TOKENIZED[0]: *match
  ORIGINAL[1]: *stringbuf = str
  TYPE[1]: CALL
  TOKENIZED[1]: *stringbuf = VAR1
  ORIGINAL[2]: *stringbuf
  TYPE[2]: CALL
  TOKENIZED[2]: *stringbuf
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772132
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_stream_write(btn -> proxy,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: proxy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771594
FRAGMENT_COUNT: 4
  ORIGINAL[0]: out1 == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: out2 == ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: out2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771647
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_io_file_seek(btn -> file,1,&offset,btn -> pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , 1 , &offset , VAR1 -> VAR3 )
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &offset
  TYPE[2]: CALL
  TOKENIZED[2]: &offset
  ORIGINAL[3]: btn -> pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pool
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771685
FRAGMENT_COUNT: 5
  ORIGINAL[0]: offset = mark != ((void *)0)?((const struct mark_apr *)mark) -> off : 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 != ( ( void * ) 0 ) ? ( ( const struct VAR3 * ) VAR2 ) -> VAR4 : 0
  ORIGINAL[1]: mark != ((void *)0)?((const struct mark_apr *)mark) -> off : 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 ) ? ( ( const struct VAR2 * ) VAR1 ) -> VAR3 : 0
  ORIGINAL[2]: mark != ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[3]: ((const struct mark_apr *)mark) -> off
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( const struct VAR1 * ) VAR2 ) -> VAR3
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772147
FRAGMENT_COUNT: 6
  ORIGINAL[0]: btn -> write_digest
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *btn -> write_digest = (apr_pmemdup(btn -> pool,(btn -> write_checksum -> digest),16))
  TYPE[1]: CALL
  TOKENIZED[1]: *btn -> VAR1 = ( FUN1 ( VAR2 -> VAR3 , ( VAR2 -> VAR4 -> VAR5 ) , 16 ) )
  ORIGINAL[2]: *btn -> write_digest
  TYPE[2]: CALL
  TOKENIZED[2]: *btn -> VAR1
  ORIGINAL[3]: btn -> write_digest
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: apr_pmemdup(btn -> pool,(btn -> write_checksum -> digest),16)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 -> VAR2 , ( VAR1 -> VAR3 -> VAR4 ) , 16 )
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772240
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 30064771662
FRAGMENT_COUNT: 10
  ORIGINAL[0]: *len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: *len == 1
  ORIGINAL[1]: svn_io_file_write_full(btn -> file,data, *len,len,btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , *len , VAR4 , VAR1 -> VAR5 )
  ORIGINAL[2]: btn -> file
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: *len
  TYPE[3]: CALL
  TOKENIZED[3]: *len
  ORIGINAL[4]: btn -> pool
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: pool
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: data
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: len
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: btn
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640460
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640445
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477242
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640389
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772070
FRAGMENT_COUNT: 6
  ORIGINAL[0]: btn -> read_more
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *svn_err__temp = read_handler_checksum(baton,buf,&len)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 , VAR2 , &len )
  ORIGINAL[2]: read_handler_checksum(baton,buf,&len)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , &len )
  ORIGINAL[3]: btn -> read_more
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640341
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640316
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640337
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640413
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771159
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *stonesoup_tainted_buff != 0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_tainted_buff != 0
  ORIGINAL[1]: *stonesoup_tainted_buff
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_tainted_buff
  ORIGINAL[2]: fread(*stonesoup_tainted_buff,1,stonesoup_lsize,stonesoup_tainted_file)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( *stonesoup_tainted_buff , 1 , VAR1 , VAR2 )
  ORIGINAL[3]: *stonesoup_tainted_buff
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_tainted_buff
  ORIGINAL[4]: *stonesoup_tainted_buff
  TYPE[4]: CALL
  TOKENIZED[4]: *stonesoup_tainted_buff
  ORIGINAL[5]: stonesoup_tainted_buff
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_lsize
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_tainted_file
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stonesoup_tainted_buff
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477214
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *mark
  TYPE[0]: CALL
  TOKENIZED[0]: *mark
  ORIGINAL[1]: mark
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771800
FRAGMENT_COUNT: 26
  ORIGINAL[0]: btn -> in == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: btn -> read_buffer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: read_helper_gz(btn -> read,btn -> subbaton,(btn -> read_buffer),&btn -> in -> avail_in,&btn -> read_flush)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR1 -> VAR3 , ( VAR1 -> VAR4 ) , &btn -> VAR5 -> VAR6 , &btn -> VAR7 )
  ORIGINAL[3]: btn -> read_buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn -> read_buffer
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: read_buffer
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: btn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: btn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: btn
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: btn
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: btn
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: btn
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: btn
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: btn
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: btn
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: btn
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: btn
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: btn
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: btn
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: btn
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: btn
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: btn
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: btn
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: btn
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: btn
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1

CENTER_NODE: 68719477121
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_supports_mark(stream) && svn_stream__is_buffered(stream)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) && FUN2 ( VAR1 )
  ORIGINAL[1]: stream_readline_chunky(stringbuf,eof,eol,stream,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stringbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: eof
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477170
FRAGMENT_COUNT: 6
  ORIGINAL[0]: bytes_read1 = 16384
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 16384
  ORIGINAL[1]: bytes_read2 = 16384
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 16384
  ORIGINAL[2]: bytes_read2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bytes_read2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bytes_read2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bytes_read2
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772024
FRAGMENT_COUNT: 10
  ORIGINAL[0]: baton -> subbaton = stream -> baton
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR3 -> VAR1
  ORIGINAL[1]: baton -> subbaton
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: subbaton
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: baton
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: baton
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: baton
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477139
FRAGMENT_COUNT: 4
  ORIGINAL[0]: stream_readline(stringbuf,eof,eol,stream,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: eol
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477275
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_seek(baton,mark)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772231
FRAGMENT_COUNT: 18
  ORIGINAL[0]: mark != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: stringbuf_stream_mark = ((const struct stringbuf_stream_mark *)mark)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( const struct VAR1 * ) VAR2 )
  ORIGINAL[3]: (const struct stringbuf_stream_mark *)mark
  TYPE[3]: CALL
  TOKENIZED[3]: ( const struct VAR1 * ) VAR2
  ORIGINAL[4]: btn -> amt_read = stringbuf_stream_mark -> pos
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 = VAR3 -> VAR4
  ORIGINAL[5]: btn -> amt_read
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: stringbuf_stream_mark -> pos
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: btn -> amt_read = 0
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 = 0
  ORIGINAL[8]: btn -> amt_read
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: amt_read
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pos
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: amt_read
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: mark
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: stringbuf_stream_mark
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: mark
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: btn
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: stringbuf_stream_mark
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: btn
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 68719477973
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stream -> mark_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> mark_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: mark_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640409
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640464
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640454
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772439
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !b -> real_stream
  TYPE[0]: CALL
  TOKENIZED[0]: !b -> VAR1
  ORIGINAL[1]: b -> real_stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: svn_stream__is_buffered(b -> real_stream)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[3]: b -> real_stream
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: real_stream
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: b
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772056
FRAGMENT_COUNT: 4
  ORIGINAL[0]: btn -> write_checksum &&  *len > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && *len > 0
  ORIGINAL[1]: btn -> write_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: *len > 0
  TYPE[2]: CALL
  TOKENIZED[2]: *len > 0
  ORIGINAL[3]: *len
  TYPE[3]: CALL
  TOKENIZED[3]: *len

CENTER_NODE: 47244640356
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640423
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640366
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640402
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476842
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> write_fn = write_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> write_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: write_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771745
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> file
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: file
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477863
FRAGMENT_COUNT: 6
  ORIGINAL[0]: marker = (apr_palloc(pool,sizeof(( *marker))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , sizeof ( ( *marker ) ) ) )
  ORIGINAL[1]: *marker
  TYPE[1]: CALL
  TOKENIZED[1]: *marker
  ORIGINAL[2]: marker -> pos
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pos
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: marker
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: marker
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640362
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477212
FRAGMENT_COUNT: 7
  ORIGINAL[0]: &bytes_read
  TYPE[0]: CALL
  TOKENIZED[0]: &bytes_read
  ORIGINAL[1]: to_read -= bytes_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -= VAR2
  ORIGINAL[2]: bytes_read
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bytes_read
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bytes_read
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: to_read
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bytes_read
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772430
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[1]: lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771610
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_mark(baton,mark,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477213
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *len
  TYPE[0]: CALL
  TOKENIZED[0]: *len
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771375
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_utf_cstring_from_utf8_ex2(&translated,message,encoding,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &translated , VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: &translated
  TYPE[1]: CALL
  TOKENIZED[1]: &translated
  ORIGINAL[2]: translated
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: message
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: encoding
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: translated
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477874
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mark != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: btn -> amt_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: amt_read
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477266
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_read(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: buffer
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640420
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640458
FRAGMENT_COUNT: 0

