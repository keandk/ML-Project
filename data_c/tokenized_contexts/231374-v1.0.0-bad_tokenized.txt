# Tokenized code fragments for 231374-v1.0.0-bad
# Total center nodes processed: 222
# Total code fragments found: 1201

CENTER_NODE: 30064773430
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ptvc->tree
  TYPE[0]: CALL
  TOKENIZED[0]: ptvc->tree
  ORIGINAL[1]: ptvc->tvb
  TYPE[1]: CALL
  TOKENIZED[1]: ptvc->tvb
  ORIGINAL[2]: ptvc->offset
  TYPE[2]: CALL
  TOKENIZED[2]: ptvc->offset
  ORIGINAL[3]: item
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: encoding
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719478748
FRAGMENT_COUNT: 5
  ORIGINAL[0]: * c    = copy
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: copy
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: copy
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: copy
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244641113
FRAGMENT_COUNT: 1
  ORIGINAL[0]: protocol == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2

CENTER_NODE: 30064771886
FRAGMENT_COUNT: 2
  ORIGINAL[0]: GPOINTER_TO_UINT(v)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: v
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719482899
FRAGMENT_COUNT: 5
  ORIGINAL[0]: protocol == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: protocol
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773913
FRAGMENT_COUNT: 5
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: PTREE_DATA(tree)->count++
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count++
  ORIGINAL[3]: PTREE_DATA(tree)->count
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->count
  ORIGINAL[4]: tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773708
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: proto_tree_set_time(new_fi, value_ptr)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: new_fi
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: value_ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pi
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719481306
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: proto_tree_add_uint(tree, hfindex, tvb, start, length, value)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[4]: start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: value
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064774975
FRAGMENT_COUNT: 9
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: !(PTREE_DATA(tree)->visible)
  TYPE[2]: CALL
  TOKENIZED[2]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[3]: PTREE_DATA(tree)->visible
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->visible
  ORIGINAL[4]: PTREE_DATA(tree)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: PTREE_DATA(tree)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 )
  ORIGINAL[6]: PTREE_DATA(tree)->visible
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 ) ->visible
  ORIGINAL[7]: PTREE_DATA(tree)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 )
  ORIGINAL[8]: visible
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064778308
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PROTO_REGISTRAR_GET_NTH(n, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: DISSECTOR_ASSERT((guint)n < gpa_hfinfo.len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 ) VAR2 < VAR3 . VAR4 )
  ORIGINAL[2]: (guint)n < gpa_hfinfo.len
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2 < VAR3 . VAR4
  ORIGINAL[3]: hfinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772647
FRAGMENT_COUNT: 6
  ORIGINAL[0]: bc == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == '\\0'
  ORIGINAL[1]: bc == '\\0'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == '\\0'
  ORIGINAL[2]: bc == '.' || bc == '\\0'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == ' . ' || VAR1 == '\\0'
  ORIGINAL[3]: bc == '.'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == ' . '
  ORIGINAL[4]: bc == '\\0'
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == '\\0'
  ORIGINAL[5]: bc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064778900
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !construct_match_selected_string(finfo, edt, &filter)
  TYPE[0]: CALL
  TOKENIZED[0]: !construct_match_selected_string ( VAR1 , VAR2 , &filter )
  ORIGINAL[1]: construct_match_selected_string(finfo, edt, &filter)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , &filter )
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: filter
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064777077
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !pi
  TYPE[0]: CALL
  TOKENIZED[0]: !pi
  ORIGINAL[1]: (!fi) || (fi->tree_type == -1)
  TYPE[1]: CALL
  TOKENIZED[1]: ( !fi ) || ( fi->tree_type == -1 )
  ORIGINAL[2]: !fi
  TYPE[2]: CALL
  TOKENIZED[2]: !fi
  ORIGINAL[3]: fi->tree_type == -1
  TYPE[3]: CALL
  TOKENIZED[3]: fi->tree_type == -1
  ORIGINAL[4]: fi->tree_type
  TYPE[4]: CALL
  TOKENIZED[4]: fi->tree_type
  ORIGINAL[5]: -1
  TYPE[5]: CALL
  TOKENIZED[5]: -1
  ORIGINAL[6]: tree_type
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: fi
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: fi
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719485464
FRAGMENT_COUNT: 8
  ORIGINAL[0]: hf_field->type
  TYPE[0]: CALL
  TOKENIZED[0]: hf_field->type
  ORIGINAL[1]: CREATE_VALUE_STRING(dst, format, ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: va_start(ap, format)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: dst = ep_strdup_vprintf(format, ap)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[4]: ep_strdup_vprintf(format, ap)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: dst
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: format
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dst
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772577
FRAGMENT_COUNT: 5
  ORIGINAL[0]: PTREE_DATA(tree)->visible = visible
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->visible = VAR2
  ORIGINAL[1]: PTREE_DATA(tree)->visible
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) ->visible
  ORIGINAL[2]: PTREE_DATA(tree)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: visible
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: visible
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479571
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: pi
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064774685
FRAGMENT_COUNT: 32
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: !(PTREE_DATA(tree)->visible)
  TYPE[2]: CALL
  TOKENIZED[2]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[3]: PTREE_DATA(tree)->visible
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->visible
  ORIGINAL[4]: PTREE_FINFO(tree)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: DISSECTOR_ASSERT(hfinfo->type == FT_STRING || hfinfo->type == FT_STRINGZ)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( hfinfo->type == VAR1 || hfinfo->type == VAR2 )
  ORIGINAL[6]: hfinfo->type == FT_STRING || hfinfo->type == FT_STRINGZ
  TYPE[6]: CALL
  TOKENIZED[6]: hfinfo->type == VAR1 || hfinfo->type == VAR2
  ORIGINAL[7]: hfinfo->type == FT_STRING
  TYPE[7]: CALL
  TOKENIZED[7]: hfinfo->type == VAR1
  ORIGINAL[8]: hfinfo->type
  TYPE[8]: CALL
  TOKENIZED[8]: hfinfo->type
  ORIGINAL[9]: pi = proto_tree_add_pi(tree, hfindex, tvb, start, &length, &new_fi)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 , &length , &new_fi )
  ORIGINAL[10]: proto_tree_add_pi(tree, hfindex, tvb, start, &length, &new_fi)
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , &length , &new_fi )
  ORIGINAL[11]: &length
  TYPE[11]: CALL
  TOKENIZED[11]: &length
  ORIGINAL[12]: &new_fi
  TYPE[12]: CALL
  TOKENIZED[12]: &new_fi
  ORIGINAL[13]: DISSECTOR_ASSERT(length >= 0)
  TYPE[13]: CALL
  TOKENIZED[13]: FUN1 ( VAR1 >= 0 )
  ORIGINAL[14]: length >= 0
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 >= 0
  ORIGINAL[15]: proto_tree_set_string(new_fi, value)
  TYPE[15]: CALL
  TOKENIZED[15]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[16]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[16]: CONTROL_STRUCTURE
  TOKENIZED[16]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[17]: type
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: tree
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: hfinfo
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: FT_STRING
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: pi
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: tree
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: hfindex
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: tvb
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: start
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: length
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: new_fi
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: length
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: new_fi
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: value
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: pi
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1

CENTER_NODE: 47244640373
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (bitmask & (1 << bitshift)) == 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 & ( 1 << VAR2 ) ) == 0
  ORIGINAL[1]: bitshift++
  TYPE[1]: CALL
  TOKENIZED[1]: bitshift++
  ORIGINAL[2]: while ((bitmask & (1 << bitshift)) == 0)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( ( VAR1 & ( 1 << VAR2 ) ) == 0 )

CENTER_NODE: 68719479509
FRAGMENT_COUNT: 5
  ORIGINAL[0]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[1]: PTREE_DATA(tree)->count = 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) ->count = 0
  ORIGINAL[2]: THROW_MESSAGE(DissectorError, ep_strdup_printf(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , FUN2 ( \
  ORIGINAL[3]: ep_strdup_printf(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: DissectorError
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773792
FRAGMENT_COUNT: 8
  ORIGINAL[0]: PTREE_FINFO(tree)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: hfinfo->ref_type != HF_REF_TYPE_DIRECT
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->ref_type != VAR1
  ORIGINAL[2]: hfinfo->ref_type
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo->ref_type
  ORIGINAL[3]: ref_type
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hfinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: HF_REF_TYPE_DIRECT
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: hfinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064775450
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &fi->value
  TYPE[0]: CALL
  TOKENIZED[0]: &fi->value
  ORIGINAL[1]: fi->value
  TYPE[1]: CALL
  TOKENIZED[1]: fi->value
  ORIGINAL[2]: value
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719482936
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *f_name   = filter_name
  TYPE[0]: CALL
  TOKENIZED[0]: *f_name = VAR1
  ORIGINAL[1]: f_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: filter_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719482965
FRAGMENT_COUNT: 3
  ORIGINAL[0]: protocol->is_enabled
  TYPE[0]: CALL
  TOKENIZED[0]: protocol->is_enabled
  ORIGINAL[1]: is_enabled
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: protocol
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064777357
FRAGMENT_COUNT: 4
  ORIGINAL[0]: protocol = find_protocol_by_id(proto_id)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: find_protocol_by_id(proto_id)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: protocol
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: proto_id
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772674
FRAGMENT_COUNT: 3
  ORIGINAL[0]: SUBTREE_MAX_LEVELS-SUBTREE_ONCE_ALLOCATION_NUMBER
  TYPE[0]: CALL
  TOKENIZED[0]: SUBTREE_MAX_LEVELS-SUBTREE_ONCE_ALLOCATION_NUMBER
  ORIGINAL[1]: SUBTREE_MAX_LEVELS
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SUBTREE_ONCE_ALLOCATION_NUMBER
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719479779
FRAGMENT_COUNT: 4
  ORIGINAL[0]: bytes = g_byte_array_new()
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( )
  ORIGINAL[1]: length > 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 0
  ORIGINAL[2]: length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719481893
FRAGMENT_COUNT: 6
  ORIGINAL[0]: tfi->tree_type >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: tfi->tree_type >= 0
  ORIGINAL[1]: tfi->tree_type
  TYPE[1]: CALL
  TOKENIZED[1]: tfi->tree_type
  ORIGINAL[2]: tfi->tree_type
  TYPE[2]: CALL
  TOKENIZED[2]: tfi->tree_type
  ORIGINAL[3]: tree_type
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tfi
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tfi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244641607
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 68719479589
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fi->value
  TYPE[0]: CALL
  TOKENIZED[0]: fi->value
  ORIGINAL[1]: value
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719479475
FRAGMENT_COUNT: 6
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(ptvc->tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ptvc->tree , VAR1 , VAR2 )
  ORIGINAL[1]: !ptvc->tree
  TYPE[1]: CALL
  TOKENIZED[1]: !ptvc->tree
  ORIGINAL[2]: (guint)hfindex
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2
  ORIGINAL[3]: gpa_hfinfo.len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> gpa_hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 68719484388
FRAGMENT_COUNT: 2
  ORIGINAL[0]: hfinfo->display & BASE_DISPLAY_E_MASK
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display & VAR1
  ORIGINAL[1]: BASE_HEX
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064777022
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PITEM_FINFO(pi)->flags = (PITEM_FINFO(pi))->flags & ~(PI_SEVERITY_MASK)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->flags = ( FUN1 ( VAR1 ) ) ->flags & ~ ( VAR2 )
  ORIGINAL[1]: (PITEM_FINFO(pi))->flags & ~(PI_SEVERITY_MASK)
  TYPE[1]: CALL
  TOKENIZED[1]: ( FUN1 ( VAR1 ) ) ->flags & ~ ( VAR2 )
  ORIGINAL[2]: (PITEM_FINFO(pi))->flags
  TYPE[2]: CALL
  TOKENIZED[2]: ( FUN1 ( VAR1 ) ) ->flags
  ORIGINAL[3]: ~(PI_SEVERITY_MASK)
  TYPE[3]: CALL
  TOKENIZED[3]: ~ ( VAR1 )

CENTER_NODE: 30064778851
FRAGMENT_COUNT: 6
  ORIGINAL[0]: filter != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: (gulong) (buf_len-(ptr-*filter))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( buf_len- ( ptr-*filter ) )
  ORIGINAL[2]: finfo->start
  TYPE[2]: CALL
  TOKENIZED[2]: finfo->start
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719483794
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hfinfo->type
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type
  ORIGINAL[1]: format = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = \
  ORIGINAL[2]: FT_UINT16
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: format
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064775610
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &fi->value
  TYPE[0]: CALL
  TOKENIZED[0]: &fi->value
  ORIGINAL[1]: fi->value
  TYPE[1]: CALL
  TOKENIZED[1]: fi->value
  ORIGINAL[2]: value
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064776990
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *fi = PITEM_FINFO(pi)
  TYPE[0]: CALL
  TOKENIZED[0]: *fi = FUN1 ( VAR1 )
  ORIGINAL[1]: PITEM_FINFO(pi)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: fi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719484027
FRAGMENT_COUNT: 5
  ORIGINAL[0]: PROTO_REGISTRAR_GET_NTH(n, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: (guint)n
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: n
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: n
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: n
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774839
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fvalue_set(&fi->value, (gpointer) \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &fi->value , ( VAR1 ) \
  ORIGINAL[1]: &fi->value
  TYPE[1]: CALL
  TOKENIZED[1]: &fi->value
  ORIGINAL[2]: (gpointer) \
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) \
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: FALSE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064779520
FRAGMENT_COUNT: 7
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hf_index, hf_field)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: PTREE_DATA(tree)->count
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count
  ORIGINAL[3]: PTREE_DATA(tree)->count
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->count
  ORIGINAL[4]: PTREE_DATA(tree)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: count
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772458
FRAGMENT_COUNT: 3
  ORIGINAL[0]: same_name_hfinfo = (header_field_info*)data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( header_field_info* ) VAR2
  ORIGINAL[1]: (header_field_info*)data
  TYPE[1]: CALL
  TOKENIZED[1]: ( header_field_info* ) VAR1
  ORIGINAL[2]: <global> same_name_hfinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719480308
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: &length
  TYPE[3]: CALL
  TOKENIZED[3]: &length
  ORIGINAL[4]: &new_fi
  TYPE[4]: CALL
  TOKENIZED[4]: &new_fi
  ORIGINAL[5]: new_fi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: new_fi
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719482891
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *cookie
  TYPE[0]: CALL
  TOKENIZED[0]: *cookie
  ORIGINAL[1]: list_item == NULL
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == VAR2
  ORIGINAL[2]: *cookie
  TYPE[2]: CALL
  TOKENIZED[2]: *cookie
  ORIGINAL[3]: cookie
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719479620
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: &length
  TYPE[3]: CALL
  TOKENIZED[3]: &length
  ORIGINAL[4]: start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: length
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: length
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064774889
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: DISSECTOR_ASSERT(hfinfo->type == FT_ETHER)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( hfinfo->type == VAR1 )
  ORIGINAL[4]: hfinfo->type == FT_ETHER
  TYPE[4]: CALL
  TOKENIZED[4]: hfinfo->type == VAR1
  ORIGINAL[5]: pi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719481691
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: proto_tree_add_int64(tree, hfindex, tvb, start, length, value)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[4]: hfindex
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: hfindex
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tvb
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064774416
FRAGMENT_COUNT: 3
  ORIGINAL[0]: DISSECTOR_ASSERT(value_ptr != NULL)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 != VAR2 )
  ORIGINAL[1]: value_ptr != NULL
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: fi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244641604
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 68719484355
FRAGMENT_COUNT: 8
  ORIGINAL[0]: fte = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: fte < FT_NUM_TYPES
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: fte++
  TYPE[2]: CALL
  TOKENIZED[2]: fte++
  ORIGINAL[3]: fte
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fte
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: FT_NUM_TYPES
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: fte
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: fte
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719478780
FRAGMENT_COUNT: 1
  ORIGINAL[0]: FALSE
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719482100
FRAGMENT_COUNT: 5
  ORIGINAL[0]: res = g_strlcpy(dest, src, dest_size)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: g_strlcpy(dest, src, dest_size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: res
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dest
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: res
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774625
FRAGMENT_COUNT: 4
  ORIGINAL[0]: value <<= 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <<= 8
  ORIGINAL[1]: length
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064774790
FRAGMENT_COUNT: 22
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: hfinfo->ref_type != HF_REF_TYPE_DIRECT
  TYPE[3]: CALL
  TOKENIZED[3]: hfinfo->ref_type != VAR1
  ORIGINAL[4]: hfinfo->ref_type
  TYPE[4]: CALL
  TOKENIZED[4]: hfinfo->ref_type
  ORIGINAL[5]: pi = proto_tree_add_string(tree, hfindex, tvb, start, length, value)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 , VAR6 , VAR7 )
  ORIGINAL[6]: proto_tree_add_string(tree, hfindex, tvb, start, length, value)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[7]: pi == NULL
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 == VAR2
  ORIGINAL[8]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[9]: ref_type
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: tree
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: hfinfo
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: HF_REF_TYPE_DIRECT
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: pi
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: tree
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: hfindex
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: tvb
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: start
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: length
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: value
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: pi
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: NULL
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1

CENTER_NODE: 68719482953
FRAGMENT_COUNT: 5
  ORIGINAL[0]: protocol == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: protocol->name
  TYPE[1]: CALL
  TOKENIZED[1]: protocol->name
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: protocol
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: protocol
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774248
FRAGMENT_COUNT: 6
  ORIGINAL[0]: hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type != VAR1 || FUN1 ( VAR2 ) ->fake_protocols
  ORIGINAL[1]: hfinfo->type != FT_PROTOCOL
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->type != VAR1
  ORIGINAL[2]: PTREE_DATA(tree)->fake_protocols
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->fake_protocols
  ORIGINAL[3]: PTREE_DATA(tree)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: PTREE_DATA(tree)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: fake_protocols
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719482748
FRAGMENT_COUNT: 13
  ORIGINAL[0]: !tree || !PTREE_DATA(tree)->visible
  TYPE[0]: CALL
  TOKENIZED[0]: !tree || !PTREE_DATA ( VAR1 ) ->visible
  ORIGINAL[1]: item_to_move->parent
  TYPE[1]: CALL
  TOKENIZED[1]: item_to_move->parent
  ORIGINAL[2]: tree->first_child == item_to_move
  TYPE[2]: CALL
  TOKENIZED[2]: tree->first_child == VAR1
  ORIGINAL[3]: item_to_move->next
  TYPE[3]: CALL
  TOKENIZED[3]: item_to_move->next
  ORIGINAL[4]: DISSECTOR_ASSERT(tree->last_child != item_to_move)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( tree->last_child != VAR1 )
  ORIGINAL[5]: item_to_move->next
  TYPE[5]: CALL
  TOKENIZED[5]: item_to_move->next
  ORIGINAL[6]: tree->last_child == item_to_move
  TYPE[6]: CALL
  TOKENIZED[6]: tree->last_child == VAR1
  ORIGINAL[7]: tree->last_child = curr_item
  TYPE[7]: CALL
  TOKENIZED[7]: tree->last_child = VAR1
  ORIGINAL[8]: item_to_move->next
  TYPE[8]: CALL
  TOKENIZED[8]: item_to_move->next
  ORIGINAL[9]: next
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: item_to_move
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: item_to_move
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: item_to_move
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 47244640448
FRAGMENT_COUNT: 3
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;
  ORIGINAL[1]: length
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719479651
FRAGMENT_COUNT: 7
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: gpa_hfinfo.len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: gpa_hfinfo.hfi
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: hfi
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: <global> gpa_hfinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1

CENTER_NODE: 30064777084
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !ti
  TYPE[0]: CALL
  TOKENIZED[0]: !ti
  ORIGINAL[1]: gen--
  TYPE[1]: CALL
  TOKENIZED[1]: gen--
  ORIGINAL[2]: ti
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: gen
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064778406
FRAGMENT_COUNT: 5
  ORIGINAL[0]: proto_get_first_protocol(&cookie)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &cookie )
  ORIGINAL[1]: &cookie
  TYPE[1]: CALL
  TOKENIZED[1]: &cookie
  ORIGINAL[2]: &cookie
  TYPE[2]: CALL
  TOKENIZED[2]: &cookie
  ORIGINAL[3]: cookie
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cookie
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719485423
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hf_field->ref_type != HF_REF_TYPE_DIRECT) && (hf_field->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hf_field->ref_type != VAR1 ) && ( hf_field->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: ep_strdup_vprintf(format, ap)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: format
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: format
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dst
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: format
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: ap
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064774113
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &fi->value
  TYPE[0]: CALL
  TOKENIZED[0]: &fi->value
  ORIGINAL[1]: fi->value
  TYPE[1]: CALL
  TOKENIZED[1]: fi->value
  ORIGINAL[2]: value
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719480540
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fi->value
  TYPE[0]: CALL
  TOKENIZED[0]: fi->value
  ORIGINAL[1]: value
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773657
FRAGMENT_COUNT: 4
  ORIGINAL[0]: proto_tree_set_bytes(fi, tvb_get_ptr(tvb, offset, length), length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR2 , VAR3 , VAR4 ) , VAR4 )
  ORIGINAL[1]: tvb_get_ptr(tvb, offset, length)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: fi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478733
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hfinfo->type == FT_PROTOCOL
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type == VAR1
  ORIGINAL[1]: PTREE_DATA(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773550
FRAGMENT_COUNT: 12
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: PTREE_DATA(tree)->count
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count
  ORIGINAL[3]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[4]: PTREE_DATA(tree)->count
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 ) ->count
  ORIGINAL[5]: PTREE_DATA(tree)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 )
  ORIGINAL[6]: 1 * 1000 * 1000
  TYPE[6]: CALL
  TOKENIZED[6]: 1 * 1000 * 1000
  ORIGINAL[7]: PTREE_DATA(tree)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 )
  ORIGINAL[8]: PTREE_DATA(tree)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 )
  ORIGINAL[9]: PTREE_DATA(tree)
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 )
  ORIGINAL[10]: PTREE_DATA(tree)
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 )
  ORIGINAL[11]: count
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719484004
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gpa_hfinfo.len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: len
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> gpa_hfinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719484813
FRAGMENT_COUNT: 6
  ORIGINAL[0]: proto_tree_add_item(parent_tree, hf_hdr, tvb, offset, len, encoding)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[1]: parent_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tvb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064775188
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type != VAR1 || FUN1 ( VAR2 ) ->fake_protocols
  ORIGINAL[1]: hfinfo->type != FT_PROTOCOL
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->type != VAR1
  ORIGINAL[2]: PTREE_DATA(tree)->fake_protocols
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->fake_protocols
  ORIGINAL[3]: PTREE_DATA(tree)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: fake_protocols
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774172
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719484797
FRAGMENT_COUNT: 9
  ORIGINAL[0]: hf->bitmask & value
  TYPE[0]: CALL
  TOKENIZED[0]: hf->bitmask & VAR1
  ORIGINAL[1]: first = FALSE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: FALSE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: FALSE
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: FALSE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: FALSE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: FALSE
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: first
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: FALSE
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064776195
FRAGMENT_COUNT: 19
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: !(PTREE_DATA(tree)->visible)
  TYPE[2]: CALL
  TOKENIZED[2]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[3]: PTREE_DATA(tree)->visible
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->visible
  ORIGINAL[4]: PTREE_FINFO(tree)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: pi = proto_tree_add_eui64(tree, hfindex, tvb, start, length, value)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 , VAR6 , VAR7 )
  ORIGINAL[6]: proto_tree_add_eui64(tree, hfindex, tvb, start, length, value)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[7]: pi == NULL
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 == VAR2
  ORIGINAL[8]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[9]: tree
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pi
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: tree
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: hfindex
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: tvb
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: start
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: length
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: value
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: pi
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: NULL
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 68719482655
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (PITEM_FINFO(pi))->flags | (severity)
  TYPE[0]: CALL
  TOKENIZED[0]: ( FUN1 ( VAR1 ) ) ->flags | ( VAR2 )
  ORIGINAL[1]: severity
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719482714
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !tree
  TYPE[0]: CALL
  TOKENIZED[0]: !tree
  ORIGINAL[1]: (proto_item *)tree
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) VAR2
  ORIGINAL[2]: tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244641278
FRAGMENT_COUNT: 9
  ORIGINAL[0]: hfinfo->display
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display
  ORIGINAL[1]: hfinfo->type
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->type
  ORIGINAL[2]: DISSECTOR_ASSERT_NOT_REACHED()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: break;
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: break ;
  ORIGINAL[4]: break;
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: break ;
  ORIGINAL[5]: break;
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: break ;
  ORIGINAL[6]: break;
  TYPE[6]: CONTROL_STRUCTURE
  TOKENIZED[6]: break ;
  ORIGINAL[7]: break;
  TYPE[7]: CONTROL_STRUCTURE
  TOKENIZED[7]: break ;
  ORIGINAL[8]: format
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719485226
FRAGMENT_COUNT: 5
  ORIGINAL[0]: FI_SET_FLAG(PNODE_FINFO(item), FI_BITS_OFFSET(bit_offset))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , FUN3 ( VAR2 ) )
  ORIGINAL[1]: PNODE_FINFO(item)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: item
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: item
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: item
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244641601
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 68719480533
FRAGMENT_COUNT: 6
  ORIGINAL[0]: fvalue_set(&fi->value, bytes, TRUE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &fi->value , VAR1 , VAR2 )
  ORIGINAL[1]: &fi->value
  TYPE[1]: CALL
  TOKENIZED[1]: &fi->value
  ORIGINAL[2]: bytes
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bytes
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bytes
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: TRUE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719482681
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !pi
  TYPE[0]: CALL
  TOKENIZED[0]: !pi
  ORIGINAL[1]: pi
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064778196
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *format = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: *format = VAR1
  ORIGINAL[1]: format
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hfinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773435
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ptvc->offset += length
  TYPE[0]: CALL
  TOKENIZED[0]: ptvc->offset += VAR1
  ORIGINAL[1]: ptvc->offset
  TYPE[1]: CALL
  TOKENIZED[1]: ptvc->offset
  ORIGINAL[2]: offset
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptvc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772743
FRAGMENT_COUNT: 9
  ORIGINAL[0]: ptvc->pushed_tree_index <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ptvc->pushed_tree_index <= 0
  ORIGINAL[1]: ptvc->pushed_tree_index
  TYPE[1]: CALL
  TOKENIZED[1]: ptvc->pushed_tree_index
  ORIGINAL[2]: ptvc->pushed_tree_index--
  TYPE[2]: CALL
  TOKENIZED[2]: ptvc->pushed_tree_index--
  ORIGINAL[3]: ptvc->pushed_tree_index
  TYPE[3]: CALL
  TOKENIZED[3]: ptvc->pushed_tree_index
  ORIGINAL[4]: ptvc->pushed_tree_index
  TYPE[4]: CALL
  TOKENIZED[4]: ptvc->pushed_tree_index
  ORIGINAL[5]: pushed_tree_index
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ptvc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ptvc
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: ptvc
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064777005
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PITEM_FINFO(pi)->flags = (PITEM_FINFO(pi))->flags & ~(PI_GROUP_MASK)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->flags = ( FUN1 ( VAR1 ) ) ->flags & ~ ( VAR2 )
  ORIGINAL[1]: PITEM_FINFO(pi)->flags
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) ->flags
  ORIGINAL[2]: PITEM_FINFO(pi)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: flags
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064775562
FRAGMENT_COUNT: 8
  ORIGINAL[0]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[1]: PTREE_DATA(tree)->count = 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) ->count = 0
  ORIGINAL[2]: PTREE_DATA(tree)->count
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count
  ORIGINAL[3]: PTREE_DATA(tree)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: PTREE_DATA(tree)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: PTREE_DATA(tree)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 )
  ORIGINAL[6]: PTREE_DATA(tree)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 )
  ORIGINAL[7]: count
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064777094
FRAGMENT_COUNT: 9
  ORIGINAL[0]: tree->parent
  TYPE[0]: CALL
  TOKENIZED[0]: tree->parent
  ORIGINAL[1]: tree = tree->parent
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = tree->parent
  ORIGINAL[2]: tree->parent
  TYPE[2]: CALL
  TOKENIZED[2]: tree->parent
  ORIGINAL[3]: parent
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tree
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tree
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719484057
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !tree
  TYPE[0]: CALL
  TOKENIZED[0]: !tree
  ORIGINAL[1]: tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064775222
FRAGMENT_COUNT: 6
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: hfinfo = gpa_hfinfo.hfi[hfindex]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[3]: gpa_hfinfo.hfi[hfindex]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2 [ VAR3 ]
  ORIGINAL[4]: hfinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640952
FRAGMENT_COUNT: 2
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else
  ORIGINAL[1]: encoding
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719479061
FRAGMENT_COUNT: 4
  ORIGINAL[0]: length
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: encoding
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064774355
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: pi = proto_tree_add_guid(tree, hfindex, tvb, start, length, value_ptr)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 , VAR6 , VAR7 )
  ORIGINAL[4]: proto_tree_add_guid(tree, hfindex, tvb, start, length, value_ptr)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[5]: pi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pi
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719481120
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fi->value
  TYPE[0]: CALL
  TOKENIZED[0]: fi->value
  ORIGINAL[1]: value
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064776283
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !tree
  TYPE[0]: CALL
  TOKENIZED[0]: !tree
  ORIGINAL[1]: fi = alloc_field_info(tree, hfindex, tvb, start, length)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[2]: alloc_field_info(tree, hfindex, tvb, start, length)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[3]: fi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pi
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719481473
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[0]: CALL
  TOKENIZED[0]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[1]: tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719484023
FRAGMENT_COUNT: 5
  ORIGINAL[0]: gpa_hfinfo.len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: gpa_hfinfo.hfi
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: hfi
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hfinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> gpa_hfinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 68719481519
FRAGMENT_COUNT: 2
  ORIGINAL[0]: hfinfo->type
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type
  ORIGINAL[1]: FT_INT8
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064775941
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[1]: ep_strdup_printf(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: 1 * 1000 * 1000
  TYPE[2]: CALL
  TOKENIZED[2]: 1 * 1000 * 1000
  ORIGINAL[3]: 1 * 1000
  TYPE[3]: CALL
  TOKENIZED[3]: 1 * 1000

CENTER_NODE: 68719481178
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: proto_tree_add_double(tree, hfindex, tvb, start, length, value)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[4]: hfindex
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: hfindex
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tvb
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719480878
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (gpointer) value
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) VAR2
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719483632
FRAGMENT_COUNT: 6
  ORIGINAL[0]: IS_BASE_DUAL(hfinfo->display)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( hfinfo->display )
  ORIGINAL[1]: hfinfo->name
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->name
  ORIGINAL[2]: label_str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ITEM_LABEL_LENGTH
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: format
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: value
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064775420
FRAGMENT_COUNT: 7
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: (guint)hfindex < gpa_hfinfo.len
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2 < VAR3 . VAR4
  ORIGINAL[3]: (guint)hfindex
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) VAR2
  ORIGINAL[4]: gpa_hfinfo.len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: hfindex
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: <global> gpa_hfinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1

CENTER_NODE: 68719482625
FRAGMENT_COUNT: 7
  ORIGINAL[0]: fi == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: fi->start
  TYPE[1]: CALL
  TOKENIZED[1]: fi->start
  ORIGINAL[2]: fi->start
  TYPE[2]: CALL
  TOKENIZED[2]: fi->start
  ORIGINAL[3]: start
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fi
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: end
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: fi
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064777293
FRAGMENT_COUNT: 5
  ORIGINAL[0]: list_item == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: *cookie = list_item
  TYPE[1]: CALL
  TOKENIZED[1]: *cookie = VAR1
  ORIGINAL[2]: *cookie
  TYPE[2]: CALL
  TOKENIZED[2]: *cookie
  ORIGINAL[3]: cookie
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: list_item
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244641341
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hfinfo->type
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type
  ORIGINAL[1]: format = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = \
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: break;
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: break ;

CENTER_NODE: 30064773611
FRAGMENT_COUNT: 8
  ORIGINAL[0]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[1]: PTREE_DATA(tree)->count = 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) ->count = 0
  ORIGINAL[2]: PTREE_DATA(tree)->count
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count
  ORIGINAL[3]: PTREE_DATA(tree)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: PTREE_DATA(tree)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: PTREE_DATA(tree)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 )
  ORIGINAL[6]: PTREE_DATA(tree)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 )
  ORIGINAL[7]: count
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719480946
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: pi == NULL
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == VAR2
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: NULL
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: NULL
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719483927
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hfinfo->type
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type
  ORIGINAL[1]: format = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = \
  ORIGINAL[2]: FT_INT8
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: format
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772581
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PTREE_DATA(tree)->fake_protocols
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->fake_protocols
  ORIGINAL[1]: PTREE_DATA(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: fake_protocols
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719480452
FRAGMENT_COUNT: 7
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: gpa_hfinfo.len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: gpa_hfinfo.hfi
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: hfi
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: <global> gpa_hfinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1

CENTER_NODE: 30064774267
FRAGMENT_COUNT: 3
  ORIGINAL[0]: proto_tree_set_ipv6(fi, tvb_get_ptr(tvb, start, length))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR2 , VAR3 , VAR4 ) )
  ORIGINAL[1]: tvb_get_ptr(tvb, start, length)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: fi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064776393
FRAGMENT_COUNT: 6
  ORIGINAL[0]: new_field_info(tree, hfinfo, tvb, start, item_length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: hfinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: item_length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640407
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !ptvc
  TYPE[0]: CALL
  TOKENIZED[0]: !ptvc

CENTER_NODE: 30064775297
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: va_end(ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064779062
FRAGMENT_COUNT: 6
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hf_index, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[3]: PTREE_DATA(tree)->count
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->count
  ORIGINAL[4]: 1 * 1000 * 1000
  TYPE[4]: CALL
  TOKENIZED[4]: 1 * 1000 * 1000
  ORIGINAL[5]: 1 * 1000
  TYPE[5]: CALL
  TOKENIZED[5]: 1 * 1000

CENTER_NODE: 68719481126
FRAGMENT_COUNT: 8
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: PTREE_DATA(tree)->count++
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count++
  ORIGINAL[3]: PTREE_DATA(tree)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tree
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064778368
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ffdata.array
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: ffdata.array
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: array
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ffdata
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ffdata
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478839
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ptvcursor_free_subtree_levels(ptvc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: ptvc
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064776311
FRAGMENT_COUNT: 8
  ORIGINAL[0]: hfinfo->type
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type
  ORIGINAL[1]: *length = tvb_length_remaining(tvb, start)
  TYPE[1]: CALL
  TOKENIZED[1]: *length = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: *length
  TYPE[2]: CALL
  TOKENIZED[2]: *length
  ORIGINAL[3]: tvb_length_remaining(tvb, start)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: *length
  TYPE[4]: CALL
  TOKENIZED[4]: *length
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tvb
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: length
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064777331
FRAGMENT_COUNT: 6
  ORIGINAL[0]: protocol == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: protocol->name
  TYPE[1]: CALL
  TOKENIZED[1]: protocol->name
  ORIGINAL[2]: name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: protocol
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: protocol
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064778120
FRAGMENT_COUNT: 6
  ORIGINAL[0]: hfinfo->display & BASE_DISPLAY_E_MASK
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display & VAR1
  ORIGINAL[1]: hfinfo->display
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->display
  ORIGINAL[2]: display
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hfinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: BASE_DISPLAY_E_MASK
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719484049
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *ptrs = proto_get_finfo_ptr_array(tree, id)
  TYPE[0]: CALL
  TOKENIZED[0]: *ptrs = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: proto_get_finfo_ptr_array(tree, id)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: ptrs
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptrs
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719481624
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (guint32) value
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) VAR2
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719482287
FRAGMENT_COUNT: 24
  ORIGINAL[0]: hfinfo->display & BASE_EXT_STRING
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display & VAR1
  ORIGINAL[1]: val_to_str(u_integer, cVALS(hfinfo->strings), \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , FUN2 ( hfinfo->strings ) , \
  ORIGINAL[2]: size-offset_r
  TYPE[2]: CALL
  TOKENIZED[2]: size-offset_r
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: size
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: size
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: size
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: size
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: offset_r
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: size
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: size
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: size
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: size
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: size
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: size
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: size
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: size
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: size
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: size
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: size
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: size
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1

CENTER_NODE: 68719483479
FRAGMENT_COUNT: 9
  ORIGINAL[0]: hfinfo->bitmask
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->bitmask
  ORIGINAL[1]: decode_bitfield_value(label_str, unshifted_value, hfinfo->bitmask, bitwidth)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , hfinfo->bitmask , VAR3 )
  ORIGINAL[2]: hfinfo->bitmask
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo->bitmask
  ORIGINAL[3]: unshifted_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: unshifted_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: label_str
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: unshifted_value
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: hfinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: bitwidth
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064772780
FRAGMENT_COUNT: 7
  ORIGINAL[0]: it = ptvcursor_add_no_advance(ptvc, hfindex, length, encoding)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: ptvcursor_add_no_advance(ptvc, hfindex, length, encoding)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: it
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptvc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hfindex
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: encoding
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719479033
FRAGMENT_COUNT: 5
  ORIGINAL[0]: va_start(ap, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: pi
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479957
FRAGMENT_COUNT: 6
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: (guint)hfindex
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2
  ORIGINAL[3]: gpa_hfinfo.len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> gpa_hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 68719482647
FRAGMENT_COUNT: 6
  ORIGINAL[0]: severity >= FI_GET_FLAG(PITEM_FINFO(pi), PI_SEVERITY_MASK)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= FUN1 ( FUN2 ( VAR2 ) , VAR3 )
  ORIGINAL[1]: FI_REPLACE_FLAGS(PITEM_FINFO(pi), PI_GROUP_MASK, group)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR3 )
  ORIGINAL[2]: PITEM_FINFO(pi)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: pi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: group
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719483291
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < num_indices
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: ptr++
  TYPE[2]: CALL
  TOKENIZED[2]: ptr++
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064775475
FRAGMENT_COUNT: 8
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: (guint)hfindex < gpa_hfinfo.len
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2 < VAR3 . VAR4
  ORIGINAL[3]: (guint)hfindex
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) VAR2
  ORIGINAL[4]: gpa_hfinfo.len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: len
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: <global> gpa_hfinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: <global> gpa_hfinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: <global> VAR1

CENTER_NODE: 68719482598
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pi == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: pi
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772452
FRAGMENT_COUNT: 3
  ORIGINAL[0]: rohc_cmp_lst_mask_size_vals = { \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { \
  ORIGINAL[1]: { \
  TYPE[1]: CALL
  TOKENIZED[1]: { \
  ORIGINAL[2]: rohc_cmp_lst_mask_size_vals
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064778276
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hfinfo->abbrev
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->abbrev
  ORIGINAL[1]: abbrev
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: hfinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: hfinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771774
FRAGMENT_COUNT: 5
  ORIGINAL[0]: p_rohc_info->large_cid_present == FALSE
  TYPE[0]: CALL
  TOKENIZED[0]: p_rohc_info->large_cid_present == VAR1
  ORIGINAL[1]: feedback_data_len = feedback_data_len - val_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 - VAR2
  ORIGINAL[2]: feedback_data_len - val_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - VAR2
  ORIGINAL[3]: feedback_data_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tvb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064775871
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[1]: PTREE_DATA(tree)->count = 0
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) ->count = 0
  ORIGINAL[2]: PTREE_DATA(tree)->count
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count
  ORIGINAL[3]: DissectorError
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719481870
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fvalue_set_integer64(&fi->value, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &fi->value , VAR1 )
  ORIGINAL[1]: &fi->value
  TYPE[1]: CALL
  TOKENIZED[1]: &fi->value
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719483871
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hfinfo->display & BASE_DISPLAY_E_MASK
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display & VAR1
  ORIGINAL[1]: format = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = \
  ORIGINAL[2]: BASE_DEC_HEX
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: format
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771885
FRAGMENT_COUNT: 3
  ORIGINAL[0]: v == v2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: v
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: v2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772606
FRAGMENT_COUNT: 7
  ORIGINAL[0]: PROTO_REGISTRAR_GET_NTH(hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: (guint)hfindex < gpa_hfinfo.len
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2 < VAR3 . VAR4
  ORIGINAL[2]: (guint)hfindex
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2
  ORIGINAL[3]: gpa_hfinfo.len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> gpa_hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: <global> gpa_hfinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1

CENTER_NODE: 68719483744
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hfinfo->type
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type
  ORIGINAL[1]: bitwidth = 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 8
  ORIGINAL[2]: FT_INT8
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bitwidth
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bitwidth
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064775125
FRAGMENT_COUNT: 7
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: hfinfo = gpa_hfinfo.hfi[hfindex]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[3]: gpa_hfinfo.hfi[hfindex]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2 [ VAR3 ]
  ORIGINAL[4]: gpa_hfinfo.hfi
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: hfindex
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719482765
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fi == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: DISSECTOR_ASSERT(start >= 0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 >= 0 )
  ORIGINAL[2]: length >= 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >= 0
  ORIGINAL[3]: length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719483516
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hfinfo->display == BASE_CUSTOM
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display == VAR1
  ORIGINAL[1]: tmp[ITEM_LABEL_LENGTH]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: tmp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ITEM_LABEL_LENGTH
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ITEM_LABEL_LENGTH
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719483678
FRAGMENT_COUNT: 24
  ORIGINAL[0]: hfinfo->display
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display
  ORIGINAL[1]: hfinfo->strings
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->strings
  ORIGINAL[2]: hfinfo_int_vals_format(hfinfo)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: hfinfo->display
  TYPE[3]: CALL
  TOKENIZED[3]: hfinfo->display
  ORIGINAL[4]: hfinfo->name
  TYPE[4]: CALL
  TOKENIZED[4]: hfinfo->name
  ORIGINAL[5]: hfinfo->strings
  TYPE[5]: CALL
  TOKENIZED[5]: hfinfo->strings
  ORIGINAL[6]: hfinfo->display
  TYPE[6]: CALL
  TOKENIZED[6]: hfinfo->display
  ORIGINAL[7]: hfinfo->name
  TYPE[7]: CALL
  TOKENIZED[7]: hfinfo->name
  ORIGINAL[8]: hfinfo->strings
  TYPE[8]: CALL
  TOKENIZED[8]: hfinfo->strings
  ORIGINAL[9]: hfinfo->name
  TYPE[9]: CALL
  TOKENIZED[9]: hfinfo->name
  ORIGINAL[10]: hfinfo->strings
  TYPE[10]: CALL
  TOKENIZED[10]: hfinfo->strings
  ORIGINAL[11]: hfinfo->strings
  TYPE[11]: CALL
  TOKENIZED[11]: hfinfo->strings
  ORIGINAL[12]: hfinfo
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: format
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: hfinfo
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: hfinfo
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: hfinfo
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: hfinfo
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: hfinfo
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: hfinfo
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: hfinfo
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: hfinfo
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: hfinfo
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: hfinfo
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1

CENTER_NODE: 68719484065
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !tree
  TYPE[0]: CALL
  TOKENIZED[0]: !tree
  ORIGINAL[1]: FALSE
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719483999
FRAGMENT_COUNT: 3
  ORIGINAL[0]: hfinfo->display
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display
  ORIGINAL[1]: BASE_HEX_DEC
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719480125
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PTREE_FINFO(tree)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: hfinfo->ref_type != HF_REF_TYPE_DIRECT
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->ref_type != VAR1
  ORIGINAL[2]: hfinfo->ref_type
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo->ref_type
  ORIGINAL[3]: HF_REF_TYPE_DIRECT
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719479101
FRAGMENT_COUNT: 3
  ORIGINAL[0]: hfinfo->ref_type == HF_REF_TYPE_DIRECT
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->ref_type == VAR1
  ORIGINAL[1]: hfinfo->ref_type
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->ref_type
  ORIGINAL[2]: HF_REF_TYPE_DIRECT
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719480273
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (gpointer) value_ptr
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) VAR2
  ORIGINAL[1]: value_ptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value_ptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064774016
FRAGMENT_COUNT: 19
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[3]: PTREE_DATA(tree)->count
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->count
  ORIGINAL[4]: 1 * 1000 * 1000
  TYPE[4]: CALL
  TOKENIZED[4]: 1 * 1000 * 1000
  ORIGINAL[5]: getenv(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: getenv(\
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( \
  ORIGINAL[7]: PTREE_DATA(tree)->count = 0
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 ) ->count = 0
  ORIGINAL[8]: PTREE_DATA(tree)->count
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 ) ->count
  ORIGINAL[9]: PTREE_DATA(tree)
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 )
  ORIGINAL[10]: THROW_MESSAGE(DissectorError, ep_strdup_printf(\
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 , FUN2 ( \
  ORIGINAL[11]: ep_strdup_printf(\
  TYPE[11]: CALL
  TOKENIZED[11]: FUN1 ( \
  ORIGINAL[12]: 1 * 1000 * 1000
  TYPE[12]: CALL
  TOKENIZED[12]: 1 * 1000 * 1000
  ORIGINAL[13]: 1 * 1000
  TYPE[13]: CALL
  TOKENIZED[13]: 1 * 1000
  ORIGINAL[14]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[14]: CONTROL_STRUCTURE
  TOKENIZED[14]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[15]: count
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: NULL
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: tree
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: DissectorError
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 30064777390
FRAGMENT_COUNT: 6
  ORIGINAL[0]: proto->fields == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: proto->fields == VAR1
  ORIGINAL[1]: g_list_append(proto->last_field, ptr)->next
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( proto->last_field , VAR1 ) ->next
  ORIGINAL[2]: g_list_append(proto->last_field, ptr)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( proto->last_field , VAR1 )
  ORIGINAL[3]: proto->last_field
  TYPE[3]: CALL
  TOKENIZED[3]: proto->last_field
  ORIGINAL[4]: next
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064774572
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: va_end(ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719484647
FRAGMENT_COUNT: 4
  ORIGINAL[0]: construct_match_selected_string(finfo, edt, NULL)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: finfo
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: edt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244641603
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 47244641606
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 47244640685
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PTREE_FINFO(tree)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )

CENTER_NODE: 68719478877
FRAGMENT_COUNT: 5
  ORIGINAL[0]: subtree                = ptvc->pushed_tree + ptvc->pushed_tree_index - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ptvc->pushed_tree + ptvc->pushed_tree_index - 1
  ORIGINAL[1]: subtree->it
  TYPE[1]: CALL
  TOKENIZED[1]: subtree->it
  ORIGINAL[2]: it
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subtree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subtree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774738
FRAGMENT_COUNT: 9
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: !(PTREE_DATA(tree)->visible)
  TYPE[2]: CALL
  TOKENIZED[2]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[3]: PTREE_DATA(tree)->visible
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->visible
  ORIGINAL[4]: PTREE_DATA(tree)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: PTREE_DATA(tree)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 )
  ORIGINAL[6]: PTREE_DATA(tree)->visible
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 ) ->visible
  ORIGINAL[7]: PTREE_DATA(tree)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 )
  ORIGINAL[8]: visible
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719480754
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tvb_get_ephemeral_string_enc(tvb, start, length, encoding)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: tvb
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: string
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: length
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: encoding
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719484082
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ffdata.array
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: ffdata.id
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: proto_tree_traverse_pre_order(tree, find_finfo, &ffdata)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , &ffdata )
  ORIGINAL[3]: &ffdata
  TYPE[3]: CALL
  TOKENIZED[3]: &ffdata
  ORIGINAL[4]: ffdata.array
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: array
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ffdata
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ffdata
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719479915
FRAGMENT_COUNT: 4
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478840
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ptvc->tvb
  TYPE[0]: CALL
  TOKENIZED[0]: ptvc->tvb
  ORIGINAL[1]: tvb
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ptvc
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478882
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ptvc->tree
  TYPE[0]: CALL
  TOKENIZED[0]: ptvc->tree
  ORIGINAL[1]: proto_item_add_subtree(it, ett_subtree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: it
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ett_subtree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064778095
FRAGMENT_COUNT: 4
  ORIGINAL[0]: format = hfinfo_int64_format(hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: hfinfo_int64_format(hfinfo)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064777317
FRAGMENT_COUNT: 3
  ORIGINAL[0]: protocol->proto_id
  TYPE[0]: CALL
  TOKENIZED[0]: protocol->proto_id
  ORIGINAL[1]: proto_id
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: protocol
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064777014
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PITEM_FINFO(pi)->flags = (PITEM_FINFO(pi))->flags | (group)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->flags = ( FUN1 ( VAR1 ) ) ->flags | ( VAR2 )
  ORIGINAL[1]: (PITEM_FINFO(pi))->flags | (group)
  TYPE[1]: CALL
  TOKENIZED[1]: ( FUN1 ( VAR1 ) ) ->flags | ( VAR2 )
  ORIGINAL[2]: (PITEM_FINFO(pi))->flags
  TYPE[2]: CALL
  TOKENIZED[2]: ( FUN1 ( VAR1 ) ) ->flags
  ORIGINAL[3]: group
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719485342
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tree
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: hf_index
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tvb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478841
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ptvc->offset
  TYPE[0]: CALL
  TOKENIZED[0]: ptvc->offset
  ORIGINAL[1]: offset
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ptvc
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064776037
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[1]: THROW_MESSAGE(DissectorError, ep_strdup_printf(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , FUN2 ( \
  ORIGINAL[2]: ep_strdup_printf(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: DissectorError
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064777875
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hfinfo->type
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->type
  ORIGINAL[1]: g_error(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: DISSECTOR_ASSERT_NOT_REACHED()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: break;
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: break ;

CENTER_NODE: 68719484095
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *fi        = PNODE_FINFO(node)
  TYPE[0]: CALL
  TOKENIZED[0]: *fi = FUN1 ( VAR1 )
  ORIGINAL[1]: PNODE_FINFO(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: fi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fi
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719480425
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hfinfo->ref_type != HF_REF_TYPE_DIRECT
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->ref_type != VAR1
  ORIGINAL[1]: hfinfo->type != FT_PROTOCOL
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->type != VAR1
  ORIGINAL[2]: hfinfo->type
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo->type
  ORIGINAL[3]: FT_PROTOCOL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064779388
FRAGMENT_COUNT: 5
  ORIGINAL[0]: PROTO_REGISTRAR_GET_NTH(hf_index, hf_info)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: DISSECTOR_ASSERT((guint)hf_index < gpa_hfinfo.len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 ) VAR2 < VAR3 . VAR4 )
  ORIGINAL[2]: (guint)hf_index < gpa_hfinfo.len
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2 < VAR3 . VAR4
  ORIGINAL[3]: (guint)hf_index
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) VAR2
  ORIGINAL[4]: gpa_hfinfo.len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2

CENTER_NODE: 30064773811
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fvalue_set(&fi->value, value_ptr, FALSE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &fi->value , VAR1 , VAR2 )
  ORIGINAL[1]: &fi->value
  TYPE[1]: CALL
  TOKENIZED[1]: &fi->value
  ORIGINAL[2]: value_ptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: FALSE
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719481001
FRAGMENT_COUNT: 3
  ORIGINAL[0]: proto_tree_set_uint(fi, value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: fi
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640395
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773970
FRAGMENT_COUNT: 11
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: PTREE_DATA(tree)->count
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->count
  ORIGINAL[3]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[4]: PTREE_DATA(tree)->count
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 ) ->count
  ORIGINAL[5]: PTREE_DATA(tree)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 )
  ORIGINAL[6]: 1 * 1000 * 1000
  TYPE[6]: CALL
  TOKENIZED[6]: 1 * 1000 * 1000
  ORIGINAL[7]: PTREE_DATA(tree)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 )
  ORIGINAL[8]: PTREE_DATA(tree)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 )
  ORIGINAL[9]: PTREE_DATA(tree)
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 )
  ORIGINAL[10]: count
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064779674
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PTREE_DATA(tree)->count > (1 * 1000 * 1000)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->count > ( 1 * 1000 * 1000 )
  ORIGINAL[1]: THROW_MESSAGE(DissectorError, ep_strdup_printf(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , FUN2 ( \
  ORIGINAL[2]: ep_strdup_printf(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: DissectorError
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719482973
FRAGMENT_COUNT: 3
  ORIGINAL[0]: protocol->is_enabled = enabled
  TYPE[0]: CALL
  TOKENIZED[0]: protocol->is_enabled = VAR1
  ORIGINAL[1]: protocol->is_enabled
  TYPE[1]: CALL
  TOKENIZED[1]: protocol->is_enabled
  ORIGINAL[2]: enabled
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244641602
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 68719481782
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: pi = proto_tree_add_pi(tree, hfindex, tvb, start, &length, &new_fi)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , VAR5 , &length , &new_fi )
  ORIGINAL[4]: &new_fi
  TYPE[4]: CALL
  TOKENIZED[4]: &new_fi
  ORIGINAL[5]: proto_tree_set_eui64(new_fi, value)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[6]: new_fi
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: new_fi
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: value
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719484416
FRAGMENT_COUNT: 2
  ORIGINAL[0]: hfinfo->display & BASE_DISPLAY_E_MASK
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display & VAR1
  ORIGINAL[1]: BASE_DEC
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719482703
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !ti
  TYPE[0]: CALL
  TOKENIZED[0]: !ti
  ORIGINAL[1]: ti->parent
  TYPE[1]: CALL
  TOKENIZED[1]: ti->parent
  ORIGINAL[2]: parent
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ti
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ti
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719485536
FRAGMENT_COUNT: 2
  ORIGINAL[0]: <global> fld_abbrev_chars
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: <global> VAR1
  ORIGINAL[1]: fld_abbrev_chars
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064778302
FRAGMENT_COUNT: 5
  ORIGINAL[0]: gpa_hfinfo.hfi[n]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 [ VAR3 ]
  ORIGINAL[1]: gpa_hfinfo.hfi
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: hfi
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> gpa_hfinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: n
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478823
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ptvc->pushed_tree       = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: ptvc->pushed_tree = VAR1
  ORIGINAL[1]: ptvc->pushed_tree
  TYPE[1]: CALL
  TOKENIZED[1]: ptvc->pushed_tree
  ORIGINAL[2]: ptvc->pushed_tree_max
  TYPE[2]: CALL
  TOKENIZED[2]: ptvc->pushed_tree_max
  ORIGINAL[3]: pushed_tree_max
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptvc
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064775646
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[0]: CALL
  TOKENIZED[0]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[1]: hfinfo->ref_type != HF_REF_TYPE_DIRECT
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->ref_type != VAR1
  ORIGINAL[2]: hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo->type != VAR1 || FUN1 ( VAR2 ) ->fake_protocols
  ORIGINAL[3]: hfinfo->type != FT_PROTOCOL
  TYPE[3]: CALL
  TOKENIZED[3]: hfinfo->type != VAR1
  ORIGINAL[4]: PTREE_DATA(tree)->fake_protocols
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 ) ->fake_protocols

CENTER_NODE: 30064777247
FRAGMENT_COUNT: 6
  ORIGINAL[0]: protocol->is_private = TRUE
  TYPE[0]: CALL
  TOKENIZED[0]: protocol->is_private = VAR1
  ORIGINAL[1]: protocol->is_private
  TYPE[1]: CALL
  TOKENIZED[1]: protocol->is_private
  ORIGINAL[2]: is_private
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: protocol
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: protocol
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: TRUE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064777330
FRAGMENT_COUNT: 5
  ORIGINAL[0]: protocol == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: protocol->short_name
  TYPE[1]: CALL
  TOKENIZED[1]: protocol->short_name
  ORIGINAL[2]: short_name
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: protocol
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: protocol
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719480730
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !*str
  TYPE[0]: CALL
  TOKENIZED[0]: !*str
  ORIGINAL[1]: hfinfo->type == FT_PROTOCOL
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->type == VAR1
  ORIGINAL[2]: hfinfo->type
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo->type
  ORIGINAL[3]: FT_PROTOCOL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478838
FRAGMENT_COUNT: 9
  ORIGINAL[0]: ptvc->tree
  TYPE[0]: CALL
  TOKENIZED[0]: ptvc->tree
  ORIGINAL[1]: ptvc->tvb
  TYPE[1]: CALL
  TOKENIZED[1]: ptvc->tvb
  ORIGINAL[2]: ptvc->offset
  TYPE[2]: CALL
  TOKENIZED[2]: ptvc->offset
  ORIGINAL[3]: ptvc->pushed_tree
  TYPE[3]: CALL
  TOKENIZED[3]: ptvc->pushed_tree
  ORIGINAL[4]: ptvc->pushed_tree_max
  TYPE[4]: CALL
  TOKENIZED[4]: ptvc->pushed_tree_max
  ORIGINAL[5]: ptvc->pushed_tree_index = 0
  TYPE[5]: CALL
  TOKENIZED[5]: ptvc->pushed_tree_index = 0
  ORIGINAL[6]: ptvc->pushed_tree_index
  TYPE[6]: CALL
  TOKENIZED[6]: ptvc->pushed_tree_index
  ORIGINAL[7]: ptvc
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: ptvc
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064774938
FRAGMENT_COUNT: 14
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: pi == NULL
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == VAR2
  ORIGINAL[4]: TRY_TO_FAKE_THIS_REPR(tree, pi)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: !(PTREE_DATA(tree)->visible)
  TYPE[5]: CALL
  TOKENIZED[5]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[6]: PTREE_DATA(tree)->visible
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 ) ->visible
  ORIGINAL[7]: PTREE_DATA(tree)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 )
  ORIGINAL[8]: visible
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pi
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: NULL
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: NULL
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: tree
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: tree
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064778265
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hfinfo = gpa_hfinfo.hfi[n]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[1]: gpa_hfinfo.hfi[n]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 [ VAR3 ]
  ORIGINAL[2]: gpa_hfinfo.hfi
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: hfinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: n
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719481567
FRAGMENT_COUNT: 5
  ORIGINAL[0]: TRY_TO_FAKE_THIS_REPR(tree, pi)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: DISSECTOR_ASSERT(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064777622
FRAGMENT_COUNT: 6
  ORIGINAL[0]: hfinfo->bitmask != 0
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->bitmask != 0
  ORIGINAL[1]: g_error(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: hfinfo->name
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo->name
  ORIGINAL[3]: hfinfo->abbrev
  TYPE[3]: CALL
  TOKENIZED[3]: hfinfo->abbrev
  ORIGINAL[4]: val_to_str(hfinfo->type, hf_types, \
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( hfinfo->type , VAR1 , \
  ORIGINAL[5]: hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719484118
FRAGMENT_COUNT: 6
  ORIGINAL[0]: offsearch.offset
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: offsearch.finfo  = NULL
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = VAR3
  ORIGINAL[2]: offsearch.finfo
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: offsearch.tvb
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2
  ORIGINAL[4]: tvb
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offsearch
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772735
FRAGMENT_COUNT: 4
  ORIGINAL[0]: subtree->it= NULL
  TYPE[0]: CALL
  TOKENIZED[0]: subtree->it= VAR1
  ORIGINAL[1]: subtree->it
  TYPE[1]: CALL
  TOKENIZED[1]: subtree->it
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptvc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064774423
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tvb_get_guid(tvb, start, &guid, encoding)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , &guid , VAR3 )
  ORIGINAL[1]: &guid
  TYPE[1]: CALL
  TOKENIZED[1]: &guid
  ORIGINAL[2]: &guid
  TYPE[2]: CALL
  TOKENIZED[2]: &guid
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: guid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: encoding
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: guid
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719482884
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *protocol = list_item->data
  TYPE[0]: CALL
  TOKENIZED[0]: *protocol = list_item->data
  ORIGINAL[1]: protocol->proto_id
  TYPE[1]: CALL
  TOKENIZED[1]: protocol->proto_id
  ORIGINAL[2]: proto_id
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: protocol
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: protocol
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719484188
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hfinfo->display & BASE_EXT_STRING
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->display & VAR1
  ORIGINAL[1]: hfinfo->display & BASE_RANGE_STRING
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->display & VAR1
  ORIGINAL[2]: hfinfo->display
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo->display
  ORIGINAL[3]: BASE_RANGE_STRING
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064779202
FRAGMENT_COUNT: 5
  ORIGINAL[0]: hf_field->type
  TYPE[0]: CALL
  TOKENIZED[0]: hf_field->type
  ORIGINAL[1]: fill_label_int(PITEM_FINFO(pi), lbl_str)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( VAR1 ) , VAR2 )
  ORIGINAL[2]: PITEM_FINFO(pi)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: pi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: lbl_str
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478845
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ptvc->tree
  TYPE[0]: CALL
  TOKENIZED[0]: ptvc->tree
  ORIGINAL[1]: tree
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ptvc
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772031
FRAGMENT_COUNT: 2
  ORIGINAL[0]: &hf_rohc_dynamic_udp_checksum
  TYPE[0]: CALL
  TOKENIZED[0]: &hf_rohc_dynamic_udp_checksum
  ORIGINAL[1]: <global> hf_rohc_dynamic_udp_checksum
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719484841
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parent_tree
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ett
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fields
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773747
FRAGMENT_COUNT: 8
  ORIGINAL[0]: PTREE_DATA(tree)->count
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ->count
  ORIGINAL[1]: PTREE_DATA(tree)->count
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) ->count
  ORIGINAL[2]: PTREE_DATA(tree)->visible
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) ->visible
  ORIGINAL[3]: hfinfo->type != FT_PROTOCOL
  TYPE[3]: CALL
  TOKENIZED[3]: hfinfo->type != VAR1
  ORIGINAL[4]: PTREE_DATA(tree)->fake_protocols
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 ) ->fake_protocols
  ORIGINAL[5]: PTREE_DATA(tree)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 )
  ORIGINAL[6]: fake_protocols
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tree
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719480539
FRAGMENT_COUNT: 4
  ORIGINAL[0]: proto_tree_set_oid(fi, tvb_get_ptr(tvb, start, length), length)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , FUN2 ( VAR2 , VAR3 , VAR4 ) , VAR4 )
  ORIGINAL[1]: tvb_get_ptr(tvb, start, length)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773963
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &fi->value
  TYPE[0]: CALL
  TOKENIZED[0]: &fi->value
  ORIGINAL[1]: fi->value
  TYPE[1]: CALL
  TOKENIZED[1]: fi->value
  ORIGINAL[2]: value
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719481451
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: proto_tree_set_representation_value(pi, format, ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: va_end(ap)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719482842
FRAGMENT_COUNT: 6
  ORIGINAL[0]: hfinfo->name = name
  TYPE[0]: CALL
  TOKENIZED[0]: hfinfo->name = VAR1
  ORIGINAL[1]: hfinfo->name
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->name
  ORIGINAL[2]: hfinfo->abbrev
  TYPE[2]: CALL
  TOKENIZED[2]: hfinfo->abbrev
  ORIGINAL[3]: abbrev
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hfinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hfinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244641605
FRAGMENT_COUNT: 1
  ORIGINAL[0]: break;
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: break ;

CENTER_NODE: 68719482967
FRAGMENT_COUNT: 3
  ORIGINAL[0]: find_protocol_by_id(proto_id)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: protocol
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: proto_id
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719480906
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: PTREE_FINFO(tree)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (hfinfo->ref_type != HF_REF_TYPE_DIRECT) && (hfinfo->type != FT_PROTOCOL || PTREE_DATA(tree)->fake_protocols)
  TYPE[2]: CALL
  TOKENIZED[2]: ( hfinfo->ref_type != VAR1 ) && ( hfinfo->type != VAR2 || FUN1 ( VAR3 ) ->fake_protocols )
  ORIGINAL[3]: hfinfo->type == FT_BOOLEAN
  TYPE[3]: CALL
  TOKENIZED[3]: hfinfo->type == VAR1
  ORIGINAL[4]: hfinfo->type
  TYPE[4]: CALL
  TOKENIZED[4]: hfinfo->type
  ORIGINAL[5]: FT_BOOLEAN
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064777250
FRAGMENT_COUNT: 5
  ORIGINAL[0]: protocol->is_private
  TYPE[0]: CALL
  TOKENIZED[0]: protocol->is_private
  ORIGINAL[1]: is_private
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: protocol
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: protocol
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: protocol
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244641108
FRAGMENT_COUNT: 1
  ORIGINAL[0]: proto_id < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0

CENTER_NODE: 68719478565
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *p1 = p1_arg
  TYPE[0]: CALL
  TOKENIZED[0]: *p1 = VAR1
  ORIGINAL[1]: p1->short_name
  TYPE[1]: CALL
  TOKENIZED[1]: p1->short_name
  ORIGINAL[2]: p1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: p1_arg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064779353
FRAGMENT_COUNT: 4
  ORIGINAL[0]: hf_field->type
  TYPE[0]: CALL
  TOKENIZED[0]: hf_field->type
  ORIGINAL[1]: (const true_false_string *) &tfs_true_false
  TYPE[1]: CALL
  TOKENIZED[1]: ( const VAR1 * ) &tfs_true_false
  ORIGINAL[2]: &tfs_true_false
  TYPE[2]: CALL
  TOKENIZED[2]: &tfs_true_false
  ORIGINAL[3]: tfs_true_false
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640943
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !(PTREE_DATA(tree)->visible)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( FUN1 ( VAR1 ) ->visible )
  ORIGINAL[1]: TRY_TO_FAKE_THIS_REPR(tree, pi)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )

CENTER_NODE: 68719483647
FRAGMENT_COUNT: 7
  ORIGINAL[0]: IS_BASE_DUAL(hfinfo->display)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( hfinfo->display )
  ORIGINAL[1]: hfinfo->name
  TYPE[1]: CALL
  TOKENIZED[1]: hfinfo->name
  ORIGINAL[2]: label_str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ITEM_LABEL_LENGTH
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: format
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: value
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: value
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064774136
FRAGMENT_COUNT: 7
  ORIGINAL[0]: TRY_TO_FAKE_THIS_ITEM(tree, hfindex, hfinfo)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: !tree
  TYPE[1]: CALL
  TOKENIZED[1]: !tree
  ORIGINAL[2]: (guint)hfindex < gpa_hfinfo.len
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2 < VAR3 . VAR4
  ORIGINAL[3]: (guint)hfindex
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) VAR2
  ORIGINAL[4]: gpa_hfinfo.len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: hfindex
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: <global> gpa_hfinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1

CENTER_NODE: 68719484071
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fi->hfinfo
  TYPE[0]: CALL
  TOKENIZED[0]: fi->hfinfo
  ORIGINAL[1]: hfinfo
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fi
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fi
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064779475
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tot_no_bits & 0x07
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x07
  ORIGINAL[1]: length++
  TYPE[1]: CALL
  TOKENIZED[1]: length++
  ORIGINAL[2]: length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: no_of_bits
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064778359
FRAGMENT_COUNT: 6
  ORIGINAL[0]: fi && fi->hfinfo
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && fi->hfinfo
  ORIGINAL[1]: g_ptr_array_add(((ffdata_t*)data)->array, fi)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( ffdata_t* ) VAR1 ) ->array , VAR2 )
  ORIGINAL[2]: ((ffdata_t*)data)->array
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( ffdata_t* ) VAR1 ) ->array
  ORIGINAL[3]: (ffdata_t*)data
  TYPE[3]: CALL
  TOKENIZED[3]: ( ffdata_t* ) VAR1
  ORIGINAL[4]: array
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: fi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719480881
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tvb_get_ptr(tvb, start, FT_ETHER_LEN)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fi
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tvb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: start
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: FT_ETHER_LEN
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478885
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ptvcursor_push_subtree(ptvc, it, ett_subtree)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: ptvc
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: it
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptvc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptvc
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

