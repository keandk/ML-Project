# Tokenized code fragments for 152712-v1.0.0-bad
# Total center nodes processed: 97
# Total code fragments found: 521

CENTER_NODE: 68719477307
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *chunk = chunk_list
  TYPE[0]: CALL
  TOKENIZED[0]: *chunk = VAR1
  ORIGINAL[1]: chunk_list
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: chunk
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: chunk_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: chunk
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771319
FRAGMENT_COUNT: 4
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: debug_use_memory_scrubber = !0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = !0
  ORIGINAL[2]: !0
  TYPE[2]: CALL
  TOKENIZED[2]: !0
  ORIGINAL[3]: <global> debug_use_memory_scrubber
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064772305
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tree_list -> type = type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: tree_list -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: type
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477905
FRAGMENT_COUNT: 6
  ORIGINAL[0]: node -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: emem_tree_foreach_nodes(node -> left,callback,user_data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: callback
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: user_data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: user_data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: user_data
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771966
FRAGMENT_COUNT: 12
  ORIGINAL[0]: node -> parent
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: se_tree -> tree = node -> right
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3 -> VAR4
  ORIGINAL[2]: se_tree -> tree
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: node -> right
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: node -> right
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: node -> right
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: right
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: node
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: node
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: node
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719477085
FRAGMENT_COUNT: 3
  ORIGINAL[0]: se_alloc(size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476801
FRAGMENT_COUNT: 6
  ORIGINAL[0]: a >= 'a'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 'a'
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: a
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: a
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477962
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_print_subtree(emem_tree,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: emem_tree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477248
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ptr = g_stpcpy(ptr,s)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: g_stpcpy(ptr,s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477993
FRAGMENT_COUNT: 11
  ORIGINAL[0]: strbuf = (ep_alloc(sizeof(emem_strbuf_t )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( sizeof ( VAR2 ) ) )
  ORIGINAL[1]: ep_alloc(sizeof(emem_strbuf_t ))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( sizeof ( VAR1 ) )
  ORIGINAL[2]: strbuf -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: strbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: emem_strbuf_t
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: strbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: strbuf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: strbuf
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: strbuf
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772796
FRAGMENT_COUNT: 5
  ORIGINAL[0]: full_len < add_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: add_len = strbuf -> alloc_len - strbuf -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3 - VAR2 -> VAR4
  ORIGINAL[2]: strbuf -> alloc_len - strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[3]: add_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: full_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771187
FRAGMENT_COUNT: 6
  ORIGINAL[0]: src[i-1] != '\\\\'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ i-1 ] != '\\\\'
  ORIGINAL[1]: i == 0 || src[i-1] != '\\\\'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[2]: i == 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0
  ORIGINAL[3]: src[i-1] != '\\\\'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ i-1 ] != '\\\\'
  ORIGINAL[4]: src[i-1]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ i-1 ]
  ORIGINAL[5]: src[i-1] != '\\\\'
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 [ i-1 ] != '\\\\'

CENTER_NODE: 30064771651
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !string || !sep || !sep[0]
  TYPE[0]: CALL
  TOKENIZED[0]: !string || !sep || !sep [ 0 ]
  ORIGINAL[1]: tokens <= ((guint )max_tokens) && (s = strstr(s,sep))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= ( ( VAR2 ) VAR3 ) && ( VAR4 = FUN1 ( VAR4 , VAR5 ) )
  ORIGINAL[2]: tokens <= ((guint )max_tokens)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= ( ( VAR2 ) VAR3 )
  ORIGINAL[3]: (guint )max_tokens
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) VAR2
  ORIGINAL[4]: tokens
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: max_tokens
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477120
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 4
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477152
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_start(ap,fmt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477718
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *se_tree = d
  TYPE[0]: CALL
  TOKENIZED[0]: *se_tree = VAR1
  ORIGINAL[1]: emem_tree_create_subtree(se_tree,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: se_tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: se_tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 2
  ORIGINAL[0]: se_packet_mem . debug_verify_pointers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477121
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ep_alloc(len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640340
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 68719478208
FRAGMENT_COUNT: 3
  ORIGINAL[0]: * stonesoup_printf_context = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772286
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tree_list -> next = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: tree_list -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: tree_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771522
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_scrub_memory(buf,size,!0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , !0 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0

CENTER_NODE: 68719477124
FRAGMENT_COUNT: 3
  ORIGINAL[0]: se_alloc(len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478194
FRAGMENT_COUNT: 7
  ORIGINAL[0]: isValid(overstimulates_allantoinase) == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) == 1
  ORIGINAL[1]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_fpipe = popen(stonesoup_command_buffer,\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[3]: popen(stonesoup_command_buffer,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , \
  ORIGINAL[4]: stonesoup_fpipe
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_command_buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_fpipe
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772088
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !parent
  TYPE[0]: CALL
  TOKENIZED[0]: !parent
  ORIGINAL[1]: node -> u . rb_color = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 = 1
  ORIGINAL[2]: node -> u . rb_color
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: node -> u
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: rb_color
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477926
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !emem_tree -> tree
  TYPE[0]: CALL
  TOKENIZED[0]: !emem_tree -> VAR1
  ORIGINAL[1]: emem_tree_foreach_nodes(emem_tree -> tree,callback,user_data)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: callback
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: user_data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772100
FRAGMENT_COUNT: 6
  ORIGINAL[0]: se_tree -> type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: node -> u . rb_color = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 = 1
  ORIGINAL[2]: node -> u . rb_color
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: node -> u
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: node -> u
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: rb_color
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478124
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ep_strbuf_append_vprintf(strbuf,format,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771847
FRAGMENT_COUNT: 4
  ORIGINAL[0]: se_packet_mem . trees = tree_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = VAR3
  ORIGINAL[1]: se_packet_mem . trees
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: tree_list
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tree_list
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478015
FRAGMENT_COUNT: 3
  ORIGINAL[0]: strlen(init)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: init
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: init
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 9
  ORIGINAL[0]: se_packet_mem . free_list
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: se_packet_mem . used_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: se_packet_mem . trees
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: se_packet_mem . debug_use_canary = se_packet_mem . debug_use_chunks && getenv(\
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 . VAR2 = VAR1 . VAR3 && FUN1 ( \
  ORIGINAL[4]: se_packet_mem . debug_use_canary
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2
  ORIGINAL[5]: se_packet_mem . debug_use_chunks
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 . VAR2
  ORIGINAL[6]: se_packet_mem . debug_verify_pointers
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 . VAR2
  ORIGINAL[7]: debug_verify_pointers
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: <global> se_packet_mem
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: <global> VAR1

CENTER_NODE: 68719477079
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ptr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: mem_chunk -> freed
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: freed
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mem_chunk
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772514
FRAGMENT_COUNT: 5
  ORIGINAL[0]: key[0] . key = aligned
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] . VAR1 = VAR2
  ORIGINAL[1]: key[0] . key
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] . VAR1
  ORIGINAL[2]: key[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: key
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: aligned
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476882
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ep_packet_mem . free_list = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: ep_packet_mem . free_list
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: ep_packet_mem . used_list
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: used_list
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> ep_packet_mem
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 30064771793
FRAGMENT_COUNT: 4
  ORIGINAL[0]: s = (struct _ep_stack_frame_t **)(ep_alloc(sizeof(struct _ep_stack_frame_t *)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( struct VAR2 ** ) ( FUN1 ( sizeof ( struct VAR2 * ) ) )
  ORIGINAL[1]: (struct _ep_stack_frame_t **)(ep_alloc(sizeof(struct _ep_stack_frame_t *)))
  TYPE[1]: CALL
  TOKENIZED[1]: ( struct VAR1 ** ) ( FUN1 ( sizeof ( struct VAR1 * ) ) )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772411
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !lookup_tree
  TYPE[0]: CALL
  TOKENIZED[0]: !lookup_tree
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 68719478131
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !strbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf
  ORIGINAL[1]: ep_strbuf_append_vprintf(strbuf,format,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: strbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: format
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ap
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477781
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cur_key -> length > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > 0
  ORIGINAL[1]: cur_key -> length > 100
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 > 100
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: i = 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = 0
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477083
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ep_alloc(size)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772014
FRAGMENT_COUNT: 10
  ORIGINAL[0]: node -> left -> parent
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[1]: node -> left
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: node -> left -> right
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: node -> left
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: node -> left -> parent
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[5]: node -> left
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: left
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: parent
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: node
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: node
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640410
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640401
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 47244640425
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771400
FRAGMENT_COUNT: 2
  ORIGINAL[0]: g_free(npc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: npc
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640347
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ( *stack) -> below
  TYPE[0]: CALL
  TOKENIZED[0]: ( *stack ) -> VAR1
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064772680
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cur_alloc_len < max_alloc_len?cur_alloc_len : max_alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < max_alloc_len?cur_alloc_len : VAR2
  ORIGINAL[1]: cur_alloc_len < max_alloc_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: cur_alloc_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: max_alloc_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cur_alloc_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: max_alloc_len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771941
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_parent(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771622
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dst = ep_strdup_vprintf(fmt,ap)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: ep_strdup_vprintf(fmt,ap)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772753
FRAGMENT_COUNT: 8
  ORIGINAL[0]: full_len < strbuf -> alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: strbuf -> len += full_len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 += VAR3
  ORIGINAL[2]: strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: len
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: strbuf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: strbuf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: full_len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: strbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771398
FRAGMENT_COUNT: 4
  ORIGINAL[0]: npc -> free_offset = npc -> free_offset_init = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR1 -> VAR3 = 0
  ORIGINAL[1]: npc -> free_offset
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: npc -> free_offset_init = 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = 0
  ORIGINAL[3]: npc -> free_offset_init
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2

CENTER_NODE: 68719477950
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !emem_tree
  TYPE[0]: CALL
  TOKENIZED[0]: !emem_tree
  ORIGINAL[1]: emem_tree -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: emem_tree -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: emem_tree -> tree
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: emem_tree
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: emem_tree
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: emem_tree
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: emem_tree
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: emem_tree
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477118
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strndup(src,len,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476849
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i++
  TYPE[0]: CALL
  TOKENIZED[0]: i++
  ORIGINAL[1]: mem_canary[i] != canary[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] != VAR3 [ VAR2 ]
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477353
FRAGMENT_COUNT: 13
  ORIGINAL[0]: node = se_tree -> tree
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: key == node -> key32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == VAR2 -> VAR3
  ORIGINAL[2]: node -> key32
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: key < node -> key32
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 < VAR2 -> VAR3
  ORIGINAL[4]: key > node -> key32
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 > VAR2 -> VAR3
  ORIGINAL[5]: (void *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) 0
  ORIGINAL[6]: while (node)
  TYPE[6]: CONTROL_STRUCTURE
  TOKENIZED[6]: while ( VAR1 )
  ORIGINAL[7]: continue;
  TYPE[7]: CONTROL_STRUCTURE
  TOKENIZED[7]: continue ;
  ORIGINAL[8]: continue;
  TYPE[8]: CONTROL_STRUCTURE
  TOKENIZED[8]: continue ;
  ORIGINAL[9]: key32
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: node
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: key
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: node
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064772681
FRAGMENT_COUNT: 33
  ORIGINAL[0]: !strbuf || wanted_alloc_len <= strbuf -> alloc_len || strbuf -> alloc_len >= strbuf -> max_alloc_len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 <= VAR2 -> VAR3 || VAR2 -> VAR3 >= VAR2 -> VAR4
  ORIGINAL[1]: !strbuf || wanted_alloc_len <= strbuf -> alloc_len
  TYPE[1]: CALL
  TOKENIZED[1]: !strbuf || VAR1 <= VAR2 -> VAR3
  ORIGINAL[2]: strbuf -> alloc_len >= strbuf -> max_alloc_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 >= VAR1 -> VAR3
  ORIGINAL[3]: new_alloc_len = next_size(strbuf -> alloc_len,wanted_alloc_len,strbuf -> max_alloc_len)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( VAR2 -> VAR3 , VAR4 , VAR2 -> VAR5 )
  ORIGINAL[4]: next_size(strbuf -> alloc_len,wanted_alloc_len,strbuf -> max_alloc_len)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR1 -> VAR4 )
  ORIGINAL[5]: strbuf -> alloc_len
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: strbuf -> max_alloc_len
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: new_str = (ep_alloc(new_alloc_len))
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 = ( FUN1 ( VAR2 ) )
  ORIGINAL[8]: ep_alloc(new_alloc_len)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 )
  ORIGINAL[9]: g_strlcpy(new_str,(strbuf -> str),new_alloc_len)
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( VAR1 , ( VAR2 -> VAR3 ) , VAR4 )
  ORIGINAL[10]: strbuf -> str
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: strbuf -> alloc_len = new_alloc_len
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 = VAR3
  ORIGINAL[12]: strbuf -> alloc_len
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: strbuf -> str = new_str
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2 = VAR3
  ORIGINAL[14]: strbuf -> str
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: alloc_len
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: max_alloc_len
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: str
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: alloc_len
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: str
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: new_alloc_len
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: strbuf
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: wanted_alloc_len
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: strbuf
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: new_str
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: new_alloc_len
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: new_str
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: strbuf
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: new_alloc_len
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: strbuf
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: new_alloc_len
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: strbuf
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: new_str
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1

CENTER_NODE: 30064771613
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dst = (allocator(len + 1))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 + 1 ) )
  ORIGINAL[1]: allocator(len + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 + 1 )
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dst
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771561
FRAGMENT_COUNT: 10
  ORIGINAL[0]: mem_chunk -> freed != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: mem_chunk -> item_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: mem_chunk -> item_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: chunk -> free_offset += (mem_chunk -> item_size)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 += ( VAR3 -> VAR4 )
  ORIGINAL[4]: chunk -> free_offset
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: mem_chunk -> item_size
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: mem_chunk -> item_size
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: item_size
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: mem_chunk
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: mem_chunk
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477526
FRAGMENT_COUNT: 5
  ORIGINAL[0]: uncle && uncle -> u . rb_color == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR1 -> VAR2 . VAR3 == 0
  ORIGINAL[1]: rb_insert_case1(se_tree,grandparent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: grandparent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: se_tree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: grandparent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719477423
FRAGMENT_COUNT: 6
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_parent(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: parent -> parent
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR1
  ORIGINAL[3]: parent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: parent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477028
FRAGMENT_COUNT: 7
  ORIGINAL[0]: npc -> next
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: npc -> buf = (g_malloc(size))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( FUN1 ( VAR3 ) )
  ORIGINAL[2]: npc -> buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: npc -> canary_last
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: canary_last
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: npc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: npc
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771768
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !use_chunks
  TYPE[0]: CALL
  TOKENIZED[0]: !use_chunks
  ORIGINAL[1]: mem -> free_list = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: mem -> free_list
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: free_list
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mem
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: mem
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477710
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tree_list -> next
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: tree_list -> type = parent_tree -> type
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3 -> VAR2
  ORIGINAL[2]: tree_list -> type
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tree_list -> tree
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tree
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tree_list
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tree_list
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476874
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pad < 8
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 8
  ORIGINAL[1]: pad += 8
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += 8
  ORIGINAL[2]: pad
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pad
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pad
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476945
FRAGMENT_COUNT: 6
  ORIGINAL[0]: offset < size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: *((guint8 *)(buf + offset)) = (scrubbed_value >> 16 & 0xFF)
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( VAR1 * ) ( VAR2 + VAR3 ) ) = ( VAR4 >> 16 & 0xFF )
  ORIGINAL[2]: offset++
  TYPE[2]: CALL
  TOKENIZED[2]: offset++
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772636
FRAGMENT_COUNT: 21
  ORIGINAL[0]: !node
  TYPE[0]: CALL
  TOKENIZED[0]: !node
  ORIGINAL[1]: printf(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: (void *)node
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) VAR1
  ORIGINAL[3]: (void *)(node -> parent)
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) ( VAR1 -> VAR2 )
  ORIGINAL[4]: (void *)(node -> left)
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) ( VAR1 -> VAR2 )
  ORIGINAL[5]: (void *)(node -> right)
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) ( VAR1 -> VAR2 )
  ORIGINAL[6]: node -> u . rb_color?\
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . rb_color?\
  ORIGINAL[7]: node -> key32
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: node -> u . is_subtree?\
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 . is_subtree?\
  ORIGINAL[9]: node -> data
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: key32
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: prefix
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: node
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: node
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: node
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: node
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: node
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: node
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: node
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: node
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: node
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 30064771523
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_alloc(size,&ep_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &ep_packet_mem )
  ORIGINAL[1]: &ep_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &ep_packet_mem
  ORIGINAL[2]: size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771253
FRAGMENT_COUNT: 8
  ORIGINAL[0]: mem -> debug_use_canary
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: emem_canary_init(mem -> canary)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: mem -> canary
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: canary
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mem
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: mem
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: mem
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: mem
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477487
FRAGMENT_COUNT: 4
  ORIGINAL[0]: node == parent -> left && parent == grandparent -> left
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 -> VAR3 && VAR2 == VAR4 -> VAR3
  ORIGINAL[1]: rotate_right(se_tree,grandparent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: se_tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: grandparent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771203
FRAGMENT_COUNT: 4
  ORIGINAL[0]: rand_state == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: rand_state = g_rand_new()
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( )
  ORIGINAL[2]: g_rand_new()
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( )
  ORIGINAL[3]: rand_state
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772350
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cur_key -> length > 100
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > 100
  ORIGINAL[1]: getenv(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 30064772822
FRAGMENT_COUNT: 5
  ORIGINAL[0]: strbuf -> len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: strbuf -> str[strbuf -> len]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR1 -> VAR3 ]
  ORIGINAL[2]: strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: len
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: strbuf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476899
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *cptr = ptr
  TYPE[0]: CALL
  TOKENIZED[0]: *cptr = VAR1
  ORIGINAL[1]: cptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ptr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477100
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771620
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,se_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476964
FRAGMENT_COUNT: 5
  ORIGINAL[0]: npc = emem_create_chunk(size)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: npc -> amount_free
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: amount_free
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: npc
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: npc
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771596
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < len && src[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 && VAR3 [ VAR1 ]
  ORIGINAL[1]: i < len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: src[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: src
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477007
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *cptr = ((char *)buf) + size
  TYPE[0]: CALL
  TOKENIZED[0]: *cptr = ( ( char * ) VAR1 ) + VAR2
  ORIGINAL[1]: ((char *)buf) + size
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( char * ) VAR1 ) + VAR2
  ORIGINAL[2]: use_canary
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772271
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !node -> right
  TYPE[0]: CALL
  TOKENIZED[0]: !node -> VAR1
  ORIGINAL[1]: new_node -> u . is_subtree = is_subtree
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 = VAR3
  ORIGINAL[2]: new_node -> u . is_subtree
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: is_subtree
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476917
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ep_packet_mem . debug_verify_pointers
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: emem_verify_pointer((&ep_packet_mem),ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( &ep_packet_mem ) , VAR1 )
  ORIGINAL[2]: &ep_packet_mem
  TYPE[2]: CALL
  TOKENIZED[2]: &ep_packet_mem
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477088
FRAGMENT_COUNT: 4
  ORIGINAL[0]: mem_chunk -> item_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: item_size
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mem_chunk
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: mem_chunk
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772895
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !strbuf || len >= strbuf -> len
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf || VAR1 >= VAR2 -> VAR1
  ORIGINAL[1]: strbuf -> len = len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: strbuf -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: len
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: strbuf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771073
FRAGMENT_COUNT: 3
  ORIGINAL[0]: canary[8 * 2 - 1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 8 * 2 - 1 ]
  ORIGINAL[1]: 8 * 2 - 1
  TYPE[1]: CALL
  TOKENIZED[1]: 8 * 2 - 1
  ORIGINAL[2]: 8 * 2
  TYPE[2]: CALL
  TOKENIZED[2]: 8 * 2

CENTER_NODE: 68719477047
FRAGMENT_COUNT: 3
  ORIGINAL[0]: &se_packet_mem
  TYPE[0]: CALL
  TOKENIZED[0]: &se_packet_mem
  ORIGINAL[1]: size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> se_packet_mem
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771804
FRAGMENT_COUNT: 30
  ORIGINAL[0]: head -> above
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: frame = head -> above
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 -> VAR3
  ORIGINAL[2]: head -> above
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: frame = ((struct _ep_stack_frame_t *)(ep_alloc(sizeof(struct _ep_stack_frame_t ))))
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = ( ( struct VAR2 * ) ( FUN1 ( sizeof ( struct VAR2 ) ) ) )
  ORIGINAL[4]: (struct _ep_stack_frame_t *)(ep_alloc(sizeof(struct _ep_stack_frame_t )))
  TYPE[4]: CALL
  TOKENIZED[4]: ( struct VAR1 * ) ( FUN1 ( sizeof ( struct VAR1 ) ) )
  ORIGINAL[5]: ep_alloc(sizeof(struct _ep_stack_frame_t ))
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( sizeof ( struct VAR1 ) )
  ORIGINAL[6]: sizeof(struct _ep_stack_frame_t )
  TYPE[6]: CALL
  TOKENIZED[6]: sizeof ( struct VAR1 )
  ORIGINAL[7]: head -> above = frame
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 = VAR3
  ORIGINAL[8]: head -> above
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: frame -> below = head
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2 = VAR3
  ORIGINAL[10]: frame -> below
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: frame -> above = ((void *)0)
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[12]: frame -> above
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: (void *)0
  TYPE[13]: CALL
  TOKENIZED[13]: ( void * ) 0
  ORIGINAL[14]: above
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: above
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: above
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: below
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: above
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: head
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: frame
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: head
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: frame
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: struct _ep_stack_frame_t
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: struct VAR1
  ORIGINAL[24]: head
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: frame
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: frame
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: head
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: frame
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: frame
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1

CENTER_NODE: 68719477300
FRAGMENT_COUNT: 2
  ORIGINAL[0]: &ep_packet_mem
  TYPE[0]: CALL
  TOKENIZED[0]: &ep_packet_mem
  ORIGINAL[1]: <global> ep_packet_mem
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064771589
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_strdup(src,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477884
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i % 4 != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 % 4 != 0
  ORIGINAL[1]: i / 4
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 / 4
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: aligned
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640339
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771337
FRAGMENT_COUNT: 5
  ORIGINAL[0]: emem_verify_pointer_list((hdr -> free_list),ptr) || emem_verify_pointer_list((hdr -> used_list),ptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 ) || FUN1 ( ( VAR1 -> VAR4 ) , VAR3 )
  ORIGINAL[1]: emem_verify_pointer_list((hdr -> free_list),ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 )
  ORIGINAL[2]: emem_verify_pointer_list((hdr -> used_list),ptr)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( VAR1 -> VAR2 ) , VAR3 )
  ORIGINAL[3]: hdr -> used_list
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477141
FRAGMENT_COUNT: 3
  ORIGINAL[0]: emem_strdup_vprintf(fmt,ap,ep_alloc)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771779
FRAGMENT_COUNT: 2
  ORIGINAL[0]: emem_free_all(&se_packet_mem)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &se_packet_mem )
  ORIGINAL[1]: &se_packet_mem
  TYPE[1]: CALL
  TOKENIZED[1]: &se_packet_mem

CENTER_NODE: 30064772079
FRAGMENT_COUNT: 4
  ORIGINAL[0]: parent = emem_tree_parent(node)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: emem_tree_parent(node)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: parent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478148
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !strbuf
  TYPE[0]: CALL
  TOKENIZED[0]: !strbuf
  ORIGINAL[1]: strbuf -> alloc_len >= strbuf -> len + 1 + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 >= VAR1 -> VAR3 + 1 + 1
  ORIGINAL[2]: strbuf -> alloc_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: strbuf -> len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: strbuf -> len
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: strbuf -> str[strbuf -> len] = '\\0'
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR1 -> VAR3 ] = '\\0'
  ORIGINAL[6]: strbuf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: strbuf
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: strbuf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771581
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !src
  TYPE[0]: CALL
  TOKENIZED[0]: !src
  ORIGINAL[1]: len = ((guint )(strlen(src)))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 ) ( FUN1 ( VAR3 ) ) )
  ORIGINAL[2]: (guint )(strlen(src))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) ( FUN1 ( VAR2 ) )
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dst
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771316
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ep_init_chunk()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: se_init_chunk()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

