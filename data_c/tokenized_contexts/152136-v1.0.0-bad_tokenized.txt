# Tokenized code fragments for 152136-v1.0.0-bad
# Total center nodes processed: 31
# Total code fragments found: 227

CENTER_NODE: 68719476758
FRAGMENT_COUNT: 9
  ORIGINAL[0]: dat -> stream . cbc
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: ( *dat -> stream . cbc)(in,out,len,(&dat -> ks),ctx -> iv,ctx -> encrypt)
  TYPE[1]: CALL
  TOKENIZED[1]: ( *dat -> VAR1 . VAR2 ) ( VAR3 , VAR4 , VAR5 , ( &dat -> VAR6 ) , VAR7 -> VAR8 , VAR7 -> VAR9 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: ctx -> iv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ctx -> encrypt
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: in
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: out
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: dat
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771747
FRAGMENT_COUNT: 2
  ORIGINAL[0]: 1 << 57 - 32
  TYPE[0]: CALL
  TOKENIZED[0]: 1 << 57 - 32
  ORIGINAL[1]: 57 - 32
  TYPE[1]: CALL
  TOKENIZED[1]: 57 - 32

CENTER_NODE: 30064772119
FRAGMENT_COUNT: 2
  ORIGINAL[0]: stonesoup_exit_flag = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: stonesoup_exit_flag
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 5
  ORIGINAL[0]: __sync_bool_compare_and_swap(&pusley_interpol,0,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &pusley_interpol , 0 , 1 )
  ORIGINAL[1]: &pusley_interpol
  TYPE[1]: CALL
  TOKENIZED[1]: &pusley_interpol
  ORIGINAL[2]: mkdir(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: mkdir(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: OPENSSL_ia32cap_P
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476826
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ctx -> flags & 0x2000
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 & 0x2000
  ORIGINAL[1]: CRYPTO_cfb128_1_encrypt(in,out,len,(&dat -> ks),ctx -> iv,&ctx -> num,ctx -> encrypt,dat -> block)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , &ctx -> VAR7 , VAR5 -> VAR8 , VAR9 -> VAR10 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: ctx -> iv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: &ctx -> num
  TYPE[4]: CALL
  TOKENIZED[4]: &ctx -> VAR1
  ORIGINAL[5]: ctx -> encrypt
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: dat -> block
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: in
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: out
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: len
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640291
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477086
FRAGMENT_COUNT: 11
  ORIGINAL[0]: gctx -> ks
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: gctx -> gcm
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: gctx -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: gctx -> ctr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: gctx -> iv_set
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: gctx -> iv
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: gctx -> gcm
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: gcm
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: gctx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: iv
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: gctx
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719477273
FRAGMENT_COUNT: 43
  ORIGINAL[0]: *cctx = (c -> cipher_data)
  TYPE[0]: CALL
  TOKENIZED[0]: *cctx = ( VAR1 -> VAR2 )
  ORIGINAL[1]: cctx -> key_set = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = 0
  ORIGINAL[2]: cctx -> key_set
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cctx -> iv_set = 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = 0
  ORIGINAL[4]: cctx -> iv_set
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cctx -> L = 8
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 = 8
  ORIGINAL[6]: cctx -> L
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: cctx -> M = 12
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 = 12
  ORIGINAL[8]: cctx -> M
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: cctx -> tag_set = 0
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2 = 0
  ORIGINAL[10]: cctx -> tag_set
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: cctx -> len_set = 0
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 = 0
  ORIGINAL[12]: cctx -> len_set
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: arg = 15 - arg
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 = 15 - VAR1
  ORIGINAL[14]: 15 - arg
  TYPE[14]: CALL
  TOKENIZED[14]: 15 - VAR1
  ORIGINAL[15]: arg < 2 || arg > 8
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 < 2 || VAR1 > 8
  ORIGINAL[16]: arg < 2
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 < 2
  ORIGINAL[17]: arg & 1 || arg < 4 || arg > 16
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 & 1 || VAR1 < 4 || VAR1 > 16
  ORIGINAL[18]: arg & 1 || arg < 4
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 & 1 || VAR1 < 4
  ORIGINAL[19]: arg & 1
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 & 1
  ORIGINAL[20]: !c -> encrypt || !cctx -> tag_set
  TYPE[20]: CALL
  TOKENIZED[20]: !c -> VAR1 || !cctx -> VAR2
  ORIGINAL[21]: !c -> encrypt
  TYPE[21]: CALL
  TOKENIZED[21]: !c -> VAR1
  ORIGINAL[22]: c -> encrypt
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 -> VAR2
  ORIGINAL[23]: - 1
  TYPE[23]: CALL
  TOKENIZED[23]: - 1
  ORIGINAL[24]: key_set
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: iv_set
  TYPE[25]: FIELD_IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: L
  TYPE[26]: FIELD_IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: M
  TYPE[27]: FIELD_IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: tag_set
  TYPE[28]: FIELD_IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: len_set
  TYPE[29]: FIELD_IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: encrypt
  TYPE[30]: FIELD_IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: type
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: cctx
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: cctx
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: cctx
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: cctx
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: cctx
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: cctx
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: arg
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: arg
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: arg
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: arg
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: c
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1

CENTER_NODE: 68719477591
FRAGMENT_COUNT: 4
  ORIGINAL[0]: aesni_128_xts = {(913), (1), (((0x10001 == 0x10001?2 : 1)) * 128 / 8), (16), ((0x4000 | (0x1000 | 0x10 | 0x20 | 0x40) | 0x10001)), (aesni_xts_init_key), (aes_xts_cipher), (((void *)0)), ((sizeof(EVP_AES_XTS_CTX ))), (((void *)0)), (((void *)0)), (aes_xts_ctrl), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { ( 913 ) , ( 1 ) , ( ( ( 0x10001 == 0x10001?2 : 1 ) ) * 128 / 8 ) , ( 16 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x20 | 0x40 ) | 0x10001 ) ) , ( VAR2 ) , ( VAR3 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR4 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR5 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: {(913), (1), (((0x10001 == 0x10001?2 : 1)) * 128 / 8), (16), ((0x4000 | (0x1000 | 0x10 | 0x20 | 0x40) | 0x10001)), (aesni_xts_init_key), (aes_xts_cipher), (((void *)0)), ((sizeof(EVP_AES_XTS_CTX ))), (((void *)0)), (((void *)0)), (aes_xts_ctrl), ((void *)0)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( 913 ) , ( 1 ) , ( ( ( 0x10001 == 0x10001?2 : 1 ) ) * 128 / 8 ) , ( 16 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x20 | 0x40 ) | 0x10001 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR4 ) , ( ( void * ) 0 ) }
  ORIGINAL[2]: <global> aesni_128_xts
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: aesni_128_xts
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476789
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i <= len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2
  ORIGINAL[1]: *dat -> block
  TYPE[1]: CALL
  TOKENIZED[1]: *dat -> VAR1
  ORIGINAL[2]: in + i
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2
  ORIGINAL[3]: in
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476818
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dat -> ks
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ks
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dat
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476803
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *dat = (EVP_AES_KEY *)(ctx -> cipher_data)
  TYPE[0]: CALL
  TOKENIZED[0]: *dat = ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[1]: (EVP_AES_KEY *)(ctx -> cipher_data)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( VAR2 -> VAR3 )
  ORIGINAL[2]: dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: dat -> block
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dat
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dat
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: dat
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477249
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !out
  TYPE[0]: CALL
  TOKENIZED[0]: !out
  ORIGINAL[1]: !in
  TYPE[1]: CALL
  TOKENIZED[1]: !in
  ORIGINAL[2]: in
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: in
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: in
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772745
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(896), (1), (((0x7 == 0x10001?2 : 1)) * 128 / 8), (12), ((0x4000 | (0x1000 | 0x10 | 0x100000 | 0x20 | 0x40) | 0x7)), (aesni_ccm_init_key), (aes_ccm_cipher), (((void *)0)), ((sizeof(EVP_AES_CCM_CTX ))), (((void *)0)), (((void *)0)), (aes_ccm_ctrl), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 896 ) , ( 1 ) , ( ( ( 0x7 == 0x10001?2 : 1 ) ) * 128 / 8 ) , ( 12 ) , ( ( 0x4000 | ( 0x1000 | 0x10 | 0x100000 | 0x20 | 0x40 ) | 0x7 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( VAR4 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 68719477223
FRAGMENT_COUNT: 10
  ORIGINAL[0]: xctx -> stream
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: ctx -> key_len * 4
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 * 4
  ORIGINAL[2]: xctx -> ks1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: xctx -> ks1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: xctx -> ks2
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: xctx -> ks1
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: ks1
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: xctx
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: enc
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: xctx
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771085
FRAGMENT_COUNT: 7
  ORIGINAL[0]: (mode == 0x1 || mode == 0x2) && !enc
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 == 0x1 || VAR1 == 0x2 ) && !enc
  ORIGINAL[1]: ret = AES_set_decrypt_key(key,ctx -> key_len * 8,&dat -> ks)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 * 8 , &dat -> VAR5 )
  ORIGINAL[2]: AES_set_decrypt_key(key,ctx -> key_len * 8,&dat -> ks)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 -> VAR3 * 8 , &dat -> VAR4 )
  ORIGINAL[3]: ctx -> key_len * 8
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 * 8
  ORIGINAL[4]: &dat -> ks
  TYPE[4]: CALL
  TOKENIZED[4]: &dat -> VAR1
  ORIGINAL[5]: ret
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: key
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771668
FRAGMENT_COUNT: 13
  ORIGINAL[0]: &gctx -> gcm
  TYPE[0]: CALL
  TOKENIZED[0]: &gctx -> VAR1
  ORIGINAL[1]: gctx -> gcm
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: gctx -> ctr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &gctx -> gcm
  TYPE[3]: CALL
  TOKENIZED[3]: &gctx -> VAR1
  ORIGINAL[4]: gctx -> gcm
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &gctx -> gcm
  TYPE[5]: CALL
  TOKENIZED[5]: &gctx -> VAR1
  ORIGINAL[6]: gctx -> gcm
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: gcm
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: gctx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: gctx
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: gctx
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: gctx
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: gctx
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 47244640360
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771416
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++c
  TYPE[0]: CALL
  TOKENIZED[0]: ++c
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: counter
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: n
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476797
FRAGMENT_COUNT: 8
  ORIGINAL[0]: CRYPTO_ofb128_encrypt(in,out,len,(&dat -> ks),ctx -> iv,&ctx -> num,dat -> block)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , &ctx -> VAR7 , VAR8 -> VAR9 )
  ORIGINAL[1]: &dat -> ks
  TYPE[1]: CALL
  TOKENIZED[1]: &dat -> VAR1
  ORIGINAL[2]: ctx -> iv
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: &ctx -> num
  TYPE[3]: CALL
  TOKENIZED[3]: &ctx -> VAR1
  ORIGINAL[4]: dat -> block
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: in
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: out
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477168
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ctx -> cipher_data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: out == ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[2]: ctx -> encrypt
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: encrypt
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ctx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771766
FRAGMENT_COUNT: 17
  ORIGINAL[0]: type != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: - 1
  TYPE[1]: CALL
  TOKENIZED[1]: - 1
  ORIGINAL[2]: xctx -> xts . key1 = ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 = ( ( void * ) 0 )
  ORIGINAL[3]: xctx -> xts . key1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3
  ORIGINAL[4]: xctx -> xts
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: (void *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) 0
  ORIGINAL[6]: xctx -> xts . key2 = ((void *)0)
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3 = ( ( void * ) 0 )
  ORIGINAL[7]: xctx -> xts . key2
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 . VAR3
  ORIGINAL[8]: xctx -> xts
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: (void *)0
  TYPE[9]: CALL
  TOKENIZED[9]: ( void * ) 0
  ORIGINAL[10]: xts
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: key1
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: xts
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: key2
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: type
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: xctx
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: xctx
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 68719477356
FRAGMENT_COUNT: 11
  ORIGINAL[0]: cctx -> ccm
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cctx -> iv_set
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cctx -> key_set
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cctx -> tag_set
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cctx -> len_set
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: CRYPTO_ccm128_setiv(ccm,(ctx -> iv),(15 - cctx -> L),len)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , ( VAR2 -> VAR3 ) , ( 15 - VAR4 -> VAR5 ) , VAR6 )
  ORIGINAL[6]: cctx -> L
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: cctx -> len_set
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: len_set
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: cctx
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: cctx
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772526
FRAGMENT_COUNT: 2
  ORIGINAL[0]: {(655), (1), (256 / 8), (16), ((0x4000 | 0x3)), (aesni_init_key), (aes_cfb8_cipher), (((void *)0)), ((sizeof(EVP_AES_KEY ))), (((void *)0)), (((void *)0)), (((void *)0)), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: { ( 655 ) , ( 1 ) , ( 256 / 8 ) , ( 16 ) , ( ( 0x4000 | 0x3 ) ) , ( VAR1 ) , ( VAR2 ) , ( ( ( void * ) 0 ) ) , ( ( sizeof ( VAR3 ) ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( ( void * ) 0 ) ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: 256 / 8
  TYPE[1]: CALL
  TOKENIZED[1]: 256 / 8

CENTER_NODE: 30064772097
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stonesoup_file == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: stonesoup_file_list[stonesoup_ssi % 10] = stonesoup_file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 % 10 ] = VAR3
  ORIGINAL[2]: stonesoup_file_list[stonesoup_ssi % 10]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 % 10 ]
  ORIGINAL[3]: stonesoup_ssi % 10
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 % 10
  ORIGINAL[4]: stonesoup_file_list
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_file_list
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477408
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ferriage_hemiope != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: runtishly_recongelation . endeavorer_indefeasibility
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: endeavorer_indefeasibility
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: runtishly_recongelation
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476862
FRAGMENT_COUNT: 11
  ORIGINAL[0]: dat -> stream . ctr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: CRYPTO_ctr128_encrypt_ctr32(in,out,len,(&dat -> ks),ctx -> iv,ctx -> buf,&num,dat -> stream . ctr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &dat -> VAR4 ) , VAR5 -> VAR6 , VAR5 -> VAR7 , &num , VAR8 -> VAR9 . VAR10 )
  ORIGINAL[2]: &dat -> ks
  TYPE[2]: CALL
  TOKENIZED[2]: &dat -> VAR1
  ORIGINAL[3]: ctx -> iv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ctx -> buf
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: &num
  TYPE[5]: CALL
  TOKENIZED[5]: &num
  ORIGINAL[6]: dat -> stream . ctr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3
  ORIGINAL[7]: in
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: out
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: len
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: dat
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771947
FRAGMENT_COUNT: 6
  ORIGINAL[0]: memcpy((ctx -> iv),iv,(15 - cctx -> L))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( VAR1 -> VAR2 ) , VAR2 , ( 15 - VAR3 -> VAR4 ) )
  ORIGINAL[1]: ctx -> iv
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: 15 - cctx -> L
  TYPE[2]: CALL
  TOKENIZED[2]: 15 - VAR1 -> VAR2
  ORIGINAL[3]: iv
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: iv
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476994
FRAGMENT_COUNT: 5
  ORIGINAL[0]: arg <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: type
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: arg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771411
FRAGMENT_COUNT: 7
  ORIGINAL[0]: gctx -> iv != c -> iv
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != VAR3 -> VAR2
  ORIGINAL[1]: gctx -> iv
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: CRYPTO_free((gctx -> iv))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( VAR1 -> VAR2 ) )
  ORIGINAL[3]: gctx -> iv
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: iv
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: gctx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: gctx
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640342
FRAGMENT_COUNT: 0

