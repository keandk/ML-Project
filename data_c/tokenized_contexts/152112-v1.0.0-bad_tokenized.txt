# Tokenized code fragments for 152112-v1.0.0-bad
# Total center nodes processed: 85
# Total code fragments found: 351

CENTER_NODE: 47244640457
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772161
FRAGMENT_COUNT: 6
  ORIGINAL[0]: uri1[i] == ':'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == ':'
  ORIGINAL[1]: get_longest_ancestor_length(type_uri,uri1 + i,uri2 + i,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 + VAR3 , VAR4 + VAR3 , VAR5 )
  ORIGINAL[2]: uri1 + i
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2
  ORIGINAL[3]: uri1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: uri2
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477303
FRAGMENT_COUNT: 8
  ORIGINAL[0]: base[0]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ]
  ORIGINAL[1]: component[0] == '\\0'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[2]: apr_pmemdup(pool,base,blen + 1)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , VAR3 + 1 )
  ORIGINAL[3]: blen + 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 + 1
  ORIGINAL[4]: base
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: base
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: blen
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 3
  ORIGINAL[0]: len > 0 && relpath[len] != 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0 && VAR2 [ VAR1 ] != 47
  ORIGINAL[1]: --len
  TYPE[1]: CALL
  TOKENIZED[1]: --len
  ORIGINAL[2]: while (len > 0 && relpath[len] != 47)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( VAR1 > 0 && VAR2 [ VAR1 ] != 47 )

CENTER_NODE: 68719477269
FRAGMENT_COUNT: 4
  ORIGINAL[0]: internal_style(dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478213
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_fspath__is_canonical(parent_fspath)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_fspath__is_canonical(child_fspath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: child_fspath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: child_fspath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478290
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 68719477278
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_uri_is_canonical(uri,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[1]: uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477565
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *dirpath
  TYPE[0]: CALL
  TOKENIZED[0]: *dirpath
  ORIGINAL[1]: dirpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771074
FRAGMENT_COUNT: 2
  ORIGINAL[0]: type_relpath=2
  TYPE[0]: CALL
  TOKENIZED[0]: type_relpath=2
  ORIGINAL[1]: type_relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476745
FRAGMENT_COUNT: 4
  ORIGINAL[0]: size_dirpath = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: * filepath = NULL
  TYPE[1]: CALL
  TOKENIZED[1]: * VAR1 = VAR2
  ORIGINAL[2]: filepath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478247
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_fspath__is_canonical(fspath)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_relpath_is_canonical(relpath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: relpath[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: relpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: relpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: relpath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477687
FRAGMENT_COUNT: 3
  ORIGINAL[0]: uri_skip_ancestor(parent_uri,child_uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: parent_uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: child_uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478367
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_contents == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: stonesoup_str_list[stonesoup_ssi] = stonesoup_contents
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = VAR3
  ORIGINAL[2]: stonesoup_str_list[stonesoup_ssi]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: stonesoup_contents
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_contents
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772885
FRAGMENT_COUNT: 6
  ORIGINAL[0]: strncmp(url,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: svn_error_createf(SVN_ERR_RA_ILLEGAL_URL,((void *)0),(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: SVN_ERR_RA_ILLEGAL_URL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: url
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064773026
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_fspath__is_canonical(fspath1)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_fspath__is_canonical(fspath1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: (void )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void ) 0

CENTER_NODE: 47244640462
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772286
FRAGMENT_COUNT: 4
  ORIGINAL[0]: canonicalize(type_uri,uri,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477524
FRAGMENT_COUNT: 9
  ORIGINAL[0]: dirpath != base_name?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != base_name? ( ( void ) 0 ) : FUN1 ( \
  ORIGINAL[1]: *dirpath = (svn_relpath_dirname(relpath,pool))
  TYPE[1]: CALL
  TOKENIZED[1]: *dirpath = ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[2]: *dirpath
  TYPE[2]: CALL
  TOKENIZED[2]: *dirpath
  ORIGINAL[3]: svn_relpath_dirname(relpath,pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dirpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: relpath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: base_name
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064772948
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: fspath[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: fspath[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: fspath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640494
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640429
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477188
FRAGMENT_COUNT: 8
  ORIGINAL[0]: path1[0] == '\\0' || path2[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0' || VAR2 [ 0 ] == '\\0'
  ORIGINAL[1]: path1[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: i == path1_len || i == path2_len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == VAR2 || VAR1 == VAR3
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477734
FRAGMENT_COUNT: 4
  ORIGINAL[0]: canonicalize(type_dirent,dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477730
FRAGMENT_COUNT: 4
  ORIGINAL[0]: canonicalize(type_relpath,relpath,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477271
FRAGMENT_COUNT: 2
  ORIGINAL[0]: dirent[0]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ]
  ORIGINAL[1]: dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772244
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_dirent_skip_ancestor(parent_dirent,child_dirent) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 ) != ( ( void * ) 0 )
  ORIGINAL[1]: svn_dirent_skip_ancestor(parent_dirent,child_dirent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 68719478237
FRAGMENT_COUNT: 9
  ORIGINAL[0]: dirpath != base_name?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != base_name? ( ( void ) 0 ) : FUN1 ( \
  ORIGINAL[1]: *dirpath = svn_fspath__dirname(fspath,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *dirpath = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: *dirpath
  TYPE[2]: CALL
  TOKENIZED[2]: *dirpath
  ORIGINAL[3]: svn_fspath__dirname(fspath,result_pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dirpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: fspath
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: result_pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: base_name
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477275
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_relpath_canonicalize(internal_style(relpath,pool),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , VAR2 ) , VAR2 )
  ORIGINAL[1]: internal_style(relpath,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771218
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c < 65 || c > 'Z'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 65 || VAR1 > 'Z'
  ORIGINAL[1]: c < 65
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 65
  ORIGINAL[2]: c > 'Z'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > 'Z'
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772231
FRAGMENT_COUNT: 8
  ORIGINAL[0]: 0 != strncmp(parent_uri,child_uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: 0 != FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: child_uri[len] == 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] == 0
  ORIGINAL[2]: child_uri[len]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: child_uri[len]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]
  ORIGINAL[4]: child_uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: child_uri
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: child_uri
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477775
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *ptr && ( *ptr) != 47
  TYPE[0]: CALL
  TOKENIZED[0]: *ptr && ( *ptr ) != 47
  ORIGINAL[1]: *ptr
  TYPE[1]: CALL
  TOKENIZED[1]: *ptr
  ORIGINAL[2]: *ptr
  TYPE[2]: CALL
  TOKENIZED[2]: *ptr
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772092
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(uri)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(uri)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477474
FRAGMENT_COUNT: 8
  ORIGINAL[0]: start > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: start - 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 1
  ORIGINAL[2]: start
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: start
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: start
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: start
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640570
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477539
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_uri_is_root(uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: apr_pstrmemdup(pool,uri,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477577
FRAGMENT_COUNT: 4
  ORIGINAL[0]: get_longest_ancestor_length(type_dirent,dirent1,dirent2,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirent2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772933
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fspath[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47
  ORIGINAL[1]: fspath[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: fspath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fspath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477498
FRAGMENT_COUNT: 3
  ORIGINAL[0]: relpath_is_canonical(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __PRETTY_FUNCTION__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719476911
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !dirent
  TYPE[0]: CALL
  TOKENIZED[0]: !dirent
  ORIGINAL[1]: dirent[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640453
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477681
FRAGMENT_COUNT: 3
  ORIGINAL[0]: uri_skip_ancestor(parent_uri,child_uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: parent_uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: child_uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477647
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len = strlen(parent_relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(parent_relpath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parent_relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772860
FRAGMENT_COUNT: 8
  ORIGINAL[0]: status = apr_filepath_merge(&full_path,base_path,path,0x01 | 0x02,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &full_path , VAR2 , VAR3 , 0x01 | 0x02 , VAR4 )
  ORIGINAL[1]: apr_filepath_merge(&full_path,base_path,path,0x01 | 0x02,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &full_path , VAR1 , VAR2 , 0x01 | 0x02 , VAR3 )
  ORIGINAL[2]: &full_path
  TYPE[2]: CALL
  TOKENIZED[2]: &full_path
  ORIGINAL[3]: 0x01 | 0x02
  TYPE[3]: CALL
  TOKENIZED[3]: 0x01 | 0x02
  ORIGINAL[4]: status
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: base_path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: path
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: result_pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477703
FRAGMENT_COUNT: 7
  ORIGINAL[0]: &path_apr
  TYPE[0]: CALL
  TOKENIZED[0]: &path_apr
  ORIGINAL[1]: apr_filepath_merge(&buffer,((void *)0),path_apr,0x04,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &buffer , ( ( void * ) 0 ) , VAR1 , 0x04 , VAR2 )
  ORIGINAL[2]: &buffer
  TYPE[2]: CALL
  TOKENIZED[2]: &buffer
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: path_apr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: path_apr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640572
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477638
FRAGMENT_COUNT: 8
  ORIGINAL[0]: child_dirent[len] == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 0
  ORIGINAL[1]: root_len > len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > VAR2
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: root_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477450
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_dirent_is_canonical(dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477581
FRAGMENT_COUNT: 4
  ORIGINAL[0]: relpath_is_canonical(relpath2)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __PRETTY_FUNCTION__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> __PRETTY_FUNCTION__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719478195
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_path_uri_encode(dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771803
FRAGMENT_COUNT: 6
  ORIGINAL[0]: path1[i - 1] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 - 1 ] == 47
  ORIGINAL[1]: path2[i] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] == 47
  ORIGINAL[2]: path2[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: pool?(apr_pstrdup(pool,path2 + i)) : path2 + i
  TYPE[4]: CALL
  TOKENIZED[4]: pool? ( FUN1 ( VAR1 , VAR2 + VAR3 ) ) : VAR2 + VAR3
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476827
FRAGMENT_COUNT: 9
  ORIGINAL[0]: tracepoint(stonesoup_trace, trace_location, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: i < size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: ++i
  TYPE[2]: CALL
  TOKENIZED[2]: ++i
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719478204
FRAGMENT_COUNT: 2
  ORIGINAL[0]: fspath[0]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ]
  ORIGINAL[1]: fspath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640262
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478283
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_path_is_url(uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: uri = svn_fspath__canonicalize(uri,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: uri = svn_path_uri_decode(uri,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: svn_path_uri_decode(uri,pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[4]: uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: uri
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: uri
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640449
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477765
FRAGMENT_COUNT: 2
  ORIGINAL[0]: relpath_is_canonical(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477012
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ( *src) == ':'
  TYPE[0]: CALL
  TOKENIZED[0]: ( *src ) == ':'
  ORIGINAL[1]: *src
  TYPE[1]: CALL
  TOKENIZED[1]: *src
  ORIGINAL[2]: src[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ]
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: src
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: src
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: src
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: src
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: src
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477430
FRAGMENT_COUNT: 5
  ORIGINAL[0]: clen == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: apr_pmemdup(pool,base,blen + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 + 1 )
  ORIGINAL[2]: blen + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: base
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640464
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ( *ptr) == 47 && ( *(ptr + 1)) == 47
  TYPE[0]: CALL
  TOKENIZED[0]: ( *ptr ) == 47 && ( * ( VAR1 + 1 ) ) == 47

CENTER_NODE: 47244640451
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476871
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c < 'a'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 'a'
  ORIGINAL[1]: c > 'z'
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 'z'
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640388
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 68719478233
FRAGMENT_COUNT: 3
  ORIGINAL[0]: strchr(result,47) == ((void *)0)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 47 ) == ( ( void * ) 0 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: result
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771229
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len >= 1 && dirent[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: len >= 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 1
  ORIGINAL[2]: dirent[0] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 47
  ORIGINAL[3]: dirent[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ]
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dirent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771832
FRAGMENT_COUNT: 2
  ORIGINAL[0]: len == 1 && dirent[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0

CENTER_NODE: 68719476840
FRAGMENT_COUNT: 2
  ORIGINAL[0]: index = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: index
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476835
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97
  ORIGINAL[1]: c <= 122
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 122
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477738
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *ptr = dirent
  TYPE[0]: CALL
  TOKENIZED[0]: *ptr = VAR1
  ORIGINAL[1]: ptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772961
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_fspath__is_canonical(fspath)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: svn_fspath__is_canonical(fspath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: (void )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void ) 0
  ORIGINAL[3]: __assert_fail(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: fspath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> __PRETTY_FUNCTION__
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 68719477514
FRAGMENT_COUNT: 6
  ORIGINAL[0]: apr_pstrmemdup(pool,relpath + start,len - start)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 + VAR3 , VAR4 - VAR3 )
  ORIGINAL[1]: relpath + start
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + VAR2
  ORIGINAL[2]: len - start
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - VAR2
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: relpath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 5
  ORIGINAL[0]: uri[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: i > 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 0
  ORIGINAL[2]: uri[i - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[3]: uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640581
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476925
FRAGMENT_COUNT: 8
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: root_length = uri_schema_root_length(uri,len)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[2]: --i
  TYPE[2]: CALL
  TOKENIZED[2]: --i
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771970
FRAGMENT_COUNT: 6
  ORIGINAL[0]: add_separator == 0 && total_len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 && VAR2 == 1
  ORIGINAL[1]: ((apr_size_t )(p - dirent)) == total_len?((void )0) : __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 ) ( VAR2 - VAR3 ) ) == total_len? ( ( void ) 0 ) : FUN1 ( \
  ORIGINAL[2]: ((apr_size_t )(p - dirent)) == total_len
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 ) ( VAR2 - VAR3 ) ) == VAR4
  ORIGINAL[3]: (void )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void ) 0
  ORIGINAL[4]: __assert_fail(\
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( \
  ORIGINAL[5]: dirent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719478077
FRAGMENT_COUNT: 6
  ORIGINAL[0]: removed[j]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: uri_i = ((const char **)(uri_targets -> elts))[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( const char ** ) ( VAR2 -> VAR3 ) ) [ VAR4 ]
  ORIGINAL[2]: uri_j = ((const char **)(uri_targets -> elts))[j]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( const char ** ) ( VAR2 -> VAR3 ) ) [ VAR4 ]
  ORIGINAL[3]: ((const char **)(uri_targets -> elts))[j]
  TYPE[3]: CALL
  TOKENIZED[3]: ( ( const char ** ) ( VAR1 -> VAR2 ) ) [ VAR3 ]
  ORIGINAL[4]: uri_j
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: uri_j
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477946
FRAGMENT_COUNT: 8
  ORIGINAL[0]: removed[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: i + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: j
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476884
FRAGMENT_COUNT: 7
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: dirent_root_length(dirent,len + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 + 1 )
  ORIGINAL[2]: len + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477623
FRAGMENT_COUNT: 3
  ORIGINAL[0]: is_child(type_dirent,parent_dirent,child_dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: type_dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: parent_dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640512
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640447
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !dirent
  TYPE[0]: CALL
  TOKENIZED[0]: !dirent

CENTER_NODE: 47244640399
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 68719476805
FRAGMENT_COUNT: 7
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: stonesoup_tainted_file = fopen(stonesoup_tainted_file_name,\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: stonesoup_tainted_file != 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != 0
  ORIGINAL[3]: stonesoup_tainted_file
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_tainted_file
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_file
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_tainted_file
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640417
FRAGMENT_COUNT: 1
  ORIGINAL[0]: base_name
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

