# Tokenized code fragments for 153256-v1.0.0-bad
# Total center nodes processed: 73
# Total code fragments found: 322

CENTER_NODE: 30064771298
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> writable = writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: writable
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772346
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: g_strlcpy(cinfo -> col_expr . col_expr_val[col],cinfo -> col_buf[col],256)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 . VAR3 [ VAR4 ] , VAR1 -> VAR5 [ VAR4 ] , 256 )
  ORIGINAL[2]: cinfo -> col_expr . col_expr_val[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[3]: cinfo -> col_buf[col]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[4]: break;
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: break ;

CENTER_NODE: 30064771168
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *message_param = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *message_param = 0
  ORIGINAL[1]: message_param
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: message_param
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640612
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640492
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640615
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640379
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477998
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: col_set_delta_time(fd,cinfo,col)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: TS_DELTA
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fd
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477926
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> col_buf
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: col_buf
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772414
FRAGMENT_COUNT: 5
  ORIGINAL[0]: timestamp_get_seconds_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: g_assertion_message_expr(((gchar *)0),\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[2]: (gchar *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) 0
  ORIGINAL[3]: (const char *)__func__
  TYPE[3]: CALL
  TOKENIZED[3]: ( const char * ) VAR1
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0

CENTER_NODE: 47244640504
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640376
FRAGMENT_COUNT: 3
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: display_signed_time(buf,256,((gint32 )(ts -> secs)),ts -> nsecs / 1000000,TO_STR_TIME_RES_T_MSECS)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 256 , ( ( VAR2 ) ( VAR3 -> VAR4 ) ) , VAR3 -> VAR5 / 1000000 , VAR6 )
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;

CENTER_NODE: 68719476960
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> col_first
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: col_first
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771447
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_custom_field
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *hfinfo = proto_registrar_get_byname(cinfo -> col_custom_field[i])
  TYPE[1]: CALL
  TOKENIZED[1]: *hfinfo = FUN1 ( VAR1 -> VAR2 [ VAR3 ] )
  ORIGINAL[2]: proto_registrar_get_byname(cinfo -> col_custom_field[i])
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] )
  ORIGINAL[3]: hfinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640476
FRAGMENT_COUNT: 3
  ORIGINAL[0]: timestamp_get_type()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: set_epoch_time(fd,buf)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640473
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771798
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_buf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640570
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476919
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo -> writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: i <= cinfo -> col_last[el]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: cinfo -> fmt_matx
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: fmt_matx
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640414
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !fd -> flags . has_ts
  TYPE[0]: CALL
  TOKENIZED[0]: !fd -> VAR1 . VAR2

CENTER_NODE: 68719478033
FRAGMENT_COUNT: 5
  ORIGINAL[0]: col_set_abs_date_time(fd,cinfo,col)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: fmt
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fd
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771910
FRAGMENT_COUNT: 10
  ORIGINAL[0]: !(((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0 )
  ORIGINAL[1]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[2]: separator == ((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: col_do_append_str(cinfo,el,separator,str)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[5]: separator
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: el
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: separator
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: str
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719478074
FRAGMENT_COUNT: 4
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: (gint32 )(ts -> secs)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( VAR2 -> VAR3 )
  ORIGINAL[2]: gint32
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ts
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773035
FRAGMENT_COUNT: 4
  ORIGINAL[0]: col < cinfo -> num_cols
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: g_assertion_message_expr(((gchar *)0),\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[2]: (gchar *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) 0
  ORIGINAL[3]: (const char *)__func__
  TYPE[3]: CALL
  TOKENIZED[3]: ( const char * ) VAR1

CENTER_NODE: 30064772068
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_buf[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col_buf
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640440
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478540
FRAGMENT_COUNT: 3
  ORIGINAL[0]: rakeful_mensurate = 39
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 39
  ORIGINAL[1]: ++stonesoup_global_variable
  TYPE[1]: CALL
  TOKENIZED[1]: ++stonesoup_global_variable
  ORIGINAL[2]: <global> stonesoup_global_variable
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719476952
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_buf[i] == cinfo -> col_data[i] || fence == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] == VAR1 -> VAR4 [ VAR3 ] || VAR5 == 0
  ORIGINAL[1]: cinfo -> col_data[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477408
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: g_strlcat(cinfo -> col_buf[i],separator,max_len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] , VAR4 , VAR5 )
  ORIGINAL[2]: cinfo -> col_buf[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: separator
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: separator
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: max_len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772810
FRAGMENT_COUNT: 6
  ORIGINAL[0]: addr -> type
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pinfo -> cinfo -> col_expr . col_expr_val[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 . VAR4 [ VAR5 ]
  ORIGINAL[2]: pinfo -> cinfo -> col_expr . col_expr_val
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3 . VAR4
  ORIGINAL[3]: pinfo -> cinfo -> col_expr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[4]: col_expr_val
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: col
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640427
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773076
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> col_fmt[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_expr . col_expr[col] = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2 [ VAR3 ] = \
  ORIGINAL[2]: cinfo -> col_expr . col_expr[col]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772512
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_expr . col_expr[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_expr . col_expr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR2
  ORIGINAL[2]: cinfo -> col_expr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_expr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: col
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476906
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo -> col_first
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: col_first
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640466
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640573
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i < cinfo -> num_cols
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: cinfo -> col_fence[i] = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] = 0
  ORIGINAL[2]: cinfo -> col_fence[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640413
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771719
FRAGMENT_COUNT: 8
  ORIGINAL[0]: cinfo -> col_data[i] != cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] != VAR1 -> VAR4 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: cinfo -> col_buf
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_buf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cinfo
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cinfo
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640481
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064772058
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cinfo -> col_expr . col_expr_val
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: cinfo -> col_expr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col_expr
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: col_expr_val
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cinfo
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478528
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo -> col_fmt[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: COL_INFO
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773274
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cosing_apprized != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: stonesoup_buf . message_data . name_member = assishness_tanzy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 . VAR3 = VAR4
  ORIGINAL[2]: stonesoup_buf . message_data . name_member
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2 . VAR3
  ORIGINAL[3]: assishness_tanzy
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_id
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640418
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640479
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771416
FRAGMENT_COUNT: 12
  ORIGINAL[0]: cinfo -> fmt_matx[i][COL_CUSTOM] && cinfo -> col_custom_field[i] && cinfo -> col_custom_field_id[i] != - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] && VAR1 -> VAR5 [ VAR3 ] && VAR1 -> VAR6 [ VAR3 ] != - 1
  ORIGINAL[1]: cinfo -> col_buf[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: epan_custom_set(edt,cinfo -> col_custom_field_id[i],cinfo -> col_custom_occurrence[i],cinfo -> col_buf[i],cinfo -> col_expr . col_expr_val[i],256)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 -> VAR3 [ VAR4 ] , VAR2 -> VAR5 [ VAR4 ] , VAR2 -> VAR6 [ VAR4 ] , VAR2 -> VAR7 . VAR8 [ VAR4 ] , 256 )
  ORIGINAL[4]: cinfo -> col_custom_field_id[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: cinfo -> col_custom_occurrence[i]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[6]: cinfo -> col_buf[i]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[7]: cinfo -> col_buf
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: cinfo -> col_expr . col_expr_val[i]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 . VAR3 [ VAR4 ]
  ORIGINAL[9]: edt
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: cinfo
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640448
FRAGMENT_COUNT: 3
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: display_epoch_time(buf,256,fd -> abs_ts . secs,fd -> abs_ts . nsecs / 1000,TO_STR_TIME_RES_T_USECS)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 256 , VAR2 -> VAR3 . VAR4 , VAR2 -> VAR3 . VAR5 / 1000 , VAR6 )
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;

CENTER_NODE: 47244640516
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640623
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772959
FRAGMENT_COUNT: 6
  ORIGINAL[0]: pinfo -> ptype
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pinfo -> cinfo -> col_buf[col]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: pinfo -> cinfo -> col_buf
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: pinfo -> cinfo
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: col_buf
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: col
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771554
FRAGMENT_COUNT: 13
  ORIGINAL[0]: cinfo -> col_buf[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo -> col_buf[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[3]: len != 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 != 0
  ORIGINAL[4]: g_strlcat(cinfo -> col_buf[i],separator,max_len)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 -> VAR2 [ VAR3 ] , VAR4 , VAR5 )
  ORIGINAL[5]: cinfo -> col_buf[i]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[6]: cinfo -> col_buf
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: cinfo -> col_buf[i][len]
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[8]: cinfo -> col_buf[i]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[9]: cinfo -> col_buf
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: separator
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: max_len
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719477862
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo -> col_buf[col]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[1]: cinfo -> col_buf
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: col
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772644
FRAGMENT_COUNT: 4
  ORIGINAL[0]: g_assertion_message_expr(((gchar *)0),\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( VAR1 * ) 0 ) , \
  ORIGINAL[1]: (gchar *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) 0
  ORIGINAL[2]: (const char *)__func__
  TYPE[2]: CALL
  TOKENIZED[2]: ( const char * ) VAR1
  ORIGINAL[3]: <global> __func__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064773372
FRAGMENT_COUNT: 21
  ORIGINAL[0]: (shmid = shmget(key, shmsz, IPC_CREAT | 0666)) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 | 0666 ) ) < 0
  ORIGINAL[1]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[2]: shm = shmat(shmid, NULL, 0)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , 0 )
  ORIGINAL[3]: (char *) -1
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) -1
  ORIGINAL[4]: fprintf(stderr, \
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , \
  ORIGINAL[5]: s = shm
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = VAR2
  ORIGINAL[6]: memset(s, 0, shmsz)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[7]: strcpy(shm, str)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[8]: fprintf(stderr, \
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 , \
  ORIGINAL[9]: getchar()
  TYPE[9]: CALL
  TOKENIZED[9]: FUN1 ( )
  ORIGINAL[10]: fprintf(stderr, \
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( VAR1 , \
  ORIGINAL[11]: stderr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: shm
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: shmsz
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: shm
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: str
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: out_filename
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: stderr
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: stderr
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1

CENTER_NODE: 47244640459
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477183
FRAGMENT_COUNT: 5
  ORIGINAL[0]: el == COL_INFO
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: max_len = 4096
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 4096
  ORIGINAL[2]: max_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: max_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: max_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771824
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i <= cinfo -> col_last[el]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: for (i = cinfo -> col_first[el];i <= cinfo -> col_last[el];i++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = VAR2 -> VAR3 [ VAR4 ] ; VAR1 <= VAR2 -> VAR5 [ VAR4 ] ; i++ )
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771466
FRAGMENT_COUNT: 4
  ORIGINAL[0]: el == COL_INFO
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: max_len = 256
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 256
  ORIGINAL[2]: max_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640626
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771087
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: strlen(ss_tc_root) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[2]: strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \

CENTER_NODE: 68719477457
FRAGMENT_COUNT: 5
  ORIGINAL[0]: fd -> flags . has_ts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: fd -> abs_ts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: abs_ts
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: then
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fd
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 1
  ORIGINAL[0]: (stonesoup_shmid = shmget(stonesoup_key, stonesoup_shmsz, 0666)) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0666 ) ) >= 0

CENTER_NODE: 30064771927
FRAGMENT_COUNT: 11
  ORIGINAL[0]: cinfo -> fmt_matx[col][COL_CLS_TIME] || cinfo -> fmt_matx[col][COL_ABS_TIME] || cinfo -> fmt_matx[col][COL_ABS_DATE_TIME]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR5 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR6 ]
  ORIGINAL[1]: cinfo -> fmt_matx[col][COL_CLS_TIME] || cinfo -> fmt_matx[col][COL_ABS_TIME]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ] || VAR1 -> VAR2 [ VAR3 ] [ VAR5 ]
  ORIGINAL[2]: cinfo -> fmt_matx[col][COL_CLS_TIME]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[3]: cinfo -> fmt_matx[col][COL_ABS_TIME]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[4]: cinfo -> fmt_matx[col][COL_ABS_DATE_TIME]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ] [ VAR4 ]
  ORIGINAL[5]: cinfo -> fmt_matx[col]
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[6]: cinfo -> fmt_matx
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: fmt_matx
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cinfo
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: col
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: COL_ABS_DATE_TIME
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719477415
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cinfo -> writable
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: writable
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cinfo
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478444
FRAGMENT_COUNT: 36
  ORIGINAL[0]: pinfo -> cinfo
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pinfo -> cinfo -> col_fmt[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[2]: pinfo -> fd
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pinfo -> cinfo
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pinfo -> src
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: pinfo -> src
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: pinfo -> dl_src
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: pinfo -> dl_src
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: pinfo -> net_src
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: pinfo -> net_src
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: pinfo -> dst
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: pinfo -> dst
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: pinfo -> dl_dst
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: pinfo -> dl_dst
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: pinfo -> net_dst
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: pinfo -> net_dst
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2
  ORIGINAL[16]: pinfo -> vsan
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: dst
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: pinfo
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: pinfo
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: pinfo
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: pinfo
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: pinfo
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: pinfo
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: pinfo
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: i
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: pinfo
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: pinfo
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: pinfo
  TYPE[28]: IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: pinfo
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: pinfo
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: pinfo
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: pinfo
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: pinfo
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: pinfo
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: pinfo
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1

CENTER_NODE: 68719476855
FRAGMENT_COUNT: 13
  ORIGINAL[0]: cinfo -> num_cols
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cinfo -> col_fmt
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo -> fmt_matx
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cinfo -> col_first
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cinfo -> col_last
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cinfo -> col_title
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: cinfo -> col_custom_field
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: cinfo -> col_custom_occurrence
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: cinfo -> col_custom_field_id = ((int *)(g_malloc_n(num_cols,sizeof(int ))))
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 = ( ( int * ) ( FUN1 ( VAR3 , sizeof ( int ) ) ) )
  ORIGINAL[9]: cinfo -> col_custom_field_id
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: cinfo -> col_custom_dfilter
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: col_custom_dfilter
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: cinfo
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771570
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ((cinfo?cinfo -> writable : 0)) && cinfo -> col_first[el] >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( cinfo?cinfo -> VAR1 : 0 ) ) && VAR2 -> VAR3 [ VAR4 ] >= 0
  ORIGINAL[1]: cinfo?cinfo -> writable : 0
  TYPE[1]: CALL
  TOKENIZED[1]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[2]: cinfo -> writable
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cinfo -> col_first[el] >= 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 [ VAR3 ] >= 0
  ORIGINAL[4]: cinfo -> col_first[el]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[5]: cinfo -> col_first
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: col_first
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cinfo
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cinfo
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: el
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640450
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772460
FRAGMENT_COUNT: 11
  ORIGINAL[0]: timestamp_get_precision()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: g_snprintf(buf,256,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 256 , \
  ORIGINAL[2]: tmp -> tm_hour
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: tmp -> tm_min
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tmp -> tm_sec
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: ((long )fd -> abs_ts . nsecs) / 1000000
  TYPE[5]: CALL
  TOKENIZED[5]: ( ( long ) VAR1 -> VAR2 . VAR3 ) / 1000000
  ORIGINAL[6]: tm_hour
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: tmp
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: tmp
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: tmp
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771296
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cinfo?cinfo -> writable : 0
  TYPE[0]: CALL
  TOKENIZED[0]: cinfo?cinfo -> VAR1 : 0
  ORIGINAL[1]: cinfo -> writable
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cinfo
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772194
FRAGMENT_COUNT: 4
  ORIGINAL[0]: secs >= (60 * 60)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= ( 60 * 60 )
  ORIGINAL[1]: ((gint32 )secs) / (60 * 60)
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 ) VAR2 ) / ( 60 * 60 )
  ORIGINAL[2]: (gint32 )secs
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2
  ORIGINAL[3]: 60 * 60
  TYPE[3]: CALL
  TOKENIZED[3]: 60 * 60

