# Tokenized code fragments for 501315-v1.0.1-good
# Total center nodes processed: 7
# Total code fragments found: 32

CENTER_NODE: 68719476863
FRAGMENT_COUNT: 4
  ORIGINAL[0]: operand_address = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: proto_tree_add_text(udvm_tree, bytecode_tvb, offset, 1,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , 1 , \
  ORIGINAL[2]: udvm_tree
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bytecode_tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773361
FRAGMENT_COUNT: 5
  ORIGINAL[0]: test_bits == 5
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 5
  ORIGINAL[1]: offset = offset + 2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR1 + 2
  ORIGINAL[2]: offset + 2
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 2
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773557
FRAGMENT_COUNT: 5
  ORIGINAL[0]: bit_order != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: value = ((msb << 8) | lsb) >> (16 - length)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 << 8 ) | VAR3 ) >> ( 16 - VAR4 )
  ORIGINAL[2]: ((msb << 8) | lsb) >> (16 - length)
  TYPE[2]: CALL
  TOKENIZED[2]: ( ( VAR1 << 8 ) | VAR2 ) >> ( 16 - VAR3 )
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719479663
FRAGMENT_COUNT: 5
  ORIGINAL[0]: test_bits == 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 2
  ORIGINAL[1]: operand_address + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: operand_address
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buff
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: operand_address
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064773204
FRAGMENT_COUNT: 5
  ORIGINAL[0]: test_bits == 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 2
  ORIGINAL[1]: temp_data = buff[(operand_address + 1) & 0xffff]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 [ ( VAR3 + 1 ) & 0xffff ]
  ORIGINAL[2]: buff[(operand_address + 1) & 0xffff]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ ( VAR2 + 1 ) & 0xffff ]
  ORIGINAL[3]: temp_data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: operand
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478133
FRAGMENT_COUNT: 4
  ORIGINAL[0]: next_operand_address = decode_udvm_multitype_operand(buff, operand_address, &length)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , &length )
  ORIGINAL[1]: show_instr_detail_level == 2
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 2
  ORIGINAL[2]: current_instruction
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> show_instr_detail_level
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 30064773474
FRAGMENT_COUNT: 4
  ORIGINAL[0]: result = value1 & 0xffff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 & 0xffff
  ORIGINAL[1]: value1 & 0xffff
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 & 0xffff
  ORIGINAL[2]: result
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: value1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

