# Tokenized code fragments for 1284-v1.0.0-good
# Total center nodes processed: 6
# Total code fragments found: 35

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ptr == resolved_path || *--ptr != '/'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 || *--ptr != '/'
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064771102
FRAGMENT_COUNT: 11
  ORIGINAL[0]: delaying == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: delaying = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1
  ORIGINAL[2]: sigprocmask(SIG_BLOCK, &block_sigmask, &saved_sigmask)<0
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , &block_sigmask , &saved_sigmask ) <0
  ORIGINAL[3]: sigprocmask(SIG_BLOCK, &block_sigmask, &saved_sigmask)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , &block_sigmask , &saved_sigmask )
  ORIGINAL[4]: &block_sigmask
  TYPE[4]: CALL
  TOKENIZED[4]: &block_sigmask
  ORIGINAL[5]: &saved_sigmask
  TYPE[5]: CALL
  TOKENIZED[5]: &saved_sigmask
  ORIGINAL[6]: <global> delaying
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: <global> VAR1
  ORIGINAL[7]: <global> delaying
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: <global> VAR1
  ORIGINAL[8]: SIG_BLOCK
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: <global> block_sigmask
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: <global> VAR1
  ORIGINAL[10]: <global> saved_sigmask
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: <global> VAR1

CENTER_NODE: 68719476741
FRAGMENT_COUNT: 7
  ORIGINAL[0]: assert (argc==2)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( argc==2 )
  ORIGINAL[1]: strcpy(path, argv[1])
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 [ 1 ] )
  ORIGINAL[2]: argv[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ]
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: argv
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: path
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771089
FRAGMENT_COUNT: 10
  ORIGINAL[0]: sig < NSIG
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: sig++
  TYPE[1]: CALL
  TOKENIZED[1]: sig++
  ORIGINAL[2]: sigaddset(&block_sigmask, sig)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &block_sigmask , VAR1 )
  ORIGINAL[3]: &block_sigmask
  TYPE[3]: CALL
  TOKENIZED[3]: &block_sigmask
  ORIGINAL[4]: for (sig = 1;sig < NSIG;sig++)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: for ( VAR1 = 1 ; VAR1 < VAR2 ; sig++ )
  ORIGINAL[5]: sig
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: NSIG
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: sig
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: <global> block_sigmask
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: <global> VAR1
  ORIGINAL[9]: sig
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 47244640257
FRAGMENT_COUNT: 1
  ORIGINAL[0]: delaying != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0

CENTER_NODE: 68719476877
FRAGMENT_COUNT: 4
  ORIGINAL[0]: S_ISDIR(sb.st_mode)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 . VAR2 )
  ORIGINAL[1]: errno = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: errno
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: errno
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

