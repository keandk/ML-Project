# Tokenized code fragments for 153754-v1.0.0-bad
# Total center nodes processed: 85
# Total code fragments found: 338

CENTER_NODE: 30064771137
FRAGMENT_COUNT: 3
  ORIGINAL[0]: len >= 1 && dirent[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: len >= 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 1
  ORIGINAL[2]: dirent[0] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 47

CENTER_NODE: 68719478212
FRAGMENT_COUNT: 4
  ORIGINAL[0]: apotype_pentathlete[10]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 10 ]
  ORIGINAL[1]: hackensack_cacomixls[10] = {0}
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 10 ] = { 0 }
  ORIGINAL[2]: hackensack_cacomixls[10] = {0}
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 10 ] = { 0 }
  ORIGINAL[3]: hackensack_cacomixls
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477228
FRAGMENT_COUNT: 8
  ORIGINAL[0]: component[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: base[blen - 1] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 - 1 ] == 47
  ORIGINAL[2]: add_separator = 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = 0
  ORIGINAL[3]: dirent = (apr_palloc(pool,blen + add_separator + clen + 1))
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = ( FUN1 ( VAR2 , VAR3 + VAR4 + VAR5 + 1 ) )
  ORIGINAL[4]: apr_palloc(pool,blen + add_separator + clen + 1)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 + VAR3 + VAR4 + 1 )
  ORIGINAL[5]: dirent
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dirent
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772152
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_dirent_skip_ancestor(parent_dirent,child_dirent) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 ) != ( ( void * ) 0 )
  ORIGINAL[1]: svn_dirent_skip_ancestor(parent_dirent,child_dirent)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: parent_dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: child_dirent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 68719476776
FRAGMENT_COUNT: 5
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: mg_create_server(NULL, stonesoup_ev_handler)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_server
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: NULL
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771187
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len > 0 && relpath[len] != 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0 && VAR2 [ VAR1 ] != 47
  ORIGINAL[1]: len > 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 0
  ORIGINAL[2]: relpath[len] != 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ] != 47
  ORIGINAL[3]: relpath[len]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ]

CENTER_NODE: 30064771886
FRAGMENT_COUNT: 4
  ORIGINAL[0]: blen = strlen(base)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(base)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: blen
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: base
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771998
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_uri_is_root(uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: apr_pstrmemdup(pool,uri,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640568
FRAGMENT_COUNT: 2
  ORIGINAL[0]: strncmp(url,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: if (strncmp(url,\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( VAR1 , \

CENTER_NODE: 68719478167
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_relpath_is_canonical(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __PRETTY_FUNCTION__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> __PRETTY_FUNCTION__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: <global> __PRETTY_FUNCTION__
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 47244640269
FRAGMENT_COUNT: 2
  ORIGINAL[0]: mkdir(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (mkdir(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 68719477201
FRAGMENT_COUNT: 4
  ORIGINAL[0]: uri_schema_root_length(uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476791
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c < 'a' || c > 'z'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 'a' || VAR1 > 'z'
  ORIGINAL[1]: c
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640451
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640564
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478113
FRAGMENT_COUNT: 6
  ORIGINAL[0]: &dirent
  TYPE[0]: CALL
  TOKENIZED[0]: &dirent
  ORIGINAL[1]: svn_path_uri_encode(dirent,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirent
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477404
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dirpath != base_name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: dirpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: base_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: base_name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772843
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fspath[0] == 47 && relpath_is_canonical(fspath + 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47 && FUN1 ( VAR1 + 1 )
  ORIGINAL[1]: fspath[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: relpath_is_canonical(fspath + 1)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 + 1 )
  ORIGINAL[3]: fspath + 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 + 1

CENTER_NODE: 68719477651
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *dst = canonicalize(type_dirent,dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *dst = FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: canonicalize(type_dirent,dirent,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: dst
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: type_dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dst
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772946
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_pstrcat(result_pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: svn_relpath_get_longest_ancestor(fspath1 + 1,fspath2 + 1,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 + 1 , VAR2 + 1 , VAR3 )
  ORIGINAL[2]: (char *)((void *)0)
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) ( ( void * ) 0 )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: result_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477589
FRAGMENT_COUNT: 5
  ORIGINAL[0]: strncmp(parent_uri,child_uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: parent_uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: parent_uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: child_uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478228
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stonesoup_buffer_stack[128] = {0}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 128 ] = { 0 }
  ORIGINAL[1]: *pooves_glossarial = 0
  TYPE[1]: CALL
  TOKENIZED[1]: *pooves_glossarial = 0
  ORIGINAL[2]: pooves_glossarial
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640445
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772213
FRAGMENT_COUNT: 7
  ORIGINAL[0]: seglen == 1 && ( *seg) == 46
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1 && ( *seg ) == 46
  ORIGINAL[1]: seglen == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 1
  ORIGINAL[2]: ( *seg) == 46
  TYPE[2]: CALL
  TOKENIZED[2]: ( *seg ) == 46
  ORIGINAL[3]: ( *ptr) == 47 && ( *(ptr + 1)) == 47
  TYPE[3]: CALL
  TOKENIZED[3]: ( *ptr ) == 47 && ( * ( VAR1 + 1 ) ) == 47
  ORIGINAL[4]: ( *ptr) == 47
  TYPE[4]: CALL
  TOKENIZED[4]: ( *ptr ) == 47
  ORIGINAL[5]: *ptr
  TYPE[5]: CALL
  TOKENIZED[5]: *ptr
  ORIGINAL[6]: ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772241
FRAGMENT_COUNT: 2
  ORIGINAL[0]: relpath_is_canonical(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771956
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(relpath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477499
FRAGMENT_COUNT: 4
  ORIGINAL[0]: relpath_is_canonical(relpath1)?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) ? ( ( void ) 0 ) : FUN2 ( \
  ORIGINAL[1]: relpath_is_canonical(relpath2)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: relpath2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: relpath2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477192
FRAGMENT_COUNT: 3
  ORIGINAL[0]: internal_style(relpath,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772104
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len = strlen(parent_relpath)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: strlen(parent_relpath)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parent_relpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771148
FRAGMENT_COUNT: 7
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: dirent_root_length(dirent,len + 1) == len + 1
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 + 1 ) == VAR2 + 1
  ORIGINAL[2]: dirent_root_length(dirent,len + 1)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 + 1 )
  ORIGINAL[3]: len + 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 + 1
  ORIGINAL[4]: len + 1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 + 1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477512
FRAGMENT_COUNT: 5
  ORIGINAL[0]: uri1[i]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: uri1[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: uri1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: uri1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719477645
FRAGMENT_COUNT: 3
  ORIGINAL[0]: canonicalize(type_uri,uri,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_uri
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771192
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: root_length = uri_schema_root_length(uri,len)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[2]: uri_schema_root_length(uri,len)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: root_length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772154
FRAGMENT_COUNT: 3
  ORIGINAL[0]: uri_skip_ancestor(parent_uri,child_uri) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 ) != ( ( void * ) 0 )
  ORIGINAL[1]: uri_skip_ancestor(parent_uri,child_uri)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 30064771731
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_dirent_canonicalize(internal_style(dirent,pool),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , VAR2 ) , VAR2 )
  ORIGINAL[1]: internal_style(dirent,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477542
FRAGMENT_COUNT: 3
  ORIGINAL[0]: is_child(type_dirent,parent_dirent,child_dirent,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: type_dirent
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: parent_dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772028
FRAGMENT_COUNT: 4
  ORIGINAL[0]: apr_pstrndup(pool,dirent1,get_longest_ancestor_length(type_dirent,dirent1,dirent2,pool))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , FUN2 ( VAR3 , VAR2 , VAR4 , VAR1 ) )
  ORIGINAL[1]: get_longest_ancestor_length(type_dirent,dirent1,dirent2,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478151
FRAGMENT_COUNT: 4
  ORIGINAL[0]: strchr(result,47) == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 47 ) == ( ( void * ) 0 )
  ORIGINAL[1]: __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __PRETTY_FUNCTION__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> __PRETTY_FUNCTION__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719477911
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pcondensed_targets != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: sizeof(const char *)
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( const char * )
  ORIGINAL[2]: num_condensed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: const char
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: const char

CENTER_NODE: 68719477772
FRAGMENT_COUNT: 13
  ORIGINAL[0]: !( *ptr)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( *ptr )
  ORIGINAL[1]: *ptr
  TYPE[1]: CALL
  TOKENIZED[1]: *ptr
  ORIGINAL[2]: seg = ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: ptr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: seg
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ptr
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: ptr
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: ptr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: ptr
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064771923
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len == dirent_root_length(dirent,len)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == FUN1 ( VAR2 , VAR1 )
  ORIGINAL[1]: apr_pstrmemdup(pool,dirent,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 1
  ORIGINAL[0]: base_name
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719478199
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_path_is_url(uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: uri = svn_fspath__canonicalize(uri,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: svn_fspath__canonicalize(uri,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[3]: uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: uri
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: uri
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640511
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771733
FRAGMENT_COUNT: 3
  ORIGINAL[0]: dirent[0] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\0'
  ORIGINAL[1]: dirent[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478057
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *result_path = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *result_path = ( ( void * ) 0 )
  ORIGINAL[1]: status = apr_filepath_merge(&full_path,base_path,path,0x01 | 0x02,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( &full_path , VAR2 , VAR3 , 0x01 | 0x02 , VAR4 )
  ORIGINAL[2]: apr_filepath_merge(&full_path,base_path,path,0x01 | 0x02,result_pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &full_path , VAR1 , VAR2 , 0x01 | 0x02 , VAR3 )
  ORIGINAL[3]: result_path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: status
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: full_path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: status
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640423
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640443
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772855
FRAGMENT_COUNT: 6
  ORIGINAL[0]: len == 1 && fspath[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1 && VAR2 [ 0 ] == 47
  ORIGINAL[1]: len == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 1
  ORIGINAL[2]: fspath[0] == 47
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == 47
  ORIGINAL[3]: fspath[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ]
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: fspath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640456
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477649
FRAGMENT_COUNT: 4
  ORIGINAL[0]: canonicalize(type_relpath,relpath,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: type_relpath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477660
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ( *ptr) == 47
  TYPE[0]: CALL
  TOKENIZED[0]: ( *ptr ) == 47
  ORIGINAL[1]: *ptr
  TYPE[1]: CALL
  TOKENIZED[1]: *ptr
  ORIGINAL[2]: ptr++
  TYPE[2]: CALL
  TOKENIZED[2]: ptr++
  ORIGINAL[3]: relpath_is_canonical(ptr)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772845
FRAGMENT_COUNT: 10
  ORIGINAL[0]: fspath[0] == 47 && fspath[1] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47 && VAR1 [ 1 ] == '\\0'
  ORIGINAL[1]: fspath[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: fspath[1] == '\\0'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 1 ] == '\\0'
  ORIGINAL[3]: apr_pstrcat(pool,\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , \
  ORIGINAL[4]: svn_relpath_canonicalize(fspath,pool)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: (char *)((void *)0)
  TYPE[5]: CALL
  TOKENIZED[5]: ( char * ) ( ( void * ) 0 )
  ORIGINAL[6]: (void *)0
  TYPE[6]: CALL
  TOKENIZED[6]: ( void * ) 0
  ORIGINAL[7]: pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: fspath
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: pool
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477399
FRAGMENT_COUNT: 6
  ORIGINAL[0]: dirent + start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + VAR2
  ORIGINAL[1]: len - start
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: start
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477436
FRAGMENT_COUNT: 6
  ORIGINAL[0]: relpath + start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + VAR2
  ORIGINAL[1]: len - start
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: start
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477304
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(base[0] == '\\0')
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 [ 0 ] == '\\0' )
  ORIGINAL[1]: p += len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += VAR2
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477608
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !dirent
  TYPE[0]: CALL
  TOKENIZED[0]: !dirent
  ORIGINAL[1]: dirent[0]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ]
  ORIGINAL[2]: dirent
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477556
FRAGMENT_COUNT: 7
  ORIGINAL[0]: child_dirent[len] == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 0
  ORIGINAL[1]: root_len = dirent_root_length(child_dirent,strlen(child_dirent))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , FUN2 ( VAR2 ) )
  ORIGINAL[2]: root_len > len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > VAR2
  ORIGINAL[3]: root_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: root_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: root_len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771740
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: dirent[0] == 47
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 0 ] == 47
  ORIGINAL[2]: dirent[0]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ]
  ORIGINAL[3]: dirent
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771984
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dirpath != base_name?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != base_name? ( ( void ) 0 ) : FUN1 ( \
  ORIGINAL[1]: dirpath != base_name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: __assert_fail(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: <global> __PRETTY_FUNCTION__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 47244640382
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while ((s = (va_arg(va,const char *))) != ((void *)0))
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( ( VAR1 = ( FUN1 ( VAR2 , const char * ) ) ) != ( ( void * ) 0 ) )

CENTER_NODE: 47244640288
FRAGMENT_COUNT: 1
  ORIGINAL[0]: dirent[0] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == 47

CENTER_NODE: 30064772186
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_dirent_is_absolute(relative) && svn_dirent_is_canonical(relative,pool) && !svn_path_is_backpath_present(relative)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) && FUN2 ( VAR1 , VAR2 ) && !svn_path_is_backpath_present ( VAR1 )
  ORIGINAL[1]: svn_error_create(apr_err,((void *)0),((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: apr_err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478137
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_fspath__is_canonical(fspath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __PRETTY_FUNCTION__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640506
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477599
FRAGMENT_COUNT: 4
  ORIGINAL[0]: uri_skip_ancestor(parent_uri,child_uri)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: result
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: parent_uri
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: child_uri
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640566
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478131
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_fspath__is_canonical(parent_fspath)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: __assert_fail(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: <global> __PRETTY_FUNCTION__
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> __PRETTY_FUNCTION__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719477472
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_uri_is_root(uri,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: start = len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: start
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 1
  ORIGINAL[0]: path1[i] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == 47

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 16
  ORIGINAL[0]: ( *src) == '['
  TYPE[0]: CALL
  TOKENIZED[0]: ( *src ) == ' [ '
  ORIGINAL[1]: *src && ( *src) != 47 && ( *src) != ':'
  TYPE[1]: CALL
  TOKENIZED[1]: *src && ( *src ) != 47 && ( *src ) != ':'
  ORIGINAL[2]: *src && ( *src) != 47
  TYPE[2]: CALL
  TOKENIZED[2]: *src && ( *src ) != 47
  ORIGINAL[3]: *src
  TYPE[3]: CALL
  TOKENIZED[3]: *src
  ORIGINAL[4]: ( *src) != ':'
  TYPE[4]: CALL
  TOKENIZED[4]: ( *src ) != ':'
  ORIGINAL[5]: *(dst++) = canonicalize_to_lower( *(src++))
  TYPE[5]: CALL
  TOKENIZED[5]: * ( dst++ ) = FUN1 ( * ( src++ ) )
  ORIGINAL[6]: *(dst++)
  TYPE[6]: CALL
  TOKENIZED[6]: * ( dst++ )
  ORIGINAL[7]: dst++
  TYPE[7]: CALL
  TOKENIZED[7]: dst++
  ORIGINAL[8]: canonicalize_to_lower( *(src++))
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( * ( src++ ) )
  ORIGINAL[9]: *(src++)
  TYPE[9]: CALL
  TOKENIZED[9]: * ( src++ )
  ORIGINAL[10]: src++
  TYPE[10]: CALL
  TOKENIZED[10]: src++
  ORIGINAL[11]: while (*src && ( *src) != 47 && ( *src) != ':')
  TYPE[11]: CONTROL_STRUCTURE
  TOKENIZED[11]: while ( *src && ( *src ) != 47 && ( *src ) != ':' )
  ORIGINAL[12]: src
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: dst
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: src
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: src
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1

CENTER_NODE: 47244640488
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476738
FRAGMENT_COUNT: 3
  ORIGINAL[0]: type_dirent=1
  TYPE[0]: CALL
  TOKENIZED[0]: type_dirent=1
  ORIGINAL[1]: type_relpath=2
  TYPE[1]: CALL
  TOKENIZED[1]: type_relpath=2
  ORIGINAL[2]: type_relpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476742
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mg_vprintf_data((struct mg_connection*) stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( struct mg_connection* ) VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: (struct mg_connection*) stonesoup_printf_context
  TYPE[1]: CALL
  TOKENIZED[1]: ( struct mg_connection* ) VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772900
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dirpath != base_name?((void )0) : __assert_fail(\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != base_name? ( ( void ) 0 ) : FUN1 ( \
  ORIGINAL[1]: dirpath != base_name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: __assert_fail(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: <global> __PRETTY_FUNCTION__
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 47244640447
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478008
FRAGMENT_COUNT: 8
  ORIGINAL[0]: strcmp(ancestor,uri_i) == 0
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 ) == 0
  ORIGINAL[1]: removed[j] = !0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = !0
  ORIGINAL[2]: num_condensed--
  TYPE[2]: CALL
  TOKENIZED[2]: num_condensed--
  ORIGINAL[3]: num_condensed
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: num_condensed
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: num_condensed
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: num_condensed
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: num_condensed
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640575
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771170
FRAGMENT_COUNT: 10
  ORIGINAL[0]: i > 0 && uri[i - 1] == ':' && i < len - 1 && uri[i + 1] == 47
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0 && VAR2 [ VAR1 - 1 ] == ':' && VAR1 < VAR3 - 1 && VAR2 [ VAR1 + 1 ] == 47
  ORIGINAL[1]: i == 5 && strncmp(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 5 && FUN1 ( \
  ORIGINAL[2]: i == 5
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 5
  ORIGINAL[3]: strncmp(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: i += 2
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 += 2
  ORIGINAL[5]: i < len
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 < VAR2
  ORIGINAL[6]: if (i == 5 && strncmp(\
  TYPE[6]: CONTROL_STRUCTURE
  TOKENIZED[6]: if ( VAR1 == 5 && FUN1 ( \
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: len
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477166
FRAGMENT_COUNT: 6
  ORIGINAL[0]: path1[i] == '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] == '\\0'
  ORIGINAL[1]: path2[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476751
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ev == MG_REQUEST
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: ifmatch_header = (char*) mg_get_header(conn, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 , \
  ORIGINAL[2]: strcmp(ifmatch_header, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: ifmatch_header
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ifmatch_header
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

