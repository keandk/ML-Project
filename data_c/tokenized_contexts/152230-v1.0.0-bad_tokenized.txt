# Tokenized code fragments for 152230-v1.0.0-bad
# Total center nodes processed: 57
# Total code fragments found: 309

CENTER_NODE: 47244640270
FRAGMENT_COUNT: 1
  ORIGINAL[0]: err == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0

CENTER_NODE: 68719477219
FRAGMENT_COUNT: 8
  ORIGINAL[0]: svn_error_createf(SVN_ERR_BAD_CONFIG_VALUE,((void *)0),(dgettext(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: dgettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: input
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: section
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: SVN_ERR_BAD_CONFIG_VALUE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: input
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: option
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477383
FRAGMENT_COUNT: 8
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b -> key
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: b
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: b
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640381
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771158
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *atalie_yade[49] = {0}
  TYPE[0]: CALL
  TOKENIZED[0]: *atalie_yade [ 49 ] = { 0 }
  ORIGINAL[1]: *atalie_yade[49] = {0}
  TYPE[1]: CALL
  TOKENIZED[1]: *atalie_yade [ 49 ] = { 0 }
  ORIGINAL[2]: atalie_yade
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477599
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: unfret_medievalisms(unprismatical_houbara,unfretty_lichenivorous)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: unprismatical_houbara
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: unfretty_lichenivorous
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477287
FRAGMENT_COUNT: 3
  ORIGINAL[0]: bool_val?svn_tristate_true : svn_tristate_false
  TYPE[0]: CALL
  TOKENIZED[0]: bool_val?svn_tristate_true : VAR1
  ORIGINAL[1]: bool_val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_tristate_true
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477233
FRAGMENT_COUNT: 3
  ORIGINAL[0]: value?\
  TYPE[0]: CALL
  TOKENIZED[0]: value?\
  ORIGINAL[1]: option
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476976
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: section_names_case_sensitive
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: must_exist
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771115
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context = fopen(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(filepath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477524
FRAGMENT_COUNT: 6
  ORIGINAL[0]: cfg -> tmp_key
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cfg -> sections
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cfg -> tmp_key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: tmp_key
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477582
FRAGMENT_COUNT: 23
  ORIGINAL[0]: schuit_bonnibel > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: stonesoup_i < strlen(moniliales_twaddliest)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < FUN1 ( VAR2 )
  ORIGINAL[2]: moniliales_twaddliest[stonesoup_i] == ';'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ] == ' ; '
  ORIGINAL[3]: stonesoup_i == 0 || moniliales_twaddliest[stonesoup_i - 1] != '\\\\'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 == 0 || VAR2 [ VAR1 - 1 ] != '\\\\'
  ORIGINAL[4]: moniliales_twaddliest[stonesoup_i] == '|'
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ] == '|'
  ORIGINAL[5]: stonesoup_i == 0 || moniliales_twaddliest[stonesoup_i - 1] != '\\\\'
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 == 0 || VAR2 [ VAR1 - 1 ] != '\\\\'
  ORIGINAL[6]: moniliales_twaddliest[stonesoup_i] == '|'
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ VAR2 ] == '|'
  ORIGINAL[7]: stonesoup_i == 0 || moniliales_twaddliest[stonesoup_i - 1] != '|'
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 == 0 || VAR2 [ VAR1 - 1 ] != '|'
  ORIGINAL[8]: moniliales_twaddliest[stonesoup_i] == '&'
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 [ VAR2 ] == '&'
  ORIGINAL[9]: stonesoup_i == 0 || moniliales_twaddliest[stonesoup_i - 1] != '\\\\'
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 == 0 || VAR2 [ VAR1 - 1 ] != '\\\\'
  ORIGINAL[10]: moniliales_twaddliest[stonesoup_i] == '&'
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 [ VAR2 ] == '&'
  ORIGINAL[11]: stonesoup_i == 0 || moniliales_twaddliest[stonesoup_i - 1] != '&'
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 == 0 || VAR2 [ VAR1 - 1 ] != '&'
  ORIGINAL[12]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[12]: CALL
  TOKENIZED[12]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[13]: break;
  TYPE[13]: CONTROL_STRUCTURE
  TOKENIZED[13]: break ;
  ORIGINAL[14]: break;
  TYPE[14]: CONTROL_STRUCTURE
  TOKENIZED[14]: break ;
  ORIGINAL[15]: break;
  TYPE[15]: CONTROL_STRUCTURE
  TOKENIZED[15]: break ;
  ORIGINAL[16]: break;
  TYPE[16]: CONTROL_STRUCTURE
  TOKENIZED[16]: break ;
  ORIGINAL[17]: break;
  TYPE[17]: CONTROL_STRUCTURE
  TOKENIZED[17]: break ;
  ORIGINAL[18]: stonesoup_trace
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: stonesoup_trace
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: trace_point
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: stonesoup_trace
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: stonesoup_trace
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1

CENTER_NODE: 30064771543
FRAGMENT_COUNT: 3
  ORIGINAL[0]: remove_expansions(cfg)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: opt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771375
FRAGMENT_COUNT: 5
  ORIGINAL[0]: x_pool?x_pool : svn_pool_create_ex(cfg -> x_pool,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: x_pool?x_pool : FUN1 ( VAR1 -> VAR2 , ( ( void * ) 0 ) )
  ORIGINAL[1]: svn_pool_create_ex(cfg -> x_pool,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , ( ( void * ) 0 ) )
  ORIGINAL[2]: cfg -> x_pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: x_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477024
FRAGMENT_COUNT: 4
  ORIGINAL[0]: opt == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: apr_strnatcasecmp(section,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771676
FRAGMENT_COUNT: 6
  ORIGINAL[0]: sec_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: !callback(sec -> name,baton,iteration_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: !callback ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: callback(sec -> name,baton,iteration_pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[3]: sec -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: iteration_pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771279
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_set(baton,section -> name,option -> name,option -> value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR4 -> VAR3 , VAR4 -> VAR5 )
  ORIGINAL[1]: section -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: option -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: option -> value
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640299
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640294
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771601
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_set(cfg,section,option,(apr_psprintf(cfg -> pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( FUN2 ( VAR1 -> VAR4 , \
  ORIGINAL[1]: apr_psprintf(cfg -> pool,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , \
  ORIGINAL[2]: cfg -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771800
FRAGMENT_COUNT: 70
  ORIGINAL[0]: sectidx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: optidx != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: optidx = apr_hash_next(optidx)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[4]: apr_hash_next(optidx)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: apr_hash_this(optidx,&optkey,&optkeyLength,&optval)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , &optkey , &optkeyLength , &optval )
  ORIGINAL[6]: &optkey
  TYPE[6]: CALL
  TOKENIZED[6]: &optkey
  ORIGINAL[7]: &optkeyLength
  TYPE[7]: CALL
  TOKENIZED[7]: &optkeyLength
  ORIGINAL[8]: &optval
  TYPE[8]: CALL
  TOKENIZED[8]: &optval
  ORIGINAL[9]: srcopt = optval
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 = VAR2
  ORIGINAL[10]: svn_config_create_option(&destopt,srcopt -> name,srcopt -> value,( *cfgp) -> option_names_case_sensitive,pool)
  TYPE[10]: CALL
  TOKENIZED[10]: FUN1 ( &destopt , VAR1 -> VAR2 , VAR1 -> VAR3 , ( *cfgp ) -> VAR4 , VAR5 )
  ORIGINAL[11]: &destopt
  TYPE[11]: CALL
  TOKENIZED[11]: &destopt
  ORIGINAL[12]: srcopt -> name
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: srcopt -> value
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: ( *cfgp) -> option_names_case_sensitive
  TYPE[14]: CALL
  TOKENIZED[14]: ( *cfgp ) -> VAR1
  ORIGINAL[15]: *cfgp
  TYPE[15]: CALL
  TOKENIZED[15]: *cfgp
  ORIGINAL[16]: destopt -> value = (apr_pstrdup(pool,srcopt -> value))
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2 = ( FUN1 ( VAR3 , VAR4 -> VAR2 ) )
  ORIGINAL[17]: destopt -> value
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 -> VAR2
  ORIGINAL[18]: apr_pstrdup(pool,srcopt -> value)
  TYPE[18]: CALL
  TOKENIZED[18]: FUN1 ( VAR1 , VAR2 -> VAR3 )
  ORIGINAL[19]: srcopt -> value
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 -> VAR2
  ORIGINAL[20]: destopt -> x_value = (apr_pstrdup(pool,srcopt -> x_value))
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 -> VAR2 = ( FUN1 ( VAR3 , VAR4 -> VAR2 ) )
  ORIGINAL[21]: destopt -> x_value
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 -> VAR2
  ORIGINAL[22]: apr_pstrdup(pool,srcopt -> x_value)
  TYPE[22]: CALL
  TOKENIZED[22]: FUN1 ( VAR1 , VAR2 -> VAR3 )
  ORIGINAL[23]: srcopt -> x_value
  TYPE[23]: CALL
  TOKENIZED[23]: VAR1 -> VAR2
  ORIGINAL[24]: destopt -> expanded = srcopt -> expanded
  TYPE[24]: CALL
  TOKENIZED[24]: VAR1 -> VAR2 = VAR3 -> VAR2
  ORIGINAL[25]: destopt -> expanded
  TYPE[25]: CALL
  TOKENIZED[25]: VAR1 -> VAR2
  ORIGINAL[26]: srcopt -> expanded
  TYPE[26]: CALL
  TOKENIZED[26]: VAR1 -> VAR2
  ORIGINAL[27]: apr_hash_set(destsec -> options,(apr_pstrdup(pool,((const char *)optkey))),optkeyLength,destopt)
  TYPE[27]: CALL
  TOKENIZED[27]: FUN1 ( VAR1 -> VAR2 , ( FUN2 ( VAR3 , ( ( const char * ) VAR4 ) ) ) , VAR5 , VAR6 )
  ORIGINAL[28]: destsec -> options
  TYPE[28]: CALL
  TOKENIZED[28]: VAR1 -> VAR2
  ORIGINAL[29]: apr_pstrdup(pool,((const char *)optkey))
  TYPE[29]: CALL
  TOKENIZED[29]: FUN1 ( VAR1 , ( ( const char * ) VAR2 ) )
  ORIGINAL[30]: (const char *)optkey
  TYPE[30]: CALL
  TOKENIZED[30]: ( const char * ) VAR1
  ORIGINAL[31]: for (optidx = apr_hash_first(pool,srcsect -> options);optidx != ((void *)0);optidx = apr_hash_next(optidx))
  TYPE[31]: CONTROL_STRUCTURE
  TOKENIZED[31]: for ( VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 ) ; VAR1 != ( ( void * ) 0 ) ; VAR1 = FUN2 ( VAR1 ) )
  ORIGINAL[32]: name
  TYPE[32]: FIELD_IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: value
  TYPE[33]: FIELD_IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: option_names_case_sensitive
  TYPE[34]: FIELD_IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: value
  TYPE[35]: FIELD_IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: value
  TYPE[36]: FIELD_IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: x_value
  TYPE[37]: FIELD_IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: x_value
  TYPE[38]: FIELD_IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: expanded
  TYPE[39]: FIELD_IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: expanded
  TYPE[40]: FIELD_IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: options
  TYPE[41]: FIELD_IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: sectidx
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: VAR1
  ORIGINAL[43]: optidx
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: VAR1
  ORIGINAL[44]: optidx
  TYPE[44]: IDENTIFIER
  TOKENIZED[44]: VAR1
  ORIGINAL[45]: optidx
  TYPE[45]: IDENTIFIER
  TOKENIZED[45]: VAR1
  ORIGINAL[46]: optidx
  TYPE[46]: IDENTIFIER
  TOKENIZED[46]: VAR1
  ORIGINAL[47]: optkey
  TYPE[47]: IDENTIFIER
  TOKENIZED[47]: VAR1
  ORIGINAL[48]: optkeyLength
  TYPE[48]: IDENTIFIER
  TOKENIZED[48]: VAR1
  ORIGINAL[49]: optval
  TYPE[49]: IDENTIFIER
  TOKENIZED[49]: VAR1
  ORIGINAL[50]: srcopt
  TYPE[50]: IDENTIFIER
  TOKENIZED[50]: VAR1
  ORIGINAL[51]: optval
  TYPE[51]: IDENTIFIER
  TOKENIZED[51]: VAR1
  ORIGINAL[52]: destopt
  TYPE[52]: IDENTIFIER
  TOKENIZED[52]: VAR1
  ORIGINAL[53]: srcopt
  TYPE[53]: IDENTIFIER
  TOKENIZED[53]: VAR1
  ORIGINAL[54]: srcopt
  TYPE[54]: IDENTIFIER
  TOKENIZED[54]: VAR1
  ORIGINAL[55]: cfgp
  TYPE[55]: IDENTIFIER
  TOKENIZED[55]: VAR1
  ORIGINAL[56]: pool
  TYPE[56]: IDENTIFIER
  TOKENIZED[56]: VAR1
  ORIGINAL[57]: destopt
  TYPE[57]: IDENTIFIER
  TOKENIZED[57]: VAR1
  ORIGINAL[58]: pool
  TYPE[58]: IDENTIFIER
  TOKENIZED[58]: VAR1
  ORIGINAL[59]: srcopt
  TYPE[59]: IDENTIFIER
  TOKENIZED[59]: VAR1
  ORIGINAL[60]: destopt
  TYPE[60]: IDENTIFIER
  TOKENIZED[60]: VAR1
  ORIGINAL[61]: pool
  TYPE[61]: IDENTIFIER
  TOKENIZED[61]: VAR1
  ORIGINAL[62]: srcopt
  TYPE[62]: IDENTIFIER
  TOKENIZED[62]: VAR1
  ORIGINAL[63]: destopt
  TYPE[63]: IDENTIFIER
  TOKENIZED[63]: VAR1
  ORIGINAL[64]: srcopt
  TYPE[64]: IDENTIFIER
  TOKENIZED[64]: VAR1
  ORIGINAL[65]: destsec
  TYPE[65]: IDENTIFIER
  TOKENIZED[65]: VAR1
  ORIGINAL[66]: pool
  TYPE[66]: IDENTIFIER
  TOKENIZED[66]: VAR1
  ORIGINAL[67]: optkey
  TYPE[67]: IDENTIFIER
  TOKENIZED[67]: VAR1
  ORIGINAL[68]: optkeyLength
  TYPE[68]: IDENTIFIER
  TOKENIZED[68]: VAR1
  ORIGINAL[69]: destopt
  TYPE[69]: IDENTIFIER
  TOKENIZED[69]: VAR1

CENTER_NODE: 68719477268
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &tmp_value
  TYPE[0]: CALL
  TOKENIZED[0]: &tmp_value
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tmp_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tmp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477170
FRAGMENT_COUNT: 6
  ORIGINAL[0]: default_value && strchr(default_value,37)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && FUN1 ( VAR1 , 37 )
  ORIGINAL[1]: expand_option_value(cfg,sec,default_value,&x_default,tmp_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , &x_default , VAR4 )
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sec
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: default_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: x_default
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771764
FRAGMENT_COUNT: 7
  ORIGINAL[0]: &retval
  TYPE[0]: CALL
  TOKENIZED[0]: &retval
  ORIGINAL[1]: svn_config_get(cfg,&retval,server_group,option_name,retval)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &retval , VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: &retval
  TYPE[2]: CALL
  TOKENIZED[2]: &retval
  ORIGINAL[3]: server_group
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: retval
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: server_group
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: retval
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771830
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *cfg_hash = apr_hash_make(pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg_hash = FUN1 ( VAR1 )
  ORIGINAL[1]: *cfg_hash
  TYPE[1]: CALL
  TOKENIZED[1]: *cfg_hash
  ORIGINAL[2]: apr_hash_make(pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: cidx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477507
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ( *end_pos) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *end_pos ) != 0
  ORIGINAL[1]: svn_error_createf(SVN_ERR_BAD_CONFIG_VALUE,((void *)0),(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( FUN2 ( \
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: SVN_ERR_BAD_CONFIG_VALUE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tmp_value
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771728
FRAGMENT_COUNT: 8
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(opt_ndx,((void *)0),((void *)0),&opt_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , &opt_ptr )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: &opt_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: &opt_ptr
  ORIGINAL[5]: opt_ndx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt_ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: opt_ptr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771298
FRAGMENT_COUNT: 4
  ORIGINAL[0]: option -> expanded && option -> x_value != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3 != ( ( void * ) 0 )
  ORIGINAL[1]: option -> x_value = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: option -> x_value
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 68719476927
FRAGMENT_COUNT: 6
  ORIGINAL[0]: &cfg
  TYPE[0]: CALL
  TOKENIZED[0]: &cfg
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cfg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771618
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *valuep = ((bool_val?\
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = ( ( bool_val?\
  ORIGINAL[1]: *valuep
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep
  ORIGINAL[2]: bool_val?\
  TYPE[2]: CALL
  TOKENIZED[2]: bool_val?\
  ORIGINAL[3]: bool_val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640362
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771484
FRAGMENT_COUNT: 11
  ORIGINAL[0]: s -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: hash_key = s -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 -> VAR3
  ORIGINAL[3]: s -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: name
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: hash_key
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771306
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !cfg -> x_values
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: apr_pool_clear(cfg -> x_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[2]: cfg -> x_pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477224
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_get(cfg,&tmp_value,section,option,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &tmp_value , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: section
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: option
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476877
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *cfgp
  TYPE[0]: CALL
  TOKENIZED[0]: *cfgp
  ORIGINAL[1]: *cfgp
  TYPE[1]: CALL
  TOKENIZED[1]: *cfgp
  ORIGINAL[2]: cfgp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: red_config
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfgp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 5
  ORIGINAL[0]: o -> hash_key = o -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[1]: o -> hash_key
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: o -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: option_names_case_sensitive
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: o
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476952
FRAGMENT_COUNT: 8
  ORIGINAL[0]: sec_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(sec_ndx,((void *)0),((void *)0),&sec_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , &sec_ptr )
  ORIGINAL[2]: sec = sec_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2
  ORIGINAL[3]: sec -> options
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: sec
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: sec_ptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: sec
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: sec
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771640
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sec_ndx = apr_hash_first(subpool,cfg -> sections)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 )
  ORIGINAL[1]: apr_hash_first(subpool,cfg -> sections)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 )
  ORIGINAL[2]: for (sec_ndx = apr_hash_first(subpool,cfg -> sections);sec_ndx != ((void *)0);sec_ndx = apr_hash_next(sec_ndx))
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 ) ; VAR1 != ( ( void * ) 0 ) ; VAR1 = FUN2 ( VAR1 ) )
  ORIGINAL[3]: sec_ndx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sec_ndx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771233
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !config_dir
  TYPE[0]: CALL
  TOKENIZED[0]: !config_dir
  ORIGINAL[1]: err && err -> apr_err == SVN_ERR_BAD_FILENAME
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 && VAR1 -> VAR2 == VAR3
  ORIGINAL[2]: *svn_err__temp = svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: *svn_err__temp = FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[4]: err
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: svn_err__temp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476802
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *cfg
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg
  ORIGINAL[1]: cfg -> sections
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: cfg -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cfg -> x_pool = svn_pool_create_ex(result_pool,((void *)0))
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = FUN1 ( VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[4]: cfg -> x_pool
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cfg -> x_values
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: x_values
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cfg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cfg
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477401
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_enumerate2(cfg,master_section,search_groups,(&gb),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( &gb ) , VAR4 )
  ORIGINAL[1]: &gb
  TYPE[1]: CALL
  TOKENIZED[1]: &gb
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771699
FRAGMENT_COUNT: 8
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(opt_ndx,((void *)0),((void *)0),&opt_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , &opt_ptr )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: &opt_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: &opt_ptr
  ORIGINAL[5]: opt_ndx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt_ptr
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: opt_ptr
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640287
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771314
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ( *p) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 0
  ORIGINAL[1]: *p = ((char )(tolower(((unsigned char )( *p)))))
  TYPE[1]: CALL
  TOKENIZED[1]: *p = ( ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) ) )
  ORIGINAL[2]: *p
  TYPE[2]: CALL
  TOKENIZED[2]: *p
  ORIGINAL[3]: (char )(tolower(((unsigned char )( *p))))
  TYPE[3]: CALL
  TOKENIZED[3]: ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) )
  ORIGINAL[4]: for (p = key;( *p) != 0;++p)
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: for ( VAR1 = VAR2 ; ( *p ) != 0 ; ++p )
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640284
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477242
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *valuep = default_value
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = VAR1
  ORIGINAL[1]: *valuep
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep
  ORIGINAL[2]: tmp_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: default_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771867
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tmp_value = svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[2]: tmp_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: valuep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640356
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477106
FRAGMENT_COUNT: 5
  ORIGINAL[0]: x_opt != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: name_end + (sizeof(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + ( sizeof ( \
  ORIGINAL[2]: name_end
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parse_from
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: name_end
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771607
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !tmp_value
  TYPE[0]: CALL
  TOKENIZED[0]: !tmp_value
  ORIGINAL[1]: tmp_value = default_value
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: tmp_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: default_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

