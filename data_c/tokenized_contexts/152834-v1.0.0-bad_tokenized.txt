# Tokenized code fragments for 152834-v1.0.0-bad
# Total center nodes processed: 159
# Total code fragments found: 523

CENTER_NODE: 30064771561
FRAGMENT_COUNT: 5
  ORIGINAL[0]: err2 = svn_error_compose_create(svn_stream_close(from),svn_stream_close(to))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( FUN2 ( VAR2 ) , FUN2 ( VAR3 ) )
  ORIGINAL[1]: svn_error_compose_create(svn_stream_close(from),svn_stream_close(to))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( FUN2 ( VAR1 ) , FUN2 ( VAR2 ) )
  ORIGINAL[2]: svn_stream_close(from)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: svn_stream_close(to)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: err2
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477430
FRAGMENT_COUNT: 4
  ORIGINAL[0]: file == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: *baton
  TYPE[1]: CALL
  TOKENIZED[1]: *baton
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: baton
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476849
FRAGMENT_COUNT: 7
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: vfprintf(stonesoup_printf_context, format, argptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: <global> stonesoup_printf_context
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1
  ORIGINAL[6]: stonesoup_printf_context
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640408
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640495
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478052
FRAGMENT_COUNT: 6
  ORIGINAL[0]: lazyopen_if_unopened(b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: b -> real_stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640477
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771760
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *stream = svn_stream_from_aprfile2(file,0,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *stream = FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[1]: *stream
  TYPE[1]: CALL
  TOKENIZED[1]: *stream
  ORIGINAL[2]: svn_stream_from_aprfile2(file,0,result_pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0 , VAR2 )
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: file
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771663
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_set_write(s,write_handler_disown)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640482
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771372
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream_seek(stream,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0

CENTER_NODE: 30064771747
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *svn_err__temp = svn_io_file_open(&file,path,0x00001 | 0x00080,0x0FFF,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( &file , VAR1 , 0x00001 | 0x00080 , 0x0FFF , VAR2 )
  ORIGINAL[1]: svn_io_file_open(&file,path,0x00001 | 0x00080,0x0FFF,result_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &file , VAR1 , 0x00001 | 0x00080 , 0x0FFF , VAR2 )
  ORIGINAL[2]: &file
  TYPE[2]: CALL
  TOKENIZED[2]: &file
  ORIGINAL[3]: 0x00001 | 0x00080
  TYPE[3]: CALL
  TOKENIZED[3]: 0x00001 | 0x00080
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: result_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772426
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__from_spillbuf(1024,100000,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1024 , 100000 , VAR1 )
  ORIGINAL[1]: result_pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640480
FRAGMENT_COUNT: 1
  ORIGINAL[0]: len < 16384
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 16384

CENTER_NODE: 30064771365
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(stream -> write_fn != ((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 -> VAR2 != ( ( void * ) 0 ) )
  ORIGINAL[1]: *svn_err__temp = svn_error__malfunction(!0,\
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( !0 , \
  ORIGINAL[2]: svn_error__malfunction(!0,\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( !0 , \
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771164
FRAGMENT_COUNT: 3
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[2]: strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \

CENTER_NODE: 30064771535
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_skip(stream,total_parsed)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: total_parsed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477764
FRAGMENT_COUNT: 19
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> read_digest
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn -> pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn -> read_checksum
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: btn -> write_digest
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: btn -> pool
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: btn -> write_checksum
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: btn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: baton
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: btn
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: btn
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: btn
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: btn
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: btn
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: btn
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: btn
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: btn
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: btn
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 30064771385
FRAGMENT_COUNT: 15
  ORIGINAL[0]: stream -> seek_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: stream -> seek_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: svn_error_create(SVN_ERR_STREAM_SEEK_NOT_SUPPORTED,((void *)0),((void *)0))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: (void *)0
  TYPE[5]: CALL
  TOKENIZED[5]: ( void * ) 0
  ORIGINAL[6]: (stream -> seek_fn)(stream -> baton,mark)
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 )
  ORIGINAL[7]: stream -> seek_fn
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: stream -> baton
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: seek_fn
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: baton
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: SVN_ERR_STREAM_SEEK_NOT_SUPPORTED
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: stream
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: stream
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: mark
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 47244640422
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640399
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640489
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772129
FRAGMENT_COUNT: 11
  ORIGINAL[0]: btn -> write_ctx
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: svn_checksum_final(btn -> write_checksum,(btn -> write_ctx),btn -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , ( VAR1 -> VAR3 ) , VAR1 -> VAR4 )
  ORIGINAL[2]: btn -> write_checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn -> write_ctx
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: btn -> pool
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: write_checksum
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: btn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: btn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: btn
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: btn
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477308
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_seek(baton,mark)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771616
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream = svn_stream_create(((void *)0),pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( ( ( void * ) 0 ) , VAR2 )
  ORIGINAL[1]: svn_stream_create(((void *)0),pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( void * ) 0 ) , VAR1 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640389
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772176
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640374
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640485
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640343
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640507
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477417
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_io_open_unique_file3(&file,temp_path,dirpath,delete_when,result_pool,scratch_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &file , VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: &file
  TYPE[1]: CALL
  TOKENIZED[1]: &file
  ORIGINAL[2]: temp_path
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: delete_when
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: result_pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: scratch_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476964
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> read_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: read_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771804
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *len = ((uInt )apr_len)
  TYPE[0]: CALL
  TOKENIZED[0]: *len = ( ( VAR1 ) VAR2 )
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: (uInt )apr_len
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) VAR2
  ORIGINAL[3]: zflush
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771581
FRAGMENT_COUNT: 7
  ORIGINAL[0]: bytes_read1 == 16384 && bytes_read2 == 16384
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 16384 && VAR2 == 16384
  ORIGINAL[1]: svn_stream_read(stream1,buf1,&bytes_read1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , &bytes_read1 )
  ORIGINAL[2]: &bytes_read1
  TYPE[2]: CALL
  TOKENIZED[2]: &bytes_read1
  ORIGINAL[3]: bytes_read1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bytes_read1
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bytes_read1
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bytes_read1
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 6
  ORIGINAL[0]: a >= 'a'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 'a'
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: a
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: a
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771656
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_mark(baton,mark,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: mark
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640493
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477781
FRAGMENT_COUNT: 14
  ORIGINAL[0]: !read_digest && !write_digest
  TYPE[0]: CALL
  TOKENIZED[0]: !read_digest && !write_digest
  ORIGINAL[1]: baton = (apr_palloc(pool,sizeof(( *baton))))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 , sizeof ( ( *baton ) ) ) )
  ORIGINAL[2]: apr_palloc(pool,sizeof(( *baton)))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , sizeof ( ( *baton ) ) )
  ORIGINAL[3]: baton -> read_checksum
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: baton -> write_checksum
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: baton
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: baton
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: baton
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: baton
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: baton
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: baton
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: baton
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 47244640431
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477940
FRAGMENT_COUNT: 11
  ORIGINAL[0]: apr_err = apr_file_open_stdin(&stdin_file,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( &stdin_file , VAR2 )
  ORIGINAL[1]: svn_error_wrap_apr(apr_err,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: *in = svn_stream_from_aprfile2(stdin_file,!0,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: *in = FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[3]: *in
  TYPE[3]: CALL
  TOKENIZED[3]: *in
  ORIGINAL[4]: svn_stream_from_aprfile2(stdin_file,!0,pool)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[5]: !0
  TYPE[5]: CALL
  TOKENIZED[5]: !0
  ORIGINAL[6]: apr_err
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: apr_err
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: in
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stdin_file
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pool
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 68719478042
FRAGMENT_COUNT: 4
  ORIGINAL[0]: b -> open_on_close
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476988
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> mark_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: mark_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640346
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772276
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: mark
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477323
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640497
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477285
FRAGMENT_COUNT: 7
  ORIGINAL[0]: out2 == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 )
  ORIGINAL[1]: apr_palloc(pool,sizeof(( *baton)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( ( *baton ) ) )
  ORIGINAL[2]: sizeof(( *baton))
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( ( *baton ) )
  ORIGINAL[3]: baton
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: baton
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640333
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640500
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640310
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476952
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> write_fn = write_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> write_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: write_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477751
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640453
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477384
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: offset = mark != ((void *)0)?((const struct mark_apr *)mark) -> off : 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 != ( ( void * ) 0 ) ? ( ( const struct VAR3 * ) VAR2 ) -> VAR4 : 0
  ORIGINAL[2]: mark != ((void *)0)?((const struct mark_apr *)mark) -> off : 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 != ( ( void * ) 0 ) ? ( ( const struct VAR2 * ) VAR1 ) -> VAR3 : 0
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mark
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477881
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *len
  TYPE[0]: CALL
  TOKENIZED[0]: *len
  ORIGINAL[1]: *len
  TYPE[1]: CALL
  TOKENIZED[1]: *len
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771742
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (apr_file_flags_get(btn -> file) & 0x00080) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( FUN1 ( VAR1 -> VAR2 ) & 0x00080 ) != 0
  ORIGINAL[1]: apr_file_flags_get(btn -> file) & 0x00080
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 ) & 0x00080

CENTER_NODE: 68719477151
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *eof = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *eof = 0
  ORIGINAL[1]: svn_stream_supports_mark(stream)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477453
FRAGMENT_COUNT: 4
  ORIGINAL[0]: items * size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 * VAR2
  ORIGINAL[1]: pool
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: items
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477353
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *len == 1
  TYPE[0]: CALL
  TOKENIZED[0]: *len == 1
  ORIGINAL[1]: *data
  TYPE[1]: CALL
  TOKENIZED[1]: *data
  ORIGINAL[2]: btn -> file
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: file
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476961
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> seek_fn = seek_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> seek_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: seek_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640503
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771791
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> file
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: file
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771612
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *mark = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *mark = ( ( void * ) 0 )
  ORIGINAL[1]: *mark
  TYPE[1]: CALL
  TOKENIZED[1]: *mark
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 47244640425
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771322
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> read_fn = read_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> read_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: read_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477993
FRAGMENT_COUNT: 5
  ORIGINAL[0]: b -> real_stream == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: b -> open_func
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &stream
  TYPE[2]: CALL
  TOKENIZED[2]: &stream
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771655
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_write(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477364
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> file
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: btn -> pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772100
FRAGMENT_COUNT: 19
  ORIGINAL[0]: btn -> write_checksum &&  *len > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && *len > 0
  ORIGINAL[1]: btn -> write_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: *len > 0
  TYPE[2]: CALL
  TOKENIZED[2]: *len > 0
  ORIGINAL[3]: *svn_err__temp = svn_checksum_update(btn -> write_ctx,buffer, *len)
  TYPE[3]: CALL
  TOKENIZED[3]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , VAR3 , *len )
  ORIGINAL[4]: svn_checksum_update(btn -> write_ctx,buffer, *len)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 -> VAR2 , VAR3 , *len )
  ORIGINAL[5]: btn -> write_ctx
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: *len
  TYPE[6]: CALL
  TOKENIZED[6]: *len
  ORIGINAL[7]: svn_stream_write(btn -> proxy,buffer,len)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[8]: btn -> proxy
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: write_ctx
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: proxy
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: svn_err__temp
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: btn
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: buffer
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: len
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: svn_err__temp
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: btn
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buffer
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: len
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 68719477905
FRAGMENT_COUNT: 6
  ORIGINAL[0]: mark != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: marker = ((const struct string_stream_mark *)mark)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( const struct VAR2 * ) VAR3 )
  ORIGINAL[2]: btn -> amt_read
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: amt_read
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476798
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fprintf(stdout, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: out_filename
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stdout
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: shmid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477837
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *btn = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *btn = VAR1
  ORIGINAL[1]: btn -> str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: str
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478072
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b -> real_stream
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b -> real_stream
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: b
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477820
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *len
  TYPE[0]: CALL
  TOKENIZED[0]: *len
  ORIGINAL[1]: btn -> str -> data + btn -> amt_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 + VAR1 -> VAR4
  ORIGINAL[2]: *len
  TYPE[2]: CALL
  TOKENIZED[2]: *len
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771596
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buffer[4096]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 4096 ]
  ORIGINAL[1]: buffer[4096]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 4096 ]
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640326
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640349
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640442
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640324
FRAGMENT_COUNT: 1
  ORIGINAL[0]: svn_err__temp
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 30064771325
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> skip_fn = skip_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> skip_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: skip_fn
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: skip_fn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640463
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771433
FRAGMENT_COUNT: 5
  ORIGINAL[0]: numbytes != 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 1
  ORIGINAL[1]: *eof = !0
  TYPE[1]: CALL
  TOKENIZED[1]: *eof = !0
  ORIGINAL[2]: *eof
  TYPE[2]: CALL
  TOKENIZED[2]: *eof
  ORIGINAL[3]: !0
  TYPE[3]: CALL
  TOKENIZED[3]: !0
  ORIGINAL[4]: stringbuf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476990
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> mark_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: svn_error_create(SVN_ERR_STREAM_SEEK_NOT_SUPPORTED,((void *)0),((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: SVN_ERR_STREAM_SEEK_NOT_SUPPORTED
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640391
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477246
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *len
  TYPE[0]: CALL
  TOKENIZED[0]: *len
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771935
FRAGMENT_COUNT: 4
  ORIGINAL[0]: btn -> out == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (int )(sizeof(z_stream ))
  TYPE[1]: CALL
  TOKENIZED[1]: ( int ) ( sizeof ( VAR1 ) )
  ORIGINAL[2]: sizeof(z_stream )
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: z_stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640439
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771831
FRAGMENT_COUNT: 5
  ORIGINAL[0]: btn -> in == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: btn -> read_buffer = apr_palloc(btn -> pool,4096)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = FUN1 ( VAR1 -> VAR3 , 4096 )
  ORIGINAL[2]: btn -> read_buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: apr_palloc(btn -> pool,4096)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 -> VAR2 , 4096 )
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477664
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *svn_err__temp = svn_stream_read(btn -> proxy,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771321
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> baton = baton
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> baton
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: baton
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477300
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_skip(baton,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477278
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *svn_err__temp = svn_stream_close(bt -> out2)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[1]: svn_err__temp
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640478
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640402
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477952
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_from_aprfile2(stdout_file,!0,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772514
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: stonesoup_setup_printf_context()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: <global> stonesoup_global_variable
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640370
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478025
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772175
FRAGMENT_COUNT: 6
  ORIGINAL[0]: svn_stream_skip(btn -> proxy,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: btn -> proxy
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: proxy
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772358
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 47244640446
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476882
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *stonesoup_s != (char)0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_s != ( char ) 0
  ORIGINAL[1]: *stonesoup_s
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_s
  ORIGINAL[2]: *stonesoup_tainted_buff
  TYPE[2]: CALL
  TOKENIZED[2]: *stonesoup_tainted_buff
  ORIGINAL[3]: stonesoup_s - stonesoup_shm
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - VAR2
  ORIGINAL[4]: stonesoup_s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_shm
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stonesoup_s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064772363
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: apr_palloc(pool,sizeof(( *baton)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( ( *baton ) ) )
  ORIGINAL[2]: sizeof(( *baton))
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( ( *baton ) )
  ORIGINAL[3]: *baton
  TYPE[3]: CALL
  TOKENIZED[3]: *baton
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640395
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 3
  ORIGINAL[0]: __sync_bool_compare_and_swap(&vacuit_ploesti,0,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &vacuit_ploesti , 0 , 1 )
  ORIGINAL[1]: mkdir(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: mkdir(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \

CENTER_NODE: 47244640376
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640456
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640323
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478015
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772041
FRAGMENT_COUNT: 9
  ORIGINAL[0]: btn -> out != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: btn -> close != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[2]: btn -> close
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: close
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: btn
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: btn
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: btn
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640317
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640511
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772158
FRAGMENT_COUNT: 10
  ORIGINAL[0]: read_checksum == ((void *)0) && write_checksum == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( void * ) 0 ) && VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: baton -> write_checksum = write_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: baton -> write_checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: write_checksum
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: write_checksum
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: baton
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: baton
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: baton
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: baton
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477371
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_palloc(pool,sizeof(( *mark_apr)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , sizeof ( ( *mark_apr ) ) )
  ORIGINAL[1]: sizeof(( *mark_apr))
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( ( *mark_apr ) )
  ORIGINAL[2]: mark_apr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mark_apr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 2
  ORIGINAL[0]: svn_stream__is_buffered(baton)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719476958
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> mark_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: mark_fn
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640487
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640404
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640416
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640450
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640340
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476974
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> skip_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: skip_default_handler(stream -> baton,len,stream -> read_fn)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR1 -> VAR4 )
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477897
FRAGMENT_COUNT: 5
  ORIGINAL[0]: marker -> pos
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: btn -> amt_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: amt_read
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771300
FRAGMENT_COUNT: 12
  ORIGINAL[0]: stream -> skip_fn = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[1]: stream -> skip_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: skip_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stream
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stream
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stream
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: stream
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: stream
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: stream
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640387
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772286
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !0
  TYPE[0]: CALL
  TOKENIZED[0]: !0

CENTER_NODE: 30064772350
FRAGMENT_COUNT: 6
  ORIGINAL[0]: btn -> str -> len - btn -> amt_read
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 -> VAR3 - VAR1 -> VAR4
  ORIGINAL[1]: btn -> str -> len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[2]: btn -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: btn -> amt_read
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: len
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: btn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640509
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477960
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_stream_from_aprfile2(stderr_file,!0,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , !0 , VAR2 )
  ORIGINAL[1]: !0
  TYPE[1]: CALL
  TOKENIZED[1]: !0
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771405
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stream -> close_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> close_fn)(stream -> baton)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 )
  ORIGINAL[2]: stream -> baton
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: baton
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477258
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *bt = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *bt = VAR1
  ORIGINAL[1]: *svn_err__temp = svn_stream_write(bt -> out1,data,len)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: svn_stream_write(bt -> out1,data,len)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_err__temp
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772267
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stringbuf_stream_mark = (apr_palloc(pool,sizeof(( *stringbuf_stream_mark))))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 , sizeof ( ( *stringbuf_stream_mark ) ) ) )
  ORIGINAL[1]: apr_palloc(pool,sizeof(( *stringbuf_stream_mark)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( ( *stringbuf_stream_mark ) ) )
  ORIGINAL[2]: sizeof(( *stringbuf_stream_mark))
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( ( *stringbuf_stream_mark ) )
  ORIGINAL[3]: stringbuf_stream_mark
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477007
FRAGMENT_COUNT: 4
  ORIGINAL[0]: strlen(str)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477347
FRAGMENT_COUNT: 5
  ORIGINAL[0]: &offset
  TYPE[0]: CALL
  TOKENIZED[0]: &offset
  ORIGINAL[1]: btn -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pool
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: btn
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: btn
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771653
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_stream_read(baton,buffer,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771340
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream -> is_buffered_fn = is_buffered_fn
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = VAR2
  ORIGINAL[1]: stream -> is_buffered_fn
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: is_buffered_fn
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719478144
FRAGMENT_COUNT: 6
  ORIGINAL[0]: isValid(subplacenta_festers) == 1
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) == 1
  ORIGINAL[1]: urlDecode(subplacenta_festers, stonesoup_parsed_input)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: stonesoup_parsed_input
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subplacenta_festers
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_parsed_input
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_parsed_input
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640372
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772293
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !str
  TYPE[0]: CALL
  TOKENIZED[0]: !str
  ORIGINAL[1]: baton -> str = str
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: baton -> str
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: baton
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640491
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640351
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719478061
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *b = baton
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: baton
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477173
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stream_readline(stringbuf,eof,eol,stream,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: stream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476924
FRAGMENT_COUNT: 6
  ORIGINAL[0]: i == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: i-1
  TYPE[1]: CALL
  TOKENIZED[1]: i-1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_stream_set_close(zstream,close_handler_gz)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: zstream
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: zstream
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477012
FRAGMENT_COUNT: 4
  ORIGINAL[0]: __builtin_va_start(ap,fmt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: ap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: fmt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: fmt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772488
FRAGMENT_COUNT: 5
  ORIGINAL[0]: memset(apr_palloc(result_pool,sizeof(( *lob))),0,sizeof(( *lob)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 , sizeof ( ( *lob ) ) ) , 0 , sizeof ( ( *lob ) ) )
  ORIGINAL[1]: apr_palloc(result_pool,sizeof(( *lob)))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( ( *lob ) ) )
  ORIGINAL[2]: sizeof(( *lob))
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( ( *lob ) )
  ORIGINAL[3]: sizeof(( *lob))
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( ( *lob ) )
  ORIGINAL[4]: result_pool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772251
FRAGMENT_COUNT: 4
  ORIGINAL[0]: left_to_read = btn -> str -> len - btn -> amt_read
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3 -> VAR4 - VAR2 -> VAR5
  ORIGINAL[1]: btn -> str -> len - btn -> amt_read
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> VAR3 - VAR1 -> VAR4
  ORIGINAL[2]: left_to_read
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772444
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *svn_err__temp = lazyopen_if_unopened(b)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( VAR1 )
  ORIGINAL[1]: lazyopen_if_unopened(b)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640505
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640435
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771398
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stream -> is_buffered_fn == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: (stream -> is_buffered_fn)(stream -> baton)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 )
  ORIGINAL[2]: stream -> is_buffered_fn
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: is_buffered_fn
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stream
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stream
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

