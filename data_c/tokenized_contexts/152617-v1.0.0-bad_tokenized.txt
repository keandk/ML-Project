# Tokenized code fragments for 152617-v1.0.0-bad
# Total center nodes processed: 22
# Total code fragments found: 94

CENTER_NODE: 68719476849
FRAGMENT_COUNT: 6
  ORIGINAL[0]: num_nids--
  TYPE[0]: CALL
  TOKENIZED[0]: num_nids--
  ORIGINAL[1]: tmplate . nid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2
  ORIGINAL[2]: &tmplate
  TYPE[2]: CALL
  TOKENIZED[2]: &tmplate
  ORIGINAL[3]: nid
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmplate
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tmplate
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771561
FRAGMENT_COUNT: 4
  ORIGINAL[0]: unquoting_raucid > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: *(silhouettograph_dela - 5) != 0
  TYPE[1]: CALL
  TOKENIZED[1]: * ( VAR1 - 5 ) != 0
  ORIGINAL[2]: free(((char *)( *(silhouettograph_dela - 5))))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( ( char * ) ( * ( VAR1 - 5 ) ) ) )
  ORIGINAL[3]: stonesoup_close_printf_context()
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( )

CENTER_NODE: 68719477144
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[1]: strcpy(shm, str)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: shm
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: str
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771322
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (_STACK *)(1?p -> sk : ((struct stack_st_ENGINE *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 * ) ( 1?p -> VAR2 : ( ( struct VAR3 * ) 0 ) )
  ORIGINAL[1]: 1?p -> sk : ((struct stack_st_ENGINE *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: 1?p -> VAR1 : ( ( struct VAR2 * ) 0 )
  ORIGINAL[2]: p -> sk
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (struct stack_st_ENGINE *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( struct VAR1 * ) 0

CENTER_NODE: 68719476823
FRAGMENT_COUNT: 3
  ORIGINAL[0]: table_flags = flags
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> table_flags
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: flags
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476974
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771300
FRAGMENT_COUNT: 4
  ORIGINAL[0]: pile -> funct == e
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == VAR3
  ORIGINAL[1]: pile -> funct = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: pile -> funct
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 68719476827
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771444
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (dall -> cb)(pile -> nid,pile -> sk,pile -> funct,dall -> arg)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR3 -> VAR4 , VAR3 -> VAR5 , VAR3 -> VAR6 , VAR1 -> VAR7 )
  ORIGINAL[1]: pile -> nid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pile -> sk
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pile -> funct
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dall -> arg
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: sk
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pile
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pile
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476895
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771458
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &table -> piles
  TYPE[0]: CALL
  TOKENIZED[0]: &table -> VAR1
  ORIGINAL[1]: table -> piles
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: piles
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: table
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771306
FRAGMENT_COUNT: 3
  ORIGINAL[0]: CRYPTO_lock(1 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1 | 8 , 30 , \
  ORIGINAL[1]: 1 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 1 | 8
  ORIGINAL[2]: table
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771365
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *table
  TYPE[0]: CALL
  TOKENIZED[0]: *table
  ORIGINAL[1]: (_LHASH *)((void *)(&( *table) -> piles))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) ( ( void * ) ( & ( *table ) -> VAR2 ) )
  ORIGINAL[2]: (void *)(&( *table) -> piles)
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) ( & ( *table ) -> VAR1 )
  ORIGINAL[3]: &( *table) -> piles
  TYPE[3]: CALL
  TOKENIZED[3]: & ( *table ) -> VAR1

CENTER_NODE: 68719476824
FRAGMENT_COUNT: 3
  ORIGINAL[0]: c -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: nid
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771318
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

CENTER_NODE: 30064771373
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

CENTER_NODE: 30064771175
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771171
FRAGMENT_COUNT: 5
  ORIGINAL[0]: a -> nid - b -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 - VAR3 -> VAR2
  ORIGINAL[1]: a -> nid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b -> nid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: nid
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !create
  TYPE[0]: CALL
  TOKENIZED[0]: !create

CENTER_NODE: 68719476964
FRAGMENT_COUNT: 10
  ORIGINAL[0]: fnd -> sk
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: fnd -> funct != ret && engine_unlocked_init(ret)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 != VAR3 && FUN1 ( VAR3 )
  ORIGINAL[2]: fnd -> funct
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: fnd -> funct
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: engine_unlocked_finish(fnd -> funct,0)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 -> VAR2 , 0 )
  ORIGINAL[5]: fnd -> funct
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: fnd -> funct
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: funct
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: fnd
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: fnd
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719476798
FRAGMENT_COUNT: 5
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: stonesoup_envKey != NULL
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: stonesoup_envKey
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_envKey
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

