# Tokenized code fragments for 501283-v1.0.1-good
# Total center nodes processed: 21
# Total code fragments found: 91

CENTER_NODE: 30064772854
FRAGMENT_COUNT: 8
  ORIGINAL[0]: association && association->handle
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && association->handle
  ORIGINAL[1]: association->handle
  TYPE[1]: CALL
  TOKENIZED[1]: association->handle
  ORIGINAL[2]: association->handle
  TYPE[2]: CALL
  TOKENIZED[2]: association->handle
  ORIGINAL[3]: handle
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: association
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: association
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: association
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: association
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064774064
FRAGMENT_COUNT: 5
  ORIGINAL[0]: version_str = match_strval(version, ssl_versions)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: match_strval(version, ssl_versions)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: version_str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: version
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ssl_versions
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719481671
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ssl_lib_init()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: ssl_tap = register_tap(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( \
  ORIGINAL[2]: register_tap(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: <global> ssl_tap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: <global> ssl_tap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 68719481220
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tvb_get_ntohs(tvb, offset + 16)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 + 16 )
  ORIGINAL[1]: offset + 16
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 16
  ORIGINAL[2]: msg_type
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: tvb
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: offset
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064774224
FRAGMENT_COUNT: 3
  ORIGINAL[0]: &hf_ssl_handshake_random_time
  TYPE[0]: CALL
  TOKENIZED[0]: &hf_ssl_handshake_random_time
  ORIGINAL[1]: { \
  TYPE[1]: CALL
  TOKENIZED[1]: { \
  ORIGINAL[2]: <global> hf_ssl_handshake_random_bytes
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719478060
FRAGMENT_COUNT: 2
  ORIGINAL[0]: type
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: SSL_HND_HELLO_REQUEST
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064774071
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ssl_is_valid_content_type(content_type)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: content_type != SSL_ID_HANDSHAKE
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: content_type
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: content_type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: SSL_ID_HANDSHAKE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478290
FRAGMENT_COUNT: 4
  ORIGINAL[0]: { \
  TYPE[0]: CALL
  TOKENIZED[0]: { \
  ORIGINAL[1]: HFILL
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: HFILL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: HFILL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064774092
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !ssl_is_valid_content_type(byte)
  TYPE[0]: CALL
  TOKENIZED[0]: !ssl_is_valid_content_type ( VAR1 )
  ORIGINAL[1]: tvb_get_ntohs(tvb, offset + 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 + 1 )
  ORIGINAL[2]: offset + 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + 1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064774463
FRAGMENT_COUNT: 1
  ORIGINAL[0]: ssl_parse()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )

CENTER_NODE: 68719480945
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *conv_data = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: *conv_data = VAR1
  ORIGINAL[1]: *ssl = NULL
  TYPE[1]: CALL
  TOKENIZED[1]: *ssl = VAR1
  ORIGINAL[2]: ssl
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772165
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ssl_debug_printf(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: <global> dtls_tap
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064774073
FRAGMENT_COUNT: 4
  ORIGINAL[0]: byte = tvb_get_guint8(tvb, offset)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 )
  ORIGINAL[1]: tvb_get_guint8(tvb, offset)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: byte
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: byte
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719480710
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tvb_ensure_bytes_exist(tvb, offset, SV_RESPONSE_LENGTH)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: SV_RESPONSE_LENGTH
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SV_RESPONSE_LENGTH
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: SV_RESPONSE_LENGTH
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: SV_RESPONSE_LENGTH
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: SV_RESPONSE_LENGTH
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772166
FRAGMENT_COUNT: 1
  ORIGINAL[0]: dtls_parse()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )

CENTER_NODE: 68719478081
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tvb_get_guint8(tvb, offset)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tvb
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478075
FRAGMENT_COUNT: 3
  ORIGINAL[0]: next_byte != SSL_HND_CLIENT_HELLO
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: next_byte
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SSL_HND_CLIENT_HELLO
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640747
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sum <= record_length
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2
  ORIGINAL[1]: ret = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: msg_type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476922
FRAGMENT_COUNT: 11
  ORIGINAL[0]: !(ssl->state & SSL_HAVE_SESSION_KEY)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( ssl->state & VAR1 )
  ORIGINAL[1]: tvb_get_ptr(tvb, offset, record_length)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: &dtls_compressed_data
  TYPE[2]: CALL
  TOKENIZED[2]: &dtls_compressed_data
  ORIGINAL[3]: &dtls_decrypted_data
  TYPE[3]: CALL
  TOKENIZED[3]: &dtls_decrypted_data
  ORIGINAL[4]: &dtls_decrypted_data_avail
  TYPE[4]: CALL
  TOKENIZED[4]: &dtls_decrypted_data_avail
  ORIGINAL[5]: ssl
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: decoder
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: content_type
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: record_length
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: record_length
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: <global> dtls_compressed_data
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: <global> VAR1

CENTER_NODE: 68719481100
FRAGMENT_COUNT: 2
  ORIGINAL[0]: type
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: SSL_HND_SERVER_KEY_EXCHG
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719481138
FRAGMENT_COUNT: 2
  ORIGINAL[0]: byte
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: SSL2_HND_SERVER_HELLO
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

