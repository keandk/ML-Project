# Tokenized code fragments for 152853-v1.0.0-bad
# Total center nodes processed: 74
# Total code fragments found: 435

CENTER_NODE: 68719476864
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: ffio_init_context(s,buffer,buffer_size,write_flag,opaque,read_packet,write_packet,seek)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 , VAR6 , VAR7 , VAR8 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477385
FRAGMENT_COUNT: 8
  ORIGINAL[0]: c && i < maxlen - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR2 < VAR3 - 1
  ORIGINAL[1]: i++
  TYPE[1]: CALL
  TOKENIZED[1]: i++
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772304
FRAGMENT_COUNT: 12
  ORIGINAL[0]: new_size > new_allocated_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > VAR2
  ORIGINAL[1]: !new_allocated_size
  TYPE[1]: CALL
  TOKENIZED[1]: !new_allocated_size
  ORIGINAL[2]: new_allocated_size = new_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2
  ORIGINAL[3]: new_allocated_size += new_allocated_size / 2 + 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 += VAR1 / 2 + 1
  ORIGINAL[4]: new_allocated_size / 2 + 1
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 / 2 + 1
  ORIGINAL[5]: new_allocated_size / 2
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 / 2
  ORIGINAL[6]: new_size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: new_allocated_size
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: new_allocated_size
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: new_size
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: new_allocated_size
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: new_allocated_size
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771819
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_r8(s) << 16
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) << 16
  ORIGINAL[1]: avio_r8(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477148
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_wl16(s,val & 0xffff)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 & 0xffff )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477295
FRAGMENT_COUNT: 8
  ORIGINAL[0]: len == 0 || s -> write_flag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0 || VAR2 -> VAR3
  ORIGINAL[1]: s -> buf_ptr += len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 += VAR3
  ORIGINAL[2]: size -= len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -= VAR2
  ORIGINAL[3]: size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477017
FRAGMENT_COUNT: 28
  ORIGINAL[0]: s -> pos
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> buf_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buf_ptr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> buffer
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> must_flush
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> direct
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: s -> buf_end
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: s -> buffer
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: s -> seekable
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: s -> buf_end
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: s -> buffer
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: s -> direct
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: s -> must_flush
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: s -> seek
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2
  ORIGINAL[15]: (res = ((s -> seek)(s -> opaque,offset,0))) < 0
  TYPE[15]: CALL
  TOKENIZED[15]: ( VAR1 = ( ( VAR2 -> VAR3 ) ( VAR2 -> VAR4 , VAR5 , 0 ) ) ) < 0
  ORIGINAL[16]: s -> opaque
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2
  ORIGINAL[17]: s -> seek_count
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 -> VAR2
  ORIGINAL[18]: !s -> write_flag
  TYPE[18]: CALL
  TOKENIZED[18]: !s -> VAR1
  ORIGINAL[19]: s -> write_flag
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 -> VAR2
  ORIGINAL[20]: s -> buf_end = s -> buffer
  TYPE[20]: CALL
  TOKENIZED[20]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[21]: s -> buf_end
  TYPE[21]: CALL
  TOKENIZED[21]: VAR1 -> VAR2
  ORIGINAL[22]: s -> buffer
  TYPE[22]: CALL
  TOKENIZED[22]: VAR1 -> VAR2
  ORIGINAL[23]: s -> buf_ptr
  TYPE[23]: CALL
  TOKENIZED[23]: VAR1 -> VAR2
  ORIGINAL[24]: buf_ptr
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: s
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: s
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: s
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1

CENTER_NODE: 30064771624
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> buf_end > s -> checksum_ptr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > VAR1 -> VAR3
  ORIGINAL[1]: (s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_end - s -> checksum_ptr))
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) )
  ORIGINAL[2]: s -> checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> checksum_ptr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> buf_end - s -> checksum_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[5]: checksum
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477483
FRAGMENT_COUNT: 7
  ORIGINAL[0]: ret + 1 < maxlen
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 + 1 < VAR2
  ORIGINAL[1]: hi = ch - 0xD800
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 - 0xD800
  ORIGINAL[2]: hi < 0x800
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 < 0x800
  ORIGINAL[3]: hi
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hi
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hi
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: hi
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771693
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> buf_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> buf_ptr < s -> buf_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 < VAR1 -> VAR3
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buf_end
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buf_end
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477822
FRAGMENT_COUNT: 6
  ORIGINAL[0]: whence == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: d -> pos
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pos
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: d
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: d
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477725
FRAGMENT_COUNT: 9
  ORIGINAL[0]: s -> opaque
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> buffer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !s -> write_flag
  TYPE[2]: CALL
  TOKENIZED[2]: !s -> VAR1
  ORIGINAL[3]: s -> write_flag
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> bytes_read
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> seek_count
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: seek_count
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771548
FRAGMENT_COUNT: 5
  ORIGINAL[0]: --i > 0
  TYPE[0]: CALL
  TOKENIZED[0]: --i > 0
  ORIGINAL[1]: val >> 7 * i
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >> 7 * VAR2
  ORIGINAL[2]: 7 * i
  TYPE[2]: CALL
  TOKENIZED[2]: 7 * VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476821
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *s = obj
  TYPE[0]: CALL
  TOKENIZED[0]: *s = VAR1
  ORIGINAL[1]: s -> opaque
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: obj
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477883
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .item_name = av_default_item_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: av_default_item_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772429
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = ffio_url_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771569
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_w8(s,((int )val) >> 8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( int ) VAR2 ) >> 8 )
  ORIGINAL[1]: ((int )val) >> 8
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( int ) VAR1 ) >> 8
  ORIGINAL[2]: (int )val
  TYPE[2]: CALL
  TOKENIZED[2]: ( int ) VAR1

CENTER_NODE: 68719477856
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *d = (s -> opaque)
  TYPE[0]: CALL
  TOKENIZED[0]: *d = ( VAR1 -> VAR2 )
  ORIGINAL[1]: s -> opaque
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: d -> buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: d -> size
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: d
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: d
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: d
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: d
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477758
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !s -> read_seek
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: ret = ((s -> read_seek)(h,stream_index,timestamp,flags))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 -> VAR3 ) ( VAR4 , VAR5 , VAR6 , VAR7 ) )
  ORIGINAL[2]: ret >= 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 >= 0
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ret
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477152
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_wb16(s,(((int )val) >> 8))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( ( int ) VAR2 ) >> 8 ) )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477234
FRAGMENT_COUNT: 5
  ORIGINAL[0]: s -> update_checksum
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: checksum
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477024
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_seek(s,offset,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477876
FRAGMENT_COUNT: 2
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: cert_repercussive
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477832
FRAGMENT_COUNT: 3
  ORIGINAL[0]: max_packet_size?max_packet_size : 1024
  TYPE[0]: CALL
  TOKENIZED[0]: max_packet_size?max_packet_size : 1024
  ORIGINAL[1]: max_packet_size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: max_packet_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476903
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *(s -> buf_ptr++) = b
  TYPE[0]: CALL
  TOKENIZED[0]: * ( VAR1 -> buf_ptr++ ) = VAR2
  ORIGINAL[1]: s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf_ptr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477375
FRAGMENT_COUNT: 7
  ORIGINAL[0]: val = avio_rb16(s) << 16
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 ) << 16
  ORIGINAL[1]: val |= avio_rb16(s)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 |= FUN1 ( VAR2 )
  ORIGINAL[2]: avio_rb16(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: val
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771246
FRAGMENT_COUNT: 20
  ORIGINAL[0]: s -> buf_ptr > s -> buffer
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > VAR1 -> VAR3
  ORIGINAL[1]: writeout(s,(s -> buffer),(s -> buf_ptr - s -> buffer))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( VAR1 -> VAR2 ) , ( VAR1 -> VAR3 - VAR1 -> VAR2 ) )
  ORIGINAL[2]: s -> buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> buffer
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> buffer
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: buffer
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: s
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: s
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: s
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: s
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: s
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: s
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064771122
FRAGMENT_COUNT: 5
  ORIGINAL[0]: vfprintf(stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771814
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_r8(s) << 8
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) << 8
  ORIGINAL[1]: avio_r8(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477352
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_rl16(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771669
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_ptr - s -> checksum_ptr))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) )
  ORIGINAL[1]: s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: update_checksum
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771831
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (uint64_t )(avio_rl32(s))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( FUN1 ( VAR2 ) )
  ORIGINAL[1]: avio_rl32(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477116
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 1
  ORIGINAL[1]: val >>= 7
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >>= 7
  ORIGINAL[2]: i++
  TYPE[2]: CALL
  TOKENIZED[2]: i++
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477888
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = ffio_url_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772114
FRAGMENT_COUNT: 24
  ORIGINAL[0]: s -> write_flag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: av_freep(bufp)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: - 22
  TYPE[2]: CALL
  TOKENIZED[2]: - 22
  ORIGINAL[3]: buffer_size = (s -> buf_end - s -> buffer)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = ( VAR2 -> VAR3 - VAR2 -> VAR4 )
  ORIGINAL[4]: s -> buf_end - s -> buffer
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[5]: s -> buf_end
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> buffer
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: (buffer_start = s -> pos - buffer_size) > buf_size
  TYPE[7]: CALL
  TOKENIZED[7]: ( VAR1 = VAR2 -> VAR3 - VAR4 ) > VAR5
  ORIGINAL[8]: buffer_start = s -> pos - buffer_size
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 = VAR2 -> VAR3 - VAR4
  ORIGINAL[9]: s -> pos - buffer_size
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2 - VAR3
  ORIGINAL[10]: s -> pos
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: write_flag
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: buf_end
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: buffer
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: pos
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: s
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: bufp
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buffer_size
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: s
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: s
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: buffer_start
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: s
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: buffer_size
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: buf_size
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1

CENTER_NODE: 30064771839
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_rb16(s) << 8
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) << 8
  ORIGINAL[1]: avio_rb16(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771486
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_w8(s,((uint8_t )val))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) VAR3 ) )
  ORIGINAL[1]: (uint8_t )val
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771096
FRAGMENT_COUNT: 9
  ORIGINAL[0]: dirpath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stat(dirpath, &st) == -1
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &st ) == -1
  ORIGINAL[2]: stat(dirpath, &st)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , &st )
  ORIGINAL[3]: -1
  TYPE[3]: CALL
  TOKENIZED[3]: -1
  ORIGINAL[4]: retval = mkdir(dirpath, 0700)
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = FUN1 ( VAR2 , 0700 )
  ORIGINAL[5]: mkdir(dirpath, 0700)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , 0700 )
  ORIGINAL[6]: retval
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: dirpath
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: retval
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477140
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_w8(s,((uint8_t )val))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) VAR3 ) )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771199
FRAGMENT_COUNT: 12
  ORIGINAL[0]: s -> error = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 0
  ORIGINAL[1]: s -> error
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: error
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719476914
FRAGMENT_COUNT: 9
  ORIGINAL[0]: count > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: len = (s -> buf_end - s -> buf_ptr > count?count : s -> buf_end - s -> buf_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR2 -> VAR3 - VAR2 -> VAR4 > count?count : VAR2 -> VAR3 - VAR2 -> VAR4 )
  ORIGINAL[2]: s -> buf_end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buf_ptr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> buf_end
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> buf_ptr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> buf_ptr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf_ptr
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771559
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (uint32_t )(val >> 32)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( VAR2 >> 32 )
  ORIGINAL[1]: val >> 32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >> 32
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476947
FRAGMENT_COUNT: 6
  ORIGINAL[0]: size > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: buf += len
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += VAR2
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477536
FRAGMENT_COUNT: 7
  ORIGINAL[0]: val = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: tmp = avio_r8(bc)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[2]: avio_r8(bc)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: tmp & 128
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 & 128
  ORIGINAL[4]: tmp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: bc
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771320
FRAGMENT_COUNT: 3
  ORIGINAL[0]: flush_buffer(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477530
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_rb32(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: uint64_t
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477852
FRAGMENT_COUNT: 2
  ORIGINAL[0]: url_open_dyn_buf_internal(s,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640403
FRAGMENT_COUNT: 1
  ORIGINAL[0]: strlen(larvicide_eurylaimoid) < 1000 - strlen(stonesoup_command_str)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) < 1000 - FUN1 ( VAR2 )

CENTER_NODE: 68719477853
FRAGMENT_COUNT: 3
  ORIGINAL[0]: max_packet_size <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: max_packet_size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: max_packet_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771835
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= (avio_r8(s))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= ( FUN1 ( VAR2 ) )
  ORIGINAL[1]: avio_r8(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476882
FRAGMENT_COUNT: 10
  ORIGINAL[0]: s -> write_packet && !s -> error
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && !s -> VAR3
  ORIGINAL[1]: s -> write_packet
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> error
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> opaque
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ret < 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 < 0
  ORIGINAL[5]: s -> error = ret
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 = VAR3
  ORIGINAL[6]: s -> error
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: s -> pos
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: pos
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477051
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (uint8_t )(val >> 16)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( VAR2 >> 16 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: uint8_t
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771866
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buflen - 1 > maxlen?maxlen : buflen - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - 1 > maxlen?maxlen : VAR1 - 1
  ORIGINAL[1]: buflen - 1 > maxlen
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - 1 > VAR2
  ORIGINAL[2]: buflen - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: buflen - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 1
  ORIGINAL[4]: buflen
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772290
FRAGMENT_COUNT: 1
  ORIGINAL[0]: io_buffer[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]

CENTER_NODE: 68719477221
FRAGMENT_COUNT: 5
  ORIGINAL[0]: av_crc(av_crc_get_table(AV_CRC_32_IEEE),checksum,buf,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( FUN2 ( VAR1 ) , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: av_crc_get_table(AV_CRC_32_IEEE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: checksum
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477811
FRAGMENT_COUNT: 5
  ORIGINAL[0]: dyn_buf_write(opaque,buf1,4)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 4 )
  ORIGINAL[1]: ret
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: opaque
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: opaque
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772424
FRAGMENT_COUNT: 4
  ORIGINAL[0]: '4' << 16 | 18 << 8 | 100
  TYPE[0]: CALL
  TOKENIZED[0]: '4' << 16 | 18 << 8 | 100
  ORIGINAL[1]: '4' << 16 | 18 << 8
  TYPE[1]: CALL
  TOKENIZED[1]: '4' << 16 | 18 << 8
  ORIGINAL[2]: '4' << 16
  TYPE[2]: CALL
  TOKENIZED[2]: '4' << 16
  ORIGINAL[3]: 18 << 8
  TYPE[3]: CALL
  TOKENIZED[3]: 18 << 8

CENTER_NODE: 30064771463
FRAGMENT_COUNT: 11
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: s -> eof_reached
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> eof_reached = 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 = 0
  ORIGINAL[3]: s -> eof_reached
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: fill_buffer(s)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: eof_reached
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: eof_reached
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064772255
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buf[4096]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 4096 ]
  ORIGINAL[1]: buf[4096]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 4096 ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *stonesoup_tainted_buff = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_tainted_buff = VAR1
  ORIGINAL[1]: *stonesoup_tainted_buff
  TYPE[1]: CALL
  TOKENIZED[1]: *stonesoup_tainted_buff
  ORIGINAL[2]: stonesoup_tainted_buff
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_tainted_buff
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_tainted_buff
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477416
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *q = buf
  TYPE[0]: CALL
  TOKENIZED[0]: *q = VAR1
  ORIGINAL[1]: ret = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772471
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (shmid = shmget(key, shmsz, IPC_CREAT | 0666)) < 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 | 0666 ) ) < 0
  ORIGINAL[1]: (char *) -1
  TYPE[1]: CALL
  TOKENIZED[1]: ( char * ) -1
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1

CENTER_NODE: 68719477592
FRAGMENT_COUNT: 4
  ORIGINAL[0]: flags & 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 2
  ORIGINAL[1]: s -> buf_end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf_end
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772083
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buffer = (av_malloc(buf_size))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 ) )
  ORIGINAL[1]: av_malloc(buf_size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771172
FRAGMENT_COUNT: 3
  ORIGINAL[0]: prev?((void *)0) : &ffurl_context_class
  TYPE[0]: CALL
  TOKENIZED[0]: prev? ( ( void * ) 0 ) : &ffurl_context_class
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: prev
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477648
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_open2(s,filename,flags,((void *)0),((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771451
FRAGMENT_COUNT: 17
  ORIGINAL[0]: size < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: (size = ((s -> seek)(s -> opaque,(- 1),2))) < 0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( VAR2 -> VAR3 ) ( VAR2 -> VAR4 , ( - 1 ) , 2 ) ) ) < 0
  ORIGINAL[2]: size = ((s -> seek)(s -> opaque,(- 1),2))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( VAR2 -> VAR3 ) ( VAR2 -> VAR4 , ( - 1 ) , 2 ) )
  ORIGINAL[3]: size++
  TYPE[3]: CALL
  TOKENIZED[3]: size++
  ORIGINAL[4]: (s -> seek)(s -> opaque,s -> pos,0)
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR1 -> VAR4 , 0 )
  ORIGINAL[5]: s -> seek
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> opaque
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: s -> pos
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: seek
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: opaque
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pos
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: size
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: size
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: s
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: s
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: size
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 30064772263
FRAGMENT_COUNT: 11
  ORIGINAL[0]: !s -> read_pause
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: s -> read_pause
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: - 38
  TYPE[2]: CALL
  TOKENIZED[2]: - 38
  ORIGINAL[3]: (s -> read_pause)(s -> opaque,pause)
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 )
  ORIGINAL[4]: s -> read_pause
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> opaque
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: read_pause
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: opaque
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: pause
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771772
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> read_packet && s -> write_flag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3
  ORIGINAL[1]: (s -> read_packet)(s -> opaque,buf,size)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , VAR4 , VAR5 )
  ORIGINAL[2]: s -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: opaque
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771497
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *q
  TYPE[0]: CALL
  TOKENIZED[0]: *q
  ORIGINAL[1]: ch = ( *(q++))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( * ( q++ ) )
  ORIGINAL[2]: *(q++)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( q++ )
  ORIGINAL[3]: ch
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: top
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771556
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (uint32_t )(val >> 32)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) ( VAR2 >> 32 )
  ORIGINAL[1]: val >> 32
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >> 32
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477729
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *s
  TYPE[0]: CALL
  TOKENIZED[0]: *s
  ORIGINAL[1]: ret
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772419
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ffio_url_class = {.class_name = \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { . VAR2 = \
  ORIGINAL[1]: {.class_name = \
  TYPE[1]: CALL
  TOKENIZED[1]: { . VAR1 = \
  ORIGINAL[2]: ffio_url_class
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

