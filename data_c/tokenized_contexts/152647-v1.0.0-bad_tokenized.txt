# Tokenized code fragments for 152647-v1.0.0-bad
# Total center nodes processed: 47
# Total code fragments found: 103

CENTER_NODE: 30064771488
FRAGMENT_COUNT: 6
  ORIGINAL[0]: src < src_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: svn_ctype_table[(unsigned char )( *src)] & 0x0080
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ ( unsigned char ) ( *src ) ] & 0x0080
  ORIGINAL[2]: svn_ctype_table[(unsigned char )( *src)]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ ( unsigned char ) ( *src ) ]
  ORIGINAL[3]: (unsigned char )( *src)
  TYPE[3]: CALL
  TOKENIZED[3]: ( unsigned char ) ( *src )
  ORIGINAL[4]: svn_ctype_table
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: svn_ctype_table
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640340
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640411
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771134
FRAGMENT_COUNT: 4
  ORIGINAL[0]: * filepath = NULL
  TYPE[0]: CALL
  TOKENIZED[0]: * VAR1 = VAR2
  ORIGINAL[1]: filepath
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771212
FRAGMENT_COUNT: 6
  ORIGINAL[0]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[1]: stonesoup_s = stonesoup_shm
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: for (stonesoup_s = stonesoup_shm;*stonesoup_s != (char)0;stonesoup_s++)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: for ( VAR1 = VAR2 ; *stonesoup_s != ( char ) 0 ; stonesoup_s++ )
  ORIGINAL[3]: stonesoup_s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_shm
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771228
FRAGMENT_COUNT: 3
  ORIGINAL[0]: xlat_uton_static_handle = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> xlat_uton_static_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 7
  ORIGINAL[0]: apr_xlate_open(&handle,topage,frompage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &handle , VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: &handle
  TYPE[1]: CALL
  TOKENIZED[1]: &handle
  ORIGINAL[2]: handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: topage
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: frompage
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: handle
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640299
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771714
FRAGMENT_COUNT: 7
  ORIGINAL[0]: node -> handle
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: check_non_ascii(src -> data,src -> len,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR1 -> VAR3 , VAR4 )
  ORIGINAL[2]: src -> len
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: len
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: src
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640394
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771232
FRAGMENT_COUNT: 4
  ORIGINAL[0]: node -> valid = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = 0
  ORIGINAL[1]: node -> valid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: valid
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477607
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: lucre_osteoblastic = ((char *)( *unlitigiously_machicolating))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( char * ) ( *unlitigiously_machicolating ) )
  ORIGINAL[2]: (char *)( *unlitigiously_machicolating)
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) ( *unlitigiously_machicolating )
  ORIGINAL[3]: lucre_osteoblastic
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: lucre_osteoblastic
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640343
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771393
FRAGMENT_COUNT: 7
  ORIGINAL[0]: userdata_key && xlate_handle_hash
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR2
  ORIGINAL[1]: old_node -> valid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pool = apr_hash_pool_get(xlate_handle_hash)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[3]: apr_hash_pool_get(xlate_handle_hash)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: old_node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: ret
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640421
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477369
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_pstrmemdup(pool,src,len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: src
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640383
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477537
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf_cstring_from_utf8_ex2(dest,src,topage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: topage
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640413
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640301
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640331
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640341
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477281
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !svn_utf__is_valid(data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: !svn_utf__is_valid ( VAR1 , VAR2 )
  ORIGINAL[1]: invalid_utf8(data,len,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640369
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640415
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640329
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640402
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476911
FRAGMENT_COUNT: 4
  ORIGINAL[0]: frompage == ((const char *)1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( const char * ) 1 )
  ORIGINAL[1]: frompage = \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = \
  ORIGINAL[2]: frompage
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: frompage
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477419
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf_cstring_to_utf8_ex2(dest,src,frompage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: frompage
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477242
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *last = svn_utf__last_valid(data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: *last = FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: *valid_txt = \
  TYPE[1]: CALL
  TOKENIZED[1]: *valid_txt = \
  ORIGINAL[2]: valid_txt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: valid_txt
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: valid_txt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640396
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477551
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_utf_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771236
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !xlate_handle_hash
  TYPE[0]: CALL
  TOKENIZED[0]: !xlate_handle_hash
  ORIGINAL[1]: svn_pool_create_ex(pool,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 1
  ORIGINAL[0]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1

CENTER_NODE: 68719477196
FRAGMENT_COUNT: 5
  ORIGINAL[0]: node -> handle
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: node -> frompage
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: frompage
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: apr_err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: node
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640388
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771845
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *svn_err__temp = svn_utf_stringbuf_from_utf8(&destbuf,src,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( &destbuf , VAR1 , VAR2 )
  ORIGINAL[1]: svn_utf_stringbuf_from_utf8(&destbuf,src,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &destbuf , VAR1 , VAR2 )
  ORIGINAL[2]: &destbuf
  TYPE[2]: CALL
  TOKENIZED[2]: &destbuf
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771593
FRAGMENT_COUNT: 4
  ORIGINAL[0]: len > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: !(0 != (svn_ctype_table[(unsigned char )( *data)] & 0x0080))
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( 0 != ( VAR1 [ ( unsigned char ) ( *data ) ] & 0x0080 ) )
  ORIGINAL[2]: 0 != (svn_ctype_table[(unsigned char )( *data)] & 0x0080)
  TYPE[2]: CALL
  TOKENIZED[2]: 0 != ( VAR1 [ ( unsigned char ) ( *data ) ] & 0x0080 )
  ORIGINAL[3]: svn_ctype_table[(unsigned char )( *data)] & 0x0080
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ ( unsigned char ) ( *data ) ] & 0x0080

CENTER_NODE: 47244640328
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640409
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771841
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (const char **)(&converted)
  TYPE[0]: CALL
  TOKENIZED[0]: ( const char ** ) ( &converted )
  ORIGINAL[1]: &converted
  TYPE[1]: CALL
  TOKENIZED[1]: &converted
  ORIGINAL[2]: converted
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: converted
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640368
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !svn_utf__cstring_is_valid(data)
  TYPE[0]: CALL
  TOKENIZED[0]: !svn_utf__cstring_is_valid ( VAR1 )

