# Tokenized code fragments for 153812-v1.0.0-bad
# Total center nodes processed: 24
# Total code fragments found: 117

CENTER_NODE: 68719476784
FRAGMENT_COUNT: 5
  ORIGINAL[0]: vfprintf(stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: format
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640281
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477135
FRAGMENT_COUNT: 5
  ORIGINAL[0]: subid_oid_length = oid_encoded2subid(oid,oid_len,&subid_oid)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , &subid_oid )
  ORIGINAL[1]: oid_resolved(subid_oid_length,subid_oid)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: subid_oid_length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subid_oid_length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subid_oid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477118
FRAGMENT_COUNT: 4
  ORIGINAL[0]: oid_encoded2subid(bytes,byteslen,subids_p)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: bytes
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: byteslen
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids_p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476794
FRAGMENT_COUNT: 3
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: * stonesoup_tainted_file_name = 0
  TYPE[1]: CALL
  TOKENIZED[1]: * VAR1 = 0
  ORIGINAL[2]: stonesoup_tainted_file_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477201
FRAGMENT_COUNT: 4
  ORIGINAL[0]: oid_string2subid(oid_str,&subids)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &subids )
  ORIGINAL[1]: subids_len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: oid_str
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771812
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *smi_modules_uat = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *smi_modules_uat = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: smi_modules_uat
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640328
FRAGMENT_COUNT: 4
  ORIGINAL[0]: subids >= subids_overflow || subid > 0xffffffff
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= VAR2 || VAR3 > 0xffffffff
  ORIGINAL[1]: *subids += (( *r) - 48)
  TYPE[1]: CALL
  TOKENIZED[1]: *subids += ( ( *r ) - 48 )
  ORIGINAL[2]: continue;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: continue ;
  ORIGINAL[3]: r
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640282
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477068
FRAGMENT_COUNT: 7
  ORIGINAL[0]: i < oid_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: byte = oid_bytes[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 [ VAR3 ]
  ORIGINAL[2]: subid <<= 7
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <<= 7
  ORIGINAL[3]: subid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: subid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: subid
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719476822
FRAGMENT_COUNT: 6
  ORIGINAL[0]: c >= 97
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97
  ORIGINAL[1]: c <= 122
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 122
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: c
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: c
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477227
FRAGMENT_COUNT: 17
  ORIGINAL[0]: !oid -> name
  TYPE[0]: CALL
  TOKENIZED[0]: !oid -> VAR1
  ORIGINAL[1]: ep_strdup_printf(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: oid -> name?(oid -> name) : oid_subid2string(subids,matched)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> name? ( VAR1 -> VAR2 ) : FUN1 ( VAR3 , VAR4 )
  ORIGINAL[3]: oid -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: oid_subid2string(&subids[matched],left)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( &subids [ VAR1 ] , VAR2 )
  ORIGINAL[5]: &subids[matched]
  TYPE[5]: CALL
  TOKENIZED[5]: &subids [ VAR1 ]
  ORIGINAL[6]: subids[matched]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ VAR2 ]
  ORIGINAL[7]: oid -> name?(oid -> name) : oid_subid2string(subids,matched)
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> name? ( VAR1 -> VAR2 ) : FUN1 ( VAR3 , VAR4 )
  ORIGINAL[8]: oid -> name
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: name
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: name
  TYPE[10]: FIELD_IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: left
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: oid
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: subids
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: matched
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: left
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: oid
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 30064771252
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i == oid_len
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: n -> value_type = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: n -> value_type
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: n
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771745
FRAGMENT_COUNT: 5
  ORIGINAL[0]: stonesoup_data != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: tracepoint(stonesoup_trace, weakness_end)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: stonesoup_trace
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: weakness_end
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: microtitration_suling
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771601
FRAGMENT_COUNT: 6
  ORIGINAL[0]: subids_len = oid_encoded2subid(encoded,len,&subids)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , &subids )
  ORIGINAL[1]: oid_encoded2subid(encoded,len,&subids)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , &subids )
  ORIGINAL[2]: &subids
  TYPE[2]: CALL
  TOKENIZED[2]: &subids
  ORIGINAL[3]: subids_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: encoded
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476778
FRAGMENT_COUNT: 6
  ORIGINAL[0]: stonesoup_printf_context == NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: NULL
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> stonesoup_printf_context
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: NULL
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477249
FRAGMENT_COUNT: 3
  ORIGINAL[0]: subids_len = oid_encoded2subid(oid,oid_len,&subids)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , &subids )
  ORIGINAL[1]: *resolved_p
  TYPE[1]: CALL
  TOKENIZED[1]: *resolved_p
  ORIGINAL[2]: resolved_p
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476962
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !subids
  TYPE[0]: CALL
  TOKENIZED[0]: !subids
  ORIGINAL[1]: w += g_snprintf(w,12,\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += FUN1 ( VAR1 , 12 , \
  ORIGINAL[2]: --len
  TYPE[2]: CALL
  TOKENIZED[2]: --len
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477243
FRAGMENT_COUNT: 4
  ORIGINAL[0]: oid_subid2string(subids,oid_len)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: subids
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: subids
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: oid_len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477170
FRAGMENT_COUNT: 10
  ORIGINAL[0]: subid <= 0x00003FFF
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0x00003FFF
  ORIGINAL[1]: subid <= 0x001FFFFF
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 0x001FFFFF
  ORIGINAL[2]: subid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: subid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: subid
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: subid
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: subid
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: subid
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477262
FRAGMENT_COUNT: 5
  ORIGINAL[0]: &subids
  TYPE[0]: CALL
  TOKENIZED[0]: &subids
  ORIGINAL[1]: oid_subid2string(subids,subids_len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: subids
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subids_len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477129
FRAGMENT_COUNT: 4
  ORIGINAL[0]: oid_get(subids_len, *subids_p,matched,left)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , *subids_p , VAR2 , VAR3 )
  ORIGINAL[1]: *subids_p
  TYPE[1]: CALL
  TOKENIZED[1]: *subids_p
  ORIGINAL[2]: matched
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: left
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771171
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[64]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 64 ]

CENTER_NODE: 68719477211
FRAGMENT_COUNT: 5
  ORIGINAL[0]: subid_oid_length = oid_string2subid(oid_str,&subid_oid)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , &subid_oid )
  ORIGINAL[1]: oid_resolved(subid_oid_length,subid_oid)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: subid_oid_length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subid_oid_length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subid_oid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

