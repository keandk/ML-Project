# Tokenized code fragments for 152250-v1.0.0-bad
# Total center nodes processed: 59
# Total code fragments found: 257

CENTER_NODE: 30064771370
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ( *p) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( *p ) != 0
  ORIGINAL[1]: *p = ((char )(tolower(((unsigned char )( *p)))))
  TYPE[1]: CALL
  TOKENIZED[1]: *p = ( ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) ) )
  ORIGINAL[2]: *p
  TYPE[2]: CALL
  TOKENIZED[2]: *p
  ORIGINAL[3]: (char )(tolower(((unsigned char )( *p))))
  TYPE[3]: CALL
  TOKENIZED[3]: ( char ) ( FUN1 ( ( ( unsigned char ) ( *p ) ) ) )
  ORIGINAL[4]: tolower(((unsigned char )( *p)))
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( ( ( unsigned char ) ( *p ) ) )

CENTER_NODE: 68719477434
FRAGMENT_COUNT: 7
  ORIGINAL[0]: svn_cstring_match_glob_list(b -> key,list)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: b -> key
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b -> match
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: b -> pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pool
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: b
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477274
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_set(cfg,section,option,(value?\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( value?\
  ORIGINAL[1]: cfg
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: option
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476813
FRAGMENT_COUNT: 9
  ORIGINAL[0]: (stonesoup_shm = shmat(stonesoup_shmid, NULL, 0)) != (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) != ( char * ) -1
  ORIGINAL[1]: stonesoup_s = stonesoup_shm
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: *stonesoup_s != (char)0
  TYPE[2]: CALL
  TOKENIZED[2]: *stonesoup_s != ( char ) 0
  ORIGINAL[3]: *stonesoup_s
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_s
  ORIGINAL[4]: stonesoup_s++
  TYPE[4]: CALL
  TOKENIZED[4]: stonesoup_s++
  ORIGINAL[5]: *stonesoup_s
  TYPE[5]: CALL
  TOKENIZED[5]: *stonesoup_s
  ORIGINAL[6]: stonesoup_s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: stonesoup_s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477328
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *valuep
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep
  ORIGINAL[1]: valuep
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477290
FRAGMENT_COUNT: 3
  ORIGINAL[0]: apr_psprintf(cfg -> pool,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , \
  ORIGINAL[1]: cfg -> pool
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771759
FRAGMENT_COUNT: 11
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: opt_ndx = apr_hash_next(opt_ndx)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[3]: apr_hash_next(opt_ndx)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: !callback(opt -> name,temp_value,baton)
  TYPE[4]: CALL
  TOKENIZED[4]: !callback ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[5]: callback(opt -> name,temp_value,baton)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[6]: break;
  TYPE[6]: CONTROL_STRUCTURE
  TOKENIZED[6]: break ;
  ORIGINAL[7]: opt_ndx
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: opt_ndx
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: opt_ndx
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: subpool
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771671
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *valuep = ((bool_val?\
  TYPE[0]: CALL
  TOKENIZED[0]: *valuep = ( ( bool_val?\
  ORIGINAL[1]: *valuep
  TYPE[1]: CALL
  TOKENIZED[1]: *valuep
  ORIGINAL[2]: bool_val?\
  TYPE[2]: CALL
  TOKENIZED[2]: bool_val?\
  ORIGINAL[3]: valuep
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bool_val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771331
FRAGMENT_COUNT: 5
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: opt = opt_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: opt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: opt_ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: callback
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477304
FRAGMENT_COUNT: 5
  ORIGINAL[0]: tmp_value && 0 == svn_cstring_casecmp(tmp_value,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && 0 == FUN1 ( VAR1 , \
  ORIGINAL[1]: get_bool(&bool_val,tmp_value,0,section,option)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &bool_val , VAR1 , 0 , VAR2 , VAR3 )
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: option
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771695
FRAGMENT_COUNT: 5
  ORIGINAL[0]: sec_ndx = apr_hash_first(subpool,cfg -> sections)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 )
  ORIGINAL[1]: apr_hash_first(subpool,cfg -> sections)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 -> VAR3 )
  ORIGINAL[2]: cfg -> sections
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: sec_ndx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subpool
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477689
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: metameric_mahometan(metasoma_undermist,pechenga_amblygeusia)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: metasoma_undermist
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pechenga_amblygeusia
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640305
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640296
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771886
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *cfg_hash = apr_hash_make(pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *cfg_hash = FUN1 ( VAR1 )
  ORIGINAL[1]: *cfg_hash
  TYPE[1]: CALL
  TOKENIZED[1]: *cfg_hash
  ORIGINAL[2]: apr_hash_make(pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771922
FRAGMENT_COUNT: 7
  ORIGINAL[0]: tmp_value = svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: tmp_value
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: server_group
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: option_name
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477436
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gb . key
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: key
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: gb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771296
FRAGMENT_COUNT: 7
  ORIGINAL[0]: get_category_config(&cfg,config_dir,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &cfg , VAR1 , \
  ORIGINAL[1]: &cfg
  TYPE[1]: CALL
  TOKENIZED[1]: &cfg
  ORIGINAL[2]: &cfg
  TYPE[2]: CALL
  TOKENIZED[2]: &cfg
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: config_dir
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640389
FRAGMENT_COUNT: 1
  ORIGINAL[0]: server_group
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477052
FRAGMENT_COUNT: 4
  ORIGINAL[0]: sectionp != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: *sectionp
  TYPE[1]: CALL
  TOKENIZED[1]: *sectionp
  ORIGINAL[2]: sectionp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sectionp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477249
FRAGMENT_COUNT: 3
  ORIGINAL[0]: value == svn_tristate_true
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2
  ORIGINAL[1]: *boolp
  TYPE[1]: CALL
  TOKENIZED[1]: *boolp
  ORIGINAL[2]: boolp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771170
FRAGMENT_COUNT: 12
  ORIGINAL[0]: sizeof(( *cfg))
  TYPE[0]: CALL
  TOKENIZED[0]: sizeof ( ( *cfg ) )
  ORIGINAL[1]: *cfg
  TYPE[1]: CALL
  TOKENIZED[1]: *cfg
  ORIGINAL[2]: cfg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: cfg
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: cfg
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: cfg
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: cfg
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: cfg
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640395
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640286
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477228
FRAGMENT_COUNT: 11
  ORIGINAL[0]: opt = find_option(cfg,section,option,&sec)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 , &sec )
  ORIGINAL[1]: opt != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: opt -> hash_key
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: opt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: opt
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: opt
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: opt
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: opt
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: opt
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771840
FRAGMENT_COUNT: 6
  ORIGINAL[0]: sectidx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: sectidx = apr_hash_next(sectidx)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR1 )
  ORIGINAL[2]: apr_hash_next(sectidx)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: for (sectidx = apr_hash_first(pool,src -> sections);sectidx != ((void *)0);sectidx = apr_hash_next(sectidx))
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: for ( VAR1 = FUN1 ( VAR2 , VAR3 -> VAR4 ) ; VAR1 != ( ( void * ) 0 ) ; VAR1 = FUN2 ( VAR1 ) )
  ORIGINAL[4]: sectidx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: sectidx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477011
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_config_set(baton,section -> name,option -> name,option -> value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 -> VAR3 , VAR4 -> VAR3 , VAR4 -> VAR5 )
  ORIGINAL[1]: baton
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: section
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772060
FRAGMENT_COUNT: 3
  ORIGINAL[0]: pondman_humaner = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: pondman_humaner
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640365
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771641
FRAGMENT_COUNT: 5
  ORIGINAL[0]: svn_config_get(cfg,&tmp_value,section,option,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &tmp_value , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: &tmp_value
  TYPE[1]: CALL
  TOKENIZED[1]: &tmp_value
  ORIGINAL[2]: tmp_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: section
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp_value
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476957
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !config_dir
  TYPE[0]: CALL
  TOKENIZED[0]: !config_dir
  ORIGINAL[1]: err && err -> apr_err == SVN_ERR_BAD_FILENAME
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 && VAR1 -> VAR2 == VAR3
  ORIGINAL[2]: svn_config_get_user_config_path(&usr_cfg_path,config_dir,category,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &usr_cfg_path , VAR1 , VAR2 , VAR3 )
  ORIGINAL[3]: &usr_cfg_path
  TYPE[3]: CALL
  TOKENIZED[3]: &usr_cfg_path
  ORIGINAL[4]: category
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: err
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: config_dir
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: category
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: pool
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719476889
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_config_create2(&cfg,section_names_case_sensitive,option_names_case_sensitive,result_pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &cfg , VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: section_names_case_sensitive
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: option_names_case_sensitive
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: result_pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771338
FRAGMENT_COUNT: 9
  ORIGINAL[0]: *svn_err__temp = svn_config_read3(&merge_cfg,file,must_exist,cfg -> section_names_case_sensitive,cfg -> option_names_case_sensitive,cfg -> pool)
  TYPE[0]: CALL
  TOKENIZED[0]: *svn_err__temp = FUN1 ( &merge_cfg , VAR1 , VAR2 , VAR3 -> VAR4 , VAR3 -> VAR5 , VAR3 -> VAR6 )
  ORIGINAL[1]: svn_config_read3(&merge_cfg,file,must_exist,cfg -> section_names_case_sensitive,cfg -> option_names_case_sensitive,cfg -> pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &merge_cfg , VAR1 , VAR2 , VAR3 -> VAR4 , VAR3 -> VAR5 , VAR3 -> VAR6 )
  ORIGINAL[2]: &merge_cfg
  TYPE[2]: CALL
  TOKENIZED[2]: &merge_cfg
  ORIGINAL[3]: cfg -> section_names_case_sensitive
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: cfg -> option_names_case_sensitive
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: cfg -> pool
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: svn_err__temp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: file
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: must_exist
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477281
FRAGMENT_COUNT: 11
  ORIGINAL[0]: svn_config_get(cfg,&tmp_value,section,option,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , &tmp_value , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: svn_cstring_strtoi64(valuep,tmp_value,- 9223372036854775807L - 1,9223372036854775807L,10)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , - 9223372036854775807L - 1 , 9223372036854775807L , 10 )
  ORIGINAL[2]: - 9223372036854775807L - 1
  TYPE[2]: CALL
  TOKENIZED[2]: - 9223372036854775807L - 1
  ORIGINAL[3]: - 9223372036854775807L
  TYPE[3]: CALL
  TOKENIZED[3]: - 9223372036854775807L
  ORIGINAL[4]: *valuep = default_value
  TYPE[4]: CALL
  TOKENIZED[4]: *valuep = VAR1
  ORIGINAL[5]: *valuep
  TYPE[5]: CALL
  TOKENIZED[5]: *valuep
  ORIGINAL[6]: tmp_value
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: valuep
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: tmp_value
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: valuep
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: default_value
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771352
FRAGMENT_COUNT: 4
  ORIGINAL[0]: option -> expanded && option -> x_value != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3 != ( ( void * ) 0 )
  ORIGINAL[1]: option -> x_value = ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = ( ( void * ) 0 )
  ORIGINAL[2]: option -> x_value
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0

CENTER_NODE: 30064772104
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[1]: fprintf(stderr, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: stderr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477165
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> name
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: name
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: hash_key
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771359
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !cfg -> x_values
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: for_each_option(cfg,((void *)0),cfg -> x_pool,rmex_callback)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , VAR1 -> VAR2 , VAR3 )
  ORIGINAL[2]: cfg -> x_pool
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: cfg -> x_pool
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: x_pool
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771779
FRAGMENT_COUNT: 7
  ORIGINAL[0]: opt_ndx != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_hash_this(opt_ndx,((void *)0),((void *)0),&opt_ptr)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , &opt_ptr )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: &opt_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: &opt_ptr
  ORIGINAL[5]: opt_ndx
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: opt
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640330
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 47244640314
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477597
FRAGMENT_COUNT: 8
  ORIGINAL[0]: spathiform_piazadora > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_buffer, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: stonesoup_dbuser
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: variable_buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_dbuser
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_dbuser
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: stonesoup_dbuser
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477542
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_config_get_server_setting(cfg,server_group,option_name,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) )
  ORIGINAL[1]: server_group
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: option_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477117
FRAGMENT_COUNT: 8
  ORIGINAL[0]: name_end != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: apr_pstrmemdup(x_pool,name_start,len)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: x_pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: name_start
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: x_pool
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: x_pool
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477187
FRAGMENT_COUNT: 11
  ORIGINAL[0]: o -> name
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: o -> hash_key = o -> name
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[2]: o -> hash_key
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: o -> name
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: o -> hash_key = (make_hash_key(apr_pstrdup(pool,option)))
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 = ( FUN1 ( FUN2 ( VAR3 , VAR4 ) ) )
  ORIGINAL[5]: o -> hash_key
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: o -> value
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: value
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: o
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: option_names_case_sensitive
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: o
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1

CENTER_NODE: 30064771109
FRAGMENT_COUNT: 5
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[2]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477214
FRAGMENT_COUNT: 5
  ORIGINAL[0]: default_value && strchr(default_value,37)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && FUN1 ( VAR1 , 37 )
  ORIGINAL[1]: &x_default
  TYPE[1]: CALL
  TOKENIZED[1]: &x_default
  ORIGINAL[2]: default_value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: x_default
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: x_default
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771928
FRAGMENT_COUNT: 7
  ORIGINAL[0]: !cfg -> section_names_case_sensitive
  TYPE[0]: CALL
  TOKENIZED[0]: !cfg -> VAR1
  ORIGINAL[1]: cfg -> section_names_case_sensitive
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: section_names_case_sensitive
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: cfg
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: cfg
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: cfg
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477322
FRAGMENT_COUNT: 4
  ORIGINAL[0]: 0 == svn_cstring_casecmp(tmp_value,unknown_value)
  TYPE[0]: CALL
  TOKENIZED[0]: 0 == FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: &bool_val
  TYPE[1]: CALL
  TOKENIZED[1]: &bool_val
  ORIGINAL[2]: svn_err__temp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: bool_val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640283
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771264
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !red_config
  TYPE[0]: CALL
  TOKENIZED[0]: !red_config
  ORIGINAL[1]: *svn_err__temp = svn_config_create2(cfgp,0,0,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: *svn_err__temp = FUN1 ( VAR1 , 0 , 0 , VAR2 )
  ORIGINAL[2]: svn_config_create2(cfgp,0,0,pool)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 0 , 0 , VAR2 )
  ORIGINAL[3]: svn_err__temp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477358
FRAGMENT_COUNT: 5
  ORIGINAL[0]: apr_hash_next(sec_ndx)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: !callback(sec -> name,baton,iteration_pool)
  TYPE[1]: CALL
  TOKENIZED[1]: !callback ( VAR1 -> VAR2 , VAR3 , VAR4 )
  ORIGINAL[2]: sec_ndx
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: sec_ndx
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: sec_ndx
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

