# Tokenized code fragments for 152215-v1.0.0-bad
# Total center nodes processed: 86
# Total code fragments found: 240

CENTER_NODE: 47244640373
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772615
FRAGMENT_COUNT: 4
  ORIGINAL[0]: bufHdr -> tag . rnode . dbNode == dbid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5
  ORIGINAL[1]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock)) = 0
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) ) = 0
  ORIGINAL[2]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) )
  ORIGINAL[3]: (volatile slock_t *)(&bufHdr -> buf_hdr_lock)
  TYPE[3]: CALL
  TOKENIZED[3]: ( volatile VAR1 * ) ( &bufHdr -> VAR2 )

CENTER_NODE: 47244640389
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772979
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (bufHdr -> flags) & 1 << 6
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) & 1 << 6
  ORIGINAL[1]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock)) = 0
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) ) = 0
  ORIGINAL[2]: *((volatile slock_t *)(&bufHdr -> buf_hdr_lock))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( ( volatile VAR1 * ) ( &bufHdr -> VAR2 ) )
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477919
FRAGMENT_COUNT: 7
  ORIGINAL[0]: buf -> io_in_progress_lock
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: !((buf -> flags) & 1 << 3)
  TYPE[3]: CALL
  TOKENIZED[3]: ! ( ( VAR1 -> VAR2 ) & 1 << 3 )
  ORIGINAL[4]: buf -> flags
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: flags
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772110
FRAGMENT_COUNT: 6
  ORIGINAL[0]: next_passes == strategy_passes && next_to_clean >= strategy_buf_id
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 && VAR3 >= VAR4
  ORIGINAL[1]: bufs_to_lap = NBuffers - (next_to_clean - strategy_buf_id)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 - ( VAR3 - VAR4 )
  ORIGINAL[2]: NBuffers - (next_to_clean - strategy_buf_id)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - ( VAR2 - VAR3 )
  ORIGINAL[3]: next_to_clean - strategy_buf_id
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - VAR2
  ORIGINAL[4]: bufs_to_lap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NBuffers
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640290
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640497
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771681
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buf -> refcount == 1 && !(oldFlags & 1 << 0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == 1 && ! ( VAR3 & 1 << 0 )
  ORIGINAL[1]: LWLockRelease(newPartitionLock)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: newPartitionLock
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772434
FRAGMENT_COUNT: 3
  ORIGINAL[0]: relation -> rd_smgr == ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( ( void * ) 0 )
  ORIGINAL[1]: relation -> rd_smgr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0

CENTER_NODE: 47244640308
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640441
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477512
FRAGMENT_COUNT: 6
  ORIGINAL[0]: buf -> tag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: tag
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772246
FRAGMENT_COUNT: 1
  ORIGINAL[0]: on_shmem_exit(AtProcExit_Buffers,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )

CENTER_NODE: 47244640437
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477242
FRAGMENT_COUNT: 6
  ORIGINAL[0]: b = buf -> buf_id
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR3
  ORIGINAL[1]: buf -> buf_id
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064773064
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *((volatile slock_t *)(&buf -> buf_hdr_lock)) = 0
  TYPE[0]: CALL
  TOKENIZED[0]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) ) = 0
  ORIGINAL[1]: *((volatile slock_t *)(&buf -> buf_hdr_lock))
  TYPE[1]: CALL
  TOKENIZED[1]: * ( ( volatile VAR1 * ) ( &buf -> VAR2 ) )
  ORIGINAL[2]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[2]: CALL
  TOKENIZED[2]: ( volatile VAR1 * ) ( &buf -> VAR2 )
  ORIGINAL[3]: !(sv_flags & 1 << 3)
  TYPE[3]: CALL
  TOKENIZED[3]: ! ( VAR1 & 1 << 3 )

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772940
FRAGMENT_COUNT: 7
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: LWLockConditionalAcquire(buf -> content_lock,LW_EXCLUSIVE)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[2]: buf -> content_lock
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: content_lock
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: LW_EXCLUSIVE
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640487
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719477983
FRAGMENT_COUNT: 6
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: errcontext(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: bufHdr -> tag . blockNum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: path
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772286
FRAGMENT_COUNT: 3
  ORIGINAL[0]: BufferSync(flags)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: flags
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: CheckpointStats
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640323
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640260
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_exit_flag = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719477799
FRAGMENT_COUNT: 6
  ORIGINAL[0]: ResourceOwnerRememberBuffer(CurrentResourceOwner,buffer)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: buffer < 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < 0
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 1
  ORIGINAL[0]: reln -> pgstat_info != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )

CENTER_NODE: 30064771810
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: BufferDescriptors[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[2]: buffer - 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - 1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640299
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640516
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640312
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477795
FRAGMENT_COUNT: 4
  ORIGINAL[0]: LockBuffer(buffer,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: ReleaseBuffer(buffer)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buffer
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640532
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640433
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640341
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477969
FRAGMENT_COUNT: 6
  ORIGINAL[0]: bufHdr != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[1]: *path = relpathbackend(bufHdr -> tag . rnode,- 1,bufHdr -> tag . forkNum)
  TYPE[1]: CALL
  TOKENIZED[1]: *path = FUN1 ( VAR1 -> VAR2 . VAR3 , - 1 , VAR1 -> VAR2 . VAR4 )
  ORIGINAL[2]: relpathbackend(bufHdr -> tag . rnode,- 1,bufHdr -> tag . forkNum)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 . VAR3 , - 1 , VAR1 -> VAR2 . VAR4 )
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: path
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (getenv(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 47244640533
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477703
FRAGMENT_COUNT: 10
  ORIGINAL[0]: rel -> rd_smgr
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: rel -> rd_smgr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: rel -> rd_node
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: rel -> rd_backend
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: bufHdr -> tag . rnode . relNode == rel -> rd_node . relNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR5 -> VAR6 . VAR4
  ORIGINAL[5]: bufHdr -> tag . rnode . dbNode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[6]: rel -> rd_node
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: rel -> rd_smgr
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: rd_node
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: rel
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719477266
FRAGMENT_COUNT: 4
  ORIGINAL[0]: PrivateRefCount[b]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: PrivateRefCount
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772068
FRAGMENT_COUNT: 4
  ORIGINAL[0]: SyncOneBuffer(buf_id,((bool )0)) & 0x0001
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) 0 ) ) & 0x0001
  ORIGINAL[1]: num_written++
  TYPE[1]: CALL
  TOKENIZED[1]: num_written++
  ORIGINAL[2]: num_written
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: num_written
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640465
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476804
FRAGMENT_COUNT: 4
  ORIGINAL[0]: smgropen(rnode,- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , - 1 )
  ORIGINAL[1]: - 1
  TYPE[1]: CALL
  TOKENIZED[1]: - 1
  ORIGINAL[2]: smgr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: rnode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640469
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772006
FRAGMENT_COUNT: 8
  ORIGINAL[0]: &buf -> buf_hdr_lock
  TYPE[0]: CALL
  TOKENIZED[0]: &buf -> VAR1
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: &buf -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &buf -> VAR1
  ORIGINAL[3]: buf -> buf_hdr_lock
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: (buf -> flags) & 1 << 6 && buf -> refcount == 1
  TYPE[4]: CALL
  TOKENIZED[4]: ( VAR1 -> VAR2 ) & 1 << 6 && VAR1 -> VAR3 == 1
  ORIGINAL[5]: (volatile slock_t *)(&buf -> buf_hdr_lock)
  TYPE[5]: CALL
  TOKENIZED[5]: ( volatile VAR1 * ) ( &buf -> VAR2 )
  ORIGINAL[6]: &buf -> buf_hdr_lock
  TYPE[6]: CALL
  TOKENIZED[6]: &buf -> VAR1
  ORIGINAL[7]: buf -> buf_hdr_lock
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2

CENTER_NODE: 47244640537
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064773132
FRAGMENT_COUNT: 3
  ORIGINAL[0]: 1 << 3 | 1 << 4
  TYPE[0]: CALL
  TOKENIZED[0]: 1 << 3 | 1 << 4
  ORIGINAL[1]: 1 << 3
  TYPE[1]: CALL
  TOKENIZED[1]: 1 << 3
  ORIGINAL[2]: 1 << 4
  TYPE[2]: CALL
  TOKENIZED[2]: 1 << 4

CENTER_NODE: 47244640484
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640449
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640383
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640529
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640538
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773015
FRAGMENT_COUNT: 2
  ORIGINAL[0]: PrivateRefCount[bufid] > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] > 0
  ORIGINAL[1]: (bool )0
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) 0

CENTER_NODE: 30064772207
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[1]: s_lock(&bufHdr -> buf_hdr_lock,\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( &bufHdr -> VAR1 , \
  ORIGINAL[2]: &bufHdr -> buf_hdr_lock
  TYPE[2]: CALL
  TOKENIZED[2]: &bufHdr -> VAR1

CENTER_NODE: 30064772827
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: &BufferDescriptors[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[2]: BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[3]: buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 1
  ORIGINAL[4]: BufferDescriptors
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640502
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772447
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: &BufferDescriptors[buffer - 1]
  TYPE[1]: CALL
  TOKENIZED[1]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[2]: BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[3]: buffer - 1
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - 1
  ORIGINAL[4]: BufferDescriptors
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640543
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477837
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: buf = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: mode == 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0
  ORIGINAL[3]: mode
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: mode
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476781
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ReadBufferExtended(reln,MAIN_FORKNUM,blockNum,RBM_NORMAL,((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , ( ( void * ) 0 ) )
  ORIGINAL[1]: blockNum
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: RBM_NORMAL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640439
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477515
FRAGMENT_COUNT: 2
  ORIGINAL[0]: elog_start(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: <global> __func__
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

CENTER_NODE: 30064772856
FRAGMENT_COUNT: 3
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: MarkLocalBufferDirty(buffer)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: buffer
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772306
FRAGMENT_COUNT: 18
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&LocalBufferDescriptors[-buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &LocalBufferDescriptors [ -buffer - 1 ] )
  ORIGINAL[2]: &LocalBufferDescriptors[-buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &LocalBufferDescriptors [ -buffer - 1 ]
  ORIGINAL[3]: LocalBufferDescriptors[-buffer - 1]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ -buffer - 1 ]
  ORIGINAL[4]: -buffer - 1
  TYPE[4]: CALL
  TOKENIZED[4]: -buffer - 1
  ORIGINAL[5]: -buffer
  TYPE[5]: CALL
  TOKENIZED[5]: -buffer
  ORIGINAL[6]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[7]: &BufferDescriptors[buffer - 1]
  TYPE[7]: CALL
  TOKENIZED[7]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[8]: BufferDescriptors[buffer - 1]
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[9]: buffer - 1
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 - 1
  ORIGINAL[10]: buffer
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: bufHdr
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: LocalBufferDescriptors
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: buffer
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: bufHdr
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: BufferDescriptors
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: buffer
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: rnode
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 68719477136
FRAGMENT_COUNT: 4
  ORIGINAL[0]: buf -> tag
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: buf -> buf_hdr_lock
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buf_hdr_lock
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772247
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AbortBufferIO()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )
  ORIGINAL[1]: UnlockBuffers()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 47244640367
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772300
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buffer < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0
  ORIGINAL[1]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[2]: &BufferDescriptors[buffer - 1]
  TYPE[2]: CALL
  TOKENIZED[2]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[3]: bufHdr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bufHdr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640268
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640419
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640517
FRAGMENT_COUNT: 0

CENTER_NODE: 30064772497
FRAGMENT_COUNT: 18
  ORIGINAL[0]: !(bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode && bufHdr -> tag . rnode . spcNode == rnode . node . spcNode)
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6 && VAR1 -> VAR2 . VAR3 . VAR7 == VAR3 . VAR5 . VAR7 )
  ORIGINAL[1]: bufHdr -> tag . rnode . relNode == rnode . node . relNode && bufHdr -> tag . rnode . dbNode == rnode . node . dbNode
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4 && VAR1 -> VAR2 . VAR3 . VAR6 == VAR3 . VAR5 . VAR6
  ORIGINAL[2]: bufHdr -> tag . rnode . relNode == rnode . node . relNode
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4
  ORIGINAL[3]: bufHdr -> tag . rnode . relNode
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[4]: rnode . node . relNode
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 . VAR2 . VAR3
  ORIGINAL[5]: bufHdr -> tag . rnode . dbNode == rnode . node . dbNode
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2 . VAR3 . VAR4 == VAR3 . VAR5 . VAR4
  ORIGINAL[6]: bufHdr -> tag . rnode . dbNode
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 . VAR3 . VAR4
  ORIGINAL[7]: bufHdr -> tag . rnode
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 . VAR3
  ORIGINAL[8]: bufHdr -> tag
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: rnode . node . dbNode
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 . VAR2 . VAR3
  ORIGINAL[10]: rnode . node
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 . VAR2
  ORIGINAL[11]: tag
  TYPE[11]: FIELD_IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: rnode
  TYPE[12]: FIELD_IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: dbNode
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: node
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: dbNode
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: bufHdr
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: rnode
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640458
FRAGMENT_COUNT: 0

CENTER_NODE: 68719478007
FRAGMENT_COUNT: 7
  ORIGINAL[0]: blighty_selectionism != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: apologizer_scathing[5]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 5 ]
  ORIGINAL[2]: apologizer_scathing + neencephalic_abramis[1]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 + VAR2 [ 1 ]
  ORIGINAL[3]: apologizer_scathing
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: disliking_targetlike
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: apologizer_scathing
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: neencephalic_abramis
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 47244640477
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640293
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773027
FRAGMENT_COUNT: 20
  ORIGINAL[0]: PrivateRefCount[buffer - 1] != 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 - 1 ] != 1
  ORIGINAL[1]: !ConditionalLockBuffer(buffer)
  TYPE[1]: CALL
  TOKENIZED[1]: !ConditionalLockBuffer ( VAR1 )
  ORIGINAL[2]: ConditionalLockBuffer(buffer)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: (bool )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) 0
  ORIGINAL[4]: bufHdr = (&BufferDescriptors[buffer - 1])
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 = ( &BufferDescriptors [ VAR2 - 1 ] )
  ORIGINAL[5]: &BufferDescriptors[buffer - 1]
  TYPE[5]: CALL
  TOKENIZED[5]: &BufferDescriptors [ VAR1 - 1 ]
  ORIGINAL[6]: BufferDescriptors[buffer - 1]
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 [ VAR2 - 1 ]
  ORIGINAL[7]: buffer - 1
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 - 1
  ORIGINAL[8]: tas(&bufHdr -> buf_hdr_lock)
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( &bufHdr -> VAR1 )
  ORIGINAL[9]: &bufHdr -> buf_hdr_lock
  TYPE[9]: CALL
  TOKENIZED[9]: &bufHdr -> VAR1
  ORIGINAL[10]: bufHdr -> buf_hdr_lock
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: bufHdr -> refcount == 1
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 == 1
  ORIGINAL[12]: bufHdr -> refcount
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: buf_hdr_lock
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: refcount
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: bufHdr
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: BufferDescriptors
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buffer
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: bufHdr
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: bufHdr
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640547
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477650
FRAGMENT_COUNT: 4
  ORIGINAL[0]: rnode . backend != - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2 != - 1
  ORIGINAL[1]: i = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 0
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772245
FRAGMENT_COUNT: 2
  ORIGINAL[0]: AtEOXact_LocalBuffers(isCommit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: isCommit
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

