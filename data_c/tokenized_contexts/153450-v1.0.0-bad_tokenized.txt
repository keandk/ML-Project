# Tokenized code fragments for 153450-v1.0.0-bad
# Total center nodes processed: 23
# Total code fragments found: 100

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 1
  ORIGINAL[0]: after[200]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 200 ]

CENTER_NODE: 30064771559
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (subids_len = oid_string2subid(oid_str,&subids)) && (byteslen = oid_subid2encoded(subids_len,subids,bytes))
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , &subids ) ) && ( VAR3 = FUN2 ( VAR1 , VAR4 , VAR5 ) )
  ORIGINAL[1]: subids_len = oid_string2subid(oid_str,&subids)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , &subids )
  ORIGINAL[2]: byteslen = oid_subid2encoded(subids_len,subids,bytes)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( VAR2 , VAR3 , VAR4 )
  ORIGINAL[3]: byteslen
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640276
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771762
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *smi_modules_uat = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: *smi_modules_uat = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: smi_modules_uat
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771599
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *resolved_p = ((void *)(oid_resolved(oid_len,subids)))
  TYPE[0]: CALL
  TOKENIZED[0]: *resolved_p = ( ( void * ) ( FUN1 ( VAR1 , VAR2 ) ) )
  ORIGINAL[1]: *resolved_p
  TYPE[1]: CALL
  TOKENIZED[1]: *resolved_p
  ORIGINAL[2]: (void *)(oid_resolved(oid_len,subids))
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[3]: oid_resolved(oid_len,subids)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , VAR2 )

CENTER_NODE: 68719477172
FRAGMENT_COUNT: 5
  ORIGINAL[0]: subid_oid_length = oid_string2subid(oid_str,&subid_oid)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , &subid_oid )
  ORIGINAL[1]: oid_string2subid(oid_str,&subid_oid)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , &subid_oid )
  ORIGINAL[2]: subid_oid_length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: oid_str
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: subid_oid_length
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771130
FRAGMENT_COUNT: 1
  ORIGINAL[0]: buffer[128]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 128 ]

CENTER_NODE: 30064771129
FRAGMENT_COUNT: 1
  ORIGINAL[0]: before[200]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 200 ]

CENTER_NODE: 47244640298
FRAGMENT_COUNT: 1
  ORIGINAL[0]: --len
  TYPE[0]: CALL
  TOKENIZED[0]: --len

CENTER_NODE: 68719477085
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *subids_p
  TYPE[0]: CALL
  TOKENIZED[0]: *subids_p
  ORIGINAL[1]: subids_p
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: subids_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids_p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477196
FRAGMENT_COUNT: 8
  ORIGINAL[0]: *subids
  TYPE[0]: CALL
  TOKENIZED[0]: *subids
  ORIGINAL[1]: oid -> name?(oid -> name) : oid_subid2string(subids,matched)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> name? ( VAR1 -> VAR2 ) : FUN1 ( VAR3 , VAR4 )
  ORIGINAL[2]: subids[matched]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: subids
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: left
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: subids
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: subids
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: matched
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477160
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &subids
  TYPE[0]: CALL
  TOKENIZED[0]: &subids
  ORIGINAL[1]: len
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: subids
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771393
FRAGMENT_COUNT: 3
  ORIGINAL[0]: subid = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: subid
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477287
FRAGMENT_COUNT: 7
  ORIGINAL[0]: stonesoup_input_string != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: tracepoint(stonesoup_trace, variable_signed_integral, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[3]: stonesoup_trace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_trace
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: trace_point
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_trace
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771471
FRAGMENT_COUNT: 4
  ORIGINAL[0]: subid_oid_length = oid_encoded2subid(oid,oid_len,&subid_oid)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , &subid_oid )
  ORIGINAL[1]: oid_encoded2subid(oid,oid_len,&subid_oid)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , &subid_oid )
  ORIGINAL[2]: subid_oid_length
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subid_oid_length
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771082
FRAGMENT_COUNT: 22
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: size_dirpath = strlen(ss_tc_root) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(ss_tc_root) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: strlen(ss_tc_root) + strlen(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[4]: strlen(ss_tc_root)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 )
  ORIGINAL[5]: strlen(\
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( \
  ORIGINAL[6]: dirpath = (char*) malloc (size_dirpath * sizeof(char))
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[7]: (char*) malloc (size_dirpath * sizeof(char))
  TYPE[7]: CALL
  TOKENIZED[7]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[8]: malloc (size_dirpath * sizeof(char))
  TYPE[8]: CALL
  TOKENIZED[8]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[9]: size_dirpath * sizeof(char)
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 * sizeof ( char )
  ORIGINAL[10]: sizeof(char)
  TYPE[10]: CALL
  TOKENIZED[10]: sizeof ( char )
  ORIGINAL[11]: dirpath != NULL
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 != VAR2
  ORIGINAL[12]: ss_tc_root
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: NULL
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: size_dirpath
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: ss_tc_root
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: dirpath
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: size_dirpath
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: char
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: char
  ORIGINAL[19]: dirpath
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: NULL
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: <global> stonesoup_printf_context
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: <global> VAR1

CENTER_NODE: 30064771611
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (void *)(oid_resolved(subids_len,subids))
  TYPE[0]: CALL
  TOKENIZED[0]: ( void * ) ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[1]: oid_resolved(subids_len,subids)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: subids_len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: subids
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771134
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *c = &oid_root
  TYPE[0]: CALL
  TOKENIZED[0]: *c = &oid_root
  ORIGINAL[1]: &oid_root
  TYPE[1]: CALL
  TOKENIZED[1]: &oid_root
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> oid_root
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771624
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *numeric_p = ((void *)(oid_subid2string(subids,subids_len)))
  TYPE[0]: CALL
  TOKENIZED[0]: *numeric_p = ( ( void * ) ( FUN1 ( VAR1 , VAR2 ) ) )
  ORIGINAL[1]: *numeric_p
  TYPE[1]: CALL
  TOKENIZED[1]: *numeric_p
  ORIGINAL[2]: (void *)(oid_subid2string(subids,subids_len))
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) ( FUN1 ( VAR1 , VAR2 ) )
  ORIGINAL[3]: numeric_p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771488
FRAGMENT_COUNT: 9
  ORIGINAL[0]: !subids || subids_len <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: !subids || VAR1 <= 0
  ORIGINAL[1]: subid <= 0x7F
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 <= 0x7F
  ORIGINAL[2]: bytelen += 1
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 += 1
  ORIGINAL[3]: subid <= 0x00003FFF
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 <= 0x00003FFF
  ORIGINAL[4]: i++ < subids_len
  TYPE[4]: CALL
  TOKENIZED[4]: i++ < VAR1
  ORIGINAL[5]: subid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bytelen
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: subid
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: subid
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 30064771714
FRAGMENT_COUNT: 4
  ORIGINAL[0]: counter32_type = {(FT_UINT64), (BASE_DEC), (1), (1), (1), (5), (OID_KEY_TYPE_INTEGER), (1)}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { ( VAR2 ) , ( VAR3 ) , ( 1 ) , ( 1 ) , ( 1 ) , ( 5 ) , ( VAR4 ) , ( 1 ) }
  ORIGINAL[1]: {(FT_UINT64), (BASE_DEC), (1), (1), (1), (5), (OID_KEY_TYPE_INTEGER), (1)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( VAR1 ) , ( VAR2 ) , ( 1 ) , ( 1 ) , ( 1 ) , ( 5 ) , ( VAR3 ) , ( 1 ) }
  ORIGINAL[2]: counter32_type
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: unsigned32_type
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477094
FRAGMENT_COUNT: 3
  ORIGINAL[0]: oid_get(subids_len, *subids_p,matched,left)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , *subids_p , VAR2 , VAR3 )
  ORIGINAL[1]: matched
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: left
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

