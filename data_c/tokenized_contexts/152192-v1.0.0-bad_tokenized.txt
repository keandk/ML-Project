# Tokenized code fragments for 152192-v1.0.0-bad
# Total center nodes processed: 22
# Total code fragments found: 118

CENTER_NODE: 30064771319
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

CENTER_NODE: 30064771358
FRAGMENT_COUNT: 7
  ORIGINAL[0]: yattering_britishhood != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: proudling_uncapsuled . forked_decompressive = ((char *)yattering_britishhood)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = ( ( char * ) VAR3 )
  ORIGINAL[2]: proudling_uncapsuled . forked_decompressive
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 . VAR2
  ORIGINAL[3]: (char *)yattering_britishhood
  TYPE[3]: CALL
  TOKENIZED[3]: ( char * ) VAR1
  ORIGINAL[4]: forked_decompressive
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: proudling_uncapsuled
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: proudling_uncapsuled
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771308
FRAGMENT_COUNT: 12
  ORIGINAL[0]: int_table_check(table,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: lh_doall_arg(((_LHASH *)((void *)(&( *table) -> piles))),int_unregister_cb_LHASH_DOALL_ARG,((void *)(1?e : ((ENGINE *)0))))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) ( ( void * ) ( & ( *table ) -> VAR2 ) ) ) , VAR3 , ( ( void * ) ( 1?e : ( ( VAR4 * ) 0 ) ) ) )
  ORIGINAL[2]: (_LHASH *)((void *)(&( *table) -> piles))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) ( ( void * ) ( & ( *table ) -> VAR2 ) )
  ORIGINAL[3]: (void *)(&( *table) -> piles)
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) ( & ( *table ) -> VAR1 )
  ORIGINAL[4]: &( *table) -> piles
  TYPE[4]: CALL
  TOKENIZED[4]: & ( *table ) -> VAR1
  ORIGINAL[5]: ( *table) -> piles
  TYPE[5]: CALL
  TOKENIZED[5]: ( *table ) -> VAR1
  ORIGINAL[6]: *table
  TYPE[6]: CALL
  TOKENIZED[6]: *table
  ORIGINAL[7]: (void *)(1?e : ((ENGINE *)0))
  TYPE[7]: CALL
  TOKENIZED[7]: ( void * ) ( 1?e : ( ( VAR1 * ) 0 ) )
  ORIGINAL[8]: 1?e : ((ENGINE *)0)
  TYPE[8]: CALL
  TOKENIZED[8]: 1?e : ( ( VAR1 * ) 0 )
  ORIGINAL[9]: piles
  TYPE[9]: FIELD_IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: table
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: table
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 30064771116
FRAGMENT_COUNT: 5
  ORIGINAL[0]: filepath != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: stonesoup_printf_context = fopen(filepath, \
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[2]: fopen(filepath, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476785
FRAGMENT_COUNT: 6
  ORIGINAL[0]: vfprintf(stonesoup_printf_context, format, argptr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> stonesoup_printf_context
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: format
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: argptr
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640307
FRAGMENT_COUNT: 1
  ORIGINAL[0]: *table
  TYPE[0]: CALL
  TOKENIZED[0]: *table

CENTER_NODE: 30064771540
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (dall -> cb)(pile -> nid,pile -> sk,pile -> funct,dall -> arg)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 -> VAR2 ) ( VAR3 -> VAR4 , VAR3 -> VAR5 , VAR3 -> VAR6 , VAR1 -> VAR7 )
  ORIGINAL[1]: pile -> nid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pile -> sk
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pile -> funct
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dall -> arg
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: sk
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: pile
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: pile
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771603
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (shm = shmat(shmid, NULL, 0)) == (char *) -1
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( VAR2 , VAR3 , 0 ) ) == ( char * ) -1
  ORIGINAL[1]: s = shm
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: shm
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771545
FRAGMENT_COUNT: 3
  ORIGINAL[0]: int_cb_doall_arg(a,b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476894
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: *b = arg2
  TYPE[1]: CALL
  TOKENIZED[1]: *b = VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771167
FRAGMENT_COUNT: 3
  ORIGINAL[0]: table_flags = flags
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> table_flags
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: flags
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771556
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (void *)(&dall)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void * ) ( &dall )
  ORIGINAL[1]: &dall
  TYPE[1]: CALL
  TOKENIZED[1]: &dall
  ORIGINAL[2]: dall
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476830
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg1
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771257
FRAGMENT_COUNT: 17
  ORIGINAL[0]: fnd -> sk
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: 1?fnd -> sk : ((struct stack_st_ENGINE *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: 1?fnd -> VAR1 : ( ( struct VAR2 * ) 0 )
  ORIGINAL[2]: fnd -> sk
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: sk
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fnd
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: fnd
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: fnd
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: fnd
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: fnd
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: fnd
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: fnd
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: fnd
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: fnd
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: fnd
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: fnd
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: fnd
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: fnd
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 30064771327
FRAGMENT_COUNT: 6
  ORIGINAL[0]: p -> funct
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: engine_unlocked_finish(p -> funct,0)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 -> VAR2 , 0 )
  ORIGINAL[2]: p -> funct
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: funct
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771291
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (n = sk_find(((_STACK *)((1?pile -> sk : ((struct stack_st_ENGINE *)0)))),((void *)((1?e : ((ENGINE *)0)))))) >= 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = FUN1 ( ( ( VAR2 * ) ( ( 1?pile -> VAR3 : ( ( struct VAR4 * ) 0 ) ) ) ) , ( ( void * ) ( ( 1?e : ( ( VAR5 * ) 0 ) ) ) ) ) ) >= 0
  ORIGINAL[1]: sk_delete(((_STACK *)(1?pile -> sk : ((struct stack_st_ENGINE *)0))),n)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( ( VAR1 * ) ( 1?pile -> VAR2 : ( ( struct VAR3 * ) 0 ) ) ) , VAR4 )
  ORIGINAL[2]: (_STACK *)(1?pile -> sk : ((struct stack_st_ENGINE *)0))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) ( 1?pile -> VAR2 : ( ( struct VAR3 * ) 0 ) )
  ORIGINAL[3]: 1?pile -> sk : ((struct stack_st_ENGINE *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: 1?pile -> VAR1 : ( ( struct VAR2 * ) 0 )
  ORIGINAL[4]: n
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476824
FRAGMENT_COUNT: 3
  ORIGINAL[0]: c -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: nid
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771180
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !create
  TYPE[0]: CALL
  TOKENIZED[0]: !create
  ORIGINAL[1]: (lh = ((struct lhash_st_ENGINE_PILE *)(lh_new(engine_pile_LHASH_HASH,engine_pile_LHASH_COMP)))) == ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 = ( ( struct VAR2 * ) ( FUN1 ( VAR3 , VAR4 ) ) ) ) == ( ( void * ) 0 )
  ORIGINAL[2]: lh = ((struct lhash_st_ENGINE_PILE *)(lh_new(engine_pile_LHASH_HASH,engine_pile_LHASH_COMP)))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( ( struct VAR2 * ) ( FUN1 ( VAR3 , VAR4 ) ) )
  ORIGINAL[3]: (struct lhash_st_ENGINE_PILE *)(lh_new(engine_pile_LHASH_HASH,engine_pile_LHASH_COMP))
  TYPE[3]: CALL
  TOKENIZED[3]: ( struct VAR1 * ) ( FUN1 ( VAR2 , VAR3 ) )
  ORIGINAL[4]: (void *)0
  TYPE[4]: CALL
  TOKENIZED[4]: ( void * ) 0
  ORIGINAL[5]: lh
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771161
FRAGMENT_COUNT: 7
  ORIGINAL[0]: *stonesoup_s != (char)0
  TYPE[0]: CALL
  TOKENIZED[0]: *stonesoup_s != ( char ) 0
  ORIGINAL[1]: (*stonesoup_tainted_buff)[stonesoup_s - stonesoup_shm] = *stonesoup_s
  TYPE[1]: CALL
  TOKENIZED[1]: ( *stonesoup_tainted_buff ) [ VAR1 - VAR2 ] = *stonesoup_s
  ORIGINAL[2]: (*stonesoup_tainted_buff)[stonesoup_s - stonesoup_shm]
  TYPE[2]: CALL
  TOKENIZED[2]: ( *stonesoup_tainted_buff ) [ VAR1 - VAR2 ]
  ORIGINAL[3]: *stonesoup_tainted_buff
  TYPE[3]: CALL
  TOKENIZED[3]: *stonesoup_tainted_buff
  ORIGINAL[4]: stonesoup_s - stonesoup_shm
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 - VAR2
  ORIGINAL[5]: *stonesoup_s
  TYPE[5]: CALL
  TOKENIZED[5]: *stonesoup_s
  ORIGINAL[6]: stonesoup_s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771171
FRAGMENT_COUNT: 5
  ORIGINAL[0]: a -> nid - b -> nid
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 - VAR3 -> VAR2
  ORIGINAL[1]: a -> nid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: b -> nid
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: nid
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476828
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771468
FRAGMENT_COUNT: 2
  ORIGINAL[0]: CRYPTO_lock(2 | 8,30,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 | 8 , 30 , \
  ORIGINAL[1]: 2 | 8
  TYPE[1]: CALL
  TOKENIZED[1]: 2 | 8

