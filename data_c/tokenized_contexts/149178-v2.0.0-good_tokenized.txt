# Tokenized code fragments for 149178-v2.0.0-good
# Total center nodes processed: 82
# Total code fragments found: 310

CENTER_NODE: 68719477327
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cgiParseFormInput(cgiQueryString, cgiContentLength)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: <global> cgiQueryString
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: <global> cgiContentLength
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719476878
FRAGMENT_COUNT: 7
  ORIGINAL[0]: mpp->offset
  TYPE[0]: CALL
  TOKENIZED[0]: mpp->offset
  ORIGINAL[1]: mpp->writePos
  TYPE[1]: CALL
  TOKENIZED[1]: mpp->writePos
  ORIGINAL[2]: mpp->writePos
  TYPE[2]: CALL
  TOKENIZED[2]: mpp->writePos
  ORIGINAL[3]: mpp->putback
  TYPE[3]: CALL
  TOKENIZED[3]: mpp->putback
  ORIGINAL[4]: putback
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: mpp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772405
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fprintf(cgiOut, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: <global> cgiOut
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: status
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: statusMessage
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771560
FRAGMENT_COUNT: 8
  ORIGINAL[0]: argNames[argNum]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ]
  ORIGINAL[1]: argNum++
  TYPE[1]: CALL
  TOKENIZED[1]: argNum++
  ORIGINAL[2]: while (argNames[argNum])
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: while ( VAR1 [ VAR2 ] )
  ORIGINAL[3]: argNames
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: argNum
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: argValueSpace
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: argNum
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: value
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477996
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fprintf(cgiOut, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: <global> cgiOut
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: mimeType
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772718
FRAGMENT_COUNT: 2
  ORIGINAL[0]: !fread(i, sizeof(int), 1, out)
  TYPE[0]: CALL
  TOKENIZED[0]: !fread ( VAR1 , sizeof ( int ) , 1 , VAR2 )
  ORIGINAL[1]: fread(i, sizeof(int), 1, out)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( int ) , 1 , VAR2 )

CENTER_NODE: 68719477967
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cgiHeaderCookieSetString(name, svalue, secondsToLive, path, domain)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , VAR5 )
  ORIGINAL[1]: svalue
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: secondsToLive
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: path
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719478297
FRAGMENT_COUNT: 5
  ORIGINAL[0]: len = strspn(s, \
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: strspn(s, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , \
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772981
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cgiValueEscapeData(s, (int) strlen(s))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( int ) FUN2 ( VAR1 ) )
  ORIGINAL[1]: (int) strlen(s)
  TYPE[1]: CALL
  TOKENIZED[1]: ( int ) FUN1 ( VAR1 )
  ORIGINAL[2]: strlen(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )

CENTER_NODE: 68719477192
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *value
  TYPE[0]: CALL
  TOKENIZED[0]: *value
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719478516
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fprintf(cgiOut, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: cgiHtmlEscape(q)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: q
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772926
FRAGMENT_COUNT: 5
  ORIGINAL[0]: TRYPUTC('m')
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 'm' )
  ORIGINAL[1]: putc(('m'), cgiOut) == EOF
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( ( 'm' ) , VAR1 ) == VAR2
  ORIGINAL[2]: putc(('m'), cgiOut)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( ( 'm' ) , VAR1 )
  ORIGINAL[3]: <global> cgiOut
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: EOF
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477923
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *p != ';'
  TYPE[0]: CALL
  TOKENIZED[0]: *p != ' ; '
  ORIGINAL[1]: *p
  TYPE[1]: CALL
  TOKENIZED[1]: *p
  ORIGINAL[2]: *p
  TYPE[2]: CALL
  TOKENIZED[2]: *p
  ORIGINAL[3]: p
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: p
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064772180
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *dp = '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: *dp = '\\0'
  ORIGINAL[1]: *dp
  TYPE[1]: CALL
  TOKENIZED[1]: *dp
  ORIGINAL[2]: dp
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477598
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *sizeP
  TYPE[0]: CALL
  TOKENIZED[0]: *sizeP
  ORIGINAL[1]: sizeP
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: sizeP
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640508
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !cfp
  TYPE[0]: CALL
  TOKENIZED[0]: !cfp

CENTER_NODE: 30064772758
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *c = cgiFindPos
  TYPE[0]: CALL
  TOKENIZED[0]: *c = VAR1
  ORIGINAL[1]: <global> cgiFindPos
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> cgiFindPos
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: <global> cgiFindPos
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1

CENTER_NODE: 30064772223
FRAGMENT_COUNT: 20
  ORIGINAL[0]: !e
  TYPE[0]: CALL
  TOKENIZED[0]: !e
  ORIGINAL[1]: !strlen(e->value)
  TYPE[1]: CALL
  TOKENIZED[1]: !strlen ( e->value )
  ORIGINAL[2]: strlen(e->value)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( e->value )
  ORIGINAL[3]: *result = defaultV
  TYPE[3]: CALL
  TOKENIZED[3]: *result = VAR1
  ORIGINAL[4]: *result
  TYPE[4]: CALL
  TOKENIZED[4]: *result
  ORIGINAL[5]: ch = cgiFirstNonspaceChar(e->value)
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 = FUN1 ( e->value )
  ORIGINAL[6]: cgiFirstNonspaceChar(e->value)
  TYPE[6]: CALL
  TOKENIZED[6]: FUN1 ( e->value )
  ORIGINAL[7]: e->value
  TYPE[7]: CALL
  TOKENIZED[7]: e->value
  ORIGINAL[8]: !(isdigit(ch)) && (ch != '.') && (ch != '-') && (ch != '+')
  TYPE[8]: CALL
  TOKENIZED[8]: ! ( FUN1 ( VAR1 ) ) && ( VAR1 != ' . ' ) && ( VAR1 != '-' ) && ( VAR1 != '+' )
  ORIGINAL[9]: !(isdigit(ch)) && (ch != '.') && (ch != '-')
  TYPE[9]: CALL
  TOKENIZED[9]: ! ( FUN1 ( VAR1 ) ) && ( VAR1 != ' . ' ) && ( VAR1 != '-' )
  ORIGINAL[10]: !(isdigit(ch)) && (ch != '.')
  TYPE[10]: CALL
  TOKENIZED[10]: ! ( FUN1 ( VAR1 ) ) && ( VAR1 != ' . ' )
  ORIGINAL[11]: !(isdigit(ch))
  TYPE[11]: CALL
  TOKENIZED[11]: ! ( FUN1 ( VAR1 ) )
  ORIGINAL[12]: isdigit(ch)
  TYPE[12]: CALL
  TOKENIZED[12]: FUN1 ( VAR1 )
  ORIGINAL[13]: value
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: result
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: defaultV
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: cgiFormEmpty
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: ch
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: e
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: ch
  TYPE[19]: IDENTIFIER
  TOKENIZED[19]: VAR1

CENTER_NODE: 30064772751
FRAGMENT_COUNT: 8
  ORIGINAL[0]: isalpha(*s1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( *s1 )
  ORIGINAL[1]: *s1
  TYPE[1]: CALL
  TOKENIZED[1]: *s1
  ORIGINAL[2]: (*s1) != (*s2)
  TYPE[2]: CALL
  TOKENIZED[2]: ( *s1 ) != ( *s2 )
  ORIGINAL[3]: *s1
  TYPE[3]: CALL
  TOKENIZED[3]: *s1
  ORIGINAL[4]: *s2
  TYPE[4]: CALL
  TOKENIZED[4]: *s2
  ORIGINAL[5]: s1
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s2
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s1
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477531
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !e
  TYPE[0]: CALL
  TOKENIZED[0]: !e
  ORIGINAL[1]: cgiFormEntryString(e, result, max, 1)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 , 1 )
  ORIGINAL[2]: e
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: result
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772986
FRAGMENT_COUNT: 1
  ORIGINAL[0]: cgiHexValue[256]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 256 ]

CENTER_NODE: 30064771221
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mpp->readPos != mpp->writePos
  TYPE[0]: CALL
  TOKENIZED[0]: mpp->readPos != mpp->writePos
  ORIGINAL[1]: mpp->readPos %= sizeof(mpp->putback)
  TYPE[1]: CALL
  TOKENIZED[1]: mpp->readPos %= sizeof ( mpp->putback )
  ORIGINAL[2]: mpp->readPos
  TYPE[2]: CALL
  TOKENIZED[2]: mpp->readPos
  ORIGINAL[3]: sizeof(mpp->putback)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( mpp->putback )
  ORIGINAL[4]: got
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719478124
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !cgiReadString(in, &cgiPathTranslated)
  TYPE[0]: CALL
  TOKENIZED[0]: !cgiReadString ( VAR1 , &cgiPathTranslated )
  ORIGINAL[1]: &cgiScriptName
  TYPE[1]: CALL
  TOKENIZED[1]: &cgiScriptName
  ORIGINAL[2]: in
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> cgiScriptName
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719477041
FRAGMENT_COUNT: 2
  ORIGINAL[0]: outfd == -1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == -1
  ORIGINAL[1]: cgiParseIO
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719478269
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *s1
  TYPE[0]: CALL
  TOKENIZED[0]: *s1
  ORIGINAL[1]: !(*s2)
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( *s2 )
  ORIGINAL[2]: *s1
  TYPE[2]: CALL
  TOKENIZED[2]: *s1
  ORIGINAL[3]: s1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640519
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640470
FRAGMENT_COUNT: 8
  ORIGINAL[0]: ch == '%'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == '%'
  ORIGINAL[1]: escapeState = cgiEscapeFirst
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: ch == '+'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == '+'
  ORIGINAL[3]: s[dstPos++] = ' '
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ dstPos++ ] = ' '
  ORIGINAL[4]: s[dstPos++] = ch
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ dstPos++ ] = VAR2
  ORIGINAL[5]: break;
  TYPE[5]: CONTROL_STRUCTURE
  TOKENIZED[5]: break ;
  ORIGINAL[6]: escapeState
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: srcPos
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771202
FRAGMENT_COUNT: 1
  ORIGINAL[0]: putback[1024]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1024 ]

CENTER_NODE: 68719477958
FRAGMENT_COUNT: 4
  ORIGINAL[0]: r != cgiFormSuccess
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: *result = defaultV
  TYPE[1]: CALL
  TOKENIZED[1]: *result = VAR1
  ORIGINAL[2]: *result
  TYPE[2]: CALL
  TOKENIZED[2]: *result
  ORIGINAL[3]: defaultV
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772775
FRAGMENT_COUNT: 3
  ORIGINAL[0]: total = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: total
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: p
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772099
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !stringArray
  TYPE[0]: CALL
  TOKENIZED[0]: !stringArray
  ORIGINAL[1]: e = cgiFormEntryFindFirst(name)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[2]: cgiFormEntryFindFirst(name)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: name
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640489
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (resultLen + 1) < resultSpace
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 + 1 ) < VAR2
  ORIGINAL[1]: APPEND(result, *s)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: FUN1 ( VAR1 , *s )

CENTER_NODE: 47244640352
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772501
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((int) fwrite(s, 1, len, out)) != len
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( int ) FUN1 ( VAR1 , 1 , VAR2 , VAR3 ) ) != VAR2
  ORIGINAL[1]: (int) fwrite(s, 1, len, out)
  TYPE[1]: CALL
  TOKENIZED[1]: ( int ) FUN1 ( VAR1 , 1 , VAR2 , VAR3 )
  ORIGINAL[2]: fwrite(s, 1, len, out)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 1 , VAR2 , VAR3 )
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771699
FRAGMENT_COUNT: 7
  ORIGINAL[0]: d[0] == '\\r'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 0 ] == '\\r'
  ORIGINAL[1]: got == 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 1
  ORIGINAL[2]: d[0] == '\\n'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 0 ] == '\\n'
  ORIGINAL[3]: d[0]
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ 0 ]
  ORIGINAL[4]: break;
  TYPE[4]: CONTROL_STRUCTURE
  TOKENIZED[4]: break ;
  ORIGINAL[5]: got
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: d
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771678
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (argValueLen + 1) < argValueSpace
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 + 1 ) < VAR2
  ORIGINAL[1]: argValueLen + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: APPEND(argValue, *value)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: FUN1 ( VAR1 , *value )
  ORIGINAL[3]: argValueSpace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772006
FRAGMENT_COUNT: 4
  ORIGINAL[0]: result[resultLen++] = (*s)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ resultLen++ ] = ( *s )
  ORIGINAL[1]: result[resultLen++]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ resultLen++ ]
  ORIGINAL[2]: resultLen++
  TYPE[2]: CALL
  TOKENIZED[2]: resultLen++
  ORIGINAL[3]: result
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 47244640736
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !cgiReadInt(in, &len)
  TYPE[0]: CALL
  TOKENIZED[0]: !cgiReadInt ( VAR1 , &len )

CENTER_NODE: 30064771188
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *s
  TYPE[0]: CALL
  TOKENIZED[0]: *s
  ORIGINAL[1]: !(*s)
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( *s )
  ORIGINAL[2]: *s
  TYPE[2]: CALL
  TOKENIZED[2]: *s
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771329
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (d[0] == '-') && (d[1] == '-')
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 [ 0 ] == '-' ) && ( VAR1 [ 1 ] == '-' )
  ORIGINAL[1]: !cgiStrEqNc(fvalue, \
  TYPE[1]: CALL
  TOKENIZED[1]: !cgiStrEqNc ( VAR1 , \
  ORIGINAL[2]: cgiStrEqNc(fvalue, \
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , \
  ORIGINAL[3]: fvalue
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772867
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i <= total
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= VAR2
  ORIGINAL[1]: stringArray[i] = 0
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ] = 0
  ORIGINAL[2]: stringArray[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640485
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 47244640564
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !e
  TYPE[0]: CALL
  TOKENIZED[0]: !e

CENTER_NODE: 47244640395
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (mvalueLen + 1) < mvalueSpace
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 + 1 ) < VAR2
  ORIGINAL[1]: APPEND(mvalue, *value)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: FUN1 ( VAR1 , *value )

CENTER_NODE: 68719477841
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !e
  TYPE[0]: CALL
  TOKENIZED[0]: !e
  ORIGINAL[1]: i < choicesTotal
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: cgiStrEq(choicesText[i], e->value)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 [ VAR2 ] , e->value )
  ORIGINAL[3]: !strcmp((choicesText[i]), (e->value))
  TYPE[3]: CALL
  TOKENIZED[3]: !strcmp ( ( VAR1 [ VAR2 ] ) , ( e->value ) )
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: choicesTotal
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477222
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (argNameLen + 1) < argNameSpace
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 + 1 ) < VAR2
  ORIGINAL[1]: argNameSpace
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640375
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (d[0] == '\\r') && (d[1] == '\\n')
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 [ 0 ] == '\\r' ) && ( VAR1 [ 1 ] == '\\n' )
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064771769
FRAGMENT_COUNT: 3
  ORIGINAL[0]: free(attr)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: attr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: cgiParseMemory
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773001
FRAGMENT_COUNT: 4
  ORIGINAL[0]: cgiFormString(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: sizeof(q)
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: q
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: q
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772505
FRAGMENT_COUNT: 4
  ORIGINAL[0]: fwrite(&i, sizeof(int), 1, out)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &i , sizeof ( int ) , 1 , VAR1 )
  ORIGINAL[1]: &i
  TYPE[1]: CALL
  TOKENIZED[1]: &i
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: int
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: int

CENTER_NODE: 47244640418
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719477901
FRAGMENT_COUNT: 2
  ORIGINAL[0]: result
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: invalid
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771994
FRAGMENT_COUNT: 4
  ORIGINAL[0]: e = cgiFormEntryFindFirst(name)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: cgiFormEntryFindFirst(name)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: e
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: name
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640813
FRAGMENT_COUNT: 2
  ORIGINAL[0]: if (*data == '\\\
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: if ( *data == '\\\
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 30064771910
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cgiHexValue['b'] = 11
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 'b' ] = 11
  ORIGINAL[1]: cgiHexValue['b']
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 'b' ]
  ORIGINAL[2]: <global> cgiHexValue
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 68719478309
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *stringArray
  TYPE[0]: CALL
  TOKENIZED[0]: *stringArray
  ORIGINAL[1]: *stringArray
  TYPE[1]: CALL
  TOKENIZED[1]: *stringArray
  ORIGINAL[2]: p
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stringArray
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: p
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stringArray
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771664
FRAGMENT_COUNT: 3
  ORIGINAL[0]: argValue[argValueLen++] = (*value)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ argValueLen++ ] = ( *value )
  ORIGINAL[1]: *value
  TYPE[1]: CALL
  TOKENIZED[1]: *value
  ORIGINAL[2]: value
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771577
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (mvalueLen + 1) < mvalueSpace
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 + 1 ) < VAR2
  ORIGINAL[1]: mvalueLen + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: APPEND(mvalue, *value)
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: FUN1 ( VAR1 , *value )
  ORIGINAL[3]: mvalueSpace
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477273
FRAGMENT_COUNT: 2
  ORIGINAL[0]: argValue[argValueLen++]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ argValueLen++ ]
  ORIGINAL[1]: argValue
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772247
FRAGMENT_COUNT: 8
  ORIGINAL[0]: error != cgiFormSuccess
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: *result < min
  TYPE[1]: CALL
  TOKENIZED[1]: *result < VAR1
  ORIGINAL[2]: *result
  TYPE[2]: CALL
  TOKENIZED[2]: *result
  ORIGINAL[3]: error
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cgiFormSuccess
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: error
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: result
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: min
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772403
FRAGMENT_COUNT: 15
  ORIGINAL[0]: days[gt->tm_wday]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ gt->tm_wday ]
  ORIGINAL[1]: gt->tm_mday
  TYPE[1]: CALL
  TOKENIZED[1]: gt->tm_mday
  ORIGINAL[2]: months[gt->tm_mon]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ gt->tm_mon ]
  ORIGINAL[3]: gt->tm_year + 1900
  TYPE[3]: CALL
  TOKENIZED[3]: gt->tm_year + 1900
  ORIGINAL[4]: gt->tm_hour
  TYPE[4]: CALL
  TOKENIZED[4]: gt->tm_hour
  ORIGINAL[5]: gt->tm_min
  TYPE[5]: CALL
  TOKENIZED[5]: gt->tm_min
  ORIGINAL[6]: gt->tm_sec
  TYPE[6]: CALL
  TOKENIZED[6]: gt->tm_sec
  ORIGINAL[7]: tm_sec
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: gt
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: <global> cgiOut
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: <global> VAR1
  ORIGINAL[10]: name
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: value
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: domain
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: gt
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: path
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1

CENTER_NODE: 68719477548
FRAGMENT_COUNT: 2
  ORIGINAL[0]: resultLen++
  TYPE[0]: CALL
  TOKENIZED[0]: resultLen++
  ORIGINAL[1]: resultLen
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772300
FRAGMENT_COUNT: 5
  ORIGINAL[0]: cgiStrEq(choicesText[i], e->value)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 [ VAR2 ] , e->value )
  ORIGINAL[1]: !strcmp((choicesText[i]), (e->value))
  TYPE[1]: CALL
  TOKENIZED[1]: !strcmp ( ( VAR1 [ VAR2 ] ) , ( e->value ) )
  ORIGINAL[2]: hits++
  TYPE[2]: CALL
  TOKENIZED[2]: hits++
  ORIGINAL[3]: hits
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: hit
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477205
FRAGMENT_COUNT: 2
  ORIGINAL[0]: *value
  TYPE[0]: CALL
  TOKENIZED[0]: *value
  ORIGINAL[1]: value
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 47244640750
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064772190
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !strlen(e->value)
  TYPE[0]: CALL
  TOKENIZED[0]: !strlen ( e->value )
  ORIGINAL[1]: *result = defaultV
  TYPE[1]: CALL
  TOKENIZED[1]: *result = VAR1
  ORIGINAL[2]: *result
  TYPE[2]: CALL
  TOKENIZED[2]: *result
  ORIGINAL[3]: defaultV
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cgiFormEmpty
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640509
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !e
  TYPE[0]: CALL
  TOKENIZED[0]: !e

CENTER_NODE: 30064772128
FRAGMENT_COUNT: 4
  ORIGINAL[0]: e = cgiFormEntryFindFirst(name)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: cgiFormEntryFindFirst(name)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: e
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: e
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640480
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (resultLen + 1) < resultSpace
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 + 1 ) < VAR2
  ORIGINAL[1]: APPEND(result, *s)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: FUN1 ( VAR1 , *s )

CENTER_NODE: 68719477906
FRAGMENT_COUNT: 2
  ORIGINAL[0]: result
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1
  ORIGINAL[1]: defaultV
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477623
FRAGMENT_COUNT: 5
  ORIGINAL[0]: got = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: !cfp
  TYPE[1]: CALL
  TOKENIZED[1]: !cfp
  ORIGINAL[2]: cfp->in
  TYPE[2]: CALL
  TOKENIZED[2]: cfp->in
  ORIGINAL[3]: cfp
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cfp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477621
FRAGMENT_COUNT: 3
  ORIGINAL[0]: !cfp->in
  TYPE[0]: CALL
  TOKENIZED[0]: !cfp->in
  ORIGINAL[1]: *cfpp = cfp
  TYPE[1]: CALL
  TOKENIZED[1]: *cfpp = VAR1
  ORIGINAL[2]: cgiFormSuccess
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477991
FRAGMENT_COUNT: 3
  ORIGINAL[0]: fprintf(cgiOut, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , \
  ORIGINAL[1]: <global> cgiOut
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: redirectUrl
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771660
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (argValueLen + 1) < argValueSpace
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 + 1 ) < VAR2
  ORIGINAL[1]: argValueLen + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: argValueLen
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772953
FRAGMENT_COUNT: 3
  ORIGINAL[0]: cgiHtmlEscapeData(s, (int) strlen(s))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( int ) FUN2 ( VAR1 ) )
  ORIGINAL[1]: (int) strlen(s)
  TYPE[1]: CALL
  TOKENIZED[1]: ( int ) FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771198
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !input
  TYPE[0]: CALL
  TOKENIZED[0]: !input
  ORIGINAL[1]: (int) fread(input, 1, cgiContentLength, cgiIn)
  TYPE[1]: CALL
  TOKENIZED[1]: ( int ) FUN1 ( VAR1 , 1 , VAR2 , VAR3 )
  ORIGINAL[2]: fread(input, 1, cgiContentLength, cgiIn)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , 1 , VAR2 , VAR3 )
  ORIGINAL[3]: input
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> cgiContentLength
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> cgiIn
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 47244640698
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771623
FRAGMENT_COUNT: 4
  ORIGINAL[0]: argName[argNameLen++] = (*value)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ argNameLen++ ] = ( *value )
  ORIGINAL[1]: argName[argNameLen++]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ argNameLen++ ]
  ORIGINAL[2]: argNameLen++
  TYPE[2]: CALL
  TOKENIZED[2]: argNameLen++
  ORIGINAL[3]: argName
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772757
FRAGMENT_COUNT: 2
  ORIGINAL[0]: cgiFindPos = cgiFormEntryFirst
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: cgiFormEntryFindNext()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )

CENTER_NODE: 30064772212
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *result < min
  TYPE[0]: CALL
  TOKENIZED[0]: *result < VAR1
  ORIGINAL[1]: *result = min
  TYPE[1]: CALL
  TOKENIZED[1]: *result = VAR1
  ORIGINAL[2]: *result
  TYPE[2]: CALL
  TOKENIZED[2]: *result
  ORIGINAL[3]: min
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: cgiFormConstrained
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640740
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

