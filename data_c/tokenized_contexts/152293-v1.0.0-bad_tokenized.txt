# Tokenized code fragments for 152293-v1.0.0-bad
# Total center nodes processed: 72
# Total code fragments found: 399

CENTER_NODE: 30064771776
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_r8(s) << 8
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 ) << 8
  ORIGINAL[1]: avio_r8(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771747
FRAGMENT_COUNT: 14
  ORIGINAL[0]: len == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: s -> buf_ptr = s -> buffer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buffer
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: buffer
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: s
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 30064771992
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (val << 7) + (tmp & 127)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 << 7 ) + ( VAR2 & 127 )
  ORIGINAL[1]: val << 7
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 << 7
  ORIGINAL[2]: tmp & 128
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 & 128
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: tmp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477550
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !buffer
  TYPE[0]: CALL
  TOKENIZED[0]: !buffer
  ORIGINAL[1]: s -> buffer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: buffer
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477206
FRAGMENT_COUNT: 5
  ORIGINAL[0]: s -> update_checksum
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> update_checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> checksum
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: checksum
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772265
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = dyn_buf_write(opaque,buf1,4)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , 4 )
  ORIGINAL[1]: dyn_buf_write(opaque,buf1,4)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , 4 )
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477124
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_wb16(s,(((int )val) >> 8))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( ( int ) VAR2 ) >> 8 ) )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476826
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !read_packet && !write_flag
  TYPE[0]: CALL
  TOKENIZED[0]: !read_packet && !write_flag
  ORIGINAL[1]: s -> pos = buffer_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3
  ORIGINAL[2]: s -> pos
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buffer_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: buffer_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buffer_size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477319
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_rl16(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477689
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !s -> read_seek
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1
  ORIGINAL[1]: (s -> read_seek)(h,stream_index,timestamp,flags)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 -> VAR2 ) ( VAR3 , VAR4 , VAR5 , VAR6 )
  ORIGINAL[2]: h
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stream_index
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: timestamp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: flags
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477086
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ret += 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 += 2
  ORIGINAL[1]: ret
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771784
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= avio_rl16(s) << 16
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= FUN1 ( VAR2 ) << 16
  ORIGINAL[1]: avio_rl16(s) << 16
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) << 16
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772220
FRAGMENT_COUNT: 9
  ORIGINAL[0]: d -> pos + buf_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 + VAR3
  ORIGINAL[1]: d -> pos
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: d -> pos
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pos
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: d
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: d
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: buf_size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: d
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: d
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477792
FRAGMENT_COUNT: 4
  ORIGINAL[0]: padbuf[16] = {(0)}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 16 ] = { ( 0 ) }
  ORIGINAL[1]: padbuf[16] = {(0)}
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 16 ] = { ( 0 ) }
  ORIGINAL[2]: {(0)}
  TYPE[2]: CALL
  TOKENIZED[2]: { ( 0 ) }
  ORIGINAL[3]: padbuf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477882
FRAGMENT_COUNT: 3
  ORIGINAL[0]: .item_name = av_default_item_name
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: item_name
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: av_default_item_name
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477515
FRAGMENT_COUNT: 6
  ORIGINAL[0]: max_packet_size = h -> max_packet_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 -> VAR1
  ORIGINAL[1]: h -> max_packet_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: max_packet_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: h
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: max_packet_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: max_packet_size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477005
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> seek
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> opaque
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: size < 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 < 0
  ORIGINAL[3]: s -> seek
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> opaque
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: opaque
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 3
  ORIGINAL[0]: prev?((void *)0) : s -> opaque
  TYPE[0]: CALL
  TOKENIZED[0]: prev? ( ( void * ) 0 ) : VAR1 -> VAR2
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: prev
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771803
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val |= (avio_r8(s))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= ( FUN1 ( VAR2 ) )
  ORIGINAL[1]: avio_r8(s)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477591
FRAGMENT_COUNT: 8
  ORIGINAL[0]: (buffer_start = s -> pos - buffer_size) > buf_size
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = VAR2 -> VAR3 - VAR4 ) > VAR5
  ORIGINAL[1]: alloc_size = (s -> buffer_size > new_size?s -> buffer_size : new_size)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR2 -> VAR3 > new_size?s -> VAR3 : VAR4 )
  ORIGINAL[2]: alloc_size > buf_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > VAR2
  ORIGINAL[3]: alloc_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: alloc_size
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: buf_size
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: alloc_size
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: alloc_size
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719477038
FRAGMENT_COUNT: 14
  ORIGINAL[0]: len = 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 1
  ORIGINAL[1]: len += strlen(str)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += FUN1 ( VAR2 )
  ORIGINAL[2]: strlen(str)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: avio_write(s,((const unsigned char *)str),len)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 , ( ( const unsigned char * ) VAR2 ) , VAR3 )
  ORIGINAL[4]: (const unsigned char *)str
  TYPE[4]: CALL
  TOKENIZED[4]: ( const unsigned char * ) VAR1
  ORIGINAL[5]: avio_w8(s,0)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( VAR1 , 0 )
  ORIGINAL[6]: str
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: len
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: str
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: str
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: len
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: len
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1

CENTER_NODE: 68719476789
FRAGMENT_COUNT: 3
  ORIGINAL[0]: stonesoup_printf_context != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: <global> stonesoup_printf_context
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: NULL
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 2
  ORIGINAL[0]: in < 0x80
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < 0x80
  ORIGINAL[1]: else
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: else

CENTER_NODE: 68719477013
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: s -> eof_reached
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: eof_reached
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771533
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_w8(s,((uint8_t )val))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) VAR3 ) )
  ORIGINAL[1]: (uint8_t )val
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477677
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_write(s,buf,(strlen(buf)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( FUN2 ( VAR2 ) ) )
  ORIGINAL[1]: ret
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064772399
FRAGMENT_COUNT: 4
  ORIGINAL[0]: tracepoint(stonesoup_trace, trace_point, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[1]: stonesoup_trace
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: trace_point
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: stonesoup_is_valid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772163
FRAGMENT_COUNT: 13
  ORIGINAL[0]: !s
  TYPE[0]: CALL
  TOKENIZED[0]: !s
  ORIGINAL[1]: h = (s -> opaque)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( VAR2 -> VAR3 )
  ORIGINAL[2]: s -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: opaque
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: h
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 30064772312
FRAGMENT_COUNT: 2
  ORIGINAL[0]: url_open_dyn_buf_internal(s,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , 0 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064771897
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *(q++)
  TYPE[0]: CALL
  TOKENIZED[0]: * ( q++ )
  ORIGINAL[1]: q - buf < (buflen - 1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 - VAR2 < ( VAR3 - 1 )
  ORIGINAL[2]: *(q++)
  TYPE[2]: CALL
  TOKENIZED[2]: * ( q++ )
  ORIGINAL[3]: q++
  TYPE[3]: CALL
  TOKENIZED[3]: q++
  ORIGINAL[4]: *(q++)
  TYPE[4]: CALL
  TOKENIZED[4]: * ( q++ )
  ORIGINAL[5]: q
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476766
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: filepath = (char*) malloc (size_filepath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = ( char* ) FUN1 ( VAR2 * sizeof ( char ) )
  ORIGINAL[3]: (char*) malloc (size_filepath * sizeof(char))
  TYPE[3]: CALL
  TOKENIZED[3]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[4]: filepath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771668
FRAGMENT_COUNT: 7
  ORIGINAL[0]: size > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: len == 0 || s -> write_flag
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == 0 || VAR2 -> VAR3
  ORIGINAL[2]: len == 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == 0
  ORIGINAL[3]: s -> write_flag
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: write_flag
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: len
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771185
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *s = (av_mallocz(sizeof(AVIOContext )))
  TYPE[0]: CALL
  TOKENIZED[0]: *s = ( FUN1 ( sizeof ( VAR1 ) ) )
  ORIGINAL[1]: av_mallocz(sizeof(AVIOContext ))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( sizeof ( VAR1 ) )
  ORIGINAL[2]: sizeof(AVIOContext )
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477888
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_class_next = ffio_url_child_class_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_class_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477191
FRAGMENT_COUNT: 2
  ORIGINAL[0]: av_crc_get_table(AV_CRC_32_IEEE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: AV_CRC_32_IEEE
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 30064772315
FRAGMENT_COUNT: 4
  ORIGINAL[0]: max_packet_size <= 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 <= 0
  ORIGINAL[1]: url_open_dyn_buf_internal(s,max_packet_size)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: max_packet_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771630
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s -> checksum = ((s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_ptr - s -> checksum_ptr)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 = ( ( VAR1 -> VAR3 ) ( VAR1 -> VAR2 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) ) )
  ORIGINAL[1]: s -> checksum
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (s -> update_checksum)(s -> checksum,(s -> checksum_ptr),(s -> buf_ptr - s -> checksum_ptr))
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 -> VAR2 ) ( VAR1 -> VAR3 , ( VAR1 -> VAR4 ) , ( VAR1 -> VAR5 - VAR1 -> VAR4 ) )
  ORIGINAL[3]: s -> update_checksum
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> checksum
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> checksum_ptr
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> buf_ptr - s -> checksum_ptr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 - VAR1 -> VAR3

CENTER_NODE: 30064771257
FRAGMENT_COUNT: 19
  ORIGINAL[0]: s -> direct && !s -> update_checksum
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && !s -> VAR3
  ORIGINAL[1]: s -> direct
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: !s -> update_checksum
  TYPE[2]: CALL
  TOKENIZED[2]: !s -> VAR1
  ORIGINAL[3]: s -> update_checksum
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: direct
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: update_checksum
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: s
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: s
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: s
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: s
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: s
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: s
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: s
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: s
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: s
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 68719476996
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_seek(s,offset,1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , 1 )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476797
FRAGMENT_COUNT: 5
  ORIGINAL[0]: prev?((void *)0) : &ffurl_context_class
  TYPE[0]: CALL
  TOKENIZED[0]: prev? ( ( void * ) 0 ) : &ffurl_context_class
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: &ffurl_context_class
  TYPE[2]: CALL
  TOKENIZED[2]: &ffurl_context_class
  ORIGINAL[3]: prev
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ffurl_context_class
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477168
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s -> read_packet && s -> buffer_size > max_buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 && VAR1 -> VAR3 > VAR4
  ORIGINAL[1]: s -> checksum_ptr = dst = s -> buffer
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR3 = VAR1 -> VAR4
  ORIGINAL[2]: len = s -> buffer_size
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = VAR2 -> VAR3
  ORIGINAL[3]: s -> buffer_size
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: len
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477347
FRAGMENT_COUNT: 7
  ORIGINAL[0]: val = avio_rb16(s) << 16
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 ) << 16
  ORIGINAL[1]: val |= avio_rb16(s)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 |= FUN1 ( VAR2 )
  ORIGINAL[2]: avio_rb16(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: s
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: val
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477123
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (int )val
  TYPE[0]: CALL
  TOKENIZED[0]: ( int ) VAR1
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477663
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = avio_close( *s)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( *s )
  ORIGINAL[1]: *s
  TYPE[1]: CALL
  TOKENIZED[1]: *s
  ORIGINAL[2]: *s
  TYPE[2]: CALL
  TOKENIZED[2]: *s
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477036
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (uint8_t )val
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) VAR2
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771502
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = ff_get_v_length(val)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[1]: ff_get_v_length(val)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477334
FRAGMENT_COUNT: 3
  ORIGINAL[0]: val |= ((uint64_t )(avio_rl32(s))) << 32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 |= ( ( VAR2 ) ( FUN1 ( VAR3 ) ) ) << 32
  ORIGINAL[1]: val
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771519
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_wb32(s,((uint32_t )(val >> 32)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) ( VAR3 >> 32 ) ) )
  ORIGINAL[1]: (uint32_t )(val >> 32)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( VAR2 >> 32 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771795
FRAGMENT_COUNT: 4
  ORIGINAL[0]: val = (avio_r8(s) << 8)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( FUN1 ( VAR2 ) << 8 )
  ORIGINAL[1]: avio_r8(s) << 8
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) << 8
  ORIGINAL[2]: avio_r8(s)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476852
FRAGMENT_COUNT: 7
  ORIGINAL[0]: s -> write_packet
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: s -> error
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> opaque
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ret < 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 < 0
  ORIGINAL[4]: s -> error
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: error
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477356
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c && i < maxlen - 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR2 < VAR3 - 1
  ORIGINAL[1]: buf[i++]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ i++ ]
  ORIGINAL[2]: buf
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771513
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_wl32(s,((uint32_t )(val & 0xffffffff)))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) ( VAR3 & 0xffffffff ) ) )
  ORIGINAL[1]: (uint32_t )(val & 0xffffffff)
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) ( VAR2 & 0xffffffff )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640398
FRAGMENT_COUNT: 1
  ORIGINAL[0]: !s -> read_pause
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1

CENTER_NODE: 30064772216
FRAGMENT_COUNT: 1
  ORIGINAL[0]: io_buffer[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1 ]

CENTER_NODE: 30064771499
FRAGMENT_COUNT: 3
  ORIGINAL[0]: i = 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 1
  ORIGINAL[1]: i
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477114
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_w8(s,((uint8_t )val))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) VAR3 ) )
  ORIGINAL[1]: avio_w8(s,((int )val) >> 8)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( ( int ) VAR2 ) >> 8 )
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772428
FRAGMENT_COUNT: 2
  ORIGINAL[0]: .child_next = ffio_url_child_next
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = VAR2
  ORIGINAL[1]: child_next
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477377
FRAGMENT_COUNT: 4
  ORIGINAL[0]: !(buf[i] = (avio_r8(s)))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 [ VAR2 ] = ( FUN1 ( VAR3 ) ) )
  ORIGINAL[1]: i + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476923
FRAGMENT_COUNT: 5
  ORIGINAL[0]: flush_buffer(s)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: s -> must_flush
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: must_flush
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476875
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *(s -> buf_ptr++) = b
  TYPE[0]: CALL
  TOKENIZED[0]: * ( VAR1 -> buf_ptr++ ) = VAR2
  ORIGINAL[1]: s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_ptr
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: buf_ptr
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: s
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477632
FRAGMENT_COUNT: 7
  ORIGINAL[0]: gemonies_nonvisibility != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != 0
  ORIGINAL[1]: spatterware_macrochemical . enflagellation_sashays = ((char *)gemonies_nonvisibility)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 . VAR2 = ( ( char * ) VAR3 )
  ORIGINAL[2]: unsaddling_headhunts = &spatterware_macrochemical
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = &spatterware_macrochemical
  ORIGINAL[3]: &spatterware_macrochemical
  TYPE[3]: CALL
  TOKENIZED[3]: &spatterware_macrochemical
  ORIGINAL[4]: unsaddling_headhunts
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: spatterware_macrochemical
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: unsaddling_headhunts
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772423
FRAGMENT_COUNT: 4
  ORIGINAL[0]: .version = '4' << 16 | 18 << 8 | 100
  TYPE[0]: CALL
  TOKENIZED[0]: . VAR1 = '4' << 16 | 18 << 8 | 100
  ORIGINAL[1]: '4' << 16 | 18 << 8 | 100
  TYPE[1]: CALL
  TOKENIZED[1]: '4' << 16 | 18 << 8 | 100
  ORIGINAL[2]: '4' << 16 | 18 << 8
  TYPE[2]: CALL
  TOKENIZED[2]: '4' << 16 | 18 << 8
  ORIGINAL[3]: version
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771240
FRAGMENT_COUNT: 13
  ORIGINAL[0]: count > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: s -> buf_end - s -> buf_ptr > count?count : s -> buf_end - s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 - VAR1 -> VAR3 > count?count : VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[2]: s -> buf_end - s -> buf_ptr > count
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 - VAR1 -> VAR3 > VAR4
  ORIGINAL[3]: s -> buf_end - s -> buf_ptr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[4]: s -> buf_end - s -> buf_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2 - VAR1 -> VAR3
  ORIGINAL[5]: s -> buf_end
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> buf_ptr
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: buf_end
  TYPE[7]: FIELD_IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: buf_ptr
  TYPE[8]: FIELD_IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: count
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: count
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: s
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: s
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1

CENTER_NODE: 68719477500
FRAGMENT_COUNT: 5
  ORIGINAL[0]: val = ((uint64_t )(avio_rb32(s))) << 32
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( VAR2 ) ( FUN1 ( VAR3 ) ) ) << 32
  ORIGINAL[1]: ((uint64_t )(avio_rb32(s))) << 32
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 ) ( FUN1 ( VAR2 ) ) ) << 32
  ORIGINAL[2]: val
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: uint64_t
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: val
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719476862
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> buf_ptr > s -> buffer
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 > VAR1 -> VAR3
  ORIGINAL[1]: writeout(s,(s -> buffer),(s -> buf_ptr - s -> buffer))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( VAR1 -> VAR2 ) , ( VAR1 -> VAR3 - VAR1 -> VAR2 ) )
  ORIGINAL[2]: s -> buffer
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buf_ptr
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: s -> update_checksum
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: update_checksum
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772272
FRAGMENT_COUNT: 8
  ORIGINAL[0]: whence == 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 1
  ORIGINAL[1]: offset += (d -> pos)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 += ( VAR2 -> VAR3 )
  ORIGINAL[2]: d -> pos
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pos
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: d
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: d
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: d
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064772061
FRAGMENT_COUNT: 28
  ORIGINAL[0]: flags & 2
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 2
  ORIGINAL[1]: s -> buf_end = s -> buffer + s -> buffer_size
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR1 -> VAR3 + VAR1 -> VAR4
  ORIGINAL[2]: s -> buf_end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: s -> buffer + s -> buffer_size
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 + VAR1 -> VAR3
  ORIGINAL[4]: s -> buffer
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: s -> buffer_size
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: s -> write_flag = 1
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 = 1
  ORIGINAL[7]: s -> write_flag
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: s -> buf_end = s -> buffer
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2 = VAR1 -> VAR3
  ORIGINAL[9]: s -> buf_end
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: s -> buffer
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: s -> write_flag = 0
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 = 0
  ORIGINAL[12]: s -> write_flag
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: buf_end
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: buffer
  TYPE[14]: FIELD_IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: buffer_size
  TYPE[15]: FIELD_IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: write_flag
  TYPE[16]: FIELD_IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: buf_end
  TYPE[17]: FIELD_IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: buffer
  TYPE[18]: FIELD_IDENTIFIER
  TOKENIZED[18]: VAR1
  ORIGINAL[19]: write_flag
  TYPE[19]: FIELD_IDENTIFIER
  TOKENIZED[19]: VAR1
  ORIGINAL[20]: flags
  TYPE[20]: IDENTIFIER
  TOKENIZED[20]: VAR1
  ORIGINAL[21]: s
  TYPE[21]: IDENTIFIER
  TOKENIZED[21]: VAR1
  ORIGINAL[22]: s
  TYPE[22]: IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: s
  TYPE[23]: IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: s
  TYPE[24]: IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: s
  TYPE[25]: IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: s
  TYPE[26]: IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: s
  TYPE[27]: IDENTIFIER
  TOKENIZED[27]: VAR1

CENTER_NODE: 68719477764
FRAGMENT_COUNT: 4
  ORIGINAL[0]: max_packet_size?max_packet_size : 1024
  TYPE[0]: CALL
  TOKENIZED[0]: max_packet_size?max_packet_size : 1024
  ORIGINAL[1]: io_buffer_size
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: max_packet_size
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: max_packet_size
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477620
FRAGMENT_COUNT: 3
  ORIGINAL[0]: avio_open2(s,filename,flags,((void *)0),((void *)0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , ( ( void * ) 0 ) , ( ( void * ) 0 ) )
  ORIGINAL[1]: s
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: filename
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477213
FRAGMENT_COUNT: 8
  ORIGINAL[0]: s -> buf_ptr >= s -> buf_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 >= VAR1 -> VAR3
  ORIGINAL[1]: s -> buf_ptr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: s -> buf_end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: fill_buffer(s)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: s -> buf_ptr
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: buf_ptr
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: s
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: s
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 68719476994
FRAGMENT_COUNT: 8
  ORIGINAL[0]: !s -> must_flush && (!s -> direct || !s -> seek) && offset1 >= 0 && offset1 <= s -> buf_end - s -> buffer
  TYPE[0]: CALL
  TOKENIZED[0]: !s -> VAR1 && ( !s -> VAR2 || !s -> VAR3 ) && VAR4 >= 0 && VAR4 <= VAR5 -> VAR6 - VAR5 -> VAR7
  ORIGINAL[1]: s -> eof_reached
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: (res = ((s -> seek)(s -> opaque,offset,0))) < 0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 = ( ( VAR2 -> VAR3 ) ( VAR2 -> VAR4 , VAR5 , 0 ) ) ) < 0
  ORIGINAL[3]: s -> eof_reached = 0
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2 = 0
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: offset
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: offset
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 30064771430
FRAGMENT_COUNT: 4
  ORIGINAL[0]: avio_w8(s,((uint8_t )val))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( VAR2 ) VAR3 ) )
  ORIGINAL[1]: (uint8_t )val
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: s
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: s
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

