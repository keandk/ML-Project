# Tokenized code fragments for 152082-v1.0.0-bad
# Total center nodes processed: 42
# Total code fragments found: 119

CENTER_NODE: 68719476753
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: sizeof(char)
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( char )
  ORIGINAL[2]: size_dirpath
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: char
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: char

CENTER_NODE: 30064771613
FRAGMENT_COUNT: 5
  ORIGINAL[0]: buf[1024]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ 1024 ]
  ORIGINAL[1]: buf[1024]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ 1024 ]
  ORIGINAL[2]: do_benchmark_all
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: buf
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: fmt
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640336
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640392
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771235
FRAGMENT_COUNT: 6
  ORIGINAL[0]: *ref = ist -> sub2video . ref
  TYPE[0]: CALL
  TOKENIZED[0]: *ref = VAR1 -> VAR2 . VAR3
  ORIGINAL[1]: ist -> sub2video . ref
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 . VAR3
  ORIGINAL[2]: ist -> sub2video
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: ist -> sub2video
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: ref
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: ref
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640469
FRAGMENT_COUNT: 1
  ORIGINAL[0]: for (;;)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: for ( ; ; )

CENTER_NODE: 30064773499
FRAGMENT_COUNT: 3
  ORIGINAL[0]: decoded_frame -> pts != ((int64_t )0x8000000000000000UL)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( VAR3 ) 0x8000000000000000UL )
  ORIGINAL[1]: (AVRational ){(1), (1000000)}
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) { ( 1 ) , ( 1000000 ) }
  ORIGINAL[2]: {(1), (1000000)}
  TYPE[2]: CALL
  TOKENIZED[2]: { ( 1 ) , ( 1000000 ) }

CENTER_NODE: 47244640543
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640614
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640427
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 3
  ORIGINAL[0]: (AVRational ){(1), (1000000)}
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 ) { ( 1 ) , ( 1000000 ) }
  ORIGINAL[1]: {(1), (1000000)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( 1 ) , ( 1000000 ) }
  ORIGINAL[2]: sub
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064773696
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: for (i = 0;i < nb_filtergraphs;i++)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( VAR1 = 0 ; VAR1 < VAR2 ; i++ )
  ORIGINAL[2]: resample_changed
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064772390
FRAGMENT_COUNT: 3
  ORIGINAL[0]: - 10.0 * log(d) / log(10.0)
  TYPE[0]: CALL
  TOKENIZED[0]: - 10 . 0 * FUN1 ( VAR1 ) / FUN1 ( 10 . 0 )
  ORIGINAL[1]: - 10.0 * log(d)
  TYPE[1]: CALL
  TOKENIZED[1]: - 10 . 0 * FUN1 ( VAR1 )
  ORIGINAL[2]: log(10.0)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 10 . 0 )

CENTER_NODE: 30064776465
FRAGMENT_COUNT: 4
  ORIGINAL[0]: int_cb = {(decode_interrupt_cb), ((void *)0)}
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = { ( VAR2 ) , ( ( void * ) 0 ) }
  ORIGINAL[1]: {(decode_interrupt_cb), ((void *)0)}
  TYPE[1]: CALL
  TOKENIZED[1]: { ( VAR1 ) , ( ( void * ) 0 ) }
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: int_cb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064775467
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < nb_output_streams
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: *of = output_files[ost -> file_index]
  TYPE[1]: CALL
  TOKENIZED[1]: *of = VAR1 [ VAR2 -> VAR3 ]
  ORIGINAL[2]: output_files[ost -> file_index]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 -> VAR3 ]
  ORIGINAL[3]: of
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: os
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771424
FRAGMENT_COUNT: 1
  ORIGINAL[0]: avformat_network_deinit()
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( )

CENTER_NODE: 68719478794
FRAGMENT_COUNT: 5
  ORIGINAL[0]: va < vb
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: vb
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: va
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: vb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: vb
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640629
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640313
FRAGMENT_COUNT: 2
  ORIGINAL[0]: t = av_dict_get(m,\
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , \
  ORIGINAL[1]: if (t = av_dict_get(m,\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( VAR1 = FUN1 ( VAR2 , \

CENTER_NODE: 30064771610
FRAGMENT_COUNT: 1
  ORIGINAL[0]: exit(1)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 1 )

CENTER_NODE: 30064775663
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_read_frame(f -> ctx,pkt)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 )
  ORIGINAL[1]: f -> ctx
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pkt
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771417
FRAGMENT_COUNT: 3
  ORIGINAL[0]: av_log(((void *)0),- 8,\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ( ( void * ) 0 ) , - 8 , \
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: - 8
  TYPE[2]: CALL
  TOKENIZED[2]: - 8

CENTER_NODE: 68719477022
FRAGMENT_COUNT: 3
  ORIGINAL[0]: received_nb_signals > 1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 1
  ORIGINAL[1]: <global> received_nb_signals
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: received_nb_signals
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477209
FRAGMENT_COUNT: 19
  ORIGINAL[0]: pkt -> pts
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: pkt -> dts
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: pkt -> dts
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: pkt -> dts
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: pkt -> stream_index
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: pkt -> pts
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: pkt -> pts
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2
  ORIGINAL[7]: pkt -> dts
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2
  ORIGINAL[8]: *pkt
  TYPE[8]: CALL
  TOKENIZED[8]: *pkt
  ORIGINAL[9]: pkt -> data
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: pkt -> size
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 -> VAR2
  ORIGINAL[11]: pkt -> flags
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2
  ORIGINAL[12]: pkt -> data
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: pkt -> stream_index
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: *pkt
  TYPE[14]: CALL
  TOKENIZED[14]: *pkt
  ORIGINAL[15]: bsfc
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: new_pkt
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: pkt
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: pkt
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 47244640826
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771186
FRAGMENT_COUNT: 6
  ORIGINAL[0]: r -> x < 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 < 0
  ORIGINAL[1]: r -> x + r -> w > w
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 + VAR1 -> VAR3 > VAR3
  ORIGINAL[2]: r -> x + r -> w
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 + VAR1 -> VAR3
  ORIGINAL[3]: r -> x
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: r -> w
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: w
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476830
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ptrs[i] != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] != 0
  ORIGINAL[1]: ptrs[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: ptrs[i]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ]
  ORIGINAL[3]: ptrs
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771427
FRAGMENT_COUNT: 1
  ORIGINAL[0]: - 1
  TYPE[0]: CALL
  TOKENIZED[0]: - 1

CENTER_NODE: 47244640393
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640414
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476798
FRAGMENT_COUNT: 5
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: stonesoup_envKey != NULL
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != VAR2
  ORIGINAL[2]: stonesoup_envKey
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: NULL
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: stonesoup_envKey
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640369
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477017
FRAGMENT_COUNT: 5
  ORIGINAL[0]: i < ist -> nb_filters
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2 -> VAR3
  ORIGINAL[1]: ist -> filters[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 [ VAR3 ]
  ORIGINAL[2]: ist -> filters
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640553
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771426
FRAGMENT_COUNT: 1
  ORIGINAL[0]: signal(15,sigterm_handler)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 15 , VAR1 )

CENTER_NODE: 30064776388
FRAGMENT_COUNT: 3
  ORIGINAL[0]: setvbuf(stderr,((void *)0),2,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , ( ( void * ) 0 ) , 2 , 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: stderr
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640552
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771425
FRAGMENT_COUNT: 1
  ORIGINAL[0]: signal(2,sigterm_handler)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 2 , VAR1 )

CENTER_NODE: 47244640554
FRAGMENT_COUNT: 0

CENTER_NODE: 30064773310
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !dec -> channel_layout
  TYPE[0]: CALL
  TOKENIZED[0]: !dec -> VAR1
  ORIGINAL[1]: av_get_channel_layout_string(layout_name,(sizeof(layout_name)),dec -> channels,dec -> channel_layout)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , ( sizeof ( VAR1 ) ) , VAR2 -> VAR3 , VAR2 -> VAR4 )
  ORIGINAL[2]: sizeof(layout_name)
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 )
  ORIGINAL[3]: dec -> channels
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: dec -> channel_layout
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: layout_name
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771422
FRAGMENT_COUNT: 3
  ORIGINAL[0]: received_nb_signals > 3
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 3
  ORIGINAL[1]: exit(123)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( 123 )
  ORIGINAL[2]: <global> received_nb_signals
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064776478
FRAGMENT_COUNT: 6
  ORIGINAL[0]: key = strtol(optarg, NULL, 10)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( VAR2 , VAR3 , 10 )
  ORIGINAL[1]: strtol(optarg, NULL, 10)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , 10 )
  ORIGINAL[2]: c
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: key
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: optarg
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: NULL
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

