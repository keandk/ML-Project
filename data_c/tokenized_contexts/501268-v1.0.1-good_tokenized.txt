# Tokenized code fragments for 501268-v1.0.1-good
# Total center nodes processed: 14
# Total code fragments found: 64

CENTER_NODE: 30064772526
FRAGMENT_COUNT: 4
  ORIGINAL[0]: p = (guint32 *)net_src->data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( VAR2 * ) net_src->data
  ORIGINAL[1]: (guint32 *)net_src->data
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 * ) net_src->data
  ORIGINAL[2]: p
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: val
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064772653
FRAGMENT_COUNT: 3
  ORIGINAL[0]: template->id != id
  TYPE[0]: CALL
  TOKENIZED[0]: template->id != VAR1
  ORIGINAL[1]: !ADDRESSES_EQUAL(&template->source_addr, net_src)
  TYPE[1]: CALL
  TOKENIZED[1]: !ADDRESSES_EQUAL ( &template->source_addr , VAR1 )
  ORIGINAL[2]: ADDRESSES_EQUAL(&template->source_addr, net_src)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( &template->source_addr , VAR1 )

CENTER_NODE: 68719479630
FRAGMENT_COUNT: 10
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: i < V9TEMPLATE_CACHE_MAX_ENTRIES
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 < VAR2
  ORIGINAL[2]: V9TEMPLATE_CACHE_MAX_ENTRIES
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i++
  TYPE[3]: CALL
  TOKENIZED[3]: i++
  ORIGINAL[4]: i
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: i
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: i
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: i
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: i
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 2
  ORIGINAL[0]: V8PDU_NO_METHOD = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: V8PDU_NO_METHOD
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719480787
FRAGMENT_COUNT: 6
  ORIGINAL[0]: dissector_delete(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: port
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: port
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: <global> netflow_handle
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: port
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476982
FRAGMENT_COUNT: 6
  ORIGINAL[0]: hdrinfo.vspec
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 . VAR2
  ORIGINAL[1]: pdusize = -1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = -1
  ORIGINAL[2]: -1
  TYPE[2]: CALL
  TOKENIZED[2]: -1
  ORIGINAL[3]: pdusize
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: pdusize
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pdusize
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477183
FRAGMENT_COUNT: 7
  ORIGINAL[0]: proto_tree_add_text(pdutree, tvb, offset, bytes, \
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 , \
  ORIGINAL[1]: pdutree
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: tvb
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: offset
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: bytes
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: text
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: bytes
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064772548
FRAGMENT_COUNT: 4
  ORIGINAL[0]: i = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: for (i = 0;i < template->count_scopes;i++)
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: for ( VAR1 = 0 ; VAR1 < template->count_scopes ; i++ )
  ORIGINAL[2]: i
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: i
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064773389
FRAGMENT_COUNT: 2
  ORIGINAL[0]: register_init_routine(&netflow_reinit)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &netflow_reinit )
  ORIGINAL[1]: &netflow_reinit
  TYPE[1]: CALL
  TOKENIZED[1]: &netflow_reinit

CENTER_NODE: 68719480780
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dissector_delete(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: port
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> netflow_handle
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 47244640706
FRAGMENT_COUNT: 1
  ORIGINAL[0]: port
  TYPE[0]: IDENTIFIER
  TOKENIZED[0]: VAR1

CENTER_NODE: 68719480783
FRAGMENT_COUNT: 4
  ORIGINAL[0]: dissector_add(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: port
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: port
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: <global> netflow_handle
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719476743
FRAGMENT_COUNT: 6
  ORIGINAL[0]: length == 3
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 3
  ORIGINAL[1]: offset + 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 + 1
  ORIGINAL[2]: offset
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: tvb
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: offset
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: offset
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719479625
FRAGMENT_COUNT: 5
  ORIGINAL[0]: gprefix = *address & g_htonl((0xffffffff << (32 - prefix)))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = *address & FUN1 ( ( 0xffffffff << ( 32 - VAR2 ) ) )
  ORIGINAL[1]: *address & g_htonl((0xffffffff << (32 - prefix)))
  TYPE[1]: CALL
  TOKENIZED[1]: *address & FUN1 ( ( 0xffffffff << ( 32 - VAR1 ) ) )
  ORIGINAL[2]: gprefix
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: address
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: gprefix
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

