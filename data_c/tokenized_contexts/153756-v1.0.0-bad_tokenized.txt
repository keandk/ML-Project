# Tokenized code fragments for 153756-v1.0.0-bad
# Total center nodes processed: 45
# Total code fragments found: 126

CENTER_NODE: 47244640318
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771210
FRAGMENT_COUNT: 7
  ORIGINAL[0]: topage == ((const char *)1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( const char * ) 1 )
  ORIGINAL[1]: errstr = (apr_psprintf(pool,(dgettext(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( FUN1 ( VAR2 , ( FUN2 ( \
  ORIGINAL[2]: apr_psprintf(pool,(dgettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( FUN2 ( \
  ORIGINAL[3]: dgettext(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: errstr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: frompage
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 68719477476
FRAGMENT_COUNT: 6
  ORIGINAL[0]: err = convert_from_utf8(((const char **)(&converted)),escaped,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = FUN1 ( ( ( const char ** ) ( &converted ) ) , VAR2 , VAR3 )
  ORIGINAL[1]: svn_error_clear(err)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 )
  ORIGINAL[2]: err
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: err
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: escaped
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: converted
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771430
FRAGMENT_COUNT: 9
  ORIGINAL[0]: src_orig < src_end
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: (unsigned char )( *src_orig)
  TYPE[1]: CALL
  TOKENIZED[1]: ( unsigned char ) ( *src_orig )
  ORIGINAL[2]: *src_orig
  TYPE[2]: CALL
  TOKENIZED[2]: *src_orig
  ORIGINAL[3]: *src_orig
  TYPE[3]: CALL
  TOKENIZED[3]: *src_orig
  ORIGINAL[4]: *src_orig
  TYPE[4]: CALL
  TOKENIZED[4]: *src_orig
  ORIGINAL[5]: src_orig
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: src_orig
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: src_orig
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: src_orig
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 68719477210
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !svn_utf__is_valid(data,len)
  TYPE[0]: CALL
  TOKENIZED[0]: !svn_utf__is_valid ( VAR1 , VAR2 )
  ORIGINAL[1]: invalid_utf8(data,len,pool)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[2]: len
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: len
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: pool
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 47244640316
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640350
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640367
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640306
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640275
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477175
FRAGMENT_COUNT: 5
  ORIGINAL[0]: last - data
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 - VAR2
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: last
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: data
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: data
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640384
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640386
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640369
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771131
FRAGMENT_COUNT: 4
  ORIGINAL[0]: c >= 97 && c <= 122
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 >= 97 && VAR1 <= 122
  ORIGINAL[1]: c >= 97
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 >= 97
  ORIGINAL[2]: c <= 122
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 <= 122
  ORIGINAL[3]: c
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771771
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *dest = (destbuf -> data)
  TYPE[0]: CALL
  TOKENIZED[0]: *dest = ( VAR1 -> VAR2 )
  ORIGINAL[1]: *dest
  TYPE[1]: CALL
  TOKENIZED[1]: *dest
  ORIGINAL[2]: destbuf -> data
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: dest
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: destbuf
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771397
FRAGMENT_COUNT: 6
  ORIGINAL[0]: get_xlate_handle_node(ret,SVN_APR_UTF8_CHARSET,(assume_native_charset_is_utf8?SVN_APR_UTF8_CHARSET : ((const char *)1)),SVN_UTF_NTOU_XLATE_HANDLE,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , ( assume_native_charset_is_utf8?SVN_APR_UTF8_CHARSET : ( ( const char * ) 1 ) ) , VAR3 , VAR4 )
  ORIGINAL[1]: assume_native_charset_is_utf8?SVN_APR_UTF8_CHARSET : ((const char *)1)
  TYPE[1]: CALL
  TOKENIZED[1]: assume_native_charset_is_utf8?SVN_APR_UTF8_CHARSET : ( ( const char * ) 1 )
  ORIGINAL[2]: (const char *)1
  TYPE[2]: CALL
  TOKENIZED[2]: ( const char * ) 1
  ORIGINAL[3]: <global> assume_native_charset_is_utf8
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: <global> SVN_APR_UTF8_CHARSET
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: <global> SVN_UTF_NTOU_XLATE_HANDLE
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: <global> VAR1

CENTER_NODE: 47244640361
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476764
FRAGMENT_COUNT: 6
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: size_filepath = strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath) + strlen(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[3]: size_filepath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: dirpath
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: size_filepath
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771142
FRAGMENT_COUNT: 17
  ORIGINAL[0]: !xlate_handle_hash
  TYPE[0]: CALL
  TOKENIZED[0]: !xlate_handle_hash
  ORIGINAL[1]: *subpool = svn_pool_create_ex(pool,((void *)0))
  TYPE[1]: CALL
  TOKENIZED[1]: *subpool = FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[2]: svn_pool_create_ex(pool,((void *)0))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 , ( ( void * ) 0 ) )
  ORIGINAL[3]: (void *)0
  TYPE[3]: CALL
  TOKENIZED[3]: ( void * ) 0
  ORIGINAL[4]: *err = svn_mutex__init(&mutex,!0,subpool)
  TYPE[4]: CALL
  TOKENIZED[4]: *err = FUN1 ( &mutex , !0 , VAR1 )
  ORIGINAL[5]: svn_mutex__init(&mutex,!0,subpool)
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( &mutex , !0 , VAR1 )
  ORIGINAL[6]: &mutex
  TYPE[6]: CALL
  TOKENIZED[6]: &mutex
  ORIGINAL[7]: !0
  TYPE[7]: CALL
  TOKENIZED[7]: !0
  ORIGINAL[8]: !assume_native_charset_is_utf8
  TYPE[8]: CALL
  TOKENIZED[8]: !assume_native_charset_is_utf8
  ORIGINAL[9]: <global> xlate_handle_hash
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: <global> VAR1
  ORIGINAL[10]: subpool
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: pool
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: err
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: mutex
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: subpool
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: err
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: <global> assume_native_charset_is_utf8
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: <global> VAR1

CENTER_NODE: 47244640358
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771520
FRAGMENT_COUNT: 12
  ORIGINAL[0]: len > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: (unsigned char )( *data)
  TYPE[1]: CALL
  TOKENIZED[1]: ( unsigned char ) ( *data )
  ORIGINAL[2]: *data
  TYPE[2]: CALL
  TOKENIZED[2]: *data
  ORIGINAL[3]: *data
  TYPE[3]: CALL
  TOKENIZED[3]: *data
  ORIGINAL[4]: *data
  TYPE[4]: CALL
  TOKENIZED[4]: *data
  ORIGINAL[5]: data
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: data
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: data
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: data
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: data
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: data
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: data
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 47244640388
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640396
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640303
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640315
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640365
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640344
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771652
FRAGMENT_COUNT: 5
  ORIGINAL[0]: node -> handle
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: len = strlen(src)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = FUN1 ( VAR2 )
  ORIGINAL[2]: strlen(src)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: len
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: svn_err__temp
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640394
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477345
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf_cstring_to_utf8_ex2(dest,src,frompage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: dest
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: src
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477212
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_is_valid(data)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 )
  ORIGINAL[1]: data
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: data
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771168
FRAGMENT_COUNT: 4
  ORIGINAL[0]: topage == ((const char *)1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == ( ( const char * ) 1 )
  ORIGINAL[1]: topage == ((const char *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == ( ( const char * ) 0 )
  ORIGINAL[2]: (const char *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( const char * ) 0
  ORIGINAL[3]: topage
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719476800
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *node = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *node = VAR1
  ORIGINAL[1]: node
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: node
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640377
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640363
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476936
FRAGMENT_COUNT: 6
  ORIGINAL[0]: userdata_key && xlate_handle_hash
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 && VAR2
  ORIGINAL[1]: userdata_key
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: <global> xlate_handle_hash
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: <global> xlate_handle_hash
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1
  ORIGINAL[4]: <global> xlate_handle_hash
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: <global> VAR1
  ORIGINAL[5]: xlate_handle_hash
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719477119
FRAGMENT_COUNT: 8
  ORIGINAL[0]: src_length == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: &destlen
  TYPE[1]: CALL
  TOKENIZED[1]: &destlen
  ORIGINAL[2]: buflen - ( *dest) -> len - destlen
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 - ( *dest ) -> VAR2 - VAR3
  ORIGINAL[3]: buflen - ( *dest) -> len
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 - ( *dest ) -> VAR2
  ORIGINAL[4]: apr_err == 0 && srclen != 0
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 == 0 && VAR2 != 0
  ORIGINAL[5]: destlen
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: destlen
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: destlen
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640371
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640273
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640304
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771766
FRAGMENT_COUNT: 3
  ORIGINAL[0]: svn_utf__cstring_from_utf8_fuzzy(src,pool,svn_utf_cstring_from_utf8)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: pool
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771137
FRAGMENT_COUNT: 3
  ORIGINAL[0]: xlat_uton_static_handle = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> xlat_uton_static_handle
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 47244640390
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477465
FRAGMENT_COUNT: 4
  ORIGINAL[0]: svn_utf_cstring_from_utf8_ex2(dest,src,topage,pool)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 , VAR3 , VAR4 )
  ORIGINAL[1]: src
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: topage
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: pool
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

