# Tokenized code fragments for 152269-v1.0.0-bad
# Total center nodes processed: 22
# Total code fragments found: 118

CENTER_NODE: 30064771212
FRAGMENT_COUNT: 4
  ORIGINAL[0]: &((const APP_INFO *)a_void) -> threadid
  TYPE[0]: CALL
  TOKENIZED[0]: & ( ( const VAR1 * ) VAR2 ) -> VAR3
  ORIGINAL[1]: ((const APP_INFO *)a_void) -> threadid
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( const VAR1 * ) VAR2 ) -> VAR3
  ORIGINAL[2]: (const APP_INFO *)a_void
  TYPE[2]: CALL
  TOKENIZED[2]: ( const VAR1 * ) VAR2
  ORIGINAL[3]: threadid
  TYPE[3]: FIELD_IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771193
FRAGMENT_COUNT: 4
  ORIGINAL[0]: (const char *)(b -> addr)
  TYPE[0]: CALL
  TOKENIZED[0]: ( const char * ) ( VAR1 -> VAR2 )
  ORIGINAL[1]: b -> addr
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: addr
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771188
FRAGMENT_COUNT: 3
  ORIGINAL[0]: options = bits
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2
  ORIGINAL[1]: <global> options
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: bits
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719476854
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: app_info_cmp(a,b)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: a
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771281
FRAGMENT_COUNT: 17
  ORIGINAL[0]: (ret = ((APP_INFO *)(lh_delete(((_LHASH *)((void *)((1?amih : ((struct lhash_st_APP_INFO *)0))))),((void *)(&tmp)))))) != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( VAR1 = ( ( VAR2 * ) ( FUN1 ( ( ( VAR3 * ) ( ( void * ) ( ( 1?amih : ( ( struct VAR4 * ) 0 ) ) ) ) ) , ( ( void * ) ( &tmp ) ) ) ) ) ) != ( ( void * ) 0 )
  ORIGINAL[1]: next != ((void *)0)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 != ( ( void * ) 0 )
  ORIGINAL[2]: (void *)0
  TYPE[2]: CALL
  TOKENIZED[2]: ( void * ) 0
  ORIGINAL[3]: next -> references++
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> references++
  ORIGINAL[4]: next -> references
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: (void )((APP_INFO *)(lh_insert(((_LHASH *)((void *)(1?amih : ((struct lhash_st_APP_INFO *)0)))),((void *)(1?next : ((APP_INFO *)0))))))
  TYPE[5]: CALL
  TOKENIZED[5]: ( void ) ( ( VAR1 * ) ( FUN1 ( ( ( VAR2 * ) ( ( void * ) ( 1?amih : ( ( struct VAR3 * ) 0 ) ) ) ) , ( ( void * ) ( 1?next : ( ( VAR1 * ) 0 ) ) ) ) ) )
  ORIGINAL[6]: (APP_INFO *)(lh_insert(((_LHASH *)((void *)(1?amih : ((struct lhash_st_APP_INFO *)0)))),((void *)(1?next : ((APP_INFO *)0)))))
  TYPE[6]: CALL
  TOKENIZED[6]: ( VAR1 * ) ( FUN1 ( ( ( VAR2 * ) ( ( void * ) ( 1?amih : ( ( struct VAR3 * ) 0 ) ) ) ) , ( ( void * ) ( 1?next : ( ( VAR1 * ) 0 ) ) ) ) )
  ORIGINAL[7]: lh_insert(((_LHASH *)((void *)(1?amih : ((struct lhash_st_APP_INFO *)0)))),((void *)(1?next : ((APP_INFO *)0))))
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( ( ( VAR1 * ) ( ( void * ) ( 1?amih : ( ( struct VAR2 * ) 0 ) ) ) ) , ( ( void * ) ( 1?next : ( ( VAR3 * ) 0 ) ) ) )
  ORIGINAL[8]: (_LHASH *)((void *)(1?amih : ((struct lhash_st_APP_INFO *)0)))
  TYPE[8]: CALL
  TOKENIZED[8]: ( VAR1 * ) ( ( void * ) ( 1?amih : ( ( struct VAR2 * ) 0 ) ) )
  ORIGINAL[9]: (void *)(1?amih : ((struct lhash_st_APP_INFO *)0))
  TYPE[9]: CALL
  TOKENIZED[9]: ( void * ) ( 1?amih : ( ( struct VAR1 * ) 0 ) )
  ORIGINAL[10]: 1?amih : ((struct lhash_st_APP_INFO *)0)
  TYPE[10]: CALL
  TOKENIZED[10]: 1?amih : ( ( struct VAR1 * ) 0 )
  ORIGINAL[11]: (void *)(1?next : ((APP_INFO *)0))
  TYPE[11]: CALL
  TOKENIZED[11]: ( void * ) ( 1?next : ( ( VAR1 * ) 0 ) )
  ORIGINAL[12]: 1?next : ((APP_INFO *)0)
  TYPE[12]: CALL
  TOKENIZED[12]: 1?next : ( ( VAR1 * ) 0 )
  ORIGINAL[13]: references
  TYPE[13]: FIELD_IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: next
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: next
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: ret
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1

CENTER_NODE: 68719477155
FRAGMENT_COUNT: 5
  ORIGINAL[0]: *a = arg1
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: *b = arg2
  TYPE[1]: CALL
  TOKENIZED[1]: *b = VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: arg2
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771844
FRAGMENT_COUNT: 2
  ORIGINAL[0]: break_order_num = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: break_order_num
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1

CENTER_NODE: 68719477255
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: arboreally_ultimatum(wasterie_montanistical,nonutilization_undiscernible)
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[2]: wasterie_montanistical
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: nonutilization_undiscernible
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771136
FRAGMENT_COUNT: 7
  ORIGINAL[0]: inf -> next != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: inf -> next
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: app_info_free(inf -> next)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 -> VAR2 )
  ORIGINAL[3]: inf -> next
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: next
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: inf
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: inf
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771259
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771466
FRAGMENT_COUNT: 5
  ORIGINAL[0]: mm -> app_info != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != ( ( void * ) 0 )
  ORIGINAL[1]: mm -> app_info -> references--
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 -> references--
  ORIGINAL[2]: mm -> app_info -> references
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2 -> VAR3
  ORIGINAL[3]: mm -> app_info
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: references
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477150
FRAGMENT_COUNT: 4
  ORIGINAL[0]: m -> file
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: m -> line
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: line
  TYPE[2]: FIELD_IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: m
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771196
FRAGMENT_COUNT: 3
  ORIGINAL[0]: mem_cmp(a,b)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: b
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771106
FRAGMENT_COUNT: 4
  ORIGINAL[0]: retval == 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == 0
  ORIGINAL[1]: strlen(dirpath) + strlen(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 ) + FUN1 ( \
  ORIGINAL[2]: strlen(dirpath)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 )
  ORIGINAL[3]: dirpath
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477183
FRAGMENT_COUNT: 6
  ORIGINAL[0]: danelle_friede > 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 > 0
  ORIGINAL[1]: tracepoint(stonesoup_trace, weakness_start, \
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , VAR2 , \
  ORIGINAL[2]: dbhost = getenv(\
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 = FUN1 ( \
  ORIGINAL[3]: getenv(\
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( \
  ORIGINAL[4]: dbhost
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: dbhost
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 68719476846
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *a = arg
  TYPE[0]: CALL
  TOKENIZED[0]: *a = VAR1
  ORIGINAL[1]: a
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771554
FRAGMENT_COUNT: 10
  ORIGINAL[0]: options & 0x1
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 & 0x1
  ORIGINAL[1]: BIO_snprintf(bufp,sizeof(buf) - ((size_t )(bufp - buf)),\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , sizeof ( VAR2 ) - ( ( VAR3 ) ( VAR1 - VAR2 ) ) , \
  ORIGINAL[2]: sizeof(buf) - ((size_t )(bufp - buf))
  TYPE[2]: CALL
  TOKENIZED[2]: sizeof ( VAR1 ) - ( ( VAR2 ) ( VAR3 - VAR1 ) )
  ORIGINAL[3]: lcl -> tm_hour
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: lcl -> tm_min
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: lcl -> tm_sec
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: tm_sec
  TYPE[6]: FIELD_IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: lcl
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: bufp
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: lcl
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

CENTER_NODE: 30064771719
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !b
  TYPE[0]: CALL
  TOKENIZED[0]: !b
  ORIGINAL[1]: BIO_ctrl(b,106,0,((char *)fp))
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( VAR1 , 106 , 0 , ( ( char * ) VAR2 ) )
  ORIGINAL[2]: (char *)fp
  TYPE[2]: CALL
  TOKENIZED[2]: ( char * ) VAR1
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: b
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771369
FRAGMENT_COUNT: 5
  ORIGINAL[0]: pop_info() != ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( ) != ( ( void * ) 0 )
  ORIGINAL[1]: pop_info()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: ret++
  TYPE[2]: CALL
  TOKENIZED[2]: ret++
  ORIGINAL[3]: while (pop_info() != ((void *)0))
  TYPE[3]: CONTROL_STRUCTURE
  TOKENIZED[3]: while ( FUN1 ( ) != ( ( void * ) 0 ) )
  ORIGINAL[4]: ret
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771651
FRAGMENT_COUNT: 4
  ORIGINAL[0]: *b = arg2
  TYPE[0]: CALL
  TOKENIZED[0]: *b = VAR1
  ORIGINAL[1]: b
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: arg2
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: a
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771200
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ret = ret * 17851 + (ret >> 14) * 7 + (ret >> 4) * 251
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR1 * 17851 + ( VAR1 >> 14 ) * 7 + ( VAR1 >> 4 ) * 251
  ORIGINAL[1]: ret * 17851 + (ret >> 14) * 7 + (ret >> 4) * 251
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 * 17851 + ( VAR1 >> 14 ) * 7 + ( VAR1 >> 4 ) * 251
  ORIGINAL[2]: ret
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: ret
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771356
FRAGMENT_COUNT: 10
  ORIGINAL[0]: ret = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: CRYPTO_is_mem_check_on()
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( )
  ORIGINAL[2]: CRYPTO_mem_ctrl(0x3)
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( 0x3 )
  ORIGINAL[3]: ret = pop_info() != ((void *)0)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = FUN1 ( ) != ( ( void * ) 0 )
  ORIGINAL[4]: pop_info() != ((void *)0)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( ) != ( ( void * ) 0 )
  ORIGINAL[5]: pop_info()
  TYPE[5]: CALL
  TOKENIZED[5]: FUN1 ( )
  ORIGINAL[6]: (void *)0
  TYPE[6]: CALL
  TOKENIZED[6]: ( void * ) 0
  ORIGINAL[7]: CRYPTO_mem_ctrl(0x2)
  TYPE[7]: CALL
  TOKENIZED[7]: FUN1 ( 0x2 )
  ORIGINAL[8]: ret
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: ret
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1

