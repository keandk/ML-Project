# Tokenized code fragments for 152433-v1.0.0-bad
# Total center nodes processed: 22
# Total code fragments found: 88

CENTER_NODE: 68719476782
FRAGMENT_COUNT: 7
  ORIGINAL[0]: a = src[1]
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = VAR2 [ 1 ]
  ORIGINAL[1]: b = src[2]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2 [ 2 ]
  ORIGINAL[2]: src[2]
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ 2 ]
  ORIGINAL[3]: b
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: src
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: b
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: b
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1

CENTER_NODE: 30064771323
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ((TransactionId )page1) * (8192 / sizeof(TransactionId ))
  TYPE[0]: CALL
  TOKENIZED[0]: ( ( VAR1 ) VAR2 ) * ( 8192 / sizeof ( VAR1 ) )
  ORIGINAL[1]: (TransactionId )page1
  TYPE[1]: CALL
  TOKENIZED[1]: ( VAR1 ) VAR2
  ORIGINAL[2]: 8192 / sizeof(TransactionId )
  TYPE[2]: CALL
  TOKENIZED[2]: 8192 / sizeof ( VAR1 )
  ORIGINAL[3]: page1
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 47244640260
FRAGMENT_COUNT: 4
  ORIGINAL[0]: data_size < buffer_size
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 < VAR2
  ORIGINAL[1]: stonesoup_exit_flag = 1
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = 1
  ORIGINAL[2]: break;
  TYPE[2]: CONTROL_STRUCTURE
  TOKENIZED[2]: break ;
  ORIGINAL[3]: <global> stonesoup_printf_context
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: <global> VAR1

CENTER_NODE: 68719476968
FRAGMENT_COUNT: 3
  ORIGINAL[0]: *************************basilisks_upperhandism = 0
  TYPE[0]: CALL
  TOKENIZED[0]: *************************basilisks_upperhandism = 0
  ORIGINAL[1]: ************************mabi_adzes = 0
  TYPE[1]: CALL
  TOKENIZED[1]: ************************mabi_adzes = 0
  ORIGINAL[2]: mabi_adzes
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771296
FRAGMENT_COUNT: 3
  ORIGINAL[0]: SimpleLruFlush(&SubTransCtlData,((bool )1))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &SubTransCtlData , ( ( VAR1 ) 1 ) )
  ORIGINAL[1]: &SubTransCtlData
  TYPE[1]: CALL
  TOKENIZED[1]: &SubTransCtlData
  ORIGINAL[2]: (bool )1
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 1

CENTER_NODE: 68719476827
FRAGMENT_COUNT: 6
  ORIGINAL[0]: xid % ((TransactionId )(8192 / sizeof(TransactionId )))
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 % ( ( VAR2 ) ( 8192 / sizeof ( VAR2 ) ) )
  ORIGINAL[1]: xid
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: entryno
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: xid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: TransactionId
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: xid
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1

CENTER_NODE: 30064771230
FRAGMENT_COUNT: 5
  ORIGINAL[0]: !(xid >= ((TransactionId )3))
  TYPE[0]: CALL
  TOKENIZED[0]: ! ( VAR1 >= ( ( VAR2 ) 3 ) )
  ORIGINAL[1]: ptr = ((TransactionId *)(&SubTransCtlData) -> shared -> page_buffer[slotno])
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = ( ( VAR2 * ) ( &SubTransCtlData ) -> VAR3 -> VAR4 [ VAR5 ] )
  ORIGINAL[2]: (TransactionId *)(&SubTransCtlData) -> shared -> page_buffer[slotno]
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 * ) ( &SubTransCtlData ) -> VAR2 -> VAR3 [ VAR4 ]
  ORIGINAL[3]: ptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: ptr
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771248
FRAGMENT_COUNT: 1
  ORIGINAL[0]: SimpleLruShmemSize(32,0)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( 32 , 0 )

CENTER_NODE: 30064771320
FRAGMENT_COUNT: 4
  ORIGINAL[0]: SimpleLruTruncate(&SubTransCtlData,cutoffPage)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &SubTransCtlData , VAR1 )
  ORIGINAL[1]: &SubTransCtlData
  TYPE[1]: CALL
  TOKENIZED[1]: &SubTransCtlData
  ORIGINAL[2]: <global> SubTransCtlData
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1
  ORIGINAL[3]: cutoffPage
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771244
FRAGMENT_COUNT: 5
  ORIGINAL[0]: parentXid != ((TransactionId )0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != ( ( VAR2 ) 0 )
  ORIGINAL[1]: previousXid = parentXid
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 = VAR2
  ORIGINAL[2]: previousXid
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: parentXid
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: parentXid
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640258
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 30064771291
FRAGMENT_COUNT: 3
  ORIGINAL[0]: SimpleLruFlush(&SubTransCtlData,((bool )0))
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( &SubTransCtlData , ( ( VAR1 ) 0 ) )
  ORIGINAL[1]: &SubTransCtlData
  TYPE[1]: CALL
  TOKENIZED[1]: &SubTransCtlData
  ORIGINAL[2]: (bool )0
  TYPE[2]: CALL
  TOKENIZED[2]: ( VAR1 ) 0

CENTER_NODE: 47244640265
FRAGMENT_COUNT: 1
  ORIGINAL[0]: while (1)
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: while ( 1 )

CENTER_NODE: 68719476884
FRAGMENT_COUNT: 4
  ORIGINAL[0]: LWLockAcquire(SubtransControlLock,LW_EXCLUSIVE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: SubtransControlLock
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: LW_EXCLUSIVE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: SubtransControlLock
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 68719477148
FRAGMENT_COUNT: 3
  ORIGINAL[0]: unantlered_gilliver = 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = 0
  ORIGINAL[1]: <global> unantlered_gilliver
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: unantlered_gilliver
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771658
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *alighten_nephrozymosis)))))))))))))))))))))))))))))))))))))))))))))))))) . shmuck_bewailer != 0
  TYPE[0]: CALL
  TOKENIZED[0]: ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *alighten_nephrozymosis ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) . VAR1 != 0
  ORIGINAL[1]: *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *alighten_nephrozymosis)))))))))))))))))))))))))))))))))
  TYPE[1]: CALL
  TOKENIZED[1]: * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *alighten_nephrozymosis ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
  ORIGINAL[2]: *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *alighten_nephrozymosis))))))))))))))))))))))))))))))))
  TYPE[2]: CALL
  TOKENIZED[2]: * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *alighten_nephrozymosis ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
  ORIGINAL[3]: *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *alighten_nephrozymosis)))))))))))))))))))))))))))))))
  TYPE[3]: CALL
  TOKENIZED[3]: * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( *alighten_nephrozymosis ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )

CENTER_NODE: 47244640264
FRAGMENT_COUNT: 2
  ORIGINAL[0]: getenv(\
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( \
  ORIGINAL[1]: if (getenv(\
  TYPE[1]: CONTROL_STRUCTURE
  TOKENIZED[1]: if ( FUN1 ( \

CENTER_NODE: 68719476736
FRAGMENT_COUNT: 4
  ORIGINAL[0]: va_start(argptr, format)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: argptr
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: format
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1
  ORIGINAL[3]: argptr
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1

CENTER_NODE: 30064771255
FRAGMENT_COUNT: 5
  ORIGINAL[0]: (&SubTransCtlData) -> do_fsync = ((bool )0)
  TYPE[0]: CALL
  TOKENIZED[0]: ( &SubTransCtlData ) -> VAR1 = ( ( VAR2 ) 0 )
  ORIGINAL[1]: (&SubTransCtlData) -> do_fsync
  TYPE[1]: CALL
  TOKENIZED[1]: ( &SubTransCtlData ) -> VAR1
  ORIGINAL[2]: &SubTransCtlData
  TYPE[2]: CALL
  TOKENIZED[2]: &SubTransCtlData
  ORIGINAL[3]: (bool )0
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) 0
  ORIGINAL[4]: do_fsync
  TYPE[4]: FIELD_IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771304
FRAGMENT_COUNT: 5
  ORIGINAL[0]: newestXact % ((TransactionId )(8192 / sizeof(TransactionId ))) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 % ( ( VAR2 ) ( 8192 / sizeof ( VAR2 ) ) ) != 0
  ORIGINAL[1]: !(newestXact == ((TransactionId )3))
  TYPE[1]: CALL
  TOKENIZED[1]: ! ( VAR1 == ( ( VAR2 ) 3 ) )
  ORIGINAL[2]: newestXact == ((TransactionId )3)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 == ( ( VAR2 ) 3 )
  ORIGINAL[3]: (TransactionId )3
  TYPE[3]: CALL
  TOKENIZED[3]: ( VAR1 ) 3
  ORIGINAL[4]: newestXact
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 30064771174
FRAGMENT_COUNT: 12
  ORIGINAL[0]: src[i] != '\\0'
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 [ VAR2 ] != '\\0'
  ORIGINAL[1]: src[i]
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 [ VAR2 ]
  ORIGINAL[2]: src[i] == '|'
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 [ VAR2 ] == '|'
  ORIGINAL[3]: src[i] == '&'
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 [ VAR2 ] == '&'
  ORIGINAL[4]: src[i]
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 [ VAR2 ]
  ORIGINAL[5]: i == 0 || src[i-1] != '\\\\'
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 == 0 || VAR2 [ i-1 ] != '\\\\'
  ORIGINAL[6]: i == 0
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 == 0
  ORIGINAL[7]: i++
  TYPE[7]: CALL
  TOKENIZED[7]: i++
  ORIGINAL[8]: src
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: i
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: i
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: i
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1

CENTER_NODE: 68719476890
FRAGMENT_COUNT: 2
  ORIGINAL[0]: &SubTransCtlData
  TYPE[0]: CALL
  TOKENIZED[0]: &SubTransCtlData
  ORIGINAL[1]: <global> SubTransCtlData
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1

