# Tokenized code fragments for 152047-v1.0.0-bad
# Total center nodes processed: 25
# Total code fragments found: 125

CENTER_NODE: 30064771361
FRAGMENT_COUNT: 19
  ORIGINAL[0]: end == gap -> start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 == VAR2 -> VAR3
  ORIGINAL[1]: gap -> start
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: gap -> start
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: gap -> start
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 -> VAR2
  ORIGINAL[4]: gap -> start
  TYPE[4]: CALL
  TOKENIZED[4]: VAR1 -> VAR2
  ORIGINAL[5]: start
  TYPE[5]: FIELD_IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tmp
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: gap
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1
  ORIGINAL[8]: end
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1
  ORIGINAL[9]: gap
  TYPE[9]: IDENTIFIER
  TOKENIZED[9]: VAR1
  ORIGINAL[10]: gap
  TYPE[10]: IDENTIFIER
  TOKENIZED[10]: VAR1
  ORIGINAL[11]: gap
  TYPE[11]: IDENTIFIER
  TOKENIZED[11]: VAR1
  ORIGINAL[12]: gap
  TYPE[12]: IDENTIFIER
  TOKENIZED[12]: VAR1
  ORIGINAL[13]: gap
  TYPE[13]: IDENTIFIER
  TOKENIZED[13]: VAR1
  ORIGINAL[14]: gap
  TYPE[14]: IDENTIFIER
  TOKENIZED[14]: VAR1
  ORIGINAL[15]: gap
  TYPE[15]: IDENTIFIER
  TOKENIZED[15]: VAR1
  ORIGINAL[16]: gap
  TYPE[16]: IDENTIFIER
  TOKENIZED[16]: VAR1
  ORIGINAL[17]: gap
  TYPE[17]: IDENTIFIER
  TOKENIZED[17]: VAR1
  ORIGINAL[18]: gap
  TYPE[18]: IDENTIFIER
  TOKENIZED[18]: VAR1

CENTER_NODE: 30064771227
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_DELETE)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_DELETE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640340
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 68719476738
FRAGMENT_COUNT: 3
  ORIGINAL[0]: SWAP_OUT=2
  TYPE[0]: CALL
  TOKENIZED[0]: SWAP_OUT=2
  ORIGINAL[1]: SWAP_DELETE=3
  TYPE[1]: CALL
  TOKENIZED[1]: SWAP_DELETE=3
  ORIGINAL[2]: SWAP_DELETE
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640325
FRAGMENT_COUNT: 0

CENTER_NODE: 68719476825
FRAGMENT_COUNT: 3
  ORIGINAL[0]: gimp_swap_file = ((void *)0)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 = ( ( void * ) 0 )
  ORIGINAL[1]: (void *)0
  TYPE[1]: CALL
  TOKENIZED[1]: ( void * ) 0
  ORIGINAL[2]: <global> gimp_swap_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: <global> VAR1

CENTER_NODE: 30064771221
FRAGMENT_COUNT: 8
  ORIGINAL[0]: tile -> swap_offset == (- 1)
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 == ( - 1 )
  ORIGINAL[1]: tile -> swap_offset
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2
  ORIGINAL[2]: - 1
  TYPE[2]: CALL
  TOKENIZED[2]: - 1
  ORIGINAL[3]: tile_alloc(tile)
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( VAR1 )
  ORIGINAL[4]: tile_swap_command(tile,SWAP_IN)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[5]: tile
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: tile
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: SWAP_IN
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: VAR1

CENTER_NODE: 47244640277
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771151
FRAGMENT_COUNT: 6
  ORIGINAL[0]: !g_file_test(dirname,G_FILE_TEST_EXISTS)
  TYPE[0]: CALL
  TOKENIZED[0]: !g_file_test ( VAR1 , VAR2 )
  ORIGINAL[1]: 0400 | 0100 | 0200 | 0400 >> 3 | 0100 >> 3 | 0400 >> 3 >> 3
  TYPE[1]: CALL
  TOKENIZED[1]: 0400 | 0100 | 0200 | 0400 >> 3 | 0100 >> 3 | 0400 >> 3 >> 3
  ORIGINAL[2]: 0400 | 0100 | 0200 | 0400 >> 3 | 0100 >> 3
  TYPE[2]: CALL
  TOKENIZED[2]: 0400 | 0100 | 0200 | 0400 >> 3 | 0100 >> 3
  ORIGINAL[3]: 0400 | 0100 | 0200 | 0400 >> 3
  TYPE[3]: CALL
  TOKENIZED[3]: 0400 | 0100 | 0200 | 0400 >> 3
  ORIGINAL[4]: 0100 >> 3
  TYPE[4]: CALL
  TOKENIZED[4]: 0100 >> 3
  ORIGINAL[5]: 0400 >> 3 >> 3
  TYPE[5]: CALL
  TOKENIZED[5]: 0400 >> 3 >> 3

CENTER_NODE: 47244640274
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640338
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771897
FRAGMENT_COUNT: 3
  ORIGINAL[0]: ++stonesoup_global_variable
  TYPE[0]: CALL
  TOKENIZED[0]: ++stonesoup_global_variable
  ORIGINAL[1]: <global> stonesoup_global_variable
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: <global> VAR1
  ORIGINAL[2]: berendo_ceroplast
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 68719477039
FRAGMENT_COUNT: 5
  ORIGINAL[0]: ftruncate(swap_file -> fd,new_size) != 0
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 -> VAR2 , VAR3 ) != 0
  ORIGINAL[1]: g_log(\
  TYPE[1]: CALL
  TOKENIZED[1]: FUN1 ( \
  ORIGINAL[2]: gettext(\
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( \
  ORIGINAL[3]: g_strerror( *__errno_location())
  TYPE[3]: CALL
  TOKENIZED[3]: FUN1 ( *__errno_location ( ) )
  ORIGINAL[4]: G_LOG_LEVEL_MESSAGE
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 47244640276
FRAGMENT_COUNT: 1
  ORIGINAL[0]: else
  TYPE[0]: CONTROL_STRUCTURE
  TOKENIZED[0]: else

CENTER_NODE: 30064771814
FRAGMENT_COUNT: 2
  ORIGINAL[0]: (void )(((SwapFileGap *)0) == gap)
  TYPE[0]: CALL
  TOKENIZED[0]: ( void ) ( ( ( VAR1 * ) 0 ) == VAR2 )
  ORIGINAL[1]: ((SwapFileGap *)0) == gap
  TYPE[1]: CALL
  TOKENIZED[1]: ( ( VAR1 * ) 0 ) == VAR2

CENTER_NODE: 30064771318
FRAGMENT_COUNT: 44
  ORIGINAL[0]: swap_file -> cur_position != newpos
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2 != VAR3
  ORIGINAL[1]: offset == (- 1)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 == ( - 1 )
  ORIGINAL[2]: nleft > 0
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 > 0
  ORIGINAL[3]: err = (write(swap_file -> fd,(tile -> data + tile -> size - nleft),nleft))
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 = ( FUN1 ( VAR2 -> VAR3 , ( VAR4 -> VAR5 + VAR4 -> VAR6 - VAR7 ) , VAR7 ) )
  ORIGINAL[4]: write(swap_file -> fd,(tile -> data + tile -> size - nleft),nleft)
  TYPE[4]: CALL
  TOKENIZED[4]: FUN1 ( VAR1 -> VAR2 , ( VAR3 -> VAR4 + VAR3 -> VAR5 - VAR6 ) , VAR6 )
  ORIGINAL[5]: swap_file -> fd
  TYPE[5]: CALL
  TOKENIZED[5]: VAR1 -> VAR2
  ORIGINAL[6]: tile -> data + tile -> size - nleft
  TYPE[6]: CALL
  TOKENIZED[6]: VAR1 -> VAR2 + VAR1 -> VAR3 - VAR4
  ORIGINAL[7]: tile -> data + tile -> size
  TYPE[7]: CALL
  TOKENIZED[7]: VAR1 -> VAR2 + VAR1 -> VAR3
  ORIGINAL[8]: tile -> data
  TYPE[8]: CALL
  TOKENIZED[8]: VAR1 -> VAR2
  ORIGINAL[9]: tile -> size
  TYPE[9]: CALL
  TOKENIZED[9]: VAR1 -> VAR2
  ORIGINAL[10]: err <= 0
  TYPE[10]: CALL
  TOKENIZED[10]: VAR1 <= 0
  ORIGINAL[11]: swap_file -> cur_position += (tile -> size)
  TYPE[11]: CALL
  TOKENIZED[11]: VAR1 -> VAR2 += ( VAR3 -> VAR4 )
  ORIGINAL[12]: swap_file -> cur_position
  TYPE[12]: CALL
  TOKENIZED[12]: VAR1 -> VAR2
  ORIGINAL[13]: tile -> size
  TYPE[13]: CALL
  TOKENIZED[13]: VAR1 -> VAR2
  ORIGINAL[14]: tile -> dirty = 0
  TYPE[14]: CALL
  TOKENIZED[14]: VAR1 -> VAR2 = 0
  ORIGINAL[15]: tile -> dirty
  TYPE[15]: CALL
  TOKENIZED[15]: VAR1 -> VAR2
  ORIGINAL[16]: tile -> swap_offset = newpos
  TYPE[16]: CALL
  TOKENIZED[16]: VAR1 -> VAR2 = VAR3
  ORIGINAL[17]: tile -> swap_offset
  TYPE[17]: CALL
  TOKENIZED[17]: VAR1 -> VAR2
  ORIGINAL[18]: write_err_msg = seek_err_msg = !0
  TYPE[18]: CALL
  TOKENIZED[18]: VAR1 = VAR2 = !0
  ORIGINAL[19]: seek_err_msg = !0
  TYPE[19]: CALL
  TOKENIZED[19]: VAR1 = !0
  ORIGINAL[20]: !0
  TYPE[20]: CALL
  TOKENIZED[20]: !0
  ORIGINAL[21]: while (nleft > 0)
  TYPE[21]: CONTROL_STRUCTURE
  TOKENIZED[21]: while ( VAR1 > 0 )
  ORIGINAL[22]: fd
  TYPE[22]: FIELD_IDENTIFIER
  TOKENIZED[22]: VAR1
  ORIGINAL[23]: data
  TYPE[23]: FIELD_IDENTIFIER
  TOKENIZED[23]: VAR1
  ORIGINAL[24]: size
  TYPE[24]: FIELD_IDENTIFIER
  TOKENIZED[24]: VAR1
  ORIGINAL[25]: cur_position
  TYPE[25]: FIELD_IDENTIFIER
  TOKENIZED[25]: VAR1
  ORIGINAL[26]: size
  TYPE[26]: FIELD_IDENTIFIER
  TOKENIZED[26]: VAR1
  ORIGINAL[27]: dirty
  TYPE[27]: FIELD_IDENTIFIER
  TOKENIZED[27]: VAR1
  ORIGINAL[28]: swap_offset
  TYPE[28]: FIELD_IDENTIFIER
  TOKENIZED[28]: VAR1
  ORIGINAL[29]: nleft
  TYPE[29]: IDENTIFIER
  TOKENIZED[29]: VAR1
  ORIGINAL[30]: err
  TYPE[30]: IDENTIFIER
  TOKENIZED[30]: VAR1
  ORIGINAL[31]: swap_file
  TYPE[31]: IDENTIFIER
  TOKENIZED[31]: VAR1
  ORIGINAL[32]: tile
  TYPE[32]: IDENTIFIER
  TOKENIZED[32]: VAR1
  ORIGINAL[33]: tile
  TYPE[33]: IDENTIFIER
  TOKENIZED[33]: VAR1
  ORIGINAL[34]: nleft
  TYPE[34]: IDENTIFIER
  TOKENIZED[34]: VAR1
  ORIGINAL[35]: nleft
  TYPE[35]: IDENTIFIER
  TOKENIZED[35]: VAR1
  ORIGINAL[36]: err
  TYPE[36]: IDENTIFIER
  TOKENIZED[36]: VAR1
  ORIGINAL[37]: swap_file
  TYPE[37]: IDENTIFIER
  TOKENIZED[37]: VAR1
  ORIGINAL[38]: tile
  TYPE[38]: IDENTIFIER
  TOKENIZED[38]: VAR1
  ORIGINAL[39]: tile
  TYPE[39]: IDENTIFIER
  TOKENIZED[39]: VAR1
  ORIGINAL[40]: tile
  TYPE[40]: IDENTIFIER
  TOKENIZED[40]: VAR1
  ORIGINAL[41]: newpos
  TYPE[41]: IDENTIFIER
  TOKENIZED[41]: VAR1
  ORIGINAL[42]: <global> write_err_msg
  TYPE[42]: IDENTIFIER
  TOKENIZED[42]: <global> VAR1
  ORIGINAL[43]: <global> seek_err_msg
  TYPE[43]: IDENTIFIER
  TOKENIZED[43]: <global> VAR1

CENTER_NODE: 30064771812
FRAGMENT_COUNT: 3
  ORIGINAL[0]: g_slice_free1(sizeof(SwapFileGap ),gap)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( sizeof ( VAR1 ) , VAR2 )
  ORIGINAL[1]: sizeof(SwapFileGap )
  TYPE[1]: CALL
  TOKENIZED[1]: sizeof ( VAR1 )
  ORIGINAL[2]: gap
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 30064771093
FRAGMENT_COUNT: 4
  ORIGINAL[0]: ss_tc_root != NULL
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 != VAR2
  ORIGINAL[1]: (char*) malloc (size_dirpath * sizeof(char))
  TYPE[1]: CALL
  TOKENIZED[1]: ( char* ) FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[2]: malloc (size_dirpath * sizeof(char))
  TYPE[2]: CALL
  TOKENIZED[2]: FUN1 ( VAR1 * sizeof ( char ) )
  ORIGINAL[3]: size_dirpath * sizeof(char)
  TYPE[3]: CALL
  TOKENIZED[3]: VAR1 * sizeof ( char )

CENTER_NODE: 68719477257
FRAGMENT_COUNT: 5
  ORIGINAL[0]: gap -> start
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: gap -> end = end
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 -> VAR2 = VAR2
  ORIGINAL[2]: gap -> end
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 -> VAR2
  ORIGINAL[3]: gap
  TYPE[3]: IDENTIFIER
  TOKENIZED[3]: VAR1
  ORIGINAL[4]: gap
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1

CENTER_NODE: 68719477284
FRAGMENT_COUNT: 9
  ORIGINAL[0]: &stonesoup_num
  TYPE[0]: CALL
  TOKENIZED[0]: &stonesoup_num
  ORIGINAL[1]: stonesoup_num > 0 && stonesoup_num < 4294967295U / sizeof(unsigned int **)
  TYPE[1]: CALL
  TOKENIZED[1]: VAR1 > 0 && VAR1 < 4294967295U / sizeof ( unsigned int ** )
  ORIGINAL[2]: stonesoup_num * sizeof(unsigned int *)
  TYPE[2]: CALL
  TOKENIZED[2]: VAR1 * sizeof ( unsigned int * )
  ORIGINAL[3]: sizeof(unsigned int *)
  TYPE[3]: CALL
  TOKENIZED[3]: sizeof ( unsigned int * )
  ORIGINAL[4]: stonesoup_num
  TYPE[4]: IDENTIFIER
  TOKENIZED[4]: VAR1
  ORIGINAL[5]: stonesoup_num
  TYPE[5]: IDENTIFIER
  TOKENIZED[5]: VAR1
  ORIGINAL[6]: stonesoup_num
  TYPE[6]: IDENTIFIER
  TOKENIZED[6]: VAR1
  ORIGINAL[7]: unsigned int
  TYPE[7]: IDENTIFIER
  TOKENIZED[7]: unsigned int
  ORIGINAL[8]: stonesoup_num
  TYPE[8]: IDENTIFIER
  TOKENIZED[8]: VAR1

CENTER_NODE: 47244640263
FRAGMENT_COUNT: 0

CENTER_NODE: 30064771226
FRAGMENT_COUNT: 3
  ORIGINAL[0]: tile_swap_command(tile,SWAP_OUT)
  TYPE[0]: CALL
  TOKENIZED[0]: FUN1 ( VAR1 , VAR2 )
  ORIGINAL[1]: tile
  TYPE[1]: IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: SWAP_OUT
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

CENTER_NODE: 47244640271
FRAGMENT_COUNT: 0

CENTER_NODE: 47244640266
FRAGMENT_COUNT: 0

CENTER_NODE: 68719477029
FRAGMENT_COUNT: 3
  ORIGINAL[0]: swap_file -> fd
  TYPE[0]: CALL
  TOKENIZED[0]: VAR1 -> VAR2
  ORIGINAL[1]: fd
  TYPE[1]: FIELD_IDENTIFIER
  TOKENIZED[1]: VAR1
  ORIGINAL[2]: swap_file
  TYPE[2]: IDENTIFIER
  TOKENIZED[2]: VAR1

