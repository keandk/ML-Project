code_complexity_features:
- feature: FILE_CONTENTS
  feature_group: source_taint
  file_name: /tmp/tmpEMvxms_ss_testcase/src/com/planet_ink/coffee_mud/Common/DefaultMessage.java
  function_name: modify
  line_number: '0'
- feature: simple
  feature_group: data_type
  file_name: /tmp/tmpEMvxms_ss_testcase/src/com/planet_ink/coffee_mud/Common/DefaultMessage.java
  function_name: modify
  line_number: '0'
- feature: var_arg_list
  feature_group: data_flow
  file_name: /tmp/tmpEMvxms_ss_testcase/src/com/planet_ink/coffee_mud/Common/DefaultMessage.java
  function_name: modify
  line_number: '0'
- feature: interclass_2
  feature_group: control_flow
  file_name: /tmp/tmpEMvxms_ss_testcase/src/com/planet_ink/coffee_mud/Common/DefaultMessage.java
  function_name: pigeonholerRetattle
  line_number: '0'
description: "This test takes in a value from a taint source,\n which is then used\
  \ to allocate an array. This value is\n positive when stored in a byte, but if the\
  \ value is between 128 and\n 255, becomes negative if stored in a byte. When this\
  \ negative value\n is stored in a larger container (an int) it becomes a very large\n\
  \ number. When this number is used as part of a loop, it results in an\n out of\
  \ bounds exception.\n"
io_pair:
  benigns:
  - inputs:
    - name: POLYSPONDYLIC_HACKINGLY
      ordinal: '1'
      source: env_var_input
      stage: pre_process
      value: $SS_TC_ROOT/testData/gourde_ming.bin
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: source
      name: $SS_TC_ROOT/testData/gourde_ming.bin
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: '1'
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
  - inputs:
    - name: POLYSPONDYLIC_HACKINGLY
      ordinal: '1'
      source: env_var_input
      stage: pre_process
      value: $SS_TC_ROOT/testData/gourde_ming.bin
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: source
      name: $SS_TC_ROOT/testData/gourde_ming.bin
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: '20'
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
  description: 'Environment variable defining test value.

    '
  exploits:
  - inputs:
    - name: POLYSPONDYLIC_HACKINGLY
      ordinal: '1'
      source: env_var_input
      stage: pre_process
      value: $SS_TC_ROOT/testData/gourde_ming.bin
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: source
      name: $SS_TC_ROOT/testData/gourde_ming.bin
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: '128'
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
  - inputs:
    - name: POLYSPONDYLIC_HACKINGLY
      ordinal: '1'
      source: env_var_input
      stage: pre_process
      value: $SS_TC_ROOT/testData/gourde_ming.bin
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: source
      name: $SS_TC_ROOT/testData/gourde_ming.bin
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: '255'
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
weakness_points:
- entry_point_type: TRIGGER_POINT
  file_name: /tmp/tmpEMvxms_ss_testcase/src/com/planet_ink/coffee_mud/Common/DefaultMessage.java
  function_name: hindcastDoing
  line_number: '0'
- entry_point_type: CROSSOVER_POINT
  file_name: /tmp/tmpEMvxms_ss_testcase/src/com/planet_ink/coffee_mud/Common/DefaultMessage.java
  function_name: hindcastDoing
  line_number: '0'
