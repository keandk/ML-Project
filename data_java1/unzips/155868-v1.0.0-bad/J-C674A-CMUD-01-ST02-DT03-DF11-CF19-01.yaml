code_complexity_features:
- feature: FILE_CONTENTS
  feature_group: source_taint
  file_name: /tmp/tmprsJufu_ss_testcase/src/com/planet_ink/coffee_mud/Common/interfaces/Session.java
  function_name: TickingCallback
  line_number: '0'
- feature: void_pointer
  feature_group: data_type
  file_name: /tmp/tmprsJufu_ss_testcase/src/com/planet_ink/coffee_mud/Common/interfaces/Session.java
  function_name: TickingCallback
  line_number: '0'
- feature: basic
  feature_group: data_flow
  file_name: /tmp/tmprsJufu_ss_testcase/src/com/planet_ink/coffee_mud/Common/interfaces/Session.java
  function_name: TickingCallback
  line_number: '0'
- feature: recursive
  feature_group: control_flow
  file_name: /tmp/tmprsJufu_ss_testcase/src/com/planet_ink/coffee_mud/Common/interfaces/Session.java
  function_name: TickingCallback
  line_number: '0'
description: 'This test takes a string, gets the first character, and uses a recursive
  method to look for the index of the second occurrence of that character. If the
  character does not appear a second time, it will recurse indefinitely.

  '
io_pair:
  benigns:
  - inputs:
    - name: MUSTARD_IMPREGNATIVE
      ordinal: '1'
      source: env_var_input
      stage: pre_process
      value: $SS_TC_ROOT/testData/acceptable_doug.bin
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: source
      name: $SS_TC_ROOT/testData/acceptable_doug.bin
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: asdfasdf
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
  - inputs:
    - name: MUSTARD_IMPREGNATIVE
      ordinal: '1'
      source: env_var_input
      stage: pre_process
      value: $SS_TC_ROOT/testData/acceptable_doug.bin
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: source
      name: $SS_TC_ROOT/testData/acceptable_doug.bin
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: this string has another t
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
  - inputs:
    - name: MUSTARD_IMPREGNATIVE
      ordinal: '1'
      source: env_var_input
      stage: pre_process
      value: $SS_TC_ROOT/testData/acceptable_doug.bin
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: source
      name: $SS_TC_ROOT/testData/acceptable_doug.bin
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: 1st char is 1
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
  description: 'Environment variable defining string value.

    '
  exploits:
  - inputs:
    - name: MUSTARD_IMPREGNATIVE
      ordinal: '1'
      source: env_var_input
      stage: pre_process
      value: $SS_TC_ROOT/testData/acceptable_doug.bin
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: source
      name: $SS_TC_ROOT/testData/acceptable_doug.bin
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: 1st char does not appear again
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
  - inputs:
    - name: MUSTARD_IMPREGNATIVE
      ordinal: '1'
      source: env_var_input
      stage: pre_process
      value: $SS_TC_ROOT/testData/acceptable_doug.bin
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: source
      name: $SS_TC_ROOT/testData/acceptable_doug.bin
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: FEDCBA
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
weakness_points:
- entry_point_type: TRIGGER_POINT
  file_name: /tmp/tmprsJufu_ss_testcase/src/com/planet_ink/coffee_mud/Common/interfaces/Session.java
  function_name: search
  line_number: '0'
- entry_point_type: CROSSOVER_POINT
  file_name: /tmp/tmprsJufu_ss_testcase/src/com/planet_ink/coffee_mud/Common/interfaces/Session.java
  function_name: search
  line_number: '0'
